!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	test/hpcg/hpcg-problem-generator.h	/^    double **A;$/;"	m	struct:ProblemGenerator
A	test/hpcg/hpcg-problem.h	/^    lgncg::SparseMatrix A;$/;"	m	struct:Problem
ACCESSOR_ALL	legion_runtime/accessor.h	/^    ACCESSOR_ALL    = 0x00000007,$/;"	e	enum:LegionRuntime::AccessorPrivilege
ACCESSOR_NONE	legion_runtime/accessor.h	/^    ACCESSOR_NONE   = 0x00000000,$/;"	e	enum:LegionRuntime::AccessorPrivilege
ACCESSOR_READ	legion_runtime/accessor.h	/^    ACCESSOR_READ   = 0x00000001,$/;"	e	enum:LegionRuntime::AccessorPrivilege
ACCESSOR_REDUCE	legion_runtime/accessor.h	/^    ACCESSOR_REDUCE = 0x00000004,$/;"	e	enum:LegionRuntime::AccessorPrivilege
ACCESSOR_WRITE	legion_runtime/accessor.h	/^    ACCESSOR_WRITE  = 0x00000002,$/;"	e	enum:LegionRuntime::AccessorPrivilege
ACCUMULATE_EVENTS_CALL	legion_runtime/region_tree.h	/^      ACCUMULATE_EVENTS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ACPI_ADDRESS_TYPE_BUS_NUMBER_RANGE	acpi/acpica/aclocal.h	932;"	d
ACPI_ADDRESS_TYPE_IO_RANGE	acpi/acpica/aclocal.h	931;"	d
ACPI_ADDRESS_TYPE_MEMORY_RANGE	acpi/acpica/aclocal.h	930;"	d
ACPI_ADD_OBJECT_NAME	acpi/acpica/acmacros.h	536;"	d
ACPI_ADD_OBJECT_NAME	acpi/acpica/acmacros.h	540;"	d
ACPI_ALLOCATE	acpi/acpica/acmacros.h	553;"	d
ACPI_ALLOCATE	acpi/acpica/acmacros.h	569;"	d
ACPI_ALLOCATE_ZEROED	acpi/acpica/acmacros.h	556;"	d
ACPI_ALLOCATE_ZEROED	acpi/acpica/acmacros.h	570;"	d
ACPI_ALWAYS_ILLEGAL	acpi/acpica/aclocal.h	903;"	d
ACPI_ASCII_ZERO	acpi/acpica/aclocal.h	983;"	d
ACPI_BITMASK_ALL_FIXED_STATUS	acpi/acpica/aclocal.h	838;"	d
ACPI_BITMASK_ARB_DISABLE	acpi/acpica/aclocal.h	861;"	d
ACPI_BITMASK_BUS_MASTER_RLD	acpi/acpica/aclocal.h	856;"	d
ACPI_BITMASK_BUS_MASTER_STATUS	acpi/acpica/aclocal.h	830;"	d
ACPI_BITMASK_GLOBAL_LOCK_ENABLE	acpi/acpica/aclocal.h	849;"	d
ACPI_BITMASK_GLOBAL_LOCK_RELEASE	acpi/acpica/aclocal.h	857;"	d
ACPI_BITMASK_GLOBAL_LOCK_STATUS	acpi/acpica/aclocal.h	831;"	d
ACPI_BITMASK_PCIEXP_WAKE_DISABLE	acpi/acpica/aclocal.h	853;"	d
ACPI_BITMASK_PCIEXP_WAKE_STATUS	acpi/acpica/aclocal.h	835;"	d
ACPI_BITMASK_POWER_BUTTON_ENABLE	acpi/acpica/aclocal.h	850;"	d
ACPI_BITMASK_POWER_BUTTON_STATUS	acpi/acpica/aclocal.h	832;"	d
ACPI_BITMASK_RT_CLOCK_ENABLE	acpi/acpica/aclocal.h	852;"	d
ACPI_BITMASK_RT_CLOCK_STATUS	acpi/acpica/aclocal.h	834;"	d
ACPI_BITMASK_SCI_ENABLE	acpi/acpica/aclocal.h	855;"	d
ACPI_BITMASK_SLEEP_BUTTON_ENABLE	acpi/acpica/aclocal.h	851;"	d
ACPI_BITMASK_SLEEP_BUTTON_STATUS	acpi/acpica/aclocal.h	833;"	d
ACPI_BITMASK_SLEEP_ENABLE	acpi/acpica/aclocal.h	859;"	d
ACPI_BITMASK_SLEEP_TYPE	acpi/acpica/aclocal.h	858;"	d
ACPI_BITMASK_TIMER_ENABLE	acpi/acpica/aclocal.h	848;"	d
ACPI_BITMASK_TIMER_STATUS	acpi/acpica/aclocal.h	829;"	d
ACPI_BITMASK_WAKE_STATUS	acpi/acpica/aclocal.h	836;"	d
ACPI_BITPOSITION_ARB_DISABLE	acpi/acpica/aclocal.h	887;"	d
ACPI_BITPOSITION_BUS_MASTER_RLD	acpi/acpica/aclocal.h	882;"	d
ACPI_BITPOSITION_BUS_MASTER_STATUS	acpi/acpica/aclocal.h	866;"	d
ACPI_BITPOSITION_GLOBAL_LOCK_ENABLE	acpi/acpica/aclocal.h	875;"	d
ACPI_BITPOSITION_GLOBAL_LOCK_RELEASE	acpi/acpica/aclocal.h	883;"	d
ACPI_BITPOSITION_GLOBAL_LOCK_STATUS	acpi/acpica/aclocal.h	867;"	d
ACPI_BITPOSITION_PCIEXP_WAKE_DISABLE	acpi/acpica/aclocal.h	879;"	d
ACPI_BITPOSITION_PCIEXP_WAKE_STATUS	acpi/acpica/aclocal.h	871;"	d
ACPI_BITPOSITION_POWER_BUTTON_ENABLE	acpi/acpica/aclocal.h	876;"	d
ACPI_BITPOSITION_POWER_BUTTON_STATUS	acpi/acpica/aclocal.h	868;"	d
ACPI_BITPOSITION_RT_CLOCK_ENABLE	acpi/acpica/aclocal.h	878;"	d
ACPI_BITPOSITION_RT_CLOCK_STATUS	acpi/acpica/aclocal.h	870;"	d
ACPI_BITPOSITION_SCI_ENABLE	acpi/acpica/aclocal.h	881;"	d
ACPI_BITPOSITION_SLEEP_BUTTON_ENABLE	acpi/acpica/aclocal.h	877;"	d
ACPI_BITPOSITION_SLEEP_BUTTON_STATUS	acpi/acpica/aclocal.h	869;"	d
ACPI_BITPOSITION_SLEEP_ENABLE	acpi/acpica/aclocal.h	885;"	d
ACPI_BITPOSITION_SLEEP_TYPE	acpi/acpica/aclocal.h	884;"	d
ACPI_BITPOSITION_TIMER_ENABLE	acpi/acpica/aclocal.h	874;"	d
ACPI_BITPOSITION_TIMER_STATUS	acpi/acpica/aclocal.h	865;"	d
ACPI_BITPOSITION_WAKE_STATUS	acpi/acpica/aclocal.h	872;"	d
ACPI_BTYPE_ALL_OBJECTS	acpi/acpica/aclocal.h	292;"	d
ACPI_BTYPE_ANY	acpi/acpica/aclocal.h	266;"	d
ACPI_BTYPE_BUFFER	acpi/acpica/aclocal.h	269;"	d
ACPI_BTYPE_BUFFER_FIELD	acpi/acpica/aclocal.h	280;"	d
ACPI_BTYPE_COMPUTE_DATA	acpi/acpica/aclocal.h	286;"	d
ACPI_BTYPE_DATA	acpi/acpica/aclocal.h	288;"	d
ACPI_BTYPE_DATA_REFERENCE	acpi/acpica/aclocal.h	289;"	d
ACPI_BTYPE_DDB_HANDLE	acpi/acpica/aclocal.h	281;"	d
ACPI_BTYPE_DEBUG_OBJECT	acpi/acpica/aclocal.h	282;"	d
ACPI_BTYPE_DEVICE	acpi/acpica/aclocal.h	272;"	d
ACPI_BTYPE_DEVICE_OBJECTS	acpi/acpica/aclocal.h	290;"	d
ACPI_BTYPE_EVENT	acpi/acpica/aclocal.h	273;"	d
ACPI_BTYPE_FIELD_UNIT	acpi/acpica/aclocal.h	271;"	d
ACPI_BTYPE_INTEGER	acpi/acpica/aclocal.h	267;"	d
ACPI_BTYPE_METHOD	acpi/acpica/aclocal.h	274;"	d
ACPI_BTYPE_MUTEX	acpi/acpica/aclocal.h	275;"	d
ACPI_BTYPE_OBJECTS_AND_REFS	acpi/acpica/aclocal.h	291;"	d
ACPI_BTYPE_PACKAGE	acpi/acpica/aclocal.h	270;"	d
ACPI_BTYPE_POWER	acpi/acpica/aclocal.h	277;"	d
ACPI_BTYPE_PROCESSOR	acpi/acpica/aclocal.h	278;"	d
ACPI_BTYPE_REFERENCE	acpi/acpica/aclocal.h	283;"	d
ACPI_BTYPE_REGION	acpi/acpica/aclocal.h	276;"	d
ACPI_BTYPE_RESOURCE	acpi/acpica/aclocal.h	284;"	d
ACPI_BTYPE_STRING	acpi/acpica/aclocal.h	268;"	d
ACPI_BTYPE_THERMAL	acpi/acpica/aclocal.h	279;"	d
ACPI_CA_SUPPORT_LEVEL	acpi/acpica/acconfig.h	96;"	d
ACPI_CHECKSUM_ABORT	acpi/acpica/acconfig.h	86;"	d
ACPI_COMMON_DEBUG_MEM_HEADER	acpi/acpica/aclocal.h	1039;"	d
ACPI_CONTROL_CONDITIONAL_EXECUTING	acpi/acpica/aclocal.h	507;"	d
ACPI_CONTROL_NORMAL	acpi/acpica/aclocal.h	506;"	d
ACPI_CONTROL_PREDICATE_EXECUTING	acpi/acpica/aclocal.h	508;"	d
ACPI_CONTROL_PREDICATE_FALSE	acpi/acpica/aclocal.h	509;"	d
ACPI_CONTROL_PREDICATE_TRUE	acpi/acpica/aclocal.h	510;"	d
ACPI_COPY_TYPE_PACKAGE	acpi/acpica/aclocal.h	231;"	d
ACPI_COPY_TYPE_SIMPLE	acpi/acpica/aclocal.h	230;"	d
ACPI_DASM_BUFFER	acpi/acpica/aclocal.h	678;"	d
ACPI_DASM_EISAID	acpi/acpica/aclocal.h	682;"	d
ACPI_DASM_IGNORE	acpi/acpica/aclocal.h	686;"	d
ACPI_DASM_LNOT_PREFIX	acpi/acpica/aclocal.h	684;"	d
ACPI_DASM_LNOT_SUFFIX	acpi/acpica/aclocal.h	685;"	d
ACPI_DASM_MATCHOP	acpi/acpica/aclocal.h	683;"	d
ACPI_DASM_RESOURCE	acpi/acpica/aclocal.h	679;"	d
ACPI_DASM_STRING	acpi/acpica/aclocal.h	680;"	d
ACPI_DASM_UNICODE	acpi/acpica/aclocal.h	681;"	d
ACPI_DB_CONSOLE_OUTPUT	acpi/acpica/aclocal.h	1024;"	d
ACPI_DB_DUPLICATE_OUTPUT	acpi/acpica/aclocal.h	1025;"	d
ACPI_DB_REDIRECTABLE_OUTPUT	acpi/acpica/aclocal.h	1023;"	d
ACPI_DEBUGGER_COMMAND_PROMPT	acpi/acpica/acconfig.h	223;"	d
ACPI_DEBUGGER_EXEC	acpi/acpica/acmacros.h	526;"	d
ACPI_DEBUGGER_EXEC	acpi/acpica/acmacros.h	528;"	d
ACPI_DEBUGGER_EXECUTE_PROMPT	acpi/acpica/acconfig.h	224;"	d
ACPI_DEBUGGER_MAX_ARGS	acpi/acpica/acconfig.h	221;"	d
ACPI_DEBUG_DEFINE	acpi/acpica/acmacros.h	470;"	d
ACPI_DEBUG_DEFINE	acpi/acpica/acmacros.h	493;"	d
ACPI_DEBUG_EXEC	acpi/acpica/acmacros.h	467;"	d
ACPI_DEBUG_EXEC	acpi/acpica/acmacros.h	490;"	d
ACPI_DEBUG_ONLY_MEMBERS	acpi/acpica/acmacros.h	471;"	d
ACPI_DEBUG_ONLY_MEMBERS	acpi/acpica/acmacros.h	494;"	d
ACPI_DEFAULT_PAGE_SIZE	acpi/acpica/acconfig.h	108;"	d
ACPI_DEVICE_ID_LENGTH	acpi/acpica/acconfig.h	147;"	d
ACPI_DISASM_ONLY_MEMBERS	acpi/acpica/aclocal.h	658;"	d
ACPI_DISASM_ONLY_MEMBERS	acpi/acpica/aclocal.h	660;"	d
ACPI_DIV_16	acpi/acpica/acmacros.h	230;"	d
ACPI_DIV_2	acpi/acpica/acmacros.h	218;"	d
ACPI_DIV_32	acpi/acpica/acmacros.h	234;"	d
ACPI_DIV_4	acpi/acpica/acmacros.h	222;"	d
ACPI_DIV_8	acpi/acpica/acmacros.h	226;"	d
ACPI_DO_WHILE0	acpi/acpica/acmacros.h	389;"	d
ACPI_DO_WHILE0	acpi/acpica/acmacros.h	391;"	d
ACPI_DUMP_BUFFER	acpi/acpica/acmacros.h	482;"	d
ACPI_DUMP_BUFFER	acpi/acpica/acmacros.h	509;"	d
ACPI_DUMP_ENTRY	acpi/acpica/acmacros.h	479;"	d
ACPI_DUMP_ENTRY	acpi/acpica/acmacros.h	505;"	d
ACPI_DUMP_OPERANDS	acpi/acpica/acmacros.h	477;"	d
ACPI_DUMP_OPERANDS	acpi/acpica/acmacros.h	504;"	d
ACPI_DUMP_PATHNAME	acpi/acpica/acmacros.h	480;"	d
ACPI_DUMP_PATHNAME	acpi/acpica/acmacros.h	507;"	d
ACPI_DUMP_RESOURCE_LIST	acpi/acpica/acmacros.h	481;"	d
ACPI_DUMP_RESOURCE_LIST	acpi/acpica/acmacros.h	508;"	d
ACPI_DUMP_STACK_ENTRY	acpi/acpica/acmacros.h	476;"	d
ACPI_DUMP_STACK_ENTRY	acpi/acpica/acmacros.h	503;"	d
ACPI_DUMP_TABLES	acpi/acpica/acmacros.h	506;"	d
ACPI_EBDA_PTR_LENGTH	acpi/acpica/acconfig.h	182;"	d
ACPI_EBDA_PTR_LOCATION	acpi/acpica/acconfig.h	181;"	d
ACPI_EBDA_WINDOW_SIZE	acpi/acpica/acconfig.h	183;"	d
ACPI_ENTRY_NOT_FOUND	acpi/acpica/aclocal.h	134;"	d
ACPI_ERROR_METHOD	acpi/acpica/acmacros.h	342;"	d
ACPI_ERROR_METHOD	acpi/acpica/acmacros.h	351;"	d
ACPI_ERROR_NAMESPACE	acpi/acpica/acmacros.h	341;"	d
ACPI_ERROR_NAMESPACE	acpi/acpica/acmacros.h	350;"	d
ACPI_EXECUTE_OP	acpi/acpica/aclocal.h	/^typedef acpi_status(*ACPI_EXECUTE_OP) (struct acpi_walk_state * walk_state);$/;"	t
ACPI_EXPORT_SYMBOL	acpi/acpica/utxferror.c	/^ACPI_EXPORT_SYMBOL(acpi_error)$/;"	f
ACPI_EXPORT_SYMBOL	acpi/acpica/utxferror.c	/^ACPI_EXPORT_SYMBOL(acpi_warning)$/;"	f
ACPI_EXTERN	acpi/acpica/acglobal.h	58;"	d
ACPI_EXTERN	acpi/acpica/acglobal.h	61;"	d
ACPI_FIELD_BYTE_GRANULARITY	acpi/acpica/aclocal.h	129;"	d
ACPI_FIELD_DWORD_GRANULARITY	acpi/acpica/aclocal.h	131;"	d
ACPI_FIELD_QWORD_GRANULARITY	acpi/acpica/aclocal.h	132;"	d
ACPI_FIELD_WORD_GRANULARITY	acpi/acpica/aclocal.h	130;"	d
ACPI_FORMAT_NATIVE_UINT	acpi/acpica/acmacros.h	70;"	d
ACPI_FORMAT_NATIVE_UINT	acpi/acpica/acmacros.h	72;"	d
ACPI_FORMAT_UINT64	acpi/acpica/acmacros.h	67;"	d
ACPI_FREE	acpi/acpica/acmacros.h	559;"	d
ACPI_FREE	acpi/acpica/acmacros.h	571;"	d
ACPI_FUNCTION_ENTRY	acpi/acpica/acmacros.h	376;"	d
ACPI_FUNCTION_ENTRY	acpi/acpica/acmacros.h	454;"	d
ACPI_FUNCTION_ENTRY	acpi/acpica/acmacros.h	502;"	d
ACPI_FUNCTION_EXIT	acpi/acpica/acmacros.h	450;"	d
ACPI_FUNCTION_EXIT	acpi/acpica/acmacros.h	499;"	d
ACPI_FUNCTION_STATUS_EXIT	acpi/acpica/acmacros.h	451;"	d
ACPI_FUNCTION_STATUS_EXIT	acpi/acpica/acmacros.h	500;"	d
ACPI_FUNCTION_TRACE	acpi/acpica/acmacros.h	367;"	d
ACPI_FUNCTION_TRACE	acpi/acpica/acmacros.h	446;"	d
ACPI_FUNCTION_TRACE	acpi/acpica/acmacros.h	453;"	d
ACPI_FUNCTION_TRACE	acpi/acpica/acmacros.h	495;"	d
ACPI_FUNCTION_TRACE_PTR	acpi/acpica/acmacros.h	369;"	d
ACPI_FUNCTION_TRACE_PTR	acpi/acpica/acmacros.h	447;"	d
ACPI_FUNCTION_TRACE_PTR	acpi/acpica/acmacros.h	496;"	d
ACPI_FUNCTION_TRACE_STR	acpi/acpica/acmacros.h	373;"	d
ACPI_FUNCTION_TRACE_STR	acpi/acpica/acmacros.h	449;"	d
ACPI_FUNCTION_TRACE_STR	acpi/acpica/acmacros.h	498;"	d
ACPI_FUNCTION_TRACE_U32	acpi/acpica/acmacros.h	371;"	d
ACPI_FUNCTION_TRACE_U32	acpi/acpica/acmacros.h	448;"	d
ACPI_FUNCTION_TRACE_U32	acpi/acpica/acmacros.h	497;"	d
ACPI_FUNCTION_VALUE_EXIT	acpi/acpica/acmacros.h	452;"	d
ACPI_FUNCTION_VALUE_EXIT	acpi/acpica/acmacros.h	501;"	d
ACPI_GET16	acpi/acpica/acmacros.h	53;"	d
ACPI_GET32	acpi/acpica/acmacros.h	54;"	d
ACPI_GET64	acpi/acpica/acmacros.h	55;"	d
ACPI_GET8	acpi/acpica/acmacros.h	52;"	d
ACPI_GET_DESCRIPTOR_TYPE	acpi/acpica/acmacros.h	292;"	d
ACPI_GLOBAL_LOCK	acpi/acpica/aclocal.h	52;"	d
ACPI_GPE_REGISTER_WIDTH	acpi/acpica/acconfig.h	135;"	d
ACPI_HI_RSDP_WINDOW_BASE	acpi/acpica/acconfig.h	184;"	d
ACPI_HI_RSDP_WINDOW_SIZE	acpi/acpica/acconfig.h	185;"	d
ACPI_IMODE_EXECUTE	acpi/acpica/aclocal.h	/^	ACPI_IMODE_EXECUTE = 0x03$/;"	e	enum:__anon24
ACPI_IMODE_LOAD_PASS1	acpi/acpica/aclocal.h	/^	ACPI_IMODE_LOAD_PASS1 = 0x01,$/;"	e	enum:__anon24
ACPI_IMODE_LOAD_PASS2	acpi/acpica/aclocal.h	/^	ACPI_IMODE_LOAD_PASS2 = 0x02,$/;"	e	enum:__anon24
ACPI_INFO_PREDEFINED	acpi/acpica/acmacros.h	344;"	d
ACPI_INFO_PREDEFINED	acpi/acpica/acmacros.h	353;"	d
ACPI_INIT_GLOBAL	acpi/acpica/acglobal.h	59;"	d
ACPI_INIT_GLOBAL	acpi/acpica/acglobal.h	62;"	d
ACPI_INSERT_BITS	acpi/acpica/acmacros.h	283;"	d
ACPI_INTERNAL_METHOD	acpi/acpica/aclocal.h	/^acpi_status(*ACPI_INTERNAL_METHOD) (struct acpi_walk_state * walk_state);$/;"	t
ACPI_IPMI_BUFFER_SIZE	acpi/acpica/acconfig.h	208;"	d
ACPI_IS_MISALIGNED	acpi/acpica/acmacros.h	267;"	d
ACPI_LOCK_GPES	acpi/acpica/aclocal.h	104;"	d
ACPI_LOCK_HARDWARE	acpi/acpica/aclocal.h	105;"	d
ACPI_MASK_BITS_ABOVE	acpi/acpica/acmacros.h	275;"	d
ACPI_MASK_BITS_BELOW	acpi/acpica/acmacros.h	276;"	d
ACPI_MAX_ADDRESS_SPACE	acpi/acpica/acconfig.h	194;"	d
ACPI_MAX_CID_LENGTH	acpi/acpica/acconfig.h	148;"	d
ACPI_MAX_EXTPARSE_CACHE_DEPTH	acpi/acpica/acconfig.h	78;"	d
ACPI_MAX_GPE_BLOCKS	acpi/acpica/acconfig.h	134;"	d
ACPI_MAX_LOCK	acpi/acpica/aclocal.h	107;"	d
ACPI_MAX_LOOP_ITERATIONS	acpi/acpica/acconfig.h	120;"	d
ACPI_MAX_MATCH_OPCODE	acpi/acpica/acconfig.h	198;"	d
ACPI_MAX_MODULE_NAME	acpi/acpica/aclocal.h	1037;"	d
ACPI_MAX_MUTEX	acpi/acpica/aclocal.h	89;"	d
ACPI_MAX_NAMESPACE_CACHE_DEPTH	acpi/acpica/acconfig.h	80;"	d
ACPI_MAX_OBJECT_CACHE_DEPTH	acpi/acpica/acconfig.h	79;"	d
ACPI_MAX_PARSEOP_NAME	acpi/acpica/aclocal.h	707;"	d
ACPI_MAX_PARSE_CACHE_DEPTH	acpi/acpica/acconfig.h	77;"	d
ACPI_MAX_REFERENCE_COUNT	acpi/acpica/acconfig.h	104;"	d
ACPI_MAX_SEMAPHORE_COUNT	acpi/acpica/acconfig.h	100;"	d
ACPI_MAX_SLEEP	acpi/acpica/acconfig.h	124;"	d
ACPI_MAX_STATE_CACHE_DEPTH	acpi/acpica/acconfig.h	76;"	d
ACPI_MAX_TABLES	acpi/tables.c	36;"	d	file:
ACPI_MEM_CALLOC	acpi/acpica/aclocal.h	1036;"	d
ACPI_MEM_LIST_GLOBAL	acpi/acpica/aclocal.h	1055;"	d
ACPI_MEM_LIST_MAX	acpi/acpica/aclocal.h	1057;"	d
ACPI_MEM_LIST_NSNODE	acpi/acpica/aclocal.h	1056;"	d
ACPI_MEM_MALLOC	acpi/acpica/aclocal.h	1035;"	d
ACPI_MEM_PARAMETERS	acpi/acpica/acmacros.h	546;"	d
ACPI_MEM_TRACKING	acpi/acpica/acmacros.h	561;"	d
ACPI_MEM_TRACKING	acpi/acpica/acmacros.h	572;"	d
ACPI_METHOD_MAX_ARG	acpi/acpica/acconfig.h	143;"	d
ACPI_METHOD_MAX_LOCAL	acpi/acpica/acconfig.h	140;"	d
ACPI_METHOD_NUM_ARGS	acpi/acpica/acconfig.h	142;"	d
ACPI_METHOD_NUM_LOCALS	acpi/acpica/acconfig.h	139;"	d
ACPI_MOD_16	acpi/acpica/acmacros.h	232;"	d
ACPI_MOD_2	acpi/acpica/acmacros.h	220;"	d
ACPI_MOD_32	acpi/acpica/acmacros.h	236;"	d
ACPI_MOD_4	acpi/acpica/acmacros.h	224;"	d
ACPI_MOD_8	acpi/acpica/acmacros.h	228;"	d
ACPI_MOVE_16_TO_16	acpi/acpica/acmacros.h	142;"	d
ACPI_MOVE_16_TO_16	acpi/acpica/acmacros.h	167;"	d
ACPI_MOVE_16_TO_16	acpi/acpica/acmacros.h	91;"	d
ACPI_MOVE_16_TO_32	acpi/acpica/acmacros.h	143;"	d
ACPI_MOVE_16_TO_32	acpi/acpica/acmacros.h	170;"	d
ACPI_MOVE_16_TO_32	acpi/acpica/acmacros.h	94;"	d
ACPI_MOVE_16_TO_64	acpi/acpica/acmacros.h	144;"	d
ACPI_MOVE_16_TO_64	acpi/acpica/acmacros.h	171;"	d
ACPI_MOVE_16_TO_64	acpi/acpica/acmacros.h	98;"	d
ACPI_MOVE_32_TO_16	acpi/acpica/acmacros.h	104;"	d
ACPI_MOVE_32_TO_16	acpi/acpica/acmacros.h	148;"	d
ACPI_MOVE_32_TO_16	acpi/acpica/acmacros.h	175;"	d
ACPI_MOVE_32_TO_32	acpi/acpica/acmacros.h	106;"	d
ACPI_MOVE_32_TO_32	acpi/acpica/acmacros.h	149;"	d
ACPI_MOVE_32_TO_32	acpi/acpica/acmacros.h	177;"	d
ACPI_MOVE_32_TO_64	acpi/acpica/acmacros.h	111;"	d
ACPI_MOVE_32_TO_64	acpi/acpica/acmacros.h	150;"	d
ACPI_MOVE_32_TO_64	acpi/acpica/acmacros.h	182;"	d
ACPI_MOVE_64_TO_16	acpi/acpica/acmacros.h	119;"	d
ACPI_MOVE_64_TO_16	acpi/acpica/acmacros.h	154;"	d
ACPI_MOVE_64_TO_16	acpi/acpica/acmacros.h	186;"	d
ACPI_MOVE_64_TO_32	acpi/acpica/acmacros.h	121;"	d
ACPI_MOVE_64_TO_32	acpi/acpica/acmacros.h	155;"	d
ACPI_MOVE_64_TO_32	acpi/acpica/acmacros.h	187;"	d
ACPI_MOVE_64_TO_64	acpi/acpica/acmacros.h	123;"	d
ACPI_MOVE_64_TO_64	acpi/acpica/acmacros.h	156;"	d
ACPI_MOVE_64_TO_64	acpi/acpica/acmacros.h	188;"	d
ACPI_MOVE_SIZE_TO_16	acpi/acpica/acmacros.h	202;"	d
ACPI_MOVE_SIZE_TO_16	acpi/acpica/acmacros.h	205;"	d
ACPI_MSG_ERROR	acpi/acpica/utxferror.c	80;"	d	file:
ACPI_MSG_EXCEPTION	acpi/acpica/utxferror.c	81;"	d	file:
ACPI_MSG_INFO	acpi/acpica/utxferror.c	83;"	d	file:
ACPI_MSG_REDIRECT_BEGIN	acpi/acpica/utxferror.c	63;"	d	file:
ACPI_MSG_REDIRECT_END	acpi/acpica/utxferror.c	67;"	d	file:
ACPI_MSG_SUFFIX	acpi/acpica/utxferror.c	87;"	d	file:
ACPI_MSG_WARNING	acpi/acpica/utxferror.c	82;"	d	file:
ACPI_MTX_CACHES	acpi/acpica/aclocal.h	84;"	d
ACPI_MTX_DEBUG_CMD_COMPLETE	acpi/acpica/aclocal.h	86;"	d
ACPI_MTX_DEBUG_CMD_READY	acpi/acpica/aclocal.h	87;"	d
ACPI_MTX_DO_NOT_LOCK	acpi/acpica/aclocal.h	124;"	d
ACPI_MTX_EVENTS	acpi/acpica/aclocal.h	83;"	d
ACPI_MTX_INTERPRETER	acpi/acpica/aclocal.h	80;"	d
ACPI_MTX_LOCK	acpi/acpica/aclocal.h	125;"	d
ACPI_MTX_MEMORY	acpi/acpica/aclocal.h	85;"	d
ACPI_MTX_NAMESPACE	acpi/acpica/aclocal.h	81;"	d
ACPI_MTX_TABLES	acpi/acpica/aclocal.h	82;"	d
ACPI_MUL_16	acpi/acpica/acmacros.h	231;"	d
ACPI_MUL_2	acpi/acpica/acmacros.h	219;"	d
ACPI_MUL_32	acpi/acpica/acmacros.h	235;"	d
ACPI_MUL_4	acpi/acpica/acmacros.h	223;"	d
ACPI_MUL_8	acpi/acpica/acmacros.h	227;"	d
ACPI_MUTEX_NOT_ACQUIRED	acpi/acpica/aclocal.h	112;"	d
ACPI_NAME_SIZE	acpi/acpica/acconfig.h	170;"	d
ACPI_NORMAL_EXEC	acpi/acpica/acmacros.h	468;"	d
ACPI_NORMAL_EXEC	acpi/acpica/acmacros.h	491;"	d
ACPI_NUM_LOCK	acpi/acpica/aclocal.h	108;"	d
ACPI_NUM_MEM_LISTS	acpi/acpica/aclocal.h	1058;"	d
ACPI_NUM_MUTEX	acpi/acpica/aclocal.h	90;"	d
ACPI_NUM_OWNERID_MASKS	acpi/acpica/acconfig.h	112;"	d
ACPI_NUM_RTYPES	acpi/acpica/aclocal.h	382;"	d
ACPI_NUM_sx_d_METHODS	acpi/acpica/acconfig.h	212;"	d
ACPI_NUM_sx_w_METHODS	acpi/acpica/acconfig.h	213;"	d
ACPI_OBJECT_REPAIRED	acpi/acpica/aclocal.h	366;"	d
ACPI_OBJ_MAX_OPERAND	acpi/acpica/acconfig.h	155;"	d
ACPI_OBJ_NUM_OPERANDS	acpi/acpica/acconfig.h	154;"	d
ACPI_OEM_ID_SIZE	acpi/acpica/acconfig.h	176;"	d
ACPI_OEM_TABLE_ID_SIZE	acpi/acpica/acconfig.h	177;"	d
ACPI_OP	acpi/acpica/acmacros.h	299;"	d
ACPI_OP	acpi/acpica/acmacros.h	302;"	d
ACPI_OSI_DYNAMIC	acpi/acpica/aclocal.h	913;"	d
ACPI_OSI_INVALID	acpi/acpica/aclocal.h	912;"	d
ACPI_OSI_WINSRV_2003	acpi/acpica/aclocal.h	894;"	d
ACPI_OSI_WINSRV_2003_SP1	acpi/acpica/aclocal.h	896;"	d
ACPI_OSI_WINSRV_2008	acpi/acpica/aclocal.h	898;"	d
ACPI_OSI_WIN_2000	acpi/acpica/aclocal.h	891;"	d
ACPI_OSI_WIN_7	acpi/acpica/aclocal.h	901;"	d
ACPI_OSI_WIN_VISTA	acpi/acpica/aclocal.h	897;"	d
ACPI_OSI_WIN_VISTA_SP1	acpi/acpica/aclocal.h	899;"	d
ACPI_OSI_WIN_VISTA_SP2	acpi/acpica/aclocal.h	900;"	d
ACPI_OSI_WIN_XP	acpi/acpica/aclocal.h	892;"	d
ACPI_OSI_WIN_XP_SP1	acpi/acpica/aclocal.h	893;"	d
ACPI_OSI_WIN_XP_SP2	acpi/acpica/aclocal.h	895;"	d
ACPI_OS_NAME	acpi/acpica/acconfig.h	72;"	d
ACPI_PARSEOP_BYTELIST	acpi/acpica/aclocal.h	764;"	d
ACPI_PARSEOP_DEFERRED	acpi/acpica/aclocal.h	763;"	d
ACPI_PARSEOP_EMPTY_TERMLIST	acpi/acpica/aclocal.h	773;"	d
ACPI_PARSEOP_GENERIC	acpi/acpica/aclocal.h	761;"	d
ACPI_PARSEOP_IGNORE	acpi/acpica/aclocal.h	771;"	d
ACPI_PARSEOP_IN_CACHE	acpi/acpica/aclocal.h	767;"	d
ACPI_PARSEOP_IN_STACK	acpi/acpica/aclocal.h	765;"	d
ACPI_PARSEOP_NAMED	acpi/acpica/aclocal.h	762;"	d
ACPI_PARSEOP_PARAMLIST	acpi/acpica/aclocal.h	772;"	d
ACPI_PARSEOP_SPECIAL	acpi/acpica/aclocal.h	774;"	d
ACPI_PARSEOP_TARGET	acpi/acpica/aclocal.h	766;"	d
ACPI_PARSE_COMMON	acpi/acpica/aclocal.h	663;"	d
ACPI_PATH_SEGMENT_LENGTH	acpi/acpica/acconfig.h	171;"	d
ACPI_PATH_SEPARATOR	acpi/acpica/acconfig.h	172;"	d
ACPI_PM1_CONTROL_IGNORED_BITS	acpi/acpica/aclocal.h	808;"	d
ACPI_PM1_CONTROL_PRESERVED_BITS	acpi/acpica/aclocal.h	810;"	d
ACPI_PM1_CONTROL_RESERVED_BITS	acpi/acpica/aclocal.h	809;"	d
ACPI_PM1_CONTROL_WRITEONLY_BITS	acpi/acpica/aclocal.h	796;"	d
ACPI_PM1_STATUS_PRESERVED_BITS	acpi/acpica/aclocal.h	792;"	d
ACPI_PM2_CONTROL_PRESERVED_BITS	acpi/acpica/aclocal.h	813;"	d
ACPI_PREEMPTION_POINT	acpi/acpica/acmacros.h	578;"	d
ACPI_REGISTER_INSERT_VALUE	acpi/acpica/acmacros.h	281;"	d
ACPI_REGISTER_PM1_CONTROL	acpi/acpica/aclocal.h	821;"	d
ACPI_REGISTER_PM1_ENABLE	acpi/acpica/aclocal.h	820;"	d
ACPI_REGISTER_PM1_STATUS	acpi/acpica/aclocal.h	819;"	d
ACPI_REGISTER_PM2_CONTROL	acpi/acpica/aclocal.h	822;"	d
ACPI_REGISTER_PM_TIMER	acpi/acpica/aclocal.h	823;"	d
ACPI_REGISTER_PREPARE_BITS	acpi/acpica/acmacros.h	280;"	d
ACPI_REGISTER_PROCESSOR_BLOCK	acpi/acpica/aclocal.h	824;"	d
ACPI_REGISTER_SMI_COMMAND_BLOCK	acpi/acpica/aclocal.h	825;"	d
ACPI_RESOURCE_NAME_ADDRESS16	acpi/acpica/aclocal.h	971;"	d
ACPI_RESOURCE_NAME_ADDRESS32	acpi/acpica/aclocal.h	970;"	d
ACPI_RESOURCE_NAME_ADDRESS64	acpi/acpica/aclocal.h	973;"	d
ACPI_RESOURCE_NAME_DMA	acpi/acpica/aclocal.h	948;"	d
ACPI_RESOURCE_NAME_END_DEPENDENT	acpi/acpica/aclocal.h	950;"	d
ACPI_RESOURCE_NAME_END_TAG	acpi/acpica/aclocal.h	958;"	d
ACPI_RESOURCE_NAME_EXTENDED_ADDRESS64	acpi/acpica/aclocal.h	974;"	d
ACPI_RESOURCE_NAME_EXTENDED_IRQ	acpi/acpica/aclocal.h	972;"	d
ACPI_RESOURCE_NAME_FIXED_IO	acpi/acpica/aclocal.h	952;"	d
ACPI_RESOURCE_NAME_FIXED_MEMORY32	acpi/acpica/aclocal.h	969;"	d
ACPI_RESOURCE_NAME_GENERIC_REGISTER	acpi/acpica/aclocal.h	965;"	d
ACPI_RESOURCE_NAME_IO	acpi/acpica/aclocal.h	951;"	d
ACPI_RESOURCE_NAME_IRQ	acpi/acpica/aclocal.h	947;"	d
ACPI_RESOURCE_NAME_LARGE	acpi/acpica/aclocal.h	936;"	d
ACPI_RESOURCE_NAME_LARGE_MASK	acpi/acpica/aclocal.h	941;"	d
ACPI_RESOURCE_NAME_LARGE_MAX	acpi/acpica/aclocal.h	975;"	d
ACPI_RESOURCE_NAME_MEMORY24	acpi/acpica/aclocal.h	964;"	d
ACPI_RESOURCE_NAME_MEMORY32	acpi/acpica/aclocal.h	968;"	d
ACPI_RESOURCE_NAME_RESERVED_L1	acpi/acpica/aclocal.h	966;"	d
ACPI_RESOURCE_NAME_RESERVED_S1	acpi/acpica/aclocal.h	953;"	d
ACPI_RESOURCE_NAME_RESERVED_S2	acpi/acpica/aclocal.h	954;"	d
ACPI_RESOURCE_NAME_RESERVED_S3	acpi/acpica/aclocal.h	955;"	d
ACPI_RESOURCE_NAME_RESERVED_S4	acpi/acpica/aclocal.h	956;"	d
ACPI_RESOURCE_NAME_SMALL	acpi/acpica/aclocal.h	937;"	d
ACPI_RESOURCE_NAME_SMALL_LENGTH_MASK	acpi/acpica/aclocal.h	940;"	d
ACPI_RESOURCE_NAME_SMALL_MASK	acpi/acpica/aclocal.h	939;"	d
ACPI_RESOURCE_NAME_START_DEPENDENT	acpi/acpica/aclocal.h	949;"	d
ACPI_RESOURCE_NAME_VENDOR_LARGE	acpi/acpica/aclocal.h	967;"	d
ACPI_RESOURCE_NAME_VENDOR_SMALL	acpi/acpica/aclocal.h	957;"	d
ACPI_RESULTS_FRAME_OBJ_NUM	acpi/acpica/acconfig.h	159;"	d
ACPI_RESULTS_OBJ_NUM_MAX	acpi/acpica/acconfig.h	166;"	d
ACPI_ROOT_ALLOW_RESIZE	acpi/acpica/aclocal.h	211;"	d
ACPI_ROOT_ORIGIN_ALLOCATED	acpi/acpica/aclocal.h	210;"	d
ACPI_ROOT_ORIGIN_UNKNOWN	acpi/acpica/aclocal.h	209;"	d
ACPI_ROOT_TABLE_SIZE_INCREMENT	acpi/acpica/acconfig.h	116;"	d
ACPI_ROUND_BITS_DOWN_TO_BYTES	acpi/acpica/acmacros.h	259;"	d
ACPI_ROUND_BITS_UP_TO_BYTES	acpi/acpica/acmacros.h	258;"	d
ACPI_ROUND_DOWN	acpi/acpica/acmacros.h	241;"	d
ACPI_ROUND_DOWN_TO_32BIT	acpi/acpica/acmacros.h	250;"	d
ACPI_ROUND_DOWN_TO_64BIT	acpi/acpica/acmacros.h	251;"	d
ACPI_ROUND_DOWN_TO_NATIVE_WORD	acpi/acpica/acmacros.h	252;"	d
ACPI_ROUND_UP	acpi/acpica/acmacros.h	244;"	d
ACPI_ROUND_UP_TO	acpi/acpica/acmacros.h	265;"	d
ACPI_ROUND_UP_TO_1K	acpi/acpica/acmacros.h	261;"	d
ACPI_ROUND_UP_TO_32BIT	acpi/acpica/acmacros.h	254;"	d
ACPI_ROUND_UP_TO_64BIT	acpi/acpica/acmacros.h	255;"	d
ACPI_ROUND_UP_TO_NATIVE_WORD	acpi/acpica/acmacros.h	256;"	d
ACPI_RSDP_CHECKSUM_LENGTH	acpi/acpica/acconfig.h	202;"	d
ACPI_RSDP_SCAN_STEP	acpi/acpica/acconfig.h	186;"	d
ACPI_RSDP_XCHECKSUM_LENGTH	acpi/acpica/acconfig.h	203;"	d
ACPI_RTYPE_ALL	acpi/acpica/aclocal.h	380;"	d
ACPI_RTYPE_ANY	acpi/acpica/aclocal.h	373;"	d
ACPI_RTYPE_BUFFER	acpi/acpica/aclocal.h	377;"	d
ACPI_RTYPE_INTEGER	acpi/acpica/aclocal.h	375;"	d
ACPI_RTYPE_NONE	acpi/acpica/aclocal.h	374;"	d
ACPI_RTYPE_PACKAGE	acpi/acpica/aclocal.h	378;"	d
ACPI_RTYPE_REFERENCE	acpi/acpica/aclocal.h	379;"	d
ACPI_RTYPE_STRING	acpi/acpica/aclocal.h	376;"	d
ACPI_SERIALIZED	acpi/acpica/aclocal.h	49;"	d
ACPI_SET16	acpi/acpica/acmacros.h	57;"	d
ACPI_SET32	acpi/acpica/acmacros.h	58;"	d
ACPI_SET64	acpi/acpica/acmacros.h	59;"	d
ACPI_SET8	acpi/acpica/acmacros.h	56;"	d
ACPI_SET_DESCRIPTOR_TYPE	acpi/acpica/acmacros.h	293;"	d
ACPI_SMBUS_BUFFER_SIZE	acpi/acpica/acconfig.h	207;"	d
ACPI_STATE_COMMON	acpi/acpica/aclocal.h	512;"	d
ACPI_TABLE_INDEX_DSDT	acpi/acpica/aclocal.h	215;"	d
ACPI_TABLE_INDEX_FACS	acpi/acpica/aclocal.h	216;"	d
ACPI_USER_REGION_BEGIN	acpi/acpica/acconfig.h	190;"	d
ACPI_UUID_LENGTH	acpi/acpica/acconfig.h	149;"	d
ACPI_WARN_PREDEFINED	acpi/acpica/acmacros.h	343;"	d
ACPI_WARN_PREDEFINED	acpi/acpica/acmacros.h	352;"	d
ACQUIRE_MAPPABLE	legion_runtime/legion.h	/^        ACQUIRE_MAPPABLE,$/;"	e	enum:LegionRuntime::HighLevel::Mappable::MappableKind
ACQUIRE_OP_ALLOC	legion_runtime/legion_allocation.h	/^      ACQUIRE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ACQUIRE_PHYSICAL_STATE_CALL	legion_runtime/region_tree.h	/^      ACQUIRE_PHYSICAL_STATE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ACTIVEMSG_H	legion_runtime/activemsg.h	20;"	d
ACTIVE_INVALID_STATE	legion_runtime/garbage_collection.h	/^        ACTIVE_INVALID_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
ACT_CREATE	legion_runtime/lowlevel_impl.h	/^        ACT_CREATE = 0,$/;"	e	enum:LegionRuntime::LowLevel::EventTraceItem::Action
ACT_FORWARD_REQUEST	legion_runtime/lowlevel_impl.h	/^        ACT_FORWARD_REQUEST = 2, \/\/ for forwarding of requests$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_LOCAL_GRANT	legion_runtime/lowlevel_impl.h	/^        ACT_LOCAL_GRANT = 3, \/\/ local grant of the lock$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_LOCAL_REQUEST	legion_runtime/lowlevel_impl.h	/^        ACT_LOCAL_REQUEST = 0, \/\/ request for a lock where the owner is local$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_QUERY	legion_runtime/lowlevel_impl.h	/^        ACT_QUERY = 1,$/;"	e	enum:LegionRuntime::LowLevel::EventTraceItem::Action
ACT_REMOTE_GRANT	legion_runtime/lowlevel_impl.h	/^        ACT_REMOTE_GRANT = 4, \/\/ remote grant of the lock (change owners)$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_REMOTE_RELEASE	legion_runtime/lowlevel_impl.h	/^        ACT_REMOTE_RELEASE = 5, \/\/ remote release of a shared lock$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_REMOTE_REQUEST	legion_runtime/lowlevel_impl.h	/^        ACT_REMOTE_REQUEST = 1, \/\/ request for a lock where the owner is not local$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_TRIGGER	legion_runtime/lowlevel_impl.h	/^        ACT_TRIGGER = 2,$/;"	e	enum:LegionRuntime::LowLevel::EventTraceItem::Action
ACT_WAIT	legion_runtime/lowlevel_impl.h	/^        ACT_WAIT = 3,$/;"	e	enum:LegionRuntime::LowLevel::EventTraceItem::Action
ADD_COPY_USER_CALL	legion_runtime/region_tree.h	/^      ADD_COPY_USER_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ADD_LOCAL_USER_CALL	legion_runtime/region_tree.h	/^      ADD_LOCAL_USER_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ADD_USER_ABOVE_CALL	legion_runtime/region_tree.h	/^      ADD_USER_ABOVE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ADD_USER_CALL	legion_runtime/region_tree.h	/^      ADD_USER_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ADVANCE_FIELD_CALL	legion_runtime/region_tree.h	/^      ADVANCE_FIELD_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ADVERTISEMENT_MESSAGE	legion_runtime/runtime.h	/^        ADVERTISEMENT_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
ALIGNMENT	legion_runtime/lowlevel.cc	/^      static const size_t ALIGNMENT = 256;$/;"	m	class:LegionRuntime::LowLevel::LocalCPUMemory	file:
ALLOCABLE	legion_runtime/legion_types.h	/^      ALLOCABLE       = 0x00000001,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
ALLOC_INTERNAL_ALLOC	legion_runtime/legion_allocation.h	/^      ALLOC_INTERNAL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ALLOC_MANAGER_ALLOC	legion_runtime/legion_allocation.h	/^      ALLOC_MANAGER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ALLONES	lua_src/lbitlib.c	22;"	d	file:
ALLOW_REMOTE_MEMORY_WRITES	legion_runtime/lowlevel.cc	3663;"	d	file:
ALL_MEMORY	legion_runtime/legion_types.h	/^      ALL_MEMORY      = 0x0000000F,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
ALT	dev/kbd.c	268;"	d	file:
AMD_FPU_ECX_FEAT_QUERY	nautilus/fpu.c	62;"	d	file:
AMD_FPU_EDX_FEAT_QUERY	nautilus/fpu.c	63;"	d	file:
AML_NUM_OPCODES	acpi/acpica/aclocal.h	56;"	d
AMQueue	legion_runtime/lowlevel.cc	/^      AMQueue(unsigned _size = 1024)$/;"	f	class:LegionRuntime::LowLevel::AMQueue
AMQueue	legion_runtime/lowlevel.cc	/^    class AMQueue {$/;"	c	namespace:LegionRuntime::LowLevel	file:
AMQueueEntry	legion_runtime/lowlevel.cc	/^      struct AMQueueEntry {$/;"	s	class:LegionRuntime::LowLevel::AMQueue	file:
AND_PRED_OP_ALLOC	legion_runtime/legion_allocation.h	/^      AND_PRED_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ANOBJ_ALLOCATED_BUFFER	acpi/acpica/aclocal.h	190;"	d
ANOBJ_EVALUATED	acpi/acpica/aclocal.h	189;"	d
ANOBJ_IS_BIT_OFFSET	acpi/acpica/aclocal.h	195;"	d
ANOBJ_IS_EXTERNAL	acpi/acpica/aclocal.h	192;"	d
ANOBJ_IS_REFERENCED	acpi/acpica/aclocal.h	196;"	d
ANOBJ_METHOD_ARG	acpi/acpica/aclocal.h	186;"	d
ANOBJ_METHOD_LOCAL	acpi/acpica/aclocal.h	187;"	d
ANOBJ_METHOD_NO_RETVAL	acpi/acpica/aclocal.h	193;"	d
ANOBJ_METHOD_SOME_NO_RETVAL	acpi/acpica/aclocal.h	194;"	d
ANOBJ_RESERVED	acpi/acpica/aclocal.h	184;"	d
ANOBJ_SUBTREE_HAS_INI	acpi/acpica/aclocal.h	188;"	d
ANOBJ_TEMPORARY	acpi/acpica/aclocal.h	185;"	d
ANTI_DEPENDENCE	legion_runtime/legion_types.h	/^      ANTI_DEPENDENCE = 2, \/\/ Write-After-Read or Write-After-Write with Write-Only privilege$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
AOS	legion_runtime/accessor.h	/^      struct AOS {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
AOS_TYPE	legion_runtime/accessor.h	/^	  typedef AOS<sizeof(PT)> AOS_TYPE;$/;"	t	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
APIC_DEBUG	dev/apic.c	42;"	d	file:
APIC_PRINT	dev/apic.c	43;"	d	file:
APIC_WARN	dev/apic.c	44;"	d	file:
APIC_WRITE	test/ipi.c	150;"	d	file:
ARE_DISJOINT_CALL	legion_runtime/region_tree.h	/^      ARE_DISJOINT_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ARGI_LIST1	acpi/acpica/acmacros.h	314;"	d
ARGI_LIST2	acpi/acpica/acmacros.h	315;"	d
ARGI_LIST3	acpi/acpica/acmacros.h	316;"	d
ARGI_LIST4	acpi/acpica/acmacros.h	317;"	d
ARGI_LIST5	acpi/acpica/acmacros.h	318;"	d
ARGI_LIST6	acpi/acpica/acmacros.h	319;"	d
ARGP_LIST1	acpi/acpica/acmacros.h	321;"	d
ARGP_LIST2	acpi/acpica/acmacros.h	322;"	d
ARGP_LIST3	acpi/acpica/acmacros.h	323;"	d
ARGP_LIST4	acpi/acpica/acmacros.h	324;"	d
ARGP_LIST5	acpi/acpica/acmacros.h	325;"	d
ARGP_LIST6	acpi/acpica/acmacros.h	326;"	d
ARGUMENT_MAP_ALLOC	legion_runtime/legion_allocation.h	/^      ARGUMENT_MAP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ARGUMENT_MAP_STORE_ALLOC	legion_runtime/legion_allocation.h	/^      ARGUMENT_MAP_STORE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ARG_1	acpi/acpica/acmacros.h	307;"	d
ARG_2	acpi/acpica/acmacros.h	308;"	d
ARG_3	acpi/acpica/acmacros.h	309;"	d
ARG_4	acpi/acpica/acmacros.h	310;"	d
ARG_5	acpi/acpica/acmacros.h	311;"	d
ARG_6	acpi/acpica/acmacros.h	312;"	d
ARG_TYPE_WIDTH	acpi/acpica/acmacros.h	306;"	d
ASSERT	nautilus/fmtout.c	49;"	d	file:
ATOMIC	legion_runtime/legion_types.h	/^      ATOMIC       = 1,$/;"	e	enum:LegionRuntime::HighLevel::CoherenceProperty
ATOMIC_DEPENDENCE	legion_runtime/legion_types.h	/^      ATOMIC_DEPENDENCE = 3,$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
ATTR_CTRL_ADDR_AND_DATA_WRITE	dev/vga.c	37;"	d	file:
ATTR_CTRL_DATA_READ	dev/vga.c	38;"	d	file:
ATTR_CTRL_FLIP_FLOP	dev/vga.c	36;"	d	file:
ATTR_MODE_CTRL	dev/vga.c	39;"	d	file:
AUTO_GENERATE_ID	legion_runtime/legion_types.h	47;"	d
AUXMARK	lua_src/loadlib.c	622;"	d	file:
AVXBitMask	legion_runtime/legion_utilities.h	/^    AVXBitMask<MAX>::AVXBitMask(const AVXBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
AVXBitMask	legion_runtime/legion_utilities.h	/^    AVXBitMask<MAX>::AVXBitMask(uint64_t init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
AVXBitMask	legion_runtime/legion_utilities.h	/^    class AVXBitMask {$/;"	c	namespace:LegionRuntime::HighLevel
AVXTLBitMask	legion_runtime/legion_utilities.h	/^    AVXTLBitMask<MAX>::AVXTLBitMask(const AVXTLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
AVXTLBitMask	legion_runtime/legion_utilities.h	/^    AVXTLBitMask<MAX>::AVXTLBitMask(uint64_t init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
AVXTLBitMask	legion_runtime/legion_utilities.h	/^    class AVXTLBitMask {$/;"	c	namespace:LegionRuntime::HighLevel
AVX_ELMTS	legion_runtime/legion_utilities.h	3794;"	d
AVX_ELMTS	legion_runtime/legion_utilities.h	5373;"	d
Ac	test/hpcg/sparsemat.h	/^    SparseMatrix *Ac;$/;"	m	struct:lgncg::SparseMatrix
Accessor	legion_runtime/accessor.h	/^  namespace Accessor {$/;"	n	namespace:LegionRuntime
Accessor	legion_runtime/lowlevel.cc	/^  namespace Accessor {$/;"	n	namespace:LegionRuntime	file:
Accessor	legion_runtime/runtime.cc	/^  namespace Accessor {$/;"	n	namespace:LegionRuntime	file:
Accessor	legion_runtime/shared_lowlevel.cc	/^  namespace Accessor {$/;"	n	namespace:LegionRuntime	file:
AccessorPrivilege	legion_runtime/accessor.h	/^  enum AccessorPrivilege {$/;"	g	namespace:LegionRuntime
AccessorType	legion_runtime/accessor.h	/^    namespace AccessorType {$/;"	n	namespace:LegionRuntime::Accessor
AccessorType	legion_runtime/runtime.cc	/^    namespace AccessorType {$/;"	n	namespace:LegionRuntime::Accessor	file:
AccumulateCharge	test/circuit.h	/^class AccumulateCharge {$/;"	c
Acquire	legion_runtime/legion.cc	/^    Acquire::Acquire(void)$/;"	f	class:LegionRuntime::HighLevel::Acquire
Acquire	legion_runtime/legion.h	/^    class Acquire : public Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
AcquireLauncher	legion_runtime/legion.cc	/^    AcquireLauncher::AcquireLauncher(LogicalRegion reg, LogicalRegion par,$/;"	f	class:LegionRuntime::HighLevel::AcquireLauncher
AcquireLauncher	legion_runtime/legion.h	/^    struct AcquireLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
AcquireOp	legion_runtime/legion_ops.cc	/^    AcquireOp::AcquireOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
AcquireOp	legion_runtime/legion_ops.cc	/^    AcquireOp::AcquireOp(const AcquireOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
AcquireOp	legion_runtime/legion_ops.h	/^    class AcquireOp : public Acquire, public SpeculativeOp {$/;"	c	namespace:LegionRuntime::HighLevel
Action	legion_runtime/lowlevel_impl.h	/^      enum Action {$/;"	g	struct:LegionRuntime::LowLevel::EventTraceItem
Action	legion_runtime/lowlevel_impl.h	/^      enum Action {$/;"	g	struct:LegionRuntime::LowLevel::LockTraceItem
ActiveMessageEndpoint	legion_runtime/activemsg.cc	/^  ActiveMessageEndpoint(gasnet_node_t _peer)$/;"	f	class:ActiveMessageEndpoint
ActiveMessageEndpoint	legion_runtime/activemsg.cc	/^class ActiveMessageEndpoint {$/;"	c	file:
ActiveMessageIDs	legion_runtime/lowlevel.cc	/^    enum ActiveMessageIDs {$/;"	g	namespace:LegionRuntime::LowLevel	file:
ActiveMessageMediumNoReply	legion_runtime/activemsg.h	/^class ActiveMessageMediumNoReply {$/;"	c
ActiveMessageMediumReply	legion_runtime/activemsg.h	/^class ActiveMessageMediumReply {$/;"	c
ActiveMessageShortNoReply	legion_runtime/activemsg.h	/^class ActiveMessageShortNoReply {$/;"	c
ActiveMessageShortReply	legion_runtime/activemsg.h	/^class ActiveMessageShortReply {$/;"	c
Add	test/saxpy_array.cc	/^struct Add {$/;"	s	file:
AddressSpace	legion_runtime/legion_types.h	/^    typedef LowLevel::AddressSpace AddressSpace;$/;"	t	namespace:LegionRuntime::HighLevel
AddressSpace	legion_runtime/lowlevel.h	/^    typedef unsigned int AddressSpace;$/;"	t	namespace:LegionRuntime::LowLevel
AddressSpaceID	legion_runtime/legion_types.h	/^    typedef unsigned int AddressSpaceID;$/;"	t	namespace:LegionRuntime::HighLevel
AdversarialMapper	test/custom_mapper.cc	/^AdversarialMapper::AdversarialMapper(Machine *m, $/;"	f	class:AdversarialMapper
AdversarialMapper	test/custom_mapper.cc	/^class AdversarialMapper : public DefaultMapper {$/;"	c	file:
AllocManager	legion_runtime/runtime.h	/^      AllocManager(const AllocManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::AllocManager
AllocManager	legion_runtime/runtime.h	/^      AllocManager(size_t arglen)$/;"	f	class:LegionRuntime::HighLevel::AllocManager
AllocManager	legion_runtime/runtime.h	/^    class AllocManager : public Collectable {$/;"	c	namespace:LegionRuntime::HighLevel
AllocateMode	legion_runtime/legion_types.h	/^    enum AllocateMode {$/;"	g	namespace:LegionRuntime::HighLevel
AllocationTracker	legion_runtime/runtime.h	/^        AllocationTracker(void)$/;"	f	struct:LegionRuntime::HighLevel::Runtime::AllocationTracker
AllocationTracker	legion_runtime/runtime.h	/^      struct AllocationTracker {$/;"	s	class:LegionRuntime::HighLevel::Runtime
AllocationType	legion_runtime/legion_allocation.h	/^    enum AllocationType {$/;"	g	namespace:LegionRuntime::HighLevel
AndPredOp	legion_runtime/legion_ops.cc	/^    AndPredOp::AndPredOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
AndPredOp	legion_runtime/legion_ops.cc	/^    AndPredOp::AndPredOp(const AndPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
AndPredOp	legion_runtime/legion_ops.h	/^    class AndPredOp : public Predicate::Impl, PredicateWaiter {$/;"	c	namespace:LegionRuntime::HighLevel
Ap	test/hpcg/cg-data.h	/^    Vector Ap;$/;"	m	struct:lgncg::CGData
ArgsWithReplyInfo	legion_runtime/activemsg.h	/^struct ArgsWithReplyInfo {$/;"	s
ArgumentMap	legion_runtime/legion.cc	/^    ArgumentMap::ArgumentMap(Impl *i)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
ArgumentMap	legion_runtime/legion.cc	/^    ArgumentMap::ArgumentMap(const ArgumentMap &rhs)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
ArgumentMap	legion_runtime/legion.cc	/^    ArgumentMap::ArgumentMap(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
ArgumentMap	legion_runtime/legion.h	/^    class ArgumentMap {$/;"	c	namespace:LegionRuntime::HighLevel
ArgumentMapStore	legion_runtime/runtime.cc	/^    ArgumentMapStore::ArgumentMapStore(const ArgumentMapStore &rhs)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMapStore
ArgumentMapStore	legion_runtime/runtime.cc	/^    ArgumentMapStore::ArgumentMapStore(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMapStore
ArgumentMapStore	legion_runtime/runtime.h	/^    class ArgumentMapStore {$/;"	c	namespace:LegionRuntime::HighLevel
Arrays	legion_runtime/arrays.h	/^  namespace Arrays {$/;"	n	namespace:LegionRuntime
Arrays	legion_runtime/lowlevel.cc	/^  namespace Arrays {$/;"	n	namespace:LegionRuntime	file:
Arrays	legion_runtime/shared_lowlevel.cc	/^  namespace Arrays {$/;"	n	namespace:LegionRuntime	file:
Atomic	legion_runtime/lowlevel_impl.h	/^      Atomic(T _value) : value(_value)$/;"	f	class:LegionRuntime::LowLevel::Atomic
Atomic	legion_runtime/lowlevel_impl.h	/^    class Atomic {$/;"	c	namespace:LegionRuntime::LowLevel
AutoHSLLock	legion_runtime/lowlevel_impl.h	/^      AutoHSLLock(gasnet_hsl_t &mutex) : mutexp(&mutex), held(true)$/;"	f	class:LegionRuntime::LowLevel::AutoHSLLock
AutoHSLLock	legion_runtime/lowlevel_impl.h	/^      AutoHSLLock(gasnet_hsl_t *_mutexp) : mutexp(_mutexp), held(true)$/;"	f	class:LegionRuntime::LowLevel::AutoHSLLock
AutoHSLLock	legion_runtime/lowlevel_impl.h	/^    class AutoHSLLock {$/;"	c	namespace:LegionRuntime::LowLevel
AutoLock	legion_runtime/legion_utilities.h	/^      AutoLock(ImmovableLock l)$/;"	f	class:LegionRuntime::HighLevel::AutoLock
AutoLock	legion_runtime/legion_utilities.h	/^      AutoLock(Reservation r, unsigned mode = 0, bool exclusive = true, $/;"	f	class:LegionRuntime::HighLevel::AutoLock
AutoLock	legion_runtime/legion_utilities.h	/^      AutoLock(const AutoLock &rhs)$/;"	f	class:LegionRuntime::HighLevel::AutoLock
AutoLock	legion_runtime/legion_utilities.h	/^    class AutoLock { $/;"	c	namespace:LegionRuntime::HighLevel
Axf	test/hpcg/mg-data.h	/^    Vector Axf;$/;"	m	struct:lgncg::MGData
BAD	cxx/cxxglue.cc	49;"	d	file:
BAD_MADT_ENTRY	nautilus/acpi.c	39;"	d	file:
BARRIER_ADJUST_MSGID	legion_runtime/lowlevel.cc	/^      BARRIER_ADJUST_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
BARRIER_DESTROY	test/benchmark.h	31;"	d
BARRIER_DESTROY	test/benchmark.h	64;"	d
BARRIER_INIT	test/benchmark.h	30;"	d
BARRIER_INIT	test/benchmark.h	63;"	d
BARRIER_T	test/benchmark.h	28;"	d
BARRIER_T	test/benchmark.h	61;"	d
BARRIER_TIMESTAMP_NODEID_SHIFT	legion_runtime/lowlevel.cc	/^    static const int BARRIER_TIMESTAMP_NODEID_SHIFT = 48;$/;"	m	namespace:LegionRuntime::LowLevel	file:
BARRIER_WAIT	test/benchmark.h	29;"	d
BARRIER_WAIT	test/benchmark.h	62;"	d
BASE_ALLOCATORS	legion_runtime/shared_lowlevel.cc	71;"	d	file:
BASE_EVENTS	legion_runtime/shared_lowlevel.cc	68;"	d	file:
BASE_INSTANCES	legion_runtime/shared_lowlevel.cc	72;"	d	file:
BASE_METAS	legion_runtime/shared_lowlevel.cc	70;"	d	file:
BASE_RESERVATIONS	legion_runtime/shared_lowlevel.cc	69;"	d	file:
BEGIN_DEPENDENCE_ANALYSIS	legion_runtime/legion_logging.h	/^    BEGIN_DEPENDENCE_ANALYSIS = 0,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_EXECUTION	legion_runtime/legion_logging.h	/^    BEGIN_EXECUTION = 8,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_GC	legion_runtime/legion_logging.h	/^    BEGIN_GC = 22,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_MAPPING	legion_runtime/legion_logging.h	/^    BEGIN_MAPPING = 4,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_POST_EXEC	legion_runtime/legion_logging.h	/^    BEGIN_POST_EXEC = 24,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_PRE_MAPPING	legion_runtime/legion_logging.h	/^    BEGIN_PRE_MAPPING = 2,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_SCHEDULING	legion_runtime/legion_logging.h	/^    BEGIN_SCHEDULING = 16,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_SLICING	legion_runtime/legion_logging.h	/^    BEGIN_SLICING = 6,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_WINDOW_WAIT	legion_runtime/legion_logging.h	/^    BEGIN_WINDOW_WAIT = 14,$/;"	e	enum:LegionRuntime::TimingKind
BIL	test/benchmark.c	86;"	d	file:
BITS_PER_LONG	nautilus/hashtable.c	84;"	d	file:
BITS_PER_LONG	nautilus/hashtable.c	88;"	d	file:
BIT_ELMTS	legion_runtime/legion_utilities.h	1355;"	d
BIT_ELMTS	legion_runtime/legion_utilities.h	2582;"	d
BIT_ELMTS	legion_runtime/legion_utilities.h	2586;"	d
BIT_ELMTS	legion_runtime/legion_utilities.h	3789;"	d
BIT_ELMTS	legion_runtime/legion_utilities.h	3795;"	d
BIT_ELMTS	legion_runtime/legion_utilities.h	5372;"	d
BLOAT	nautilus/mm/kmem.c	57;"	d	file:
BLOCK_SIZE	test/saxpy_array.cc	45;"	d	file:
BMM_DEBUG	arch/hrt/early_mem.c	36;"	d	file:
BMM_DEBUG	arch/k1om/early_mem.c	38;"	d	file:
BMM_DEBUG	arch/x64/early_mem.c	36;"	d	file:
BMM_DEBUG	nautilus/mm/boot_mm.c	39;"	d	file:
BMM_PRINT	arch/hrt/early_mem.c	37;"	d	file:
BMM_PRINT	arch/k1om/early_mem.c	39;"	d	file:
BMM_PRINT	arch/x64/early_mem.c	37;"	d	file:
BMM_PRINT	nautilus/mm/boot_mm.c	40;"	d	file:
BMM_WARN	arch/hrt/early_mem.c	38;"	d	file:
BMM_WARN	arch/k1om/early_mem.c	40;"	d	file:
BMM_WARN	arch/x64/early_mem.c	38;"	d	file:
BMM_WARN	nautilus/mm/boot_mm.c	41;"	d	file:
BOOL_ARG	legion_runtime/default_mapper.cc	73;"	d	file:
BOOL_ARG	legion_runtime/default_mapper.cc	87;"	d	file:
BOOL_ARG	legion_runtime/lowlevel.cc	8140;"	d	file:
BOOL_ARG	legion_runtime/runtime.cc	11529;"	d	file:
BOOL_ARG	legion_runtime/runtime.cc	11623;"	d	file:
BSP_CORE	test/benchmark.c	234;"	d	file:
BUDDY_DEBUG	nautilus/mm/buddy.c	42;"	d	file:
BUDDY_PRINT	nautilus/mm/buddy.c	43;"	d	file:
BUDDY_WARN	nautilus/mm/buddy.c	44;"	d	file:
BUF	nautilus/vc.c	/^  uint16_t BUF[VGA_WIDTH * VGA_HEIGHT];$/;"	m	struct:nk_virtual_console	file:
Barrier	legion_runtime/legion_types.h	/^    typedef LowLevel::Barrier Barrier;$/;"	t	namespace:LegionRuntime::HighLevel
Barrier	legion_runtime/lowlevel.h	/^    class Barrier : public Event {$/;"	c	namespace:LegionRuntime::LowLevel
BarrierAdjustMessage	legion_runtime/lowlevel.cc	/^    struct BarrierAdjustMessage {$/;"	s	namespace:LegionRuntime::LowLevel	file:
BaseMedium	legion_runtime/activemsg.h	/^struct BaseMedium {$/;"	s
BaseReply	legion_runtime/activemsg.h	/^struct BaseReply {$/;"	s
BindingLib	legion_runtime/legion_types.h	/^namespace BindingLib { class Utility; } \/\/ BindingLib namespace$/;"	n
BitMask	legion_runtime/legion_utilities.h	/^    BitMask<T,MAX,SHIFT,MASK>::BitMask(T init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::BitMask
BitMask	legion_runtime/legion_utilities.h	/^    BitMask<T,MAX,SHIFT,MASK>::BitMask(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
BitMask	legion_runtime/legion_utilities.h	/^    class BitMask {$/;"	c	namespace:LegionRuntime::HighLevel
BitPermutation	legion_runtime/legion_utilities.h	/^    BitPermutation<BITMASK,LOG2MAX>::BitPermutation(const BitPermutation &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
BitPermutation	legion_runtime/legion_utilities.h	/^    BitPermutation<BITMASK,LOG2MAX>::BitPermutation(void)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
BitPermutation	legion_runtime/legion_utilities.h	/^    class BitPermutation {$/;"	c	namespace:LegionRuntime::HighLevel
Block	test/saxpy_array.cc	/^struct Block {$/;"	s	file:
BlockCnt	lua_src/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	lua_src/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
BlockSize	legion_runtime/accessor.h	/^        BlockSize(size_t _value) : Const<size_t, BLOCK_SIZE>(_value) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::BlockSize
BlockSize	legion_runtime/accessor.h	/^      template <size_t BLOCK_SIZE> struct BlockSize : public Const<size_t, BLOCK_SIZE> {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
BlockStride	legion_runtime/accessor.h	/^        BlockStride(size_t _value) : Const<size_t, BLOCK_STRIDE>(_value) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::BlockStride
BlockStride	legion_runtime/accessor.h	/^      template <size_t BLOCK_STRIDE> struct BlockStride : public Const<size_t, BLOCK_STRIDE> {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
Blockify	legion_runtime/arrays.h	/^      Blockify(Point<DIM> _block_size) : block_size(_block_size) {}$/;"	f	class:LegionRuntime::Arrays::Blockify
Blockify	legion_runtime/arrays.h	/^      Blockify(void) {}$/;"	f	class:LegionRuntime::Arrays::Blockify
Blockify	legion_runtime/arrays.h	/^    class Blockify {$/;"	c	namespace:LegionRuntime::Arrays
BufferedMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      BufferedMemPairCopier(Memory _src_mem, Memory _dst_mem, size_t _buffer_size = 32768)$/;"	f	class:LegionRuntime::LowLevel::BufferedMemPairCopier
BufferedMemPairCopier	legion_runtime/lowlevel_dma.cc	/^    class BufferedMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
BufferedReductionMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      BufferedReductionMemPairCopier(Memory _src_mem, Memory _dst_mem,$/;"	f	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier
BufferedReductionMemPairCopier	legion_runtime/lowlevel_dma.cc	/^    class BufferedReductionMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ByteOffset	legion_runtime/accessor.h	/^      ByteOffset(T1 *p1, T2 *p2) : offset(((char *)p1) - ((char *)p2)) {}$/;"	f	class:LegionRuntime::Accessor::ByteOffset
ByteOffset	legion_runtime/accessor.h	/^      ByteOffset(void) : offset(0) {}$/;"	f	class:LegionRuntime::Accessor::ByteOffset
ByteOffset	legion_runtime/accessor.h	/^      explicit ByteOffset(int _offset) : offset(_offset) {}$/;"	f	class:LegionRuntime::Accessor::ByteOffset
ByteOffset	legion_runtime/accessor.h	/^      explicit ByteOffset(off_t _offset) : offset(_offset) { assert(offset == _offset); }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
ByteOffset	legion_runtime/accessor.h	/^    class ByteOffset {$/;"	c	namespace:LegionRuntime::Accessor
CACHE_LINE_SIZE_DEFAULT	nautilus/mm/boot_mm.c	32;"	d	file:
CALC_NEW_CURRENTS_TASK_ID	test/circuit.h	/^  CALC_NEW_CURRENTS_TASK_ID,$/;"	e	enum:__anon40
CAP_POSITION	lua_src/lstrlib.c	195;"	d	file:
CAP_UNFINISHED	lua_src/lstrlib.c	194;"	d	file:
CArrayLinearization	legion_runtime/arrays.h	/^      CArrayLinearization(Rect<DIM> bounds, int first_index = 0)$/;"	f	class:LegionRuntime::Arrays::CArrayLinearization
CArrayLinearization	legion_runtime/arrays.h	/^      CArrayLinearization(void) {}$/;"	f	class:LegionRuntime::Arrays::CArrayLinearization
CArrayLinearization	legion_runtime/arrays.h	/^    class CArrayLinearization : public Linearization<DIM> {$/;"	c	namespace:LegionRuntime::Arrays
CGData	test/hpcg/cg-data.h	/^    CGData(int64_t nRows,$/;"	f	struct:lgncg::CGData
CGData	test/hpcg/cg-data.h	/^struct CGData {$/;"	s	namespace:lgncg
CGMapper	test/hpcg/cg-mapper.h	/^    CGMapper(LegionRuntime::HighLevel::Machine *machine,$/;"	f	class:CGMapper
CGMapper	test/hpcg/cg-mapper.h	/^class CGMapper : public LegionRuntime::HighLevel::DefaultMapper {$/;"	c
CHAR_BIT	nautilus/fmtout.c	39;"	d	file:
CHAR_REG_OFFSET	arch/k1om/xeon_phi.c	47;"	d	file:
CHECK_CG_TASK_ID	test/hpcg/hpcg-main.cc	/^    CHECK_CG_TASK_ID$/;"	e	enum:__anon37::TID	file:
CHECK_CU	legion_runtime/lowlevel_gpu.h	32;"	d
CHECK_CUDART	legion_runtime/lowlevel_gpu.h	23;"	d
CHECK_FIELD_TASK_ID	test/circuit.h	/^  CHECK_FIELD_TASK_ID,$/;"	e	enum:__anon40
CHECK_GASNET	legion_runtime/activemsg.h	44;"	d
CHECK_GASNET	legion_runtime/lowlevel_impl.h	64;"	d
CHECK_PTHREAD	legion_runtime/activemsg.h	36;"	d
CHECK_PTHREAD	legion_runtime/lowlevel_dma.cc	24;"	d	file:
CHECK_PTHREAD	legion_runtime/lowlevel_impl.h	56;"	d
CHECK_TASK_ID	test/custom_mapper.cc	/^  CHECK_TASK_ID,$/;"	e	enum:TaskIDs	file:
CHECK_TASK_ID	test/multiple_partitions.cc	/^  CHECK_TASK_ID,$/;"	e	enum:TaskIDs	file:
CHECK_TASK_ID	test/partitioning.cc	/^  CHECK_TASK_ID,$/;"	e	enum:TaskIDs	file:
CHECK_TASK_ID	test/privileges.cc	/^  CHECK_TASK_ID,$/;"	e	enum:TaskIDs	file:
CHUNK_SIZE	legion_runtime/lowlevel.cc	/^	static const size_t CHUNK_SIZE = 16384;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
CHUNK_SIZE	legion_runtime/lowlevel_dma.cc	/^	static const size_t CHUNK_SIZE = 16384;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
CIRCUIT_CPU_LEAF_VARIANT	test/circuit.h	/^  CIRCUIT_CPU_LEAF_VARIANT,$/;"	e	enum:CircuitVariants
CIRCUIT_GPU_LEAF_VARIANT	test/circuit.h	/^  CIRCUIT_GPU_LEAF_VARIANT,$/;"	e	enum:CircuitVariants
CLEAR_TIMER_MSGID	legion_runtime/lowlevel.cc	/^      CLEAR_TIMER_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
CLIBS	lua_src/loadlib.c	96;"	d	file:
CLOSE_LOGICAL_NODE_CALL	legion_runtime/region_tree.h	/^      CLOSE_LOGICAL_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CLOSE_OPERATION	legion_runtime/legion_logging.h	/^        CLOSE_OPERATION = 4,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationKind
CLOSE_OP_ALLOC	legion_runtime/legion_allocation.h	/^      CLOSE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
CLOSE_PHYSICAL_CHILD_CALL	legion_runtime/region_tree.h	/^      CLOSE_PHYSICAL_CHILD_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CLOSE_PHYSICAL_NODE_CALL	legion_runtime/region_tree.h	/^      CLOSE_PHYSICAL_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CLOSE_PHYSICAL_STATE_CALL	legion_runtime/region_tree.h	/^      CLOSE_PHYSICAL_STATE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
COMMIT_OPERATION	legion_runtime/legion_logging.h	/^    COMMIT_OPERATION = 13,$/;"	e	enum:LegionRuntime::TimingKind
COMMON_H	legion_runtime/common.h	18;"	d
COMPILE_TIME_MIN_LEVEL	legion_runtime/utilities.h	68;"	d
COMPLETE_CHILD_ALLOC	legion_runtime/legion_allocation.h	/^      COMPLETE_CHILD_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
COMPLETE_OPERATION	legion_runtime/legion_logging.h	/^    COMPLETE_OPERATION = 12,$/;"	e	enum:LegionRuntime::TimingKind
COMPOSITE_NODE_ALLOC	legion_runtime/legion_allocation.h	/^      COMPOSITE_NODE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
COMPOSITE_VIEW_ALLOC	legion_runtime/legion_allocation.h	/^      COMPOSITE_VIEW_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
COMPUTE_PATH_CALL	legion_runtime/region_tree.h	/^      COMPUTE_PATH_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CONDENSE_USER_LIST_CALL	legion_runtime/region_tree.h	/^      CONDENSE_USER_LIST_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CONDVAR_LOOPS	test/benchmark.c	84;"	d	file:
COND_BCAST	test/benchmark.h	27;"	d
COND_BCAST	test/benchmark.h	60;"	d
COND_INIT	test/benchmark.h	24;"	d
COND_INIT	test/benchmark.h	57;"	d
COND_SIG	test/benchmark.h	26;"	d
COND_SIG	test/benchmark.h	59;"	d
COND_T	test/benchmark.h	23;"	d
COND_T	test/benchmark.h	56;"	d
COND_WAIT	test/benchmark.h	25;"	d
COND_WAIT	test/benchmark.h	58;"	d
COPY_ACROSS_ANALYSIS	legion_runtime/region_tree.h	/^      COPY_ACROSS_ANALYSIS,$/;"	e	enum:LegionRuntime::HighLevel::TraceKind
COPY_BEGIN	legion_runtime/legion_logging.h	/^    COPY_BEGIN = 20,$/;"	e	enum:LegionRuntime::TimingKind
COPY_END	legion_runtime/legion_logging.h	/^    COPY_END = 21,$/;"	e	enum:LegionRuntime::TimingKind
COPY_FIELD_CALL	legion_runtime/region_tree.h	/^      COPY_FIELD_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
COPY_FROM_CALL	legion_runtime/region_tree.h	/^      COPY_FROM_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
COPY_INIT	legion_runtime/legion_logging.h	/^    COPY_INIT = 18,$/;"	e	enum:LegionRuntime::TimingKind
COPY_MAPPABLE	legion_runtime/legion.h	/^        COPY_MAPPABLE,$/;"	e	enum:LegionRuntime::HighLevel::Mappable::MappableKind
COPY_OPERATION	legion_runtime/legion_logging.h	/^        COPY_OPERATION = 1,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationKind
COPY_OP_ALLOC	legion_runtime/legion_allocation.h	/^      COPY_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
COPY_READY	legion_runtime/legion_logging.h	/^    COPY_READY = 19,$/;"	e	enum:LegionRuntime::TimingKind
COPY_TO_CALL	legion_runtime/region_tree.h	/^      COPY_TO_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CPU_BASE_LEAF	test/circuit.h	/^  static const bool CPU_BASE_LEAF = true;$/;"	m	class:CalcNewCurrentsTask
CPU_BASE_LEAF	test/circuit.h	/^  static const bool CPU_BASE_LEAF = true;$/;"	m	class:DistributeChargeTask
CPU_BASE_LEAF	test/circuit.h	/^  static const bool CPU_BASE_LEAF = true;$/;"	m	class:UpdateVoltagesTask
CREATE_ALLOC_MSGID	legion_runtime/lowlevel.cc	/^      CREATE_ALLOC_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
CREATE_ALLOC_RPLID	legion_runtime/lowlevel.cc	/^      CREATE_ALLOC_RPLID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
CREATE_INSTANCE_CALL	legion_runtime/region_tree.h	/^      CREATE_INSTANCE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CREATE_INST_MSGID	legion_runtime/lowlevel.cc	/^      CREATE_INST_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
CREATE_INST_RPLID	legion_runtime/lowlevel.cc	/^      CREATE_INST_RPLID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
CREATE_NODE_CALL	legion_runtime/region_tree.h	/^      CREATE_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CREATE_REDUCTION_CALL	legion_runtime/region_tree.h	/^      CREATE_REDUCTION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CRTC_ADDR	dev/vga.c	31;"	d	file:
CRTC_DATA	dev/vga.c	32;"	d	file:
CTX_SWITCH_TRIALS	test/benchmark.c	689;"	d	file:
CUDAPREFIX	legion_runtime/accessor.h	1008;"	d
CUDAPREFIX	legion_runtime/accessor.h	20;"	d
CUDAPREFIX	legion_runtime/accessor.h	22;"	d
CURR_LOGICAL_ALLOC	legion_runtime/legion_allocation.h	/^      CURR_LOGICAL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
CURR_PHYSICAL_ALLOC	legion_runtime/legion_allocation.h	/^      CURR_PHYSICAL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
CURSOR_HIGH	dev/vga.c	34;"	d	file:
CURSOR_LOW	dev/vga.c	33;"	d	file:
CURSOR_REG_OFFSET	arch/k1om/xeon_phi.c	48;"	d	file:
CXX_DEBUG	cxx/cxxinit.c	30;"	d	file:
CXX_PRINT	cxx/cxxinit.c	31;"	d	file:
CalcNewCurrentsTask	test/circuit.h	/^class CalcNewCurrentsTask : public IndexLauncher {$/;"	c
CalcNewCurrentsTask	test/circuit_cpu.cc	/^CalcNewCurrentsTask::CalcNewCurrentsTask(LogicalPartition lp_pvt_wires,$/;"	f	class:CalcNewCurrentsTask
CallKind	legion_runtime/region_tree.h	/^    enum CallKind {$/;"	g	namespace:LegionRuntime::HighLevel
CallRecord	legion_runtime/region_tree.h	/^        CallRecord(int k)$/;"	f	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
CallRecord	legion_runtime/region_tree.h	/^        CallRecord(void)$/;"	f	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
CallRecord	legion_runtime/region_tree.h	/^      struct CallRecord {$/;"	s	class:LegionRuntime::HighLevel::RegionTreeForest
CallS	lua_src/lapi.c	/^struct CallS {  \/* data to `f_call' *\/$/;"	s	file:
Category	legion_runtime/utilities.h	/^      Category(const std::string& name)$/;"	f	class:LegionRuntime::Logger::Category
Category	legion_runtime/utilities.h	/^    class Category {$/;"	c	class:LegionRuntime::Logger
CheckTask	test/circuit.h	/^class CheckTask : public IndexLauncher {$/;"	c
CheckTask	test/circuit_cpu.cc	/^CheckTask::CheckTask(LogicalPartition lp,$/;"	f	class:CheckTask
ChildInfo	legion_runtime/region_tree.h	/^        ChildInfo(bool c, const FieldMask &m)$/;"	f	struct:LegionRuntime::HighLevel::CompositeNode::ChildInfo
ChildInfo	legion_runtime/region_tree.h	/^        ChildInfo(void)$/;"	f	struct:LegionRuntime::HighLevel::CompositeNode::ChildInfo
ChildInfo	legion_runtime/region_tree.h	/^      struct ChildInfo {$/;"	s	class:LegionRuntime::HighLevel::CompositeNode
ChildState	legion_runtime/region_tree.h	/^    struct ChildState {$/;"	s	namespace:LegionRuntime::HighLevel
ChunkInfo	legion_runtime/activemsg.cc	/^    ChunkInfo(void *base, int c, size_t size)$/;"	f	struct:ActiveMessageEndpoint::ChunkInfo
ChunkInfo	legion_runtime/activemsg.cc	/^    ChunkInfo(void) : base_ptr(NULL), chunks(0), total_size(0) { }$/;"	f	struct:ActiveMessageEndpoint::ChunkInfo
ChunkInfo	legion_runtime/activemsg.cc	/^  struct ChunkInfo {$/;"	s	class:ActiveMessageEndpoint	file:
Circuit	test/circuit.h	/^struct Circuit {$/;"	s
CircuitMapper	test/circuit_mapper.cc	/^CircuitMapper::CircuitMapper(Machine *m, HighLevelRuntime *rt, Processor p)$/;"	f	class:CircuitMapper
CircuitMapper	test/circuit_mapper.h	/^class CircuitMapper : public DefaultMapper {$/;"	c
CircuitPiece	test/circuit.h	/^struct CircuitPiece {$/;"	s
CircuitVariants	test/circuit.h	/^enum CircuitVariants {$/;"	g
ClearTimerRequestArgs	legion_runtime/lowlevel.cc	/^    struct ClearTimerRequestArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
ClearTimerRequestMessage	legion_runtime/lowlevel.cc	/^				      handle_clear_timer_request> ClearTimerRequestMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
Clock	legion_runtime/utilities.h	/^    class Clock {$/;"	c	namespace:LegionRuntime::LowLevel
CloseInfo	legion_runtime/region_tree.h	/^      CloseInfo(const FieldMask &m, TreeCloseImpl *impl)$/;"	f	struct:LegionRuntime::HighLevel::CloseInfo
CloseInfo	legion_runtime/region_tree.h	/^      CloseInfo(void) { }$/;"	f	struct:LegionRuntime::HighLevel::CloseInfo
CloseInfo	legion_runtime/region_tree.h	/^    struct CloseInfo {$/;"	s	namespace:LegionRuntime::HighLevel
CloseOp	legion_runtime/legion_ops.cc	/^    CloseOp::CloseOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
CloseOp	legion_runtime/legion_ops.cc	/^    CloseOp::CloseOp(const CloseOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
CloseOp	legion_runtime/legion_ops.h	/^    class CloseOp : public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
CoherenceProperty	legion_runtime/legion_types.h	/^    enum CoherenceProperty {$/;"	g	namespace:LegionRuntime::HighLevel
CoherentData	legion_runtime/lowlevel_impl.h	/^      struct CoherentData : public StaticData {$/;"	s	class:LegionRuntime::LowLevel::IndexSpace::Impl
CoherentData	legion_runtime/lowlevel_impl.h	/^      typedef typename T::CoherentData CoherentData;$/;"	t	class:LegionRuntime::LowLevel::ExclusiveAccess
CoherentData	legion_runtime/lowlevel_impl.h	/^      typedef typename T::CoherentData CoherentData;$/;"	t	class:LegionRuntime::LowLevel::SharedAccess
Collectable	legion_runtime/garbage_collection.h	/^      Collectable(unsigned init = 0)$/;"	f	class:LegionRuntime::HighLevel::Collectable
Collectable	legion_runtime/garbage_collection.h	/^    class Collectable {$/;"	c	namespace:LegionRuntime::HighLevel
CollectableState	legion_runtime/garbage_collection.cc	/^    CollectableState::CollectableState(void)$/;"	f	class:LegionRuntime::HighLevel::CollectableState
CollectableState	legion_runtime/garbage_collection.h	/^    class CollectableState {$/;"	c	namespace:LegionRuntime::HighLevel
Color	legion_runtime/legion_types.h	/^    typedef unsigned int Color;$/;"	t	namespace:LegionRuntime::HighLevel
ColoredPoints	legion_runtime/legion.h	/^    struct ColoredPoints {$/;"	s	namespace:LegionRuntime::HighLevel
Coloring	legion_runtime/legion_types.h	/^    typedef std::map<Color,ColoredPoints<ptr_t> > Coloring;$/;"	t	namespace:LegionRuntime::HighLevel
ColoringSerializer	legion_runtime/legion.cc	/^    ColoringSerializer::ColoringSerializer(const Coloring &c)$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
ColoringSerializer	legion_runtime/legion.h	/^      ColoringSerializer(void) { }$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
ColoringSerializer	legion_runtime/legion.h	/^    class ColoringSerializer {$/;"	c	namespace:LegionRuntime::HighLevel
CompositeCloser	legion_runtime/region_tree.cc	/^    CompositeCloser::CompositeCloser(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
CompositeCloser	legion_runtime/region_tree.cc	/^    CompositeCloser::CompositeCloser(const CompositeCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
CompositeCloser	legion_runtime/region_tree.h	/^    struct CompositeCloser {$/;"	s	namespace:LegionRuntime::HighLevel
CompositeNode	legion_runtime/region_tree.cc	/^    CompositeNode::CompositeNode(RegionTreeNode *logical, CompositeNode *par)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
CompositeNode	legion_runtime/region_tree.cc	/^    CompositeNode::CompositeNode(const CompositeNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
CompositeNode	legion_runtime/region_tree.h	/^    class CompositeNode : public Collectable {$/;"	c	namespace:LegionRuntime::HighLevel
CompositeView	legion_runtime/region_tree.cc	/^    CompositeView::CompositeView(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
CompositeView	legion_runtime/region_tree.cc	/^    CompositeView::CompositeView(const CompositeView &rhs)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
CompositeView	legion_runtime/region_tree.h	/^    class CompositeView : public InstanceView {$/;"	c	namespace:LegionRuntime::HighLevel
ConsControl	lua_src/lparser.c	/^struct ConsControl {$/;"	s	file:
Const	legion_runtime/accessor.h	/^        Const(T _value) : value(_value) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Const
Const	legion_runtime/accessor.h	/^        Const(T _value) { assert(_value == val); }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Const
Const	legion_runtime/accessor.h	/^        Const(void) : value(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Const
Const	legion_runtime/accessor.h	/^        Const(void) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Const
Const	legion_runtime/accessor.h	/^      struct Const {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
Const	legion_runtime/accessor.h	/^      struct Const<T, 0> {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
Context	legion_runtime/legion_types.h	/^    typedef SingleTask* Context;$/;"	t	namespace:LegionRuntime::HighLevel
ContextID	legion_runtime/legion_types.h	/^    typedef unsigned int ContextID;$/;"	t	namespace:LegionRuntime::HighLevel
ContextState	legion_runtime/runtime.h	/^        ContextState(void)$/;"	f	struct:LegionRuntime::HighLevel::ProcessorManager::ContextState
ContextState	legion_runtime/runtime.h	/^      struct ContextState {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
ContiguousPayload	legion_runtime/activemsg.cc	/^ContiguousPayload::ContiguousPayload(void *_srcptr, size_t _size, int _mode)$/;"	f	class:ContiguousPayload
ContiguousPayload	legion_runtime/activemsg.cc	/^class ContiguousPayload : public PayloadSource {$/;"	c	file:
ControlState	legion_runtime/runtime.h	/^      enum ControlState {$/;"	g	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
Copy	legion_runtime/legion.cc	/^    Copy::Copy(void)$/;"	f	class:LegionRuntime::HighLevel::Copy
Copy	legion_runtime/legion.h	/^    class Copy : public Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
CopyCompletionLogger	legion_runtime/lowlevel_dma.cc	/^      CopyCompletionLogger(Event _event) : event(_event) {}$/;"	f	class:LegionRuntime::LowLevel::CopyCompletionLogger
CopyCompletionLogger	legion_runtime/lowlevel_dma.cc	/^    class CopyCompletionLogger : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
CopyLauncher	legion_runtime/legion.cc	/^    CopyLauncher::CopyLauncher(Predicate pred \/*= Predicate::TRUE_PRED*\/,$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
CopyLauncher	legion_runtime/legion.h	/^    struct CopyLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
CopyOp	legion_runtime/legion_ops.cc	/^    CopyOp::CopyOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
CopyOp	legion_runtime/legion_ops.cc	/^    CopyOp::CopyOp(const CopyOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
CopyOp	legion_runtime/legion_ops.h	/^    class CopyOp : public Copy, public SpeculativeOp {$/;"	c	namespace:LegionRuntime::HighLevel
CopyOperation	legion_runtime/shared_lowlevel.cc	/^      CopyOperation(const std::vector<Domain::CopySrcDstField>& _srcs,$/;"	f	class:LegionRuntime::LowLevel::CopyOperation
CopyOperation	legion_runtime/shared_lowlevel.cc	/^    class CopyOperation : public Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
CopyOperation2	legion_runtime/shared_lowlevel.cc	/^          CopyOperation2(RegionInstance::Impl *t, EventImpl *c, TriggerHandle i, $/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2
CopyOperation2	legion_runtime/shared_lowlevel.cc	/^        class CopyOperation2 {$/;"	c	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
CopyRequest	legion_runtime/lowlevel_dma.cc	/^    CopyRequest::CopyRequest(const Domain& _domain,$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
CopyRequest	legion_runtime/lowlevel_dma.cc	/^    CopyRequest::CopyRequest(const void *data, size_t datalen,$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
CopyRequest	legion_runtime/lowlevel_dma.cc	/^    class CopyRequest : public DmaRequest {$/;"	c	namespace:LegionRuntime::LowLevel	file:
CopySrcDstField	legion_runtime/lowlevel.h	/^        CopySrcDstField(RegionInstance i, unsigned o, unsigned s)$/;"	f	struct:LegionRuntime::LowLevel::Domain::CopySrcDstField
CopySrcDstField	legion_runtime/lowlevel.h	/^        CopySrcDstField(void) $/;"	f	struct:LegionRuntime::LowLevel::Domain::CopySrcDstField
CopySrcDstField	legion_runtime/lowlevel.h	/^      struct CopySrcDstField {$/;"	s	class:LegionRuntime::LowLevel::Domain
CreateInstanceArgs	legion_runtime/lowlevel.cc	/^    struct CreateInstanceArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
CreateInstanceMessage	legion_runtime/lowlevel.cc	/^				     handle_create_instance> CreateInstanceMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
CreateInstancePayload	legion_runtime/lowlevel.cc	/^    struct CreateInstancePayload {$/;"	s	namespace:LegionRuntime::LowLevel	file:
CreateInstanceResp	legion_runtime/lowlevel.cc	/^    struct CreateInstanceResp : public BaseReply {$/;"	s	namespace:LegionRuntime::LowLevel	file:
Ctod	nautilus/doprnt.c	144;"	d	file:
DAXPY_TASK_ID	test/custom_mapper.cc	/^  DAXPY_TASK_ID,$/;"	e	enum:TaskIDs	file:
DAXPY_TASK_ID	test/partitioning.cc	/^  DAXPY_TASK_ID,$/;"	e	enum:TaskIDs	file:
DAXPY_TASK_ID	test/privileges.cc	/^  DAXPY_TASK_ID,$/;"	e	enum:TaskIDs	file:
DEBUG	dev/kbd.c	38;"	d	file:
DEBUG	dev/virtio_pci.c	11;"	d	file:
DEBUG	nautilus/vc.c	52;"	d	file:
DEBUG_PRINT	arch/hrt/early_mem.c	32;"	d	file:
DEBUG_PRINT	arch/hrt/early_mem.c	33;"	d	file:
DEBUG_PRINT	arch/hrt/hrt.c	35;"	d	file:
DEBUG_PRINT	arch/hrt/hrt.c	36;"	d	file:
DEBUG_PRINT	arch/k1om/early_mem.c	34;"	d	file:
DEBUG_PRINT	arch/k1om/early_mem.c	35;"	d	file:
DEBUG_PRINT	arch/x64/early_mem.c	32;"	d	file:
DEBUG_PRINT	arch/x64/early_mem.c	33;"	d	file:
DEBUG_PRINT	arch/x64/numa.c	39;"	d	file:
DEBUG_PRINT	arch/x64/numa.c	40;"	d	file:
DEBUG_PRINT	arch/x64/smp.c	34;"	d	file:
DEBUG_PRINT	arch/x64/smp.c	35;"	d	file:
DEBUG_PRINT	cxx/cxxinit.c	26;"	d	file:
DEBUG_PRINT	cxx/cxxinit.c	27;"	d	file:
DEBUG_PRINT	dev/apic.c	38;"	d	file:
DEBUG_PRINT	dev/apic.c	39;"	d	file:
DEBUG_PRINT	dev/hpet.c	34;"	d	file:
DEBUG_PRINT	dev/hpet.c	35;"	d	file:
DEBUG_PRINT	dev/i8254.c	32;"	d	file:
DEBUG_PRINT	dev/i8254.c	33;"	d	file:
DEBUG_PRINT	dev/ioapic.c	30;"	d	file:
DEBUG_PRINT	dev/ioapic.c	31;"	d	file:
DEBUG_PRINT	dev/kbd.c	33;"	d	file:
DEBUG_PRINT	dev/kbd.c	34;"	d	file:
DEBUG_PRINT	dev/pci.c	30;"	d	file:
DEBUG_PRINT	dev/pci.c	31;"	d	file:
DEBUG_PRINT	dev/timer.c	34;"	d	file:
DEBUG_PRINT	dev/timer.c	35;"	d	file:
DEBUG_PRINT	dev/virtio_pci.c	6;"	d	file:
DEBUG_PRINT	dev/virtio_pci.c	7;"	d	file:
DEBUG_PRINT	legion_runtime/shared_lowlevel.cc	127;"	d	file:
DEBUG_PRINT	legion_runtime/shared_lowlevel.cc	128;"	d	file:
DEBUG_PRINT	nautilus/barrier.c	34;"	d	file:
DEBUG_PRINT	nautilus/barrier.c	35;"	d	file:
DEBUG_PRINT	nautilus/condvar.c	36;"	d	file:
DEBUG_PRINT	nautilus/condvar.c	37;"	d	file:
DEBUG_PRINT	nautilus/fpu.c	33;"	d	file:
DEBUG_PRINT	nautilus/fpu.c	34;"	d	file:
DEBUG_PRINT	nautilus/mm/boot_mm.c	35;"	d	file:
DEBUG_PRINT	nautilus/mm/boot_mm.c	36;"	d	file:
DEBUG_PRINT	nautilus/mm/buddy.c	38;"	d	file:
DEBUG_PRINT	nautilus/mm/buddy.c	39;"	d	file:
DEBUG_PRINT	nautilus/mm/kmem.c	38;"	d	file:
DEBUG_PRINT	nautilus/mm/kmem.c	39;"	d	file:
DEBUG_PRINT	nautilus/numa.c	41;"	d	file:
DEBUG_PRINT	nautilus/numa.c	42;"	d	file:
DEBUG_PRINT	nautilus/paging.c	48;"	d	file:
DEBUG_PRINT	nautilus/paging.c	49;"	d	file:
DEBUG_PRINT	nautilus/rwlock.c	31;"	d	file:
DEBUG_PRINT	nautilus/rwlock.c	32;"	d	file:
DEBUG_PRINT	nautilus/smp.c	43;"	d	file:
DEBUG_PRINT	nautilus/smp.c	44;"	d	file:
DEBUG_PRINT	nautilus/thread.c	41;"	d	file:
DEBUG_PRINT	nautilus/thread.c	42;"	d	file:
DEBUG_PRINT	nautilus/vc.c	47;"	d	file:
DEBUG_PRINT	nautilus/vc.c	48;"	d	file:
DEFAULT_CONTEXTS	legion_runtime/legion_types.h	74;"	d
DEFAULT_FUN_CHECK	nautilus/fpu.c	65;"	d	file:
DEFAULT_GC_EPOCH_SIZE	legion_runtime/legion_types.h	118;"	d
DEFAULT_LOGICAL_USER_TIMEOUT	legion_runtime/legion_types.h	111;"	d
DEFAULT_MAPPER_SLOTS	legion_runtime/legion_types.h	69;"	d
DEFAULT_MAX_FILTER_SIZE	legion_runtime/legion_types.h	104;"	d
DEFAULT_MAX_MESSAGE_SIZE	legion_runtime/legion_types.h	100;"	d
DEFAULT_MAX_TASK_WINDOW	legion_runtime/legion_types.h	84;"	d
DEFAULT_MIN_TASKS_TO_SCHEDULE	legion_runtime/legion_types.h	88;"	d
DEFAULT_NUM_BLOCKS	test/saxpy_array.cc	44;"	d	file:
DEFAULT_SUPERSCALAR_WIDTH	legion_runtime/legion_types.h	93;"	d
DEFERRED_FREE_COUNT	legion_runtime/activemsg.cc	/^static const int DEFERRED_FREE_COUNT = 128;$/;"	v	file:
DEFER_COLLECT_USER_CALL	legion_runtime/region_tree.h	/^      DEFER_COLLECT_USER_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
DEFINE_ACPI_GLOBALS	acpi/acpica/utglobal.c	45;"	d	file:
DELAY	test/benchmark.h	33;"	d
DELAY	test/benchmark.h	66;"	d
DELETION_OPERATION	legion_runtime/legion_logging.h	/^        DELETION_OPERATION = 3,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationKind
DELETION_OP_ALLOC	legion_runtime/legion_allocation.h	/^      DELETION_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
DELTAT	test/circuit.h	34;"	d
DESTROY_INST_MSGID	legion_runtime/lowlevel.cc	/^      DESTROY_INST_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
DESTROY_LOCK_MSGID	legion_runtime/lowlevel.cc	/^      DESTROY_LOCK_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
DIM	legion_runtime/arrays.h	/^      enum { DIM = 1 };$/;"	e	enum:LegionRuntime::Arrays::Point::__anon1
DISTRIBUTED_ADD_REMOTE	legion_runtime/runtime.h	/^        DISTRIBUTED_ADD_REMOTE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
DISTRIBUTED_REMOVE_REMOTE	legion_runtime/runtime.h	/^        DISTRIBUTED_REMOVE_REMOTE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
DISTRIBUTED_REMOVE_RESOURCE	legion_runtime/runtime.h	/^        DISTRIBUTED_REMOVE_RESOURCE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
DISTRIBUTE_CHARGE_TASK_ID	test/circuit.h	/^  DISTRIBUTE_CHARGE_TASK_ID,$/;"	e	enum:__anon40
DLMSG	lua_src/loadlib.c	226;"	d	file:
DMAActiveMessageIDs	legion_runtime/lowlevel_dma.h	/^    enum DMAActiveMessageIDs {$/;"	g	namespace:LegionRuntime::LowLevel
DMAQueue	legion_runtime/shared_lowlevel.cc	/^    DMAQueue::DMAQueue(unsigned num_threads)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
DMAQueue	legion_runtime/shared_lowlevel.cc	/^    class DMAQueue {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DPRINT1	legion_runtime/shared_lowlevel.cc	132;"	d	file:
DPRINT1	legion_runtime/shared_lowlevel.cc	168;"	d	file:
DPRINT2	legion_runtime/shared_lowlevel.cc	140;"	d	file:
DPRINT2	legion_runtime/shared_lowlevel.cc	169;"	d	file:
DPRINT3	legion_runtime/shared_lowlevel.cc	148;"	d	file:
DPRINT3	legion_runtime/shared_lowlevel.cc	170;"	d	file:
DPRINT4	legion_runtime/shared_lowlevel.cc	156;"	d	file:
DPRINT4	legion_runtime/shared_lowlevel.cc	171;"	d	file:
DRIVER_NAME	test/hpcg/hpcg-main.cc	/^const char DRIVER_NAME[] = "lgn-hpcg";$/;"	m	namespace:__anon37	file:
DRIVER_SUBVER	test/hpcg/hpcg-main.cc	/^const int DRIVER_SUBVER  = 0;$/;"	m	namespace:__anon37	file:
DRIVER_VER	test/hpcg/hpcg-main.cc	/^const int DRIVER_VER     = 1;$/;"	m	namespace:__anon37	file:
DebugMapper	legion_runtime/alt_mappers.cc	/^    DebugMapper::DebugMapper(Machine *m, HighLevelRuntime *rt, Processor local)$/;"	f	class:LegionRuntime::HighLevel::DebugMapper
DebugMapper	legion_runtime/alt_mappers.h	/^    class DebugMapper : public DefaultMapper {$/;"	c	namespace:LegionRuntime::HighLevel
DefaultMapper	legion_runtime/default_mapper.cc	/^    DefaultMapper::DefaultMapper(Machine *m, HighLevelRuntime *rt, $/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
DefaultMapper	legion_runtime/default_mapper.cc	/^    DefaultMapper::DefaultMapper(const DefaultMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
DefaultMapper	legion_runtime/default_mapper.h	/^    class DefaultMapper : public Mapper {$/;"	c	namespace:LegionRuntime::HighLevel
DeferredBarrierArrival	legion_runtime/lowlevel.cc	/^      DeferredBarrierArrival(Barrier _barrier, int _delta)$/;"	f	class:LegionRuntime::LowLevel::DeferredBarrierArrival
DeferredBarrierArrival	legion_runtime/lowlevel.cc	/^    class DeferredBarrierArrival : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredCompleteArgs	legion_runtime/legion_ops.h	/^      struct DeferredCompleteArgs {$/;"	s	class:LegionRuntime::HighLevel::Operation
DeferredEventTrigger	legion_runtime/lowlevel.cc	/^      DeferredEventTrigger(Event _after_event)$/;"	f	class:LegionRuntime::LowLevel::DeferredEventTrigger
DeferredEventTrigger	legion_runtime/lowlevel.cc	/^    class DeferredEventTrigger : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredFutureMapSetArgs	legion_runtime/runtime.h	/^      struct DeferredFutureMapSetArgs {$/;"	s	class:LegionRuntime::HighLevel::Runtime
DeferredFutureSetArgs	legion_runtime/runtime.h	/^      struct DeferredFutureSetArgs {$/;"	s	class:LegionRuntime::HighLevel::Runtime
DeferredInstDestroy	legion_runtime/lowlevel.cc	/^      DeferredInstDestroy(RegionInstance::Impl *i) : impl(i) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
DeferredInstDestroy	legion_runtime/lowlevel.cc	/^    class DeferredInstDestroy : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredInstDestroy	legion_runtime/shared_lowlevel.cc	/^      DeferredInstDestroy(RegionInstance::Impl *i) : impl(i) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
DeferredInstDestroy	legion_runtime/shared_lowlevel.cc	/^    class DeferredInstDestroy : public Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredLockDestruction	legion_runtime/lowlevel.cc	/^      DeferredLockDestruction(Reservation _lock) : lock(_lock) {}$/;"	f	class:LegionRuntime::LowLevel::DeferredLockDestruction
DeferredLockDestruction	legion_runtime/lowlevel.cc	/^    class DeferredLockDestruction : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredLockRequest	legion_runtime/lowlevel.cc	/^      DeferredLockRequest(Reservation _lock, unsigned _mode, bool _exclusive,$/;"	f	class:LegionRuntime::LowLevel::DeferredLockRequest
DeferredLockRequest	legion_runtime/lowlevel.cc	/^    class DeferredLockRequest : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredMappingArgs	legion_runtime/legion_ops.h	/^      struct DeferredMappingArgs {$/;"	s	class:LegionRuntime::HighLevel::Operation
DeferredRecycleArgs	legion_runtime/runtime.h	/^      struct DeferredRecycleArgs {$/;"	s	class:LegionRuntime::HighLevel::Runtime
DeferredSliceArgs	legion_runtime/legion_tasks.h	/^      struct DeferredSliceArgs {$/;"	s	class:LegionRuntime::HighLevel::DeferredSlicer
DeferredSlicer	legion_runtime/legion_tasks.cc	/^    DeferredSlicer::DeferredSlicer(MultiTask *own)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
DeferredSlicer	legion_runtime/legion_tasks.cc	/^    DeferredSlicer::DeferredSlicer(const DeferredSlicer &rhs)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
DeferredSlicer	legion_runtime/legion_tasks.h	/^    class DeferredSlicer {$/;"	c	namespace:LegionRuntime::HighLevel
DeferredTaskSpawn	legion_runtime/lowlevel.cc	/^      DeferredTaskSpawn(Processor::Impl *_proc, Task *_task) $/;"	f	class:LegionRuntime::LowLevel::DeferredTaskSpawn
DeferredTaskSpawn	legion_runtime/lowlevel.cc	/^    class DeferredTaskSpawn : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredTriggerArgs	legion_runtime/runtime.h	/^      struct DeferredTriggerArgs {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
DeferredUnlockRequest	legion_runtime/lowlevel.cc	/^      DeferredUnlockRequest(Reservation _lock)$/;"	f	class:LegionRuntime::LowLevel::DeferredUnlockRequest
DeferredUnlockRequest	legion_runtime/lowlevel.cc	/^    class DeferredUnlockRequest : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DelayedMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      DelayedMemPairCopier(void) {}$/;"	f	class:LegionRuntime::LowLevel::DelayedMemPairCopier
DelayedMemPairCopier	legion_runtime/lowlevel_dma.cc	/^    class DelayedMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeletionKind	legion_runtime/legion_ops.h	/^      enum DeletionKind {$/;"	g	class:LegionRuntime::HighLevel::DeletionOp
DeletionOp	legion_runtime/legion_ops.cc	/^    DeletionOp::DeletionOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
DeletionOp	legion_runtime/legion_ops.cc	/^    DeletionOp::DeletionOp(const DeletionOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
DeletionOp	legion_runtime/legion_ops.h	/^    class DeletionOp : public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
DenseSubrectIterator	legion_runtime/arrays.h	/^      typedef GenericDenseSubrectIterator<Blockify<DIM> > DenseSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Blockify
DenseSubrectIterator	legion_runtime/arrays.h	/^      typedef GenericDenseSubrectIterator<Linearization<DIM> > DenseSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Linearization
DenseSubrectIterator	legion_runtime/arrays.h	/^      typedef GenericDenseSubrectIterator<Mapping<IDIM, ODIM> > DenseSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Mapping
DependenceRecord	legion_runtime/legion_ops.h	/^        DependenceRecord(unsigned op1, unsigned op2,$/;"	f	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
DependenceRecord	legion_runtime/legion_ops.h	/^      struct DependenceRecord {$/;"	s	class:LegionRuntime::HighLevel::MustEpochOp
DependenceRecord	legion_runtime/legion_trace.h	/^        DependenceRecord(int idx)$/;"	f	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
DependenceRecord	legion_runtime/legion_trace.h	/^        DependenceRecord(int op_idx, int pidx, int nidx,$/;"	f	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
DependenceRecord	legion_runtime/legion_trace.h	/^      struct DependenceRecord {$/;"	s	class:LegionRuntime::HighLevel::LegionTrace
DependenceType	legion_runtime/legion_types.h	/^    enum DependenceType {$/;"	g	namespace:LegionRuntime::HighLevel
DerezCheck	legion_runtime/legion_utilities.h	/^      DerezCheck(DerezCheck &rhs) : derez(rhs.derez) { assert(false); }$/;"	f	class:LegionRuntime::HighLevel::DerezCheck
DerezCheck	legion_runtime/legion_utilities.h	/^      DerezCheck(Deserializer &r) : derez(r) { derez.begin_context(); }$/;"	f	class:LegionRuntime::HighLevel::DerezCheck
DerezCheck	legion_runtime/legion_utilities.h	/^    class DerezCheck {$/;"	c	namespace:LegionRuntime::HighLevel
Derived	legion_runtime/legion.h	/^        struct Derived : T, Fallback { };$/;"	s	struct:LegionRuntime::HighLevel::LegionSerialization::HasSerialize
Deserializer	legion_runtime/legion_utilities.h	/^      Deserializer(const Deserializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
Deserializer	legion_runtime/legion_utilities.h	/^      Deserializer(const void *buf, size_t buffer_size)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
Deserializer	legion_runtime/legion_utilities.h	/^    class Deserializer {$/;"	c	namespace:LegionRuntime::HighLevel
DestroyInstanceArgs	legion_runtime/lowlevel.cc	/^    struct DestroyInstanceArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
DestroyInstanceMessage	legion_runtime/lowlevel.cc	/^				      handle_destroy_instance> DestroyInstanceMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
DestroyLockMessage	legion_runtime/lowlevel.cc	/^				      handle_destroy_lock> DestroyLockMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
DetailedTimer	legion_runtime/utilities.h	/^    class DetailedTimer {$/;"	c	namespace:LegionRuntime::LowLevel
DetailedTimer	legion_runtime/utilities.h	/^  typedef LowLevel::DetailedTimer DetailedTimer;$/;"	t	namespace:LegionRuntime
Direction	legion_runtime/rectangle_set.h	/^      enum Direction {$/;"	g	class:LegionRuntime::HighLevel::Segment
DistributeChargeTask	test/circuit.h	/^class DistributeChargeTask : public IndexLauncher {$/;"	c
DistributeChargeTask	test/circuit_cpu.cc	/^DistributeChargeTask::DistributeChargeTask(LogicalPartition lp_pvt_wires,$/;"	f	class:DistributeChargeTask
DistributedCollectable	legion_runtime/garbage_collection.cc	/^    DistributedCollectable::DistributedCollectable(Runtime *rt,$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
DistributedCollectable	legion_runtime/garbage_collection.h	/^    class DistributedCollectable : public CollectableState {$/;"	c	namespace:LegionRuntime::HighLevel
DistributedID	legion_runtime/legion_types.h	/^    typedef unsigned int DistributedID;$/;"	t	namespace:LegionRuntime::HighLevel
DmaRequest	legion_runtime/lowlevel_dma.cc	/^      DmaRequest(int _priority, Event _after_copy) $/;"	f	class:LegionRuntime::LowLevel::DmaRequest
DmaRequest	legion_runtime/lowlevel_dma.cc	/^    class DmaRequest {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DmaRequestQueue	legion_runtime/lowlevel_dma.cc	/^    DmaRequestQueue::DmaRequestQueue(void)$/;"	f	class:LegionRuntime::LowLevel::DmaRequestQueue
DmaRequestQueue	legion_runtime/lowlevel_dma.cc	/^    class DmaRequestQueue {$/;"	c	namespace:LegionRuntime::LowLevel	file:
Domain	legion_runtime/legion_types.h	/^    typedef LowLevel::Domain Domain;$/;"	t	namespace:LegionRuntime::HighLevel
Domain	legion_runtime/lowlevel.h	/^      Domain(LegionRuntime::LowLevel::IndexSpace is) : is_id(is.id), dim(0) {}$/;"	f	class:LegionRuntime::LowLevel::Domain
Domain	legion_runtime/lowlevel.h	/^      Domain(const Domain& other) : is_id(other.is_id), dim(other.dim)$/;"	f	class:LegionRuntime::LowLevel::Domain
Domain	legion_runtime/lowlevel.h	/^      Domain(void) : is_id(0), dim(0) {}$/;"	f	class:LegionRuntime::LowLevel::Domain
Domain	legion_runtime/lowlevel.h	/^    class Domain {$/;"	c	namespace:LegionRuntime::LowLevel
DomainColoring	legion_runtime/legion_types.h	/^    typedef std::map<Color,Domain> DomainColoring;$/;"	t	namespace:LegionRuntime::HighLevel
DomainColoringSerializer	legion_runtime/legion.cc	/^    DomainColoringSerializer::DomainColoringSerializer(const DomainColoring &d)$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
DomainColoringSerializer	legion_runtime/legion.h	/^      DomainColoringSerializer(void) { }$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
DomainColoringSerializer	legion_runtime/legion.h	/^    class DomainColoringSerializer {$/;"	c	namespace:LegionRuntime::HighLevel
DomainLinearization	legion_runtime/lowlevel.h	/^      DomainLinearization(const DomainLinearization& other) $/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
DomainLinearization	legion_runtime/lowlevel.h	/^      DomainLinearization(void) : dim(-1), lptr(0) {}$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
DomainLinearization	legion_runtime/lowlevel.h	/^    class DomainLinearization {$/;"	c	namespace:LegionRuntime::LowLevel
DomainPoint	legion_runtime/legion_types.h	/^    typedef LowLevel::DomainPoint DomainPoint;$/;"	t	namespace:LegionRuntime::HighLevel
DomainPoint	legion_runtime/lowlevel.h	/^      DomainPoint(const DomainPoint &rhs) : dim(rhs.dim)$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
DomainPoint	legion_runtime/lowlevel.h	/^      DomainPoint(int index) : dim(0) { point_data[0] = index; }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
DomainPoint	legion_runtime/lowlevel.h	/^      DomainPoint(void) : dim(0) { point_data[0] = 0; }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
DomainPoint	legion_runtime/lowlevel.h	/^    class DomainPoint {$/;"	c	namespace:LegionRuntime::LowLevel
DomainPointIterator	legion_runtime/lowlevel.h	/^        DomainPointIterator(const Domain& d) $/;"	f	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
DomainPointIterator	legion_runtime/lowlevel.h	/^      class DomainPointIterator {$/;"	c	class:LegionRuntime::LowLevel::Domain
DomainSplit	legion_runtime/legion.h	/^        DomainSplit(Domain d, Processor p, $/;"	f	struct:LegionRuntime::HighLevel::Mapper::DomainSplit
DomainSplit	legion_runtime/legion.h	/^      struct DomainSplit {$/;"	s	class:LegionRuntime::HighLevel::Mapper
DotProdAccumulate	test/hpcg/dotprod-accumulate.h	/^class DotProdAccumulate {$/;"	c	namespace:lgncg
DriverParams	test/hpcg/hpcg-main.cc	/^    DriverParams(void) {$/;"	f	struct:__anon37::DriverParams
DriverParams	test/hpcg/hpcg-main.cc	/^struct DriverParams {$/;"	s	namespace:__anon37	file:
DumpBlock	lua_src/ldump.c	/^static void DumpBlock(const void* b, size_t size, DumpState* D)$/;"	f	file:
DumpChar	lua_src/ldump.c	/^static void DumpChar(int y, DumpState* D)$/;"	f	file:
DumpCode	lua_src/ldump.c	76;"	d	file:
DumpConstants	lua_src/ldump.c	/^static void DumpConstants(const Proto* f, DumpState* D)$/;"	f	file:
DumpDebug	lua_src/ldump.c	/^static void DumpDebug(const Proto* f, DumpState* D)$/;"	f	file:
DumpFunction	lua_src/ldump.c	/^static void DumpFunction(const Proto* f, DumpState* D)$/;"	f	file:
DumpHeader	lua_src/ldump.c	/^static void DumpHeader(DumpState* D)$/;"	f	file:
DumpInt	lua_src/ldump.c	/^static void DumpInt(int x, DumpState* D)$/;"	f	file:
DumpMem	lua_src/ldump.c	26;"	d	file:
DumpNumber	lua_src/ldump.c	/^static void DumpNumber(lua_Number x, DumpState* D)$/;"	f	file:
DumpState	lua_src/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon47	file:
DumpString	lua_src/ldump.c	/^static void DumpString(const TString* s, DumpState* D)$/;"	f	file:
DumpUpvalues	lua_src/ldump.c	/^static void DumpUpvalues(const Proto* f, DumpState* D)$/;"	f	file:
DumpVar	lua_src/ldump.c	27;"	d	file:
DumpVector	lua_src/ldump.c	/^static void DumpVector(const void* b, int n, size_t size, DumpState* D)$/;"	f	file:
DynamicMapping	legion_runtime/arrays.h	/^      DynamicMapping(const T& _t) : t(_t) {}$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
DynamicMapping	legion_runtime/arrays.h	/^      DynamicMapping(void) {}$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
DynamicMapping	legion_runtime/arrays.h	/^    class DynamicMapping : public Mapping<T::IDIM, T::ODIM> {$/;"	c	namespace:LegionRuntime::Arrays
DynamicPartTest	legion_runtime/region_tree.cc	/^    RegionTreeForest::DynamicPartTest::DynamicPartTest(IndexSpaceNode *par,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
DynamicPartTest	legion_runtime/region_tree.h	/^      class DynamicPartTest {$/;"	c	class:LegionRuntime::HighLevel::RegionTreeForest
DynamicSpaceTest	legion_runtime/region_tree.cc	/^    RegionTreeForest::DynamicSpaceTest::DynamicSpaceTest(IndexPartNode *par,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicSpaceTest
DynamicSpaceTest	legion_runtime/region_tree.h	/^      class DynamicSpaceTest {$/;"	c	class:LegionRuntime::HighLevel::RegionTreeForest
DynamicTable	legion_runtime/lowlevel_impl.h	/^    DynamicTable<ALLOCATOR>::DynamicTable(void)$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
DynamicTable	legion_runtime/lowlevel_impl.h	/^    class DynamicTable {$/;"	c	namespace:LegionRuntime::LowLevel
DynamicTableAllocator	legion_runtime/lowlevel_impl.h	/^    class DynamicTableAllocator {$/;"	c	namespace:LegionRuntime::LowLevel
DynamicTableFreeList	legion_runtime/lowlevel_impl.h	/^    DynamicTableFreeList<ALLOCATOR>::DynamicTableFreeList(DynamicTable<ALLOCATOR>& _table, int _owner)$/;"	f	class:LegionRuntime::LowLevel::DynamicTableFreeList
DynamicTableFreeList	legion_runtime/lowlevel_impl.h	/^    class DynamicTableFreeList {$/;"	c	namespace:LegionRuntime::LowLevel
DynamicTableNode	legion_runtime/lowlevel_impl.h	/^      DynamicTableNode(int _level, IT _first_index, IT _last_index)$/;"	f	struct:LegionRuntime::LowLevel::DynamicTableNode
DynamicTableNode	legion_runtime/lowlevel_impl.h	/^      struct DynamicTableNode : public DynamicTableNodeBase<LT, IT> {$/;"	s	namespace:LegionRuntime::LowLevel
DynamicTableNodeBase	legion_runtime/lowlevel_impl.h	/^      DynamicTableNodeBase(int _level, IT _first_index, IT _last_index)$/;"	f	struct:LegionRuntime::LowLevel::DynamicTableNodeBase
DynamicTableNodeBase	legion_runtime/lowlevel_impl.h	/^    struct DynamicTableNodeBase {$/;"	s	namespace:LegionRuntime::LowLevel
EMIT	nautilus/fmtout.c	82;"	d	file:
END_DEPENDENCE_ANALYSIS	legion_runtime/legion_logging.h	/^    END_DEPENDENCE_ANALYSIS = 1,$/;"	e	enum:LegionRuntime::TimingKind
END_EXECUTION	legion_runtime/legion_logging.h	/^    END_EXECUTION = 9,$/;"	e	enum:LegionRuntime::TimingKind
END_GC	legion_runtime/legion_logging.h	/^    END_GC = 23,$/;"	e	enum:LegionRuntime::TimingKind
END_MAPPING	legion_runtime/legion_logging.h	/^    END_MAPPING = 5,$/;"	e	enum:LegionRuntime::TimingKind
END_POST_EXEC	legion_runtime/legion_logging.h	/^    END_POST_EXEC = 25,$/;"	e	enum:LegionRuntime::TimingKind
END_PRE_MAPPING	legion_runtime/legion_logging.h	/^    END_PRE_MAPPING = 3,$/;"	e	enum:LegionRuntime::TimingKind
END_SCHEDULING	legion_runtime/legion_logging.h	/^    END_SCHEDULING = 17,$/;"	e	enum:LegionRuntime::TimingKind
END_SLICING	legion_runtime/legion_logging.h	/^    END_SLICING = 7,$/;"	e	enum:LegionRuntime::TimingKind
END_WINDOW_WAIT	legion_runtime/legion_logging.h	/^    END_WINDOW_WAIT = 15,$/;"	e	enum:LegionRuntime::TimingKind
EOFMARK	lua_src/lua.c	245;"	d	file:
ERRFUNC	lua_src/loadlib.c	103;"	d	file:
ERRLIB	lua_src/loadlib.c	102;"	d	file:
ERROR	dev/kbd.c	37;"	d	file:
ERROR	dev/virtio_pci.c	12;"	d	file:
ERROR	nautilus/vc.c	51;"	d	file:
ERRORSTACKSIZE	lua_src/ldo.c	165;"	d	file:
ERROR_ACCESSING_EMPTY_FUTURE	legion_runtime/legion_types.h	/^      ERROR_ACCESSING_EMPTY_FUTURE = 87,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ACQUIRE_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_ACQUIRE_MISMATCH = 95,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ALIASED_INTRA_TASK_REGIONS	legion_runtime/legion_types.h	/^      ERROR_ALIASED_INTRA_TASK_REGIONS = 53,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ALIASED_REGION_REQUIREMENTS	legion_runtime/legion_types.h	/^      ERROR_ALIASED_REGION_REQUIREMENTS = 115,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_FIELD	legion_runtime/legion_types.h	/^      ERROR_BAD_FIELD = 26,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_FIELD_PRIVILEGES	legion_runtime/legion_types.h	/^      ERROR_BAD_FIELD_PRIVILEGES = 18,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_INDEX_PATH	legion_runtime/legion_types.h	/^      ERROR_BAD_INDEX_PATH = 22,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_INDEX_PRIVILEGES	legion_runtime/legion_types.h	/^      ERROR_BAD_INDEX_PRIVILEGES = 17,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_PARENT_INDEX	legion_runtime/legion_types.h	/^      ERROR_BAD_PARENT_INDEX = 21,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_PARENT_REGION	legion_runtime/legion_types.h	/^      ERROR_BAD_PARENT_REGION = 23,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_PARTITION_PATH	legion_runtime/legion_types.h	/^      ERROR_BAD_PARTITION_PATH = 25,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_PARTITION_PRIVILEGES	legion_runtime/legion_types.h	/^      ERROR_BAD_PARTITION_PRIVILEGES = 20,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_PROJECTION_USE	legion_runtime/legion_types.h	/^      ERROR_BAD_PROJECTION_USE = 59,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_REGION_PATH	legion_runtime/legion_types.h	/^      ERROR_BAD_REGION_PATH = 24,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_REGION_PRIVILEGES	legion_runtime/legion_types.h	/^      ERROR_BAD_REGION_PRIVILEGES = 19,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_REGION_TYPE	legion_runtime/legion_types.h	/^      ERROR_BAD_REGION_TYPE = 27,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_CONFLICTING_PARENT_MAPPING_DEADLOCK	legion_runtime/legion_types.h	/^      ERROR_CONFLICTING_PARENT_MAPPING_DEADLOCK = 101,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_CONFLICTING_SIBLING_MAPPING_DEADLOCK	legion_runtime/legion_types.h	/^      ERROR_CONFLICTING_SIBLING_MAPPING_DEADLOCK = 102,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_COPY_REQUIREMENTS_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_COPY_REQUIREMENTS_MISMATCH = 89,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_COPY_SPACE_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_COPY_SPACE_MISMATCH = 91,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DISJOINTNESS_TEST_FAILURE	legion_runtime/legion_types.h	/^      ERROR_DISJOINTNESS_TEST_FAILURE = 71,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DOMAIN_DIM_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_DOMAIN_DIM_MISMATCH = 108,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DUPLICATE_FIELD_ID	legion_runtime/legion_types.h	/^      ERROR_DUPLICATE_FIELD_ID = 5,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DUPLICATE_INSTANCE_FIELD	legion_runtime/legion_types.h	/^      ERROR_DUPLICATE_INSTANCE_FIELD = 45,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DUPLICATE_PROJECTION_ID	legion_runtime/legion_types.h	/^      ERROR_DUPLICATE_PROJECTION_ID = 9,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DUPLICATE_REDOP_ID	legion_runtime/legion_types.h	/^      ERROR_DUPLICATE_REDOP_ID = 2,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DUPLICATE_TYPE_HANDLE	legion_runtime/legion_types.h	/^      ERROR_DUPLICATE_TYPE_HANDLE = 4,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_EXCEEDED_MAX_CONTEXTS	legion_runtime/legion_types.h	/^      ERROR_EXCEEDED_MAX_CONTEXTS = 94,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_FIELD_SPACE_FIELD_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_FIELD_SPACE_FIELD_MISMATCH = 43,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_IDEMPOTENT_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_IDEMPOTENT_MISMATCH = 75,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ILLEGAL_MUST_PARALLEL_INLINE	legion_runtime/legion_types.h	/^      ERROR_ILLEGAL_MUST_PARALLEL_INLINE = 85,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ILLEGAL_NESTED_TRACE	legion_runtime/legion_types.h	/^      ERROR_ILLEGAL_NESTED_TRACE = 99,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ILLEGAL_PREDICATE_FUTURE	legion_runtime/legion_types.h	/^      ERROR_ILLEGAL_PREDICATE_FUTURE = 88,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INDEPENDENT_SLICES_VIOLATION	legion_runtime/legion_types.h	/^      ERROR_INDEPENDENT_SLICES_VIOLATION = 60,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INNER_LEAF_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_INNER_LEAF_MISMATCH = 97,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_ACCESSOR_REQUESTED	legion_runtime/legion_types.h	/^      ERROR_INVALID_ACCESSOR_REQUESTED = 12,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_ARG_MAP_DESTRUCTION	legion_runtime/legion_types.h	/^      ERROR_INVALID_ARG_MAP_DESTRUCTION = 15,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_COPY_FIELDS_SIZE	legion_runtime/legion_types.h	/^      ERROR_INVALID_COPY_FIELDS_SIZE = 90,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_COPY_PRIVILEGE	legion_runtime/legion_types.h	/^      ERROR_INVALID_COPY_PRIVILEGE = 92,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_DUPLICATE_MAPPING	legion_runtime/legion_types.h	/^      ERROR_INVALID_DUPLICATE_MAPPING = 33,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_FIELD_ACCESSOR_PRIVILEGES	legion_runtime/legion_types.h	/^      ERROR_INVALID_FIELD_ACCESSOR_PRIVILEGES = 73,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_FIELD_ID	legion_runtime/legion_types.h	/^      ERROR_INVALID_FIELD_ID = 104,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_FIELD_PRIVILEGES	legion_runtime/legion_types.h	/^      ERROR_INVALID_FIELD_PRIVILEGES = 98,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_FIELD_SPACE_ENTRY	legion_runtime/legion_types.h	/^      ERROR_INVALID_FIELD_SPACE_ENTRY = 50,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_FIELD_SPACE_REQUEST	legion_runtime/legion_types.h	/^      ERROR_INVALID_FIELD_SPACE_REQUEST = 112,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_IDENTITY_PROJECTION_USE	legion_runtime/legion_types.h	/^      ERROR_INVALID_IDENTITY_PROJECTION_USE = 56,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_DOMAIN	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_DOMAIN = 69,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_PART_COLOR	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_PART_COLOR = 40,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_PART_DOMAIN	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_PART_DOMAIN = 70,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_PART_ENTRY	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_PART_ENTRY = 49,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_PART_HANDLE	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_PART_HANDLE = 42,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_PART_PARENT	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_PART_PARENT = 38,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SPACE_COLOR	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SPACE_COLOR = 39,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SPACE_ENTRY	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SPACE_ENTRY = 48,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SPACE_HANDLE	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SPACE_HANDLE = 41,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SPACE_PARENT	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SPACE_PARENT = 37,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SUBPARTITION_REQUEST	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SUBPARTITION_REQUEST = 111,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SUBSPACE_REQUEST	legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SUBSPACE_REQUEST = 110,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INLINE_ID	legion_runtime/legion_types.h	/^      ERROR_INVALID_INLINE_ID = 84,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INSTANCE_FIELD	legion_runtime/legion_types.h	/^      ERROR_INVALID_INSTANCE_FIELD = 44,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_LOGICAL_SUBPARTITION_REQUEST	legion_runtime/legion_types.h	/^      ERROR_INVALID_LOGICAL_SUBPARTITION_REQUEST = 114,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_LOGICAL_SUBREGION_REQUEST	legion_runtime/legion_types.h	/^      ERROR_INVALID_LOGICAL_SUBREGION_REQUEST = 113,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_MAPPER_DOMAIN_SLICE	legion_runtime/legion_types.h	/^      ERROR_INVALID_MAPPER_DOMAIN_SLICE = 82,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_MAPPER_ID	legion_runtime/legion_types.h	/^      ERROR_INVALID_MAPPER_ID = 76,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_MAPPER_OUTPUT	legion_runtime/legion_types.h	/^      ERROR_INVALID_MAPPER_OUTPUT = 67,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_MAPPING_ACCESS	legion_runtime/legion_types.h	/^      ERROR_INVALID_MAPPING_ACCESS = 35,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PARENT_REQUEST	legion_runtime/legion_types.h	/^      ERROR_INVALID_PARENT_REQUEST = 103,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PARTITION_COLOR	legion_runtime/legion_types.h	/^      ERROR_INVALID_PARTITION_COLOR = 93,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PARTITION_ENTRY	legion_runtime/legion_types.h	/^      ERROR_INVALID_PARTITION_ENTRY = 52,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PARTITION_HANDLE	legion_runtime/legion_types.h	/^      ERROR_INVALID_PARTITION_HANDLE = 62,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PREMAPPED_REGION_LOCATION	legion_runtime/legion_types.h	/^      ERROR_INVALID_PREMAPPED_REGION_LOCATION = 74,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PROCESSOR_NAME	legion_runtime/legion_types.h	/^      ERROR_INVALID_PROCESSOR_NAME = 109,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PROCESSOR_SELECTION	legion_runtime/legion_types.h	/^      ERROR_INVALID_PROCESSOR_SELECTION = 65,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PROJECTION_ID	legion_runtime/legion_types.h	/^      ERROR_INVALID_PROJECTION_ID = 57,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_REDOP_ID	legion_runtime/legion_types.h	/^      ERROR_INVALID_REDOP_ID = 30,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_REGION_ARGUMENT_INDEX	legion_runtime/legion_types.h	/^      ERROR_INVALID_REGION_ARGUMENT_INDEX = 34,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_REGION_ENTRY	legion_runtime/legion_types.h	/^      ERROR_INVALID_REGION_ENTRY = 51,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_REGION_HANDLE	legion_runtime/legion_types.h	/^      ERROR_INVALID_REGION_HANDLE = 61,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_TASK_ID	legion_runtime/legion_types.h	/^      ERROR_INVALID_TASK_ID = 81,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_TREE_ENTRY	legion_runtime/legion_types.h	/^      ERROR_INVALID_TREE_ENTRY = 77,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_TYPE_HANDLE	legion_runtime/legion_types.h	/^      ERROR_INVALID_TYPE_HANDLE = 28,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_UNMAP_OP	legion_runtime/legion_types.h	/^      ERROR_INVALID_UNMAP_OP = 32,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_VARIANT_SELECTION	legion_runtime/legion_types.h	/^      ERROR_INVALID_VARIANT_SELECTION = 66,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_LEAF_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_LEAF_MISMATCH = 64,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_LEAF_TASK_VIOLATION	legion_runtime/legion_types.h	/^      ERROR_LEAF_TASK_VIOLATION = 29,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MAXIMUM_NODES_EXCEEDED	legion_runtime/legion_types.h	/^      ERROR_MAXIMUM_NODES_EXCEEDED = 79,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MAXIMUM_PROCS_EXCEEDED	legion_runtime/legion_types.h	/^      ERROR_MAXIMUM_PROCS_EXCEEDED = 80,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MAX_FIELD_OVERFLOW	legion_runtime/legion_types.h	/^      ERROR_MAX_FIELD_OVERFLOW = 54,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MISSING_DEFAULT_PREDICATE_RESULT	legion_runtime/legion_types.h	/^      ERROR_MISSING_DEFAULT_PREDICATE_RESULT = 116,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MISSING_PARENT_FIELD_ID	legion_runtime/legion_types.h	/^      ERROR_MISSING_PARENT_FIELD_ID = 7,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MISSING_TASK_COLLECTION	legion_runtime/legion_types.h	/^      ERROR_MISSING_TASK_COLLECTION = 55,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MPI_INTEROPERABILITY_NOT_CONFIGURED	legion_runtime/legion_types.h	/^      ERROR_MPI_INTEROPERABILITY_NOT_CONFIGURED = 118,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MUST_EPOCH_FAILURE	legion_runtime/legion_types.h	/^      ERROR_MUST_EPOCH_FAILURE = 107,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_NESTED_MUST_EPOCH	legion_runtime/legion_types.h	/^      ERROR_NESTED_MUST_EPOCH = 105,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_NON_DISJOINT_PARTITION	legion_runtime/legion_types.h	/^      ERROR_NON_DISJOINT_PARTITION = 58,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_NON_DISJOINT_TASK_REGIONS	legion_runtime/legion_types.h	/^      ERROR_NON_DISJOINT_TASK_REGIONS = 72,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_PARENT_TYPE_HANDLE_NONEXISTENT	legion_runtime/legion_types.h	/^      ERROR_PARENT_TYPE_HANDLE_NONEXISTENT = 6,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_PHYSICAL_REGION_UNMAPPED	legion_runtime/legion_types.h	/^      ERROR_PHYSICAL_REGION_UNMAPPED = 13,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_PREDICATE_RESULT_SIZE_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_PREDICATE_RESULT_SIZE_MISMATCH = 117,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_REDUCTION_INITIAL_VALUE_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_REDUCTION_INITIAL_VALUE_MISMATCH = 31,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RELEASE_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_RELEASE_MISMATCH = 96,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RESERVED_MAPPING_ID	legion_runtime/legion_types.h	/^      ERROR_RESERVED_MAPPING_ID = 16,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RESERVED_PROJECTION_ID	legion_runtime/legion_types.h	/^      ERROR_RESERVED_PROJECTION_ID = 8,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RESERVED_REDOP_ID	legion_runtime/legion_types.h	/^      ERROR_RESERVED_REDOP_ID = 1,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RESERVED_TASK_ID	legion_runtime/legion_types.h	/^      ERROR_RESERVED_TASK_ID = 14,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RESERVED_TYPE_HANDLE	legion_runtime/legion_types.h	/^      ERROR_RESERVED_TYPE_HANDLE = 3,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RETURN_SIZE_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_RETURN_SIZE_MISMATCH = 86,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_SEPARATE_UTILITY_PROCS	legion_runtime/legion_types.h	/^      ERROR_SEPARATE_UTILITY_PROCS = 78,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_STALE_INLINE_MAPPING_ACCESS	legion_runtime/legion_types.h	/^      ERROR_STALE_INLINE_MAPPING_ACCESS = 36,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_TRACING_ALLOCATION_WITH_SEPARATE	legion_runtime/legion_types.h	/^      ERROR_TRACING_ALLOCATION_WITH_SEPARATE = 119,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_TYPE_INST_MISMATCH	legion_runtime/legion_types.h	/^      ERROR_TYPE_INST_MISMATCH = 46,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_TYPE_INST_MISSIZE	legion_runtime/legion_types.h	/^      ERROR_TYPE_INST_MISSIZE = 47,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_UNFOLDABLE_REDUCTION_OP	legion_runtime/legion_types.h	/^      ERROR_UNFOLDABLE_REDUCTION_OP = 83,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_UNINITIALIZED_REDUCTION	legion_runtime/legion_types.h	/^      ERROR_UNINITIALIZED_REDUCTION = 68,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_UNMATCHED_END_TRACE	legion_runtime/legion_types.h	/^      ERROR_UNMATCHED_END_TRACE = 100,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_UNMATCHED_MUST_EPOCH	legion_runtime/legion_types.h	/^      ERROR_UNMATCHED_MUST_EPOCH = 106,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_UNREGISTERED_VARIANT	legion_runtime/legion_types.h	/^      ERROR_UNREGISTERED_VARIANT = 10,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_USE_REDUCTION_REGION_REQ	legion_runtime/legion_types.h	/^      ERROR_USE_REDUCTION_REGION_REQ = 11,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_VIRTUAL_MAP_IN_LEAF_TASK	legion_runtime/legion_types.h	/^      ERROR_VIRTUAL_MAP_IN_LEAF_TASK = 63,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ET	legion_runtime/lowlevel_impl.h	/^      typedef _ET ET;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableAllocator
ET	legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::ET ET;$/;"	t	class:LegionRuntime::LowLevel::DynamicTable
ET	legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::ET ET;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableFreeList
EVENT_REFERENCE_ALLOC	legion_runtime/legion_allocation.h	/^      EVENT_REFERENCE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
EVENT_SUBSCRIBE_MSGID	legion_runtime/lowlevel.cc	/^      EVENT_SUBSCRIBE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
EVENT_TRIGGER_MSGID	legion_runtime/lowlevel.cc	/^      EVENT_TRIGGER_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
EXCLUSIVE	legion_runtime/legion_types.h	/^      EXCLUSIVE    = 0,$/;"	e	enum:LegionRuntime::HighLevel::CoherenceProperty
EXCP_MNEMONIC	nautilus/idt.c	41;"	d	file:
EXCP_NAME	nautilus/idt.c	40;"	d	file:
EXECUTED_CHILD_ALLOC	legion_runtime/legion_allocation.h	/^      EXECUTED_CHILD_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
EXECUTING_CHILD_ALLOC	legion_runtime/legion_allocation.h	/^      EXECUTING_CHILD_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ElementMask	legion_runtime/lowlevel.cc	/^    ElementMask::ElementMask(const ElementMask &copy_from, $/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMask	legion_runtime/lowlevel.cc	/^    ElementMask::ElementMask(int _num_elements, int _first_element \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMask	legion_runtime/lowlevel.cc	/^    ElementMask::ElementMask(void)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMask	legion_runtime/lowlevel.h	/^    class ElementMask {$/;"	c	namespace:LegionRuntime::LowLevel
ElementMask	legion_runtime/shared_lowlevel.cc	/^    ElementMask::ElementMask(const ElementMask &copy_from, $/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMask	legion_runtime/shared_lowlevel.cc	/^    ElementMask::ElementMask(int _num_elements, int _first_element \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMask	legion_runtime/shared_lowlevel.cc	/^    ElementMask::ElementMask(void)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMaskImpl	legion_runtime/lowlevel_impl.h	/^    struct ElementMaskImpl {$/;"	s	namespace:LegionRuntime::LowLevel
ElementMaskImpl	legion_runtime/shared_lowlevel.cc	/^    struct ElementMaskImpl {$/;"	s	namespace:LegionRuntime::LowLevel	file:
EndpointManager	legion_runtime/activemsg.cc	/^  EndpointManager(int num_endpoints)$/;"	f	class:EndpointManager
EndpointManager	legion_runtime/activemsg.cc	/^class EndpointManager {$/;"	c	file:
Entry	test/saxpy_array.cc	/^struct Entry {$/;"	s	file:
Enumerator	legion_runtime/legion_types.h	/^    typedef LowLevel::ElementMask::Enumerator Enumerator;$/;"	t	namespace:LegionRuntime::HighLevel
Enumerator	legion_runtime/lowlevel.cc	/^    ElementMask::Enumerator::Enumerator(const ElementMask& _mask, int _start, int _polarity)$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
Enumerator	legion_runtime/lowlevel.h	/^      class Enumerator {$/;"	c	class:LegionRuntime::LowLevel::ElementMask
Enumerator	legion_runtime/shared_lowlevel.cc	/^    ElementMask::Enumerator::Enumerator(const ElementMask& _mask, int _start, int _polarity)$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
Event	legion_runtime/legion_types.h	/^    typedef LowLevel::Event Event;$/;"	t	namespace:LegionRuntime::HighLevel
Event	legion_runtime/lowlevel.h	/^    class Event {$/;"	c	namespace:LegionRuntime::LowLevel
EventGeneration	legion_runtime/shared_lowlevel.cc	/^	typedef unsigned EventGeneration;$/;"	t	class:LegionRuntime::LowLevel::EventImpl	file:
EventImpl	legion_runtime/shared_lowlevel.cc	/^	EventImpl(EventIndex idx, bool activate=false) $/;"	f	class:LegionRuntime::LowLevel::EventImpl
EventImpl	legion_runtime/shared_lowlevel.cc	/^    class EventImpl : public Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
EventIndex	legion_runtime/shared_lowlevel.cc	/^	typedef unsigned EventIndex;$/;"	t	class:LegionRuntime::LowLevel::EventImpl	file:
EventMerger	legion_runtime/lowlevel.cc	/^      EventMerger(Event _finish_event)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
EventMerger	legion_runtime/lowlevel.cc	/^    class EventMerger : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
EventStackEntry	legion_runtime/lowlevel.cc	/^	  EventStackEntry(Thread *_thread, Event _event, EventStackEntry *_next)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry
EventStackEntry	legion_runtime/lowlevel.cc	/^	class EventStackEntry : public Event::Impl::EventWaiter {$/;"	c	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
EventSubscribeArgs	legion_runtime/lowlevel.cc	/^    struct EventSubscribeArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
EventSubscribeMessage	legion_runtime/lowlevel.cc	/^				      handle_event_subscribe> EventSubscribeMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
EventTableAllocator	legion_runtime/lowlevel_impl.h	/^    typedef DynamicTableAllocator<Event::Impl, 10, 8> EventTableAllocator;$/;"	t
EventTraceItem	legion_runtime/lowlevel_impl.h	/^    struct EventTraceItem {$/;"	s	namespace:LegionRuntime::LowLevel
EventTriggerArgs	legion_runtime/lowlevel.cc	/^    struct EventTriggerArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
EventTriggerMessage	legion_runtime/lowlevel.cc	/^				      handle_event_trigger> EventTriggerMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
EventWaiter	legion_runtime/lowlevel_impl.h	/^        EventWaiter(void) { }$/;"	f	class:LegionRuntime::LowLevel::Event::Impl::EventWaiter
EventWaiter	legion_runtime/lowlevel_impl.h	/^      class EventWaiter {$/;"	c	class:LegionRuntime::LowLevel::Event::Impl
ExclusiveAccess	legion_runtime/lowlevel_impl.h	/^      ExclusiveAccess(T* thing_with_data, bool already_held = false)$/;"	f	class:LegionRuntime::LowLevel::ExclusiveAccess
ExclusiveAccess	legion_runtime/lowlevel_impl.h	/^    class ExclusiveAccess {$/;"	c	namespace:LegionRuntime::LowLevel
ExecutionProfile	legion_runtime/legion.h	/^      struct ExecutionProfile {$/;"	s	class:LegionRuntime::HighLevel::Mapper
FALSE_PRED	legion_runtime/legion.cc	/^    const Predicate Predicate::FALSE_PRED = Predicate(false);$/;"	m	class:LegionRuntime::HighLevel::Predicate	file:
FALSE_PRED	legion_runtime/legion.h	/^      static const Predicate FALSE_PRED;$/;"	m	class:LegionRuntime::HighLevel::Predicate
FEMTOS_PER_SEC	dev/hpet.c	42;"	d	file:
FENCE_OPERATION	legion_runtime/legion_logging.h	/^        FENCE_OPERATION = 2,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationKind
FENCE_OP_ALLOC	legion_runtime/legion_allocation.h	/^      FENCE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
FIBONACCI_TASK_ID	test/tasks_and_futures.cc	/^  FIBONACCI_TASK_ID,$/;"	e	enum:TaskIDs	file:
FID_CHARGE	test/circuit.h	/^  FID_CHARGE,$/;"	e	enum:NodeFields
FID_CURRENT	test/circuit.h	/^  FID_CURRENT,$/;"	e	enum:WireFields
FID_DERIV	test/multiple_partitions.cc	/^  FID_DERIV,$/;"	e	enum:FieldIDs	file:
FID_FIELD_A	test/logical_regions.cc	/^  FID_FIELD_A,$/;"	e	enum:FieldIDs	file:
FID_FIELD_B	test/logical_regions.cc	/^  FID_FIELD_B,$/;"	e	enum:FieldIDs	file:
FID_INDUCTANCE	test/circuit.h	/^  FID_INDUCTANCE,$/;"	e	enum:WireFields
FID_IN_LOC	test/circuit.h	/^  FID_IN_LOC,$/;"	e	enum:WireFields
FID_IN_PTR	test/circuit.h	/^  FID_IN_PTR,$/;"	e	enum:WireFields
FID_LAST	test/circuit.h	/^  FID_LAST = (FID_WIRE_VOLTAGE+WIRE_SEGMENTS-1),$/;"	e	enum:WireFields
FID_LEAKAGE	test/circuit.h	/^  FID_LEAKAGE,$/;"	e	enum:NodeFields
FID_LOCATOR	test/circuit.h	/^  FID_LOCATOR,$/;"	e	enum:LocatorFields
FID_NODE_CAP	test/circuit.h	/^  FID_NODE_CAP,$/;"	e	enum:NodeFields
FID_NODE_VOLTAGE	test/circuit.h	/^  FID_NODE_VOLTAGE,$/;"	e	enum:NodeFields
FID_OUT_LOC	test/circuit.h	/^  FID_OUT_LOC,$/;"	e	enum:WireFields
FID_OUT_PTR	test/circuit.h	/^  FID_OUT_PTR,$/;"	e	enum:WireFields
FID_RESISTANCE	test/circuit.h	/^  FID_RESISTANCE,$/;"	e	enum:WireFields
FID_VAL	test/multiple_partitions.cc	/^  FID_VAL,$/;"	e	enum:FieldIDs	file:
FID_WIRE_CAP	test/circuit.h	/^  FID_WIRE_CAP,$/;"	e	enum:WireFields
FID_WIRE_VOLTAGE	test/circuit.h	/^  FID_WIRE_VOLTAGE = (FID_CURRENT+WIRE_SEGMENTS),$/;"	e	enum:WireFields
FID_X	test/custom_mapper.cc	/^  FID_X,$/;"	e	enum:FieldIDs	file:
FID_X	test/partitioning.cc	/^  FID_X,$/;"	e	enum:FieldIDs	file:
FID_X	test/physical_regions.cc	/^  FID_X,$/;"	e	enum:FieldIDs	file:
FID_X	test/privileges.cc	/^  FID_X,$/;"	e	enum:FieldIDs	file:
FID_Y	test/custom_mapper.cc	/^  FID_Y,$/;"	e	enum:FieldIDs	file:
FID_Y	test/partitioning.cc	/^  FID_Y,$/;"	e	enum:FieldIDs	file:
FID_Y	test/physical_regions.cc	/^  FID_Y,$/;"	e	enum:FieldIDs	file:
FID_Y	test/privileges.cc	/^  FID_Y,$/;"	e	enum:FieldIDs	file:
FID_Z	test/custom_mapper.cc	/^  FID_Z,$/;"	e	enum:FieldIDs	file:
FID_Z	test/partitioning.cc	/^  FID_Z,$/;"	e	enum:FieldIDs	file:
FID_Z	test/physical_regions.cc	/^  FID_Z,$/;"	e	enum:FieldIDs	file:
FID_Z	test/privileges.cc	/^  FID_Z,$/;"	e	enum:FieldIDs	file:
FIELDID_V	test/saxpy_array.cc	/^  FIELDID_V = 0,$/;"	e	enum:__anon26	file:
FIELD_ALLOCATION_MESSAGE	legion_runtime/runtime.h	/^        FIELD_ALLOCATION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
FIELD_ALL_ONES	legion_runtime/legion_types.h	639;"	d
FIELD_DELETION	legion_runtime/legion_ops.h	/^        FIELD_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
FIELD_DESTRUCTION_MESSAGE	legion_runtime/runtime.h	/^        FIELD_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
FIELD_LOG2	legion_runtime/legion_types.h	144;"	d
FIELD_MASK	legion_runtime/legion_types.h	638;"	d
FIELD_MASK	legion_runtime/legion_types.h	669;"	d
FIELD_SHIFT	legion_runtime/legion_types.h	637;"	d
FIELD_SHIFT	legion_runtime/legion_types.h	668;"	d
FIELD_SPACE_DELETION	legion_runtime/legion_ops.h	/^        FIELD_SPACE_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
FIELD_SPACE_DESTRUCTION_MESSAGE	legion_runtime/runtime.h	/^        FIELD_SPACE_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
FIELD_TYPE	legion_runtime/legion_types.h	636;"	d
FILTER_CLOSE_CALL	legion_runtime/region_tree.h	/^      FILTER_CLOSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FILTER_CURR_EPOCH_CALL	legion_runtime/region_tree.h	/^      FILTER_CURR_EPOCH_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FILTER_PREV_EPOCH_CALL	legion_runtime/region_tree.h	/^      FILTER_PREV_EPOCH_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FINAL_MESSAGE	legion_runtime/runtime.h	/^        FINAL_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageHeader
FIND_COPY_ACROSS_INSTANCES_CALL	legion_runtime/region_tree.h	/^      FIND_COPY_ACROSS_INSTANCES_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIND_COPY_PRECONDITIONS_ABOVE_CALL	legion_runtime/region_tree.h	/^      FIND_COPY_PRECONDITIONS_ABOVE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIND_COPY_PRECONDITIONS_CALL	legion_runtime/region_tree.h	/^      FIND_COPY_PRECONDITIONS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIND_LOCAL_COPY_PRECONDITIONS_CALL	legion_runtime/region_tree.h	/^      FIND_LOCAL_COPY_PRECONDITIONS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIND_VALID_INSTANCE_VIEWS_CALL	legion_runtime/region_tree.h	/^      FIND_VALID_INSTANCE_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIND_VALID_REDUCTION_VIEWS_CALL	legion_runtime/region_tree.h	/^      FIND_VALID_REDUCTION_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIRST_AVAILABLE	legion_runtime/lowlevel.cc	/^      FIRST_AVAILABLE = 140,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
FIRST_PROC_GROUP_ID	legion_runtime/shared_lowlevel.cc	/^      static const int FIRST_PROC_GROUP_ID = 1000;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup	file:
FLAGS	lua_src/lstrlib.c	825;"	d	file:
FLUSH_REDUCTIONS_CALL	legion_runtime/region_tree.h	/^      FLUSH_REDUCTIONS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FL_HASH	nautilus/fmtout.c	/^  FL_HASH   = 0x20,		\/* # modifier *\/$/;"	e	enum:flags	file:
FL_MINUS	nautilus/fmtout.c	/^  FL_MINUS  = 0x02,		\/* Minus modifier *\/$/;"	e	enum:flags	file:
FL_PLUS	nautilus/fmtout.c	/^  FL_PLUS   = 0x04,		\/* Plus modifier *\/$/;"	e	enum:flags	file:
FL_SIGNED	nautilus/fmtout.c	/^  FL_SIGNED = 0x40,		\/* Number is signed *\/$/;"	e	enum:flags	file:
FL_SPACE	nautilus/fmtout.c	/^  FL_SPACE  = 0x10,		\/* Space modifier *\/$/;"	e	enum:flags	file:
FL_TICK	nautilus/fmtout.c	/^  FL_TICK   = 0x08,		\/* ' modifier *\/$/;"	e	enum:flags	file:
FL_UPPER	nautilus/fmtout.c	/^  FL_UPPER  = 0x80		\/* Upper case digits *\/$/;"	e	enum:flags	file:
FL_ZERO	nautilus/fmtout.c	/^  FL_ZERO   = 0x01,		\/* Zero modifier *\/$/;"	e	enum:flags	file:
FOLD_MANAGER_ALLOC	legion_runtime/legion_allocation.h	/^      FOLD_MANAGER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
FORMAT	lua_src/lundump.c	237;"	d	file:
FORMAT_TYPE_BYTE	nautilus/printk.c	/^	FORMAT_TYPE_BYTE,$/;"	e	enum:format_type	file:
FORMAT_TYPE_CHAR	nautilus/printk.c	/^	FORMAT_TYPE_CHAR,$/;"	e	enum:format_type	file:
FORMAT_TYPE_INT	nautilus/printk.c	/^	FORMAT_TYPE_INT,$/;"	e	enum:format_type	file:
FORMAT_TYPE_INVALID	nautilus/printk.c	/^	FORMAT_TYPE_INVALID,$/;"	e	enum:format_type	file:
FORMAT_TYPE_LONG	nautilus/printk.c	/^	FORMAT_TYPE_LONG,$/;"	e	enum:format_type	file:
FORMAT_TYPE_LONG_LONG	nautilus/printk.c	/^	FORMAT_TYPE_LONG_LONG,$/;"	e	enum:format_type	file:
FORMAT_TYPE_NONE	nautilus/printk.c	/^	FORMAT_TYPE_NONE, \/* Just a string part *\/$/;"	e	enum:format_type	file:
FORMAT_TYPE_NRCHARS	nautilus/printk.c	/^	FORMAT_TYPE_NRCHARS,$/;"	e	enum:format_type	file:
FORMAT_TYPE_PERCENT_CHAR	nautilus/printk.c	/^	FORMAT_TYPE_PERCENT_CHAR,$/;"	e	enum:format_type	file:
FORMAT_TYPE_PRECISION	nautilus/printk.c	/^	FORMAT_TYPE_PRECISION,$/;"	e	enum:format_type	file:
FORMAT_TYPE_PTR	nautilus/printk.c	/^	FORMAT_TYPE_PTR,$/;"	e	enum:format_type	file:
FORMAT_TYPE_PTRDIFF	nautilus/printk.c	/^	FORMAT_TYPE_PTRDIFF$/;"	e	enum:format_type	file:
FORMAT_TYPE_SHORT	nautilus/printk.c	/^	FORMAT_TYPE_SHORT,$/;"	e	enum:format_type	file:
FORMAT_TYPE_SIZE_T	nautilus/printk.c	/^	FORMAT_TYPE_SIZE_T,$/;"	e	enum:format_type	file:
FORMAT_TYPE_STR	nautilus/printk.c	/^	FORMAT_TYPE_STR,$/;"	e	enum:format_type	file:
FORMAT_TYPE_UBYTE	nautilus/printk.c	/^	FORMAT_TYPE_UBYTE,$/;"	e	enum:format_type	file:
FORMAT_TYPE_UINT	nautilus/printk.c	/^	FORMAT_TYPE_UINT,$/;"	e	enum:format_type	file:
FORMAT_TYPE_ULONG	nautilus/printk.c	/^	FORMAT_TYPE_ULONG,$/;"	e	enum:format_type	file:
FORMAT_TYPE_USHORT	nautilus/printk.c	/^	FORMAT_TYPE_USHORT,$/;"	e	enum:format_type	file:
FORMAT_TYPE_WIDTH	nautilus/printk.c	/^	FORMAT_TYPE_WIDTH,$/;"	e	enum:format_type	file:
FPR_LOAD	asm/thread_lowlevel.S	/^#define FPR_LOAD()$/;"	d
FPR_SAVE	asm/thread_lowlevel.S	/^#define FPR_SAVE()			\/\/ WRITE ME$/;"	d
FPR_SAVE_SIZE	asm/thread_lowlevel.S	/^#define FPR_SAVE_SIZE (0)$/;"	d
FPU_DEBUG	nautilus/fpu.c	38;"	d	file:
FPU_ECX_FEAT_QUERY	nautilus/fpu.c	59;"	d	file:
FPU_EDX_FEAT_QUERY	nautilus/fpu.c	60;"	d	file:
FPU_PRINT	nautilus/fpu.c	37;"	d	file:
FPU_WARN	nautilus/fpu.c	39;"	d	file:
FREEABLE	legion_runtime/legion_types.h	/^      FREEABLE        = 0x00000002,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
FRIEND_ALL_RUNTIME_CLASSES	legion_runtime/legion_types.h	746;"	d
FULL_MESSAGE	legion_runtime/runtime.h	/^        FULL_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageHeader
FUNC_HDR	test/benchmark.h	43;"	d
FUNC_HDR	test/benchmark.h	9;"	d
FUNC_TYPE	test/benchmark.h	10;"	d
FUNC_TYPE	test/benchmark.h	44;"	d
FUTURE_ALLOC	legion_runtime/legion_allocation.h	/^      FUTURE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
FUTURE_MAP_ALLOC	legion_runtime/legion_allocation.h	/^      FUTURE_MAP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
FUTURE_PRED_OP_ALLOC	legion_runtime/legion_allocation.h	/^      FUTURE_PRED_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
FUTURE_RESULT_ALLOC	legion_runtime/legion_allocation.h	/^      FUTURE_RESULT_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
Fallback	legion_runtime/legion.h	/^        struct Fallback { void legion_serialize(void *); };$/;"	s	struct:LegionRuntime::HighLevel::LegionSerialization::HasSerialize
FenceOp	legion_runtime/legion_ops.cc	/^    FenceOp::FenceOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
FenceOp	legion_runtime/legion_ops.cc	/^    FenceOp::FenceOp(const FenceOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
FenceOp	legion_runtime/legion_ops.h	/^    class FenceOp : public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
FieldAccessor	legion_runtime/accessor.h	/^	FieldAccessor(void) {}$/;"	f	struct:LegionRuntime::Accessor::RegionAccessor::FieldAccessor
FieldAccessor	legion_runtime/accessor.h	/^      struct FieldAccessor : $/;"	s	struct:LegionRuntime::Accessor::RegionAccessor
FieldAllocator	legion_runtime/legion.cc	/^    FieldAllocator::FieldAllocator(FieldSpace f, Context p, $/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
FieldAllocator	legion_runtime/legion.cc	/^    FieldAllocator::FieldAllocator(const FieldAllocator &allocator)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
FieldAllocator	legion_runtime/legion.cc	/^    FieldAllocator::FieldAllocator(void)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
FieldAllocator	legion_runtime/legion.h	/^    class FieldAllocator {$/;"	c	namespace:LegionRuntime::HighLevel
FieldID	legion_runtime/legion_types.h	/^    typedef unsigned int FieldID;$/;"	t	namespace:LegionRuntime::HighLevel
FieldIDs	test/custom_mapper.cc	/^enum FieldIDs {$/;"	g	file:
FieldIDs	test/logical_regions.cc	/^enum FieldIDs {$/;"	g	file:
FieldIDs	test/multiple_partitions.cc	/^enum FieldIDs {$/;"	g	file:
FieldIDs	test/partitioning.cc	/^enum FieldIDs {$/;"	g	file:
FieldIDs	test/physical_regions.cc	/^enum FieldIDs {$/;"	g	file:
FieldIDs	test/privileges.cc	/^enum FieldIDs {$/;"	g	file:
FieldInfo	legion_runtime/region_tree.h	/^        FieldInfo(size_t size, unsigned id, bool loc)$/;"	f	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
FieldInfo	legion_runtime/region_tree.h	/^        FieldInfo(void) : field_size(0), idx(0), $/;"	f	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
FieldInfo	legion_runtime/region_tree.h	/^      struct FieldInfo {$/;"	s	class:LegionRuntime::HighLevel::FieldSpaceNode
FieldMask	legion_runtime/legion_types.h	/^    typedef AVXBitMask<MAX_FIELDS> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldMask	legion_runtime/legion_types.h	/^    typedef AVXTLBitMask<MAX_FIELDS> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldMask	legion_runtime/legion_types.h	/^    typedef BitMask<FIELD_TYPE,MAX_FIELDS,FIELD_SHIFT,FIELD_MASK> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldMask	legion_runtime/legion_types.h	/^    typedef SSEBitMask<MAX_FIELDS> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldMask	legion_runtime/legion_types.h	/^    typedef SSETLBitMask<MAX_FIELDS> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldMask	legion_runtime/legion_types.h	/^    typedef TLBitMask<FIELD_TYPE,MAX_FIELDS,FIELD_SHIFT,FIELD_MASK> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldPermutation	legion_runtime/legion_types.h	/^    typedef BitPermutation<FieldMask,FIELD_LOG2> FieldPermutation;$/;"	t	namespace:LegionRuntime::HighLevel
FieldSpace	legion_runtime/legion.cc	/^    FieldSpace::FieldSpace(const FieldSpace &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
FieldSpace	legion_runtime/legion.cc	/^    FieldSpace::FieldSpace(unsigned _id)$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
FieldSpace	legion_runtime/legion.cc	/^    FieldSpace::FieldSpace(void)$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
FieldSpace	legion_runtime/legion.h	/^    class FieldSpace {$/;"	c	namespace:LegionRuntime::HighLevel
FieldSpaceID	legion_runtime/legion_types.h	/^    typedef unsigned int FieldSpaceID;$/;"	t	namespace:LegionRuntime::HighLevel
FieldSpaceNode	legion_runtime/region_tree.cc	/^    FieldSpaceNode::FieldSpaceNode(FieldSpace sp, RegionTreeForest *ctx)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
FieldSpaceNode	legion_runtime/region_tree.cc	/^    FieldSpaceNode::FieldSpaceNode(const FieldSpaceNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
FieldSpaceNode	legion_runtime/region_tree.h	/^    class FieldSpaceNode {$/;"	c	namespace:LegionRuntime::HighLevel
FieldSpaceRequirement	legion_runtime/legion.cc	/^    FieldSpaceRequirement::FieldSpaceRequirement(FieldSpace _handle, $/;"	f	class:LegionRuntime::HighLevel::FieldSpaceRequirement
FieldSpaceRequirement	legion_runtime/legion.cc	/^    FieldSpaceRequirement::FieldSpaceRequirement(void)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceRequirement
FieldSpaceRequirement	legion_runtime/legion.h	/^    struct FieldSpaceRequirement {$/;"	s	namespace:LegionRuntime::HighLevel
FieldState	legion_runtime/region_tree.cc	/^    FieldState::FieldState(const GenericUser &user, const FieldMask &m, Color c)$/;"	f	class:LegionRuntime::HighLevel::FieldState
FieldState	legion_runtime/region_tree.h	/^    struct FieldState : public ChildState {$/;"	s	namespace:LegionRuntime::HighLevel
FieldTree	legion_runtime/field_tree.h	/^    FieldTree<UT>::FieldTree(const FieldMask &mask, bool merge\/* = false*\/)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
FieldTree	legion_runtime/field_tree.h	/^    FieldTree<UT>::FieldTree(const FieldTree<UT> &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
FieldTree	legion_runtime/field_tree.h	/^    class FieldTree {$/;"	c	namespace:LegionRuntime::HighLevel
FoldReductionManager	legion_runtime/region_tree.cc	/^    FoldReductionManager::FoldReductionManager(RegionTreeForest *ctx, $/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
FoldReductionManager	legion_runtime/region_tree.cc	/^    FoldReductionManager::FoldReductionManager(const FoldReductionManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
FoldReductionManager	legion_runtime/region_tree.h	/^    class FoldReductionManager : public ReductionManager {$/;"	c	namespace:LegionRuntime::HighLevel
Format_Output	nautilus/fmtout.c	/^int Format_Output(struct Output_Sink *q, const char *format, va_list ap)$/;"	f
FortranArrayLinearization	legion_runtime/arrays.h	/^      FortranArrayLinearization(Rect<DIM> bounds, int first_index = 1)$/;"	f	class:LegionRuntime::Arrays::FortranArrayLinearization
FortranArrayLinearization	legion_runtime/arrays.h	/^      FortranArrayLinearization(void) {}$/;"	f	class:LegionRuntime::Arrays::FortranArrayLinearization
FortranArrayLinearization	legion_runtime/arrays.h	/^    class FortranArrayLinearization : public Linearization<DIM> {$/;"	c	namespace:LegionRuntime::Arrays
Fraction	legion_runtime/legion_utilities.h	/^    Fraction<T>::Fraction(T num, T denom)$/;"	f	class:LegionRuntime::HighLevel::Fraction
Fraction	legion_runtime/legion_utilities.h	/^    Fraction<T>::Fraction(const Fraction<T> &f)$/;"	f	class:LegionRuntime::HighLevel::Fraction
Fraction	legion_runtime/legion_utilities.h	/^    Fraction<T>::Fraction(void)$/;"	f	class:LegionRuntime::HighLevel::Fraction
Fraction	legion_runtime/legion_utilities.h	/^    class Fraction {$/;"	c	namespace:LegionRuntime::HighLevel
FuncPtr	legion_runtime/lowlevel.cc	/^      typedef void(*FuncPtr)(const void *args, size_t arglen, Processor *proc);$/;"	t	class:LegionRuntime::LowLevel::Task	file:
Future	legion_runtime/legion.cc	/^    Future::Future(Future::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::Future
Future	legion_runtime/legion.cc	/^    Future::Future(const Future &rhs)$/;"	f	class:LegionRuntime::HighLevel::Future
Future	legion_runtime/legion.cc	/^    Future::Future(void)$/;"	f	class:LegionRuntime::HighLevel::Future
Future	legion_runtime/legion.h	/^    class Future {$/;"	c	namespace:LegionRuntime::HighLevel
FutureMap	legion_runtime/legion.cc	/^    FutureMap::FutureMap(FutureMap::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
FutureMap	legion_runtime/legion.cc	/^    FutureMap::FutureMap(const FutureMap &map)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
FutureMap	legion_runtime/legion.cc	/^    FutureMap::FutureMap(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
FutureMap	legion_runtime/legion.h	/^    class FutureMap {$/;"	c	namespace:LegionRuntime::HighLevel
FuturePredOp	legion_runtime/legion_ops.cc	/^    FuturePredOp::FuturePredOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
FuturePredOp	legion_runtime/legion_ops.cc	/^    FuturePredOp::FuturePredOp(const FuturePredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
FuturePredOp	legion_runtime/legion_ops.h	/^    class FuturePredOp : public Predicate::Impl {$/;"	c	namespace:LegionRuntime::HighLevel
GARBAGE_COLLECT_CALL	legion_runtime/region_tree.h	/^      GARBAGE_COLLECT_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
GASNETT_THREAD_SAFE	legion_runtime/activemsg.h	25;"	d
GASNET_PAR	legion_runtime/activemsg.h	22;"	d
GASNetHSL	legion_runtime/lowlevel_impl.h	/^      GASNetHSL(void) { gasnet_hsl_init(&mutex); }$/;"	f	class:LegionRuntime::LowLevel::GASNetHSL
GASNetHSL	legion_runtime/lowlevel_impl.h	/^    class GASNetHSL {$/;"	c	namespace:LegionRuntime::LowLevel
GASNetMemory	legion_runtime/lowlevel.cc	/^    GASNetMemory::GASNetMemory(Memory _me, size_t size_per_node)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
GASNetMemory	legion_runtime/lowlevel_impl.h	/^    class GASNetMemory : public Memory::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
GCFINALIZENUM	lua_src/lgc.c	37;"	d	file:
GCSWEEPCOST	lua_src/lgc.c	31;"	d	file:
GCSWEEPMAX	lua_src/lgc.c	34;"	d	file:
GCTM	lua_src/lgc.c	/^static void GCTM (lua_State *L, int propagateerrors) {$/;"	f	file:
GDRA	test/hpcg/comp-dotprod.h	100;"	d
GDRA	test/hpcg/comp-dotprod.h	44;"	d
GDRA	test/hpcg/comp-spmv.h	135;"	d
GDRA	test/hpcg/comp-spmv.h	44;"	d
GDRA	test/hpcg/comp-waxpby.h	112;"	d
GDRA	test/hpcg/comp-waxpby.h	44;"	d
GEN_DEF	nautilus/libccompat.c	/^GEN_DEF(__get_cpu_features);$/;"	v
GEN_DEF	nautilus/libccompat.c	42;"	d	file:
GEN_PROB_TID	test/hpcg/hpcg-problem.cc	/^    GEN_PROB_TID = 2,$/;"	e	enum:__anon32	file:
GETCPU	test/benchmark.h	34;"	d
GETCPU	test/benchmark.h	67;"	d
GET_CURRENT_ARG_TYPE	acpi/acpica/acmacros.h	328;"	d
GET_NODE_CALL	legion_runtime/region_tree.h	/^      GET_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
GET_RECYCLE_EVENT_CALL	legion_runtime/region_tree.h	/^      GET_RECYCLE_EVENT_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
GET_SUBVIEW_CALL	legion_runtime/region_tree.h	/^      GET_SUBVIEW_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
GHOST_PTR	test/circuit.h	/^  GHOST_PTR,$/;"	e	enum:PointerLocation
GLOBAL_MEM	legion_runtime/lowlevel.h	/^        GLOBAL_MEM, \/\/ Guaranteed visible to all processors on all nodes (e.g. GASNet memory, universally slow)$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
GLOBAL_MEM	legion_runtime/shared_lowlevel.cc	81;"	d	file:
GLRA	test/hpcg/comp-spmv.h	136;"	d
GLRA	test/hpcg/comp-spmv.h	47;"	d
GLRA	test/hpcg/comp-waxpby.h	113;"	d
GLRA	test/hpcg/comp-waxpby.h	47;"	d
GOLDEN_RATIO_PRIME	nautilus/hashtable.c	83;"	d	file:
GOLDEN_RATIO_PRIME	nautilus/hashtable.c	87;"	d	file:
GPR_LOAD	asm/thread_lowlevel.S	/^#define GPR_LOAD()                              \\$/;"	d
GPR_LOAD_NO_RAX	asm/thread_lowlevel.S	/^#define GPR_LOAD_NO_RAX()	                \\$/;"	d
GPR_LOAD_SKIP_RAX	asm/thread_lowlevel.S	/^#define GPR_LOAD_SKIP_RAX()                     \\$/;"	d
GPR_RAX_OFFSET	nautilus/thread.c	405;"	d	file:
GPR_RDI_OFFSET	nautilus/thread.c	404;"	d	file:
GPR_SAVE	asm/thread_lowlevel.S	/^#define GPR_SAVE()	                        \\$/;"	d
GPR_SAVE_SIZE	asm/thread_lowlevel.S	/^#define GPR_SAVE_SIZE (15*8)$/;"	d
GPR_SAVE_SIZE	nautilus/thread.c	406;"	d	file:
GPUFBMemory	legion_runtime/lowlevel_gpu.cc	/^    GPUFBMemory::GPUFBMemory(Memory _me, GPUProcessor *_gpu)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
GPUFBMemory	legion_runtime/lowlevel_gpu.h	/^    class GPUFBMemory : public Memory::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
GPUJob	legion_runtime/lowlevel_gpu.cc	/^      GPUJob(GPUProcessor *_gpu, Event _finish_event)$/;"	f	class:LegionRuntime::LowLevel::GPUJob
GPUJob	legion_runtime/lowlevel_gpu.cc	/^    class GPUJob : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUMemcpy	legion_runtime/lowlevel_gpu.cc	/^      GPUMemcpy(GPUProcessor *_gpu, Event _finish_event,$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
GPUMemcpy	legion_runtime/lowlevel_gpu.cc	/^    class GPUMemcpy : public GPUJob {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUMemcpy1D	legion_runtime/lowlevel_gpu.cc	/^      GPUMemcpy1D(GPUProcessor *_gpu, Event _finish_event,$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy1D
GPUMemcpy1D	legion_runtime/lowlevel_gpu.cc	/^    class GPUMemcpy1D : public GPUMemcpy {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUMemcpy2D	legion_runtime/lowlevel_gpu.cc	/^      GPUMemcpy2D(GPUProcessor *_gpu, Event _finish_event,$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy2D
GPUMemcpy2D	legion_runtime/lowlevel_gpu.cc	/^    class GPUMemcpy2D : public GPUMemcpy {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUPeerMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      GPUPeerMemPairCopier(GPUProcessor *_src, GPUProcessor *_dst)$/;"	f	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier
GPUPeerMemPairCopier	legion_runtime/lowlevel_dma.cc	/^    class GPUPeerMemPairCopier : public DelayedMemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUProcessor	legion_runtime/lowlevel_gpu.cc	/^    GPUProcessor::GPUProcessor(Processor _me, int _gpu_index, $/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
GPUProcessor	legion_runtime/lowlevel_gpu.h	/^    class GPUProcessor : public Processor::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
GPUTask	legion_runtime/lowlevel_gpu.cc	/^    GPUTask::GPUTask(GPUProcessor *_gpu, Event _finish_event,$/;"	f	class:LegionRuntime::LowLevel::GPUTask
GPUTask	legion_runtime/lowlevel_gpu.cc	/^    class GPUTask : public GPUJob {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUZCMemory	legion_runtime/lowlevel_gpu.cc	/^    GPUZCMemory::GPUZCMemory(Memory _me, GPUProcessor *_gpu)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
GPUZCMemory	legion_runtime/lowlevel_gpu.h	/^    class GPUZCMemory : public Memory::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
GPU_BASE_LEAF	test/circuit.h	/^  static const bool GPU_BASE_LEAF = true;$/;"	m	class:CalcNewCurrentsTask
GPU_BASE_LEAF	test/circuit.h	/^  static const bool GPU_BASE_LEAF = true;$/;"	m	class:DistributeChargeTask
GPU_BASE_LEAF	test/circuit.h	/^  static const bool GPU_BASE_LEAF = true;$/;"	m	class:UpdateVoltagesTask
GPU_FB_MEM	legion_runtime/lowlevel.h	/^        GPU_FB_MEM,   \/\/ Framebuffer memory for one GPU and all its SMs$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
GPUfromFBMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      GPUfromFBMemPairCopier(GPUProcessor *_gpu, Memory _dst_mem)$/;"	f	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier
GPUfromFBMemPairCopier	legion_runtime/lowlevel_dma.cc	/^    class GPUfromFBMemPairCopier : public DelayedMemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUinFBMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      GPUinFBMemPairCopier(GPUProcessor *_gpu)$/;"	f	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier
GPUinFBMemPairCopier	legion_runtime/lowlevel_dma.cc	/^    class GPUinFBMemPairCopier : public DelayedMemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUtoFBMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      GPUtoFBMemPairCopier(Memory _src_mem, GPUProcessor *_gpu)$/;"	f	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier
GPUtoFBMemPairCopier	legion_runtime/lowlevel_dma.cc	/^    class GPUtoFBMemPairCopier : public DelayedMemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GRANT_ALLOC	legion_runtime/legion_allocation.h	/^      GRANT_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
GarbageCollectionArgs	legion_runtime/runtime.h	/^      struct GarbageCollectionArgs {$/;"	s	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
GarbageCollectionEpoch	legion_runtime/runtime.cc	/^    GarbageCollectionEpoch::GarbageCollectionEpoch($/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
GarbageCollectionEpoch	legion_runtime/runtime.cc	/^    GarbageCollectionEpoch::GarbageCollectionEpoch(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
GarbageCollectionEpoch	legion_runtime/runtime.h	/^    class GarbageCollectionEpoch {$/;"	c	namespace:LegionRuntime::HighLevel
GasnetGet	legion_runtime/lowlevel.cc	/^	GasnetGet(void *_tgt_ptr,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet
GasnetGet	legion_runtime/lowlevel.cc	/^      class GasnetGet {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetGet	legion_runtime/lowlevel_dma.cc	/^	GasnetGet(void *_tgt_ptr,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet
GasnetGet	legion_runtime/lowlevel_dma.cc	/^      class GasnetGet {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetGetAndPut	legion_runtime/lowlevel.cc	/^	GasnetGetAndPut(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut
GasnetGetAndPut	legion_runtime/lowlevel.cc	/^      class GasnetGetAndPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetGetAndPut	legion_runtime/lowlevel_dma.cc	/^	GasnetGetAndPut(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut
GasnetGetAndPut	legion_runtime/lowlevel_dma.cc	/^      class GasnetGetAndPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetGetBatched	legion_runtime/lowlevel_dma.cc	/^	GasnetGetBatched(void *_tgt_ptr,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched
GasnetGetBatched	legion_runtime/lowlevel_dma.cc	/^      class GasnetGetBatched {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPut	legion_runtime/lowlevel.cc	/^	GasnetPut(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut
GasnetPut	legion_runtime/lowlevel.cc	/^      class GasnetPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPut	legion_runtime/lowlevel_dma.cc	/^	GasnetPut(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut
GasnetPut	legion_runtime/lowlevel_dma.cc	/^      class GasnetPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPutBatched	legion_runtime/lowlevel_dma.cc	/^	GasnetPutBatched(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched
GasnetPutBatched	legion_runtime/lowlevel_dma.cc	/^      class GasnetPutBatched {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPutRedList	legion_runtime/lowlevel_dma.cc	/^	GasnetPutRedList(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutRedList
GasnetPutRedList	legion_runtime/lowlevel_dma.cc	/^      class GasnetPutRedList : public GasnetPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPutReduce	legion_runtime/lowlevel.cc	/^	GasnetPutReduce(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce
GasnetPutReduce	legion_runtime/lowlevel.cc	/^      class GasnetPutReduce : public GasnetPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPutReduce	legion_runtime/lowlevel_dma.cc	/^	GasnetPutReduce(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce
GasnetPutReduce	legion_runtime/lowlevel_dma.cc	/^      class GasnetPutReduce : public GasnetPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GatherScatter	legion_runtime/shared_lowlevel.cc	/^	GatherScatter(const std::vector<Domain::CopySrcDstField>& _srcs,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter
GatherScatter	legion_runtime/shared_lowlevel.cc	/^      class GatherScatter {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GenerationID	legion_runtime/legion_types.h	/^    typedef unsigned int GenerationID;$/;"	t	namespace:LegionRuntime::HighLevel
Generic	legion_runtime/accessor.h	/^      struct Generic {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
GenericDenseSubrectIterator	legion_runtime/arrays.h	/^      GenericDenseSubrectIterator(const Rect<T::IDIM> r, const T& m)$/;"	f	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
GenericDenseSubrectIterator	legion_runtime/arrays.h	/^    class GenericDenseSubrectIterator {$/;"	c	namespace:LegionRuntime::Arrays
GenericLinearSubrectIterator	legion_runtime/arrays.h	/^      GenericLinearSubrectIterator(const Rect<T::IDIM> r, const T& m)$/;"	f	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
GenericLinearSubrectIterator	legion_runtime/arrays.h	/^    class GenericLinearSubrectIterator {$/;"	c	namespace:LegionRuntime::Arrays
GenericPointInRectIterator	legion_runtime/arrays.h	/^      GenericPointInRectIterator(const Rect<DIM> _r) : r(_r)$/;"	f	class:LegionRuntime::Arrays::GenericPointInRectIterator
GenericPointInRectIterator	legion_runtime/arrays.h	/^    class GenericPointInRectIterator {$/;"	c	namespace:LegionRuntime::Arrays
GenericUser	legion_runtime/region_tree.h	/^      GenericUser(const RegionUsage &u, const FieldMask &m)$/;"	f	struct:LegionRuntime::HighLevel::GenericUser
GenericUser	legion_runtime/region_tree.h	/^      GenericUser(void) { }$/;"	f	struct:LegionRuntime::HighLevel::GenericUser
GenericUser	legion_runtime/region_tree.h	/^    struct GenericUser {$/;"	s	namespace:LegionRuntime::HighLevel
Geometry	test/hpcg/geometry.h	/^    Geometry(int64_t size,$/;"	f	struct:lgncg::Geometry
Geometry	test/hpcg/geometry.h	/^    Geometry(void)$/;"	f	struct:lgncg::Geometry
Geometry	test/hpcg/geometry.h	/^struct Geometry {$/;"	s	namespace:lgncg
Grant	legion_runtime/legion.cc	/^    Grant::Grant(Grant::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::Grant
Grant	legion_runtime/legion.cc	/^    Grant::Grant(const Grant &rhs)$/;"	f	class:LegionRuntime::HighLevel::Grant
Grant	legion_runtime/legion.cc	/^    Grant::Grant(void)$/;"	f	class:LegionRuntime::HighLevel::Grant
Grant	legion_runtime/legion.h	/^    class Grant {$/;"	c	namespace:LegionRuntime::HighLevel
HANDLERARG_COPY_1	legion_runtime/activemsg.h	228;"	d
HANDLERARG_COPY_10	legion_runtime/activemsg.h	237;"	d
HANDLERARG_COPY_11	legion_runtime/activemsg.h	238;"	d
HANDLERARG_COPY_12	legion_runtime/activemsg.h	239;"	d
HANDLERARG_COPY_13	legion_runtime/activemsg.h	240;"	d
HANDLERARG_COPY_14	legion_runtime/activemsg.h	241;"	d
HANDLERARG_COPY_15	legion_runtime/activemsg.h	242;"	d
HANDLERARG_COPY_16	legion_runtime/activemsg.h	243;"	d
HANDLERARG_COPY_2	legion_runtime/activemsg.h	229;"	d
HANDLERARG_COPY_3	legion_runtime/activemsg.h	230;"	d
HANDLERARG_COPY_4	legion_runtime/activemsg.h	231;"	d
HANDLERARG_COPY_5	legion_runtime/activemsg.h	232;"	d
HANDLERARG_COPY_6	legion_runtime/activemsg.h	233;"	d
HANDLERARG_COPY_7	legion_runtime/activemsg.h	234;"	d
HANDLERARG_COPY_8	legion_runtime/activemsg.h	235;"	d
HANDLERARG_COPY_9	legion_runtime/activemsg.h	236;"	d
HANDLERARG_DECL_1	legion_runtime/activemsg.h	177;"	d
HANDLERARG_DECL_10	legion_runtime/activemsg.h	186;"	d
HANDLERARG_DECL_11	legion_runtime/activemsg.h	187;"	d
HANDLERARG_DECL_12	legion_runtime/activemsg.h	188;"	d
HANDLERARG_DECL_13	legion_runtime/activemsg.h	189;"	d
HANDLERARG_DECL_14	legion_runtime/activemsg.h	190;"	d
HANDLERARG_DECL_15	legion_runtime/activemsg.h	191;"	d
HANDLERARG_DECL_16	legion_runtime/activemsg.h	192;"	d
HANDLERARG_DECL_2	legion_runtime/activemsg.h	178;"	d
HANDLERARG_DECL_3	legion_runtime/activemsg.h	179;"	d
HANDLERARG_DECL_4	legion_runtime/activemsg.h	180;"	d
HANDLERARG_DECL_5	legion_runtime/activemsg.h	181;"	d
HANDLERARG_DECL_6	legion_runtime/activemsg.h	182;"	d
HANDLERARG_DECL_7	legion_runtime/activemsg.h	183;"	d
HANDLERARG_DECL_8	legion_runtime/activemsg.h	184;"	d
HANDLERARG_DECL_9	legion_runtime/activemsg.h	185;"	d
HANDLERARG_PARAMS_1	legion_runtime/activemsg.h	211;"	d
HANDLERARG_PARAMS_10	legion_runtime/activemsg.h	220;"	d
HANDLERARG_PARAMS_11	legion_runtime/activemsg.h	221;"	d
HANDLERARG_PARAMS_12	legion_runtime/activemsg.h	222;"	d
HANDLERARG_PARAMS_13	legion_runtime/activemsg.h	223;"	d
HANDLERARG_PARAMS_14	legion_runtime/activemsg.h	224;"	d
HANDLERARG_PARAMS_15	legion_runtime/activemsg.h	225;"	d
HANDLERARG_PARAMS_16	legion_runtime/activemsg.h	226;"	d
HANDLERARG_PARAMS_2	legion_runtime/activemsg.h	212;"	d
HANDLERARG_PARAMS_3	legion_runtime/activemsg.h	213;"	d
HANDLERARG_PARAMS_4	legion_runtime/activemsg.h	214;"	d
HANDLERARG_PARAMS_5	legion_runtime/activemsg.h	215;"	d
HANDLERARG_PARAMS_6	legion_runtime/activemsg.h	216;"	d
HANDLERARG_PARAMS_7	legion_runtime/activemsg.h	217;"	d
HANDLERARG_PARAMS_8	legion_runtime/activemsg.h	218;"	d
HANDLERARG_PARAMS_9	legion_runtime/activemsg.h	219;"	d
HANDLERARG_VALS_1	legion_runtime/activemsg.h	194;"	d
HANDLERARG_VALS_10	legion_runtime/activemsg.h	203;"	d
HANDLERARG_VALS_11	legion_runtime/activemsg.h	204;"	d
HANDLERARG_VALS_12	legion_runtime/activemsg.h	205;"	d
HANDLERARG_VALS_13	legion_runtime/activemsg.h	206;"	d
HANDLERARG_VALS_14	legion_runtime/activemsg.h	207;"	d
HANDLERARG_VALS_15	legion_runtime/activemsg.h	208;"	d
HANDLERARG_VALS_16	legion_runtime/activemsg.h	209;"	d
HANDLERARG_VALS_2	legion_runtime/activemsg.h	195;"	d
HANDLERARG_VALS_3	legion_runtime/activemsg.h	196;"	d
HANDLERARG_VALS_4	legion_runtime/activemsg.h	197;"	d
HANDLERARG_VALS_5	legion_runtime/activemsg.h	198;"	d
HANDLERARG_VALS_6	legion_runtime/activemsg.h	199;"	d
HANDLERARG_VALS_7	legion_runtime/activemsg.h	200;"	d
HANDLERARG_VALS_8	legion_runtime/activemsg.h	201;"	d
HANDLERARG_VALS_9	legion_runtime/activemsg.h	202;"	d
HAS_READ	legion_runtime/legion_utilities.h	54;"	d
HAS_WAR_DEPENDENCE_ABOVE_CALL	legion_runtime/region_tree.h	/^      HAS_WAR_DEPENDENCE_ABOVE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
HAS_WAR_DEPENDENCE_CALL	legion_runtime/region_tree.h	/^      HAS_WAR_DEPENDENCE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
HAS_WRITE	legion_runtime/legion_utilities.h	55;"	d
HELLO_WORLD_ID	test/hello_world.cc	/^  HELLO_WORLD_ID,$/;"	e	enum:TaskID	file:
HELLO_WORLD_INDEX_ID	test/index_tasks.cc	/^  HELLO_WORLD_INDEX_ID,$/;"	e	enum:TaskIDs	file:
HIERARCHICAL_REMOVE_REMOTE	legion_runtime/runtime.h	/^        HIERARCHICAL_REMOVE_REMOTE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
HIERARCHICAL_REMOVE_RESOURCE	legion_runtime/runtime.h	/^        HIERARCHICAL_REMOVE_RESOURCE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
HLRTaskID	legion_runtime/legion_types.h	/^    enum HLRTaskID {$/;"	g	namespace:LegionRuntime::HighLevel
HLR_DEFERRED_COLLECT_ID	legion_runtime/legion_types.h	/^      HLR_DEFERRED_COLLECT_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_COMPLETE_ID	legion_runtime/legion_types.h	/^      HLR_DEFERRED_COMPLETE_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_FUTURE_MAP_SET_ID	legion_runtime/legion_types.h	/^      HLR_DEFERRED_FUTURE_MAP_SET_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_FUTURE_SET_ID	legion_runtime/legion_types.h	/^      HLR_DEFERRED_FUTURE_SET_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_MAPPING_ID	legion_runtime/legion_types.h	/^      HLR_DEFERRED_MAPPING_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_RECYCLE_ID	legion_runtime/legion_types.h	/^      HLR_DEFERRED_RECYCLE_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_SLICE_ID	legion_runtime/legion_types.h	/^      HLR_DEFERRED_SLICE_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MESSAGE_ID	legion_runtime/legion_types.h	/^      HLR_MESSAGE_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MPI_RANK_ID	legion_runtime/legion_types.h	/^      HLR_MPI_RANK_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MUST_DIST_ID	legion_runtime/legion_types.h	/^      HLR_MUST_DIST_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MUST_INDEX_ID	legion_runtime/legion_types.h	/^      HLR_MUST_INDEX_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MUST_INDIV_ID	legion_runtime/legion_types.h	/^      HLR_MUST_INDIV_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MUST_LAUNCH_ID	legion_runtime/legion_types.h	/^      HLR_MUST_LAUNCH_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MUST_MAP_ID	legion_runtime/legion_types.h	/^      HLR_MUST_MAP_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_POST_END_ID	legion_runtime/legion_types.h	/^      HLR_POST_END_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_RECLAIM_LOCAL_FIELD_ID	legion_runtime/legion_types.h	/^      HLR_RECLAIM_LOCAL_FIELD_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_RESOLVE_FUTURE_PRED_ID	legion_runtime/legion_types.h	/^      HLR_RESOLVE_FUTURE_PRED_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_SCHEDULER_ID	legion_runtime/legion_types.h	/^      HLR_SCHEDULER_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_TASK_ID	legion_runtime/legion_types.h	/^      HLR_TASK_ID           = LowLevel::Processor::TASK_ID_FIRST_AVAILABLE,$/;"	e	enum:LegionRuntime::HighLevel::__anon12
HLR_TRIGGER_DEPENDENCE_ID	legion_runtime/legion_types.h	/^      HLR_TRIGGER_DEPENDENCE_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_TRIGGER_OP_ID	legion_runtime/legion_types.h	/^      HLR_TRIGGER_OP_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_TRIGGER_TASK_ID	legion_runtime/legion_types.h	/^      HLR_TRIGGER_TASK_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HOOKKEY	lua_src/ldblib.c	24;"	d	file:
HPCGTaskArgs	test/hpcg/hpcg-problem.cc	/^    HPCGTaskArgs(const lgncg::Geometry &geom,$/;"	f	struct:__anon33::HPCGTaskArgs
HPCGTaskArgs	test/hpcg/hpcg-problem.cc	/^struct HPCGTaskArgs {$/;"	s	namespace:__anon33	file:
HPCG_PROBLEM_GENERATOR_H_INCLUDED	test/hpcg/hpcg-problem-generator.h	45;"	d
HPCG_PROBLEM_H_INCLUDED	test/hpcg/hpcg-problem.h	31;"	d
HPET_DEBUG	dev/hpet.c	39;"	d	file:
HPET_PRINT	dev/hpet.c	38;"	d	file:
HRT_DEBUG	arch/hrt/hrt.c	39;"	d	file:
HRT_PRINT	arch/hrt/hrt.c	40;"	d	file:
HRT_WARN	arch/hrt/hrt.c	41;"	d	file:
HUGE_VAL	lua_src/lmathlib.c	8;"	d	file:
HandleType	legion_runtime/legion_types.h	/^    enum HandleType {$/;"	g	namespace:LegionRuntime::HighLevel
HandlerReplyFuture	legion_runtime/activemsg.h	/^  HandlerReplyFuture(void) {$/;"	f	struct:HandlerReplyFuture
HandlerReplyFuture	legion_runtime/activemsg.h	/^template <class T> struct HandlerReplyFuture {$/;"	s
HasSerialize	legion_runtime/legion.h	/^      struct HasSerialize {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
HierarchicalCollectable	legion_runtime/garbage_collection.cc	/^    HierarchicalCollectable::HierarchicalCollectable(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
HierarchicalCollectable	legion_runtime/garbage_collection.h	/^    class HierarchicalCollectable : public CollectableState {$/;"	c	namespace:LegionRuntime::HighLevel
HighLevel	legion_runtime/alt_mappers.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/alt_mappers.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/default_mapper.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/default_mapper.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/field_tree.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/garbage_collection.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/garbage_collection.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/interval_tree.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/legion.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/legion.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/legion_allocation.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/legion_logging.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/legion_logging.h	/^  namespace HighLevel { $/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/legion_ops.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/legion_ops.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/legion_profiling.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/legion_spy.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/legion_spy.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/legion_tasks.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/legion_tasks.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/legion_trace.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/legion_trace.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/legion_types.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/legion_utilities.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/mapping_utilities.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/mapping_utilities.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/rectangle_set.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/region_tree.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/region_tree.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/runtime.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/runtime.h	/^  namespace HighLevel { $/;"	n	namespace:LegionRuntime
HighLevel	legion_runtime/shim_mapper.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	legion_runtime/shim_mapper.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevelRuntime	legion_runtime/legion.cc	/^    HighLevelRuntime::HighLevelRuntime(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
HighLevelRuntime	legion_runtime/legion.h	/^    class HighLevelRuntime {$/;"	c	namespace:LegionRuntime::HighLevel
HybridSOA	legion_runtime/accessor.h	/^      struct HybridSOA {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
I64Tuple	test/hpcg/sparsemat.h	/^    I64Tuple(int64_t a, int64_t b) : a(a), b(b) { ; }$/;"	f	struct:lgncg::I64Tuple
I64Tuple	test/hpcg/sparsemat.h	/^    I64Tuple(void) : a(0), b(0) { ; }$/;"	f	struct:lgncg::I64Tuple
I64Tuple	test/hpcg/sparsemat.h	/^struct I64Tuple {$/;"	s	namespace:lgncg
ID	legion_runtime/lowlevel_impl.h	/^      ID(IDType _value) : value(_value) {}$/;"	f	class:LegionRuntime::LowLevel::ID
ID	legion_runtime/lowlevel_impl.h	/^      ID(ID_Types _type, unsigned _node, IDType _index)$/;"	f	class:LegionRuntime::LowLevel::ID
ID	legion_runtime/lowlevel_impl.h	/^      ID(ID_Types _type, unsigned _node, IDType _index_h, IDType _index_l)$/;"	f	class:LegionRuntime::LowLevel::ID
ID	legion_runtime/lowlevel_impl.h	/^      ID(T thing_to_get_id_from) : value(thing_to_get_id_from.id) {}$/;"	f	class:LegionRuntime::LowLevel::ID
ID	legion_runtime/lowlevel_impl.h	/^    class ID {$/;"	c	namespace:LegionRuntime::LowLevel
IDFMT	legion_runtime/lowlevel.h	52;"	d
IDFMT	legion_runtime/lowlevel.h	55;"	d
IDIM	legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = 1 };$/;"	e	enum:LegionRuntime::Arrays::Linearization::__anon4
IDIM	legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = DIM };$/;"	e	enum:LegionRuntime::Arrays::Blockify::__anon5
IDIM	legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = DIM };$/;"	e	enum:LegionRuntime::Arrays::Translation::__anon3
IDIM	legion_runtime/arrays.h	/^      enum { IDIM = T::IDIM, ODIM = T::ODIM };$/;"	e	enum:LegionRuntime::Arrays::DynamicMapping::__anon2
IDIM	legion_runtime/arrays.h	/^      static const unsigned IDIM = IDIM_;$/;"	m	class:LegionRuntime::Arrays::Mapping
IDType	legion_runtime/legion_spy.h	/^      typedef LegionRuntime::LowLevel::IDType IDType;$/;"	t	namespace:LegionRuntime::HighLevel::LegionSpy
IDType	legion_runtime/lowlevel.h	/^    typedef unsigned IDType;$/;"	t	namespace:LegionRuntime::LowLevel
IDType	legion_runtime/lowlevel.h	/^    typedef unsigned long long IDType;$/;"	t	namespace:LegionRuntime::LowLevel
ID_ALLOCATOR	legion_runtime/lowlevel_impl.h	/^	ID_ALLOCATOR,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_EVENT	legion_runtime/lowlevel_impl.h	/^	ID_EVENT,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_GLOBAL_MEM	legion_runtime/lowlevel_impl.h	/^	ID_GLOBAL_MEM = (1U << INDEX_H_BITS) - 1,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Specials
ID_INDEXSPACE	legion_runtime/lowlevel_impl.h	/^	ID_INDEXSPACE,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_INSTANCE	legion_runtime/lowlevel_impl.h	/^	ID_INSTANCE,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_INVALID	legion_runtime/lowlevel_impl.h	/^	ID_INVALID = 0,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Specials
ID_LOCK	legion_runtime/lowlevel_impl.h	/^	ID_LOCK,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_MEMORY	legion_runtime/lowlevel_impl.h	/^	ID_MEMORY,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_PROCESSOR	legion_runtime/lowlevel_impl.h	/^	ID_PROCESSOR,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_PROCGROUP	legion_runtime/lowlevel_impl.h	/^	ID_PROCGROUP,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_SPECIAL	legion_runtime/lowlevel_impl.h	/^	ID_SPECIAL,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_Specials	legion_runtime/lowlevel_impl.h	/^      enum ID_Specials {$/;"	g	class:LegionRuntime::LowLevel::ID
ID_TYPE	legion_runtime/lowlevel_impl.h	/^      static const ID::ID_Types ID_TYPE = ID::ID_EVENT;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
ID_TYPE	legion_runtime/lowlevel_impl.h	/^      static const ID::ID_Types ID_TYPE = ID::ID_INDEXSPACE;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
ID_TYPE	legion_runtime/lowlevel_impl.h	/^      static const ID::ID_Types ID_TYPE = ID::ID_LOCK;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
ID_TYPE	legion_runtime/lowlevel_impl.h	/^      static const ID::ID_Types ID_TYPE = ID::ID_PROCGROUP;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
ID_Types	legion_runtime/lowlevel_impl.h	/^      enum ID_Types {$/;"	g	class:LegionRuntime::LowLevel::ID
ID_UNUSED_1	legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_1,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_11	legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_11,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_13	legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_13,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_15	legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_15,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_3	legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_3,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_5	legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_5,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_7	legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_7,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
INACTIVE_STATE	legion_runtime/garbage_collection.h	/^        INACTIVE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
INCREMENT_ARG_LIST	acpi/acpica/acmacros.h	329;"	d
INDEX_BITS	legion_runtime/lowlevel_impl.h	/^	INDEX_BITS = INDEX_H_BITS + INDEX_L_BITS,$/;"	e	enum:LegionRuntime::LowLevel::ID::__anon21
INDEX_DIM	test/circuit.h	37;"	d
INDEX_H_BITS	legion_runtime/lowlevel_impl.h	/^	INDEX_H_BITS = 12,$/;"	e	enum:LegionRuntime::LowLevel::ID::__anon21
INDEX_L_BITS	legion_runtime/lowlevel_impl.h	/^	INDEX_L_BITS = 32,$/;"	e	enum:LegionRuntime::LowLevel::ID::__anon21
INDEX_PARTITION_DELETION	legion_runtime/legion_ops.h	/^        INDEX_PARTITION_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
INDEX_PARTITION_DESTRUCTION_MESSAGE	legion_runtime/runtime.h	/^        INDEX_PARTITION_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
INDEX_SPACE_DELETION	legion_runtime/legion_ops.h	/^        INDEX_SPACE_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
INDEX_SPACE_DESTRUCTION_MESSAGE	legion_runtime/runtime.h	/^        INDEX_SPACE_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
INDEX_TASK_ALLOC	legion_runtime/legion_allocation.h	/^      INDEX_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
INDEX_TASK_KIND	legion_runtime/legion_tasks.h	/^        INDEX_TASK_KIND,$/;"	e	enum:LegionRuntime::HighLevel::TaskOp::TaskKind
INDEX_TYPE	test/circuit.h	36;"	d
INDIVIDUAL_REMOTE_COMMIT	legion_runtime/runtime.h	/^        INDIVIDUAL_REMOTE_COMMIT,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
INDIVIDUAL_REMOTE_COMPLETE	legion_runtime/runtime.h	/^        INDIVIDUAL_REMOTE_COMPLETE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
INDIVIDUAL_REMOTE_MAPPED	legion_runtime/runtime.h	/^        INDIVIDUAL_REMOTE_MAPPED,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
INDIVIDUAL_TASK_ALLOC	legion_runtime/legion_allocation.h	/^      INDIVIDUAL_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
INDIVIDUAL_TASK_KIND	legion_runtime/legion_tasks.h	/^        INDIVIDUAL_TASK_KIND,$/;"	e	enum:LegionRuntime::HighLevel::TaskOp::TaskKind
INFO	dev/kbd.c	39;"	d	file:
INFO	dev/virtio_pci.c	10;"	d	file:
INFO	nautilus/vc.c	53;"	d	file:
INITIALIZE_LOGICAL_CALL	legion_runtime/region_tree.h	/^      INITIALIZE_LOGICAL_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
INITIALIZE_PHYSICAL_STATE_CALL	legion_runtime/region_tree.h	/^      INITIALIZE_PHYSICAL_STATE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
INIT_FIELD_TASK_ID	test/custom_mapper.cc	/^  INIT_FIELD_TASK_ID,$/;"	e	enum:TaskIDs	file:
INIT_FIELD_TASK_ID	test/multiple_partitions.cc	/^  INIT_FIELD_TASK_ID,$/;"	e	enum:TaskIDs	file:
INIT_FIELD_TASK_ID	test/partitioning.cc	/^  INIT_FIELD_TASK_ID,$/;"	e	enum:TaskIDs	file:
INIT_FIELD_TASK_ID	test/privileges.cc	/^  INIT_FIELD_TASK_ID,$/;"	e	enum:TaskIDs	file:
INIT_FUNC_ID	legion_runtime/legion_types.h	/^      INIT_FUNC_ID          = LowLevel::Processor::TASK_ID_PROCESSOR_INIT,$/;"	e	enum:LegionRuntime::HighLevel::__anon12
INLINE_MAPPABLE	legion_runtime/legion.h	/^        INLINE_MAPPABLE,$/;"	e	enum:LegionRuntime::HighLevel::Mappable::MappableKind
INLINE_TASK_ALLOC	legion_runtime/legion_allocation.h	/^      INLINE_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
INNER_BITS	legion_runtime/lowlevel_impl.h	/^      static const size_t INNER_BITS = _INNER_BITS;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableAllocator
INNER_LOOP_DELAY	nautilus/idle.c	29;"	d	file:
INSTANCE_MANAGER_ALLOC	legion_runtime/legion_allocation.h	/^      INSTANCE_MANAGER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
INTMAX_RANK	nautilus/fmtout.c	77;"	d	file:
INT_ARG	legion_runtime/default_mapper.cc	68;"	d	file:
INT_ARG	legion_runtime/default_mapper.cc	88;"	d	file:
INT_ARG	legion_runtime/lowlevel.cc	8134;"	d	file:
INT_ARG	legion_runtime/runtime.cc	11523;"	d	file:
INT_ARG	legion_runtime/runtime.cc	11622;"	d	file:
INT_ARG	legion_runtime/shared_lowlevel.cc	5155;"	d	file:
INT_ARG	legion_runtime/shared_lowlevel.cc	5167;"	d	file:
INVALIDATE_INSTANCE_VIEWS_CALL	legion_runtime/region_tree.h	/^      INVALIDATE_INSTANCE_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
INVALIDATE_LOGICAL_CALL	legion_runtime/region_tree.h	/^      INVALIDATE_LOGICAL_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
INVALIDATE_PHYSICAL_STATE_CALL	legion_runtime/region_tree.h	/^      INVALIDATE_PHYSICAL_STATE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
INVALIDATE_REDUCTION_VIEWS_CALL	legion_runtime/region_tree.h	/^      INVALIDATE_REDUCTION_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
IN_LEGION	legion_runtime/runtime.h	/^        IN_LEGION,$/;"	e	enum:LegionRuntime::HighLevel::MPILegionHandshake::Impl::ControlState
IN_MPI	legion_runtime/runtime.h	/^        IN_MPI,$/;"	e	enum:LegionRuntime::HighLevel::MPILegionHandshake::Impl::ControlState
IOAPIC_DEBUG	dev/ioapic.c	34;"	d	file:
IOAPIC_PRINT	dev/ioapic.c	35;"	d	file:
IO_INPUT	lua_src/liolib.c	121;"	d	file:
IO_OUTPUT	lua_src/liolib.c	122;"	d	file:
IO_PREFIX	lua_src/liolib.c	120;"	d	file:
ISSUE_UPDATE_COPIES_CALL	legion_runtime/region_tree.h	/^      ISSUE_UPDATE_COPIES_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ISSUE_UPDATE_REDUCTIONS_CALL	legion_runtime/region_tree.h	/^      ISSUE_UPDATE_REDUCTIONS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
IS_ATOMIC	legion_runtime/legion_utilities.h	61;"	d
IS_EXCLUSIVE	legion_runtime/legion_utilities.h	60;"	d
IS_NO_ACCESS	legion_runtime/legion_utilities.h	52;"	d
IS_PROMOTED	legion_runtime/legion_utilities.h	59;"	d
IS_READ_ONLY	legion_runtime/legion_utilities.h	53;"	d
IS_REDUCE	legion_runtime/legion_utilities.h	58;"	d
IS_RELAXED	legion_runtime/legion_utilities.h	63;"	d
IS_SIMULT	legion_runtime/legion_utilities.h	62;"	d
IS_WRITE	legion_runtime/legion_utilities.h	56;"	d
IS_WRITE_ONLY	legion_runtime/legion_utilities.h	57;"	d
IT	legion_runtime/lowlevel_impl.h	/^      typedef int IT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableAllocator
IT	legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::IT IT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTable
IT	legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::IT IT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableFreeList
ImmovableLock	legion_runtime/utilities.h	/^    ImmovableLock(bool initialize = false) : mutex(NULL) { $/;"	f	class:LegionRuntime::ImmovableLock
ImmovableLock	legion_runtime/utilities.h	/^    ImmovableLock(const ImmovableLock &other) : mutex(other.mutex) { }$/;"	f	class:LegionRuntime::ImmovableLock
ImmovableLock	legion_runtime/utilities.h	/^  class ImmovableLock {$/;"	c	namespace:LegionRuntime
Impl	legion_runtime/legion_ops.cc	/^    Predicate::Impl::Impl(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
Impl	legion_runtime/legion_ops.h	/^    class Predicate::Impl : public Operation {$/;"	c	class:LegionRuntime::HighLevel::Predicate
Impl	legion_runtime/lowlevel.cc	/^    Event::Impl::Impl(void)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
Impl	legion_runtime/lowlevel.cc	/^    IndexSpace::Impl::Impl(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
Impl	legion_runtime/lowlevel.cc	/^    IndexSpaceAllocator::Impl::Impl(IndexSpace::Impl *_is_impl)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
Impl	legion_runtime/lowlevel.cc	/^    Processor::Impl::Impl(Processor _me, Processor::Kind _kind, Processor _util \/*= Processor::NO_PROC*\/)$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
Impl	legion_runtime/lowlevel.cc	/^    RegionInstance::Impl::Impl(RegionInstance _me, IndexSpace _is, Memory _memory, off_t _offset, size_t _size, ReductionOpID _redopid,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
Impl	legion_runtime/lowlevel.cc	/^    RegionInstance::Impl::Impl(RegionInstance _me, Memory _memory)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
Impl	legion_runtime/lowlevel.cc	/^    Reservation::Impl::Impl(void)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
Impl	legion_runtime/lowlevel.cc	/^    class IndexSpaceAllocator::Impl {$/;"	c	class:LegionRuntime::LowLevel::IndexSpaceAllocator	file:
Impl	legion_runtime/lowlevel_impl.h	/^    Impl(Memory _me, size_t _size, MemoryKind _kind, size_t _alignment, Kind _lowlevel_kind)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
Impl	legion_runtime/lowlevel_impl.h	/^    class Event::Impl {$/;"	c	class:LegionRuntime::LowLevel::Event
Impl	legion_runtime/lowlevel_impl.h	/^    class IndexSpace::Impl {$/;"	c	class:LegionRuntime::LowLevel::IndexSpace
Impl	legion_runtime/lowlevel_impl.h	/^    class Memory::Impl {$/;"	c	class:LegionRuntime::LowLevel::Memory
Impl	legion_runtime/lowlevel_impl.h	/^    class Processor::Impl {$/;"	c	class:LegionRuntime::LowLevel::Processor
Impl	legion_runtime/lowlevel_impl.h	/^    class RegionInstance::Impl {$/;"	c	class:LegionRuntime::LowLevel::RegionInstance
Impl	legion_runtime/lowlevel_impl.h	/^    class Reservation::Impl {$/;"	c	class:LegionRuntime::LowLevel::Reservation
Impl	legion_runtime/runtime.cc	/^    ArgumentMap::Impl::Impl(ArgumentMapStore *st)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
Impl	legion_runtime/runtime.cc	/^    ArgumentMap::Impl::Impl(ArgumentMapStore *st,$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
Impl	legion_runtime/runtime.cc	/^    ArgumentMap::Impl::Impl(const Impl &impl)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
Impl	legion_runtime/runtime.cc	/^    ArgumentMap::Impl::Impl(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
Impl	legion_runtime/runtime.cc	/^    Future::Impl::Impl(Runtime *rt, bool register_future, DistributedID did, $/;"	f	class:LegionRuntime::HighLevel::Future::Impl
Impl	legion_runtime/runtime.cc	/^    Future::Impl::Impl(const Future::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
Impl	legion_runtime/runtime.cc	/^    FutureMap::Impl::Impl(SingleTask *ctx, Event comp_event, Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
Impl	legion_runtime/runtime.cc	/^    FutureMap::Impl::Impl(SingleTask *ctx, Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
Impl	legion_runtime/runtime.cc	/^    FutureMap::Impl::Impl(SingleTask *ctx, TaskOp *t, Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
Impl	legion_runtime/runtime.cc	/^    FutureMap::Impl::Impl(const FutureMap::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
Impl	legion_runtime/runtime.cc	/^    Grant::Impl::Impl(const Grant::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
Impl	legion_runtime/runtime.cc	/^    Grant::Impl::Impl(const std::vector<ReservationRequest> &reqs)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
Impl	legion_runtime/runtime.cc	/^    Grant::Impl::Impl(void)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
Impl	legion_runtime/runtime.cc	/^    MPILegionHandshake::Impl::Impl(bool in_mpi, int mpi_parts, int legion_parts)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
Impl	legion_runtime/runtime.cc	/^    MPILegionHandshake::Impl::Impl(const MPILegionHandshake::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
Impl	legion_runtime/runtime.cc	/^    PhysicalRegion::Impl::Impl(const PhysicalRegion::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
Impl	legion_runtime/runtime.cc	/^    PhysicalRegion::Impl::Impl(const RegionRequirement &r, Event ready, bool m, $/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
Impl	legion_runtime/runtime.h	/^    class ArgumentMap::Impl : public Collectable {$/;"	c	class:LegionRuntime::HighLevel::ArgumentMap
Impl	legion_runtime/runtime.h	/^    class Future::Impl : public DistributedCollectable {$/;"	c	class:LegionRuntime::HighLevel::Future
Impl	legion_runtime/runtime.h	/^    class FutureMap::Impl : public Collectable {$/;"	c	class:LegionRuntime::HighLevel::FutureMap
Impl	legion_runtime/runtime.h	/^    class Grant::Impl : public Collectable {$/;"	c	class:LegionRuntime::HighLevel::Grant
Impl	legion_runtime/runtime.h	/^    class MPILegionHandshake::Impl : public Collectable {$/;"	c	class:LegionRuntime::HighLevel::MPILegionHandshake
Impl	legion_runtime/runtime.h	/^    class PhysicalRegion::Impl : public Collectable {$/;"	c	class:LegionRuntime::HighLevel::PhysicalRegion
Impl	legion_runtime/shared_lowlevel.cc	/^	Impl(int idx, size_t num, bool activate = false) {$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
Impl	legion_runtime/shared_lowlevel.cc	/^        Impl(int idx, IndexSpace r, Memory m, size_t num, size_t alloc, $/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
Impl	legion_runtime/shared_lowlevel.cc	/^        Impl(int idx, IndexSpace::Impl *par, const ElementMask &m, bool activate = false) {$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
Impl	legion_runtime/shared_lowlevel.cc	/^      Impl(IndexSpace is)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
Impl	legion_runtime/shared_lowlevel.cc	/^    class IndexSpace::Impl {$/;"	c	class:LegionRuntime::LowLevel::IndexSpace	file:
Impl	legion_runtime/shared_lowlevel.cc	/^    class IndexSpaceAllocator::Impl {$/;"	c	class:LegionRuntime::LowLevel::IndexSpaceAllocator	file:
Impl	legion_runtime/shared_lowlevel.cc	/^    class RegionInstance::Impl : public Triggerable { $/;"	c	class:LegionRuntime::LowLevel::RegionInstance	file:
IndexAllocator	legion_runtime/legion.cc	/^    IndexAllocator::IndexAllocator(IndexSpace space, IndexSpaceAllocator *a)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
IndexAllocator	legion_runtime/legion.cc	/^    IndexAllocator::IndexAllocator(const IndexAllocator &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
IndexAllocator	legion_runtime/legion.cc	/^    IndexAllocator::IndexAllocator(void)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
IndexAllocator	legion_runtime/legion.h	/^    class IndexAllocator {$/;"	c	namespace:LegionRuntime::HighLevel
IndexIterator	legion_runtime/legion.cc	/^    IndexIterator::IndexIterator(IndexSpace space)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
IndexIterator	legion_runtime/legion.cc	/^    IndexIterator::IndexIterator(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
IndexIterator	legion_runtime/legion.cc	/^    IndexIterator::IndexIterator(const IndexIterator &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
IndexIterator	legion_runtime/legion.h	/^    class IndexIterator {$/;"	c	namespace:LegionRuntime::HighLevel
IndexLauncher	legion_runtime/legion.cc	/^    IndexLauncher::IndexLauncher(Processor::TaskFuncID tid, Domain dom,$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
IndexLauncher	legion_runtime/legion.cc	/^    IndexLauncher::IndexLauncher(void)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
IndexLauncher	legion_runtime/legion.h	/^    struct IndexLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
IndexPartNode	legion_runtime/region_tree.cc	/^    IndexPartNode::IndexPartNode(IndexPartition p, IndexSpaceNode *par,$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
IndexPartNode	legion_runtime/region_tree.cc	/^    IndexPartNode::IndexPartNode(const IndexPartNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
IndexPartNode	legion_runtime/region_tree.h	/^    class IndexPartNode : public IndexTreeNode { $/;"	c	namespace:LegionRuntime::HighLevel
IndexPartition	legion_runtime/legion_types.h	/^    typedef unsigned int IndexPartition;$/;"	t	namespace:LegionRuntime::HighLevel
IndexSpace	legion_runtime/legion_types.h	/^    typedef LowLevel::IndexSpace IndexSpace;$/;"	t	namespace:LegionRuntime::HighLevel
IndexSpace	legion_runtime/lowlevel.h	/^    class IndexSpace {$/;"	c	namespace:LegionRuntime::LowLevel
IndexSpaceAllocator	legion_runtime/legion_types.h	/^    typedef LowLevel::IndexSpaceAllocator IndexSpaceAllocator;$/;"	t	namespace:LegionRuntime::HighLevel
IndexSpaceAllocator	legion_runtime/lowlevel.h	/^      IndexSpaceAllocator(Impl *_impl) : impl(_impl) {}$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
IndexSpaceAllocator	legion_runtime/lowlevel.h	/^      IndexSpaceAllocator(const IndexSpaceAllocator& to_copy)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
IndexSpaceAllocator	legion_runtime/lowlevel.h	/^    class IndexSpaceAllocator {$/;"	c	namespace:LegionRuntime::LowLevel
IndexSpaceNode	legion_runtime/region_tree.cc	/^    IndexSpaceNode::IndexSpaceNode(Domain d, IndexPartNode *par, Color c,$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
IndexSpaceNode	legion_runtime/region_tree.cc	/^    IndexSpaceNode::IndexSpaceNode(const IndexSpaceNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
IndexSpaceNode	legion_runtime/region_tree.h	/^    class IndexSpaceNode : public IndexTreeNode {$/;"	c	namespace:LegionRuntime::HighLevel
IndexSpaceRequirement	legion_runtime/legion.cc	/^    IndexSpaceRequirement::IndexSpaceRequirement(IndexSpace _handle, $/;"	f	class:LegionRuntime::HighLevel::IndexSpaceRequirement
IndexSpaceRequirement	legion_runtime/legion.cc	/^    IndexSpaceRequirement::IndexSpaceRequirement(void)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceRequirement
IndexSpaceRequirement	legion_runtime/legion.h	/^    struct IndexSpaceRequirement {$/;"	s	namespace:LegionRuntime::HighLevel
IndexSpaceTableAllocator	legion_runtime/lowlevel_impl.h	/^    typedef DynamicTableAllocator<IndexSpace::Impl, 10, 4> IndexSpaceTableAllocator;$/;"	t
IndexTask	legion_runtime/legion_tasks.cc	/^    IndexTask::IndexTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
IndexTask	legion_runtime/legion_tasks.cc	/^    IndexTask::IndexTask(const IndexTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
IndexTask	legion_runtime/legion_tasks.h	/^    class IndexTask : public MultiTask {$/;"	c	namespace:LegionRuntime::HighLevel
IndexTreeNode	legion_runtime/region_tree.cc	/^    IndexTreeNode::IndexTreeNode(Color c, unsigned d, RegionTreeForest *ctx)$/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
IndexTreeNode	legion_runtime/region_tree.cc	/^    IndexTreeNode::IndexTreeNode(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
IndexTreeNode	legion_runtime/region_tree.h	/^    class IndexTreeNode {$/;"	c	namespace:LegionRuntime::HighLevel
IndividualTask	legion_runtime/legion_tasks.cc	/^    IndividualTask::IndividualTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
IndividualTask	legion_runtime/legion_tasks.cc	/^    IndividualTask::IndividualTask(const IndividualTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
IndividualTask	legion_runtime/legion_tasks.h	/^    class IndividualTask : public SingleTask {$/;"	c	namespace:LegionRuntime::HighLevel
Inline	legion_runtime/legion.cc	/^    Inline::Inline(void)$/;"	f	class:LegionRuntime::HighLevel::Inline
Inline	legion_runtime/legion.h	/^    class Inline : public Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
InlineFnptr	legion_runtime/legion_types.h	/^    typedef void (*InlineFnptr)(const Task*,const std::vector<PhysicalRegion>&,$/;"	t	namespace:LegionRuntime::HighLevel
InlineLauncher	legion_runtime/legion.cc	/^    InlineLauncher::InlineLauncher(const RegionRequirement &req,$/;"	f	class:LegionRuntime::HighLevel::InlineLauncher
InlineLauncher	legion_runtime/legion.cc	/^    InlineLauncher::InlineLauncher(void)$/;"	f	class:LegionRuntime::HighLevel::InlineLauncher
InlineLauncher	legion_runtime/legion.h	/^    struct InlineLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
InlineTask	legion_runtime/legion_tasks.cc	/^    InlineTask::InlineTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
InlineTask	legion_runtime/legion_tasks.cc	/^    InlineTask::InlineTask(const InlineTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
InlineTask	legion_runtime/legion_tasks.h	/^    class InlineTask : public WrapperTask {$/;"	c	namespace:LegionRuntime::HighLevel
InputArgs	legion_runtime/legion.h	/^    struct InputArgs {$/;"	s	namespace:LegionRuntime::HighLevel
InstFrac	legion_runtime/legion_types.h	/^    typedef Fraction<unsigned long> InstFrac;$/;"	t	namespace:LegionRuntime::HighLevel
InstPair	legion_runtime/lowlevel_dma.cc	/^    typedef std::pair<RegionInstance, RegionInstance> InstPair;$/;"	t	namespace:LegionRuntime::LowLevel	file:
InstPairCopier	legion_runtime/lowlevel_dma.cc	/^      InstPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::InstPairCopier
InstPairCopier	legion_runtime/lowlevel_dma.cc	/^    class InstPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
InstanceID	legion_runtime/legion_types.h	/^    typedef unsigned int InstanceID;$/;"	t	namespace:LegionRuntime::HighLevel
InstanceManager	legion_runtime/region_tree.cc	/^    InstanceManager::InstanceManager(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
InstanceManager	legion_runtime/region_tree.cc	/^    InstanceManager::InstanceManager(const InstanceManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
InstanceManager	legion_runtime/region_tree.h	/^    class InstanceManager : public PhysicalManager {$/;"	c	namespace:LegionRuntime::HighLevel
InstanceRef	legion_runtime/region_tree.cc	/^    InstanceRef::InstanceRef(Event ready, Reservation lock, const ViewHandle &h)$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
InstanceRef	legion_runtime/region_tree.cc	/^    InstanceRef::InstanceRef(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
InstanceRef	legion_runtime/region_tree.h	/^    class InstanceRef {$/;"	c	namespace:LegionRuntime::HighLevel
InstanceView	legion_runtime/region_tree.cc	/^    InstanceView::InstanceView(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::InstanceView
InstanceView	legion_runtime/region_tree.h	/^    class InstanceView : public LogicalView {$/;"	c	namespace:LegionRuntime::HighLevel
Internal	legion_runtime/lowlevel_gpu.cc	/^      Internal(GPUProcessor *_gpu, int _gpu_index, $/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
Internal	legion_runtime/lowlevel_gpu.cc	/^    class GPUProcessor::Internal {$/;"	c	class:LegionRuntime::LowLevel::GPUProcessor	file:
IntersectInfo	legion_runtime/region_tree.h	/^        IntersectInfo(bool has, bool own)$/;"	f	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
IntersectInfo	legion_runtime/region_tree.h	/^        IntersectInfo(bool has, bool own, const std::set<Domain> &ds)$/;"	f	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
IntersectInfo	legion_runtime/region_tree.h	/^        IntersectInfo(void)$/;"	f	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
IntersectInfo	legion_runtime/region_tree.h	/^      struct IntersectInfo {$/;"	s	class:LegionRuntime::HighLevel::IndexTreeNode
IntervalTree	legion_runtime/interval_tree.h	/^    IntervalTree<T,DISCRETE>::IntervalTree(const IntervalTree &rhs)$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
IntervalTree	legion_runtime/interval_tree.h	/^    IntervalTree<T,DISCRETE>::IntervalTree(void)$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
IntervalTree	legion_runtime/interval_tree.h	/^    class IntervalTree {$/;"	c	namespace:LegionRuntime::HighLevel
IntervalTreeNode	legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>::IntervalTreeNode(T left, T right)$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
IntervalTreeNode	legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>::IntervalTreeNode(const IntervalTreeNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
IntervalTreeNode	legion_runtime/interval_tree.h	/^    class IntervalTreeNode {$/;"	c	namespace:LegionRuntime::HighLevel
IsAStruct	legion_runtime/accessor.h	/^      struct IsAStruct {$/;"	s	namespace:LegionRuntime::Accessor::TemplateFu
IsAStruct	legion_runtime/legion.h	/^      struct IsAStruct {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
JOIN_FUNC	test/benchmark.h	12;"	d
JOIN_FUNC	test/benchmark.h	46;"	d
JobQueue	legion_runtime/lowlevel_impl.h	/^    JobQueue<JOBTYPE>::JobQueue(void)$/;"	f	class:LegionRuntime::LowLevel::JobQueue
JobQueue	legion_runtime/lowlevel_impl.h	/^    class JobQueue {$/;"	c	namespace:LegionRuntime::LowLevel
KBD_ACK_REG	dev/kbd.c	153;"	d	file:
KBD_CMD_REG	dev/kbd.c	154;"	d	file:
KBD_DATA_REG	dev/kbd.c	152;"	d	file:
KBD_RELEASE	dev/kbd.c	156;"	d	file:
KB_KEY_RELEASE	dev/kbd.c	48;"	d	file:
KBx	lua_src/lvm.c	497;"	d	file:
KMEM_DEBUG	nautilus/mm/kmem.c	42;"	d	file:
KMEM_ERROR	nautilus/mm/kmem.c	43;"	d	file:
KMEM_PRINT	nautilus/mm/kmem.c	44;"	d	file:
KMEM_WARN	nautilus/mm/kmem.c	45;"	d	file:
Keycode_QUEUE_SIZE	nautilus/vc.c	70;"	d	file:
Kind	legion_runtime/lowlevel.h	/^      enum Kind {$/;"	g	class:LegionRuntime::LowLevel::Memory
Kind	legion_runtime/lowlevel.h	/^      enum Kind {$/;"	g	class:LegionRuntime::LowLevel::Processor
L	lua_src/ldump.c	/^ lua_State* L;$/;"	m	struct:__anon47	file:
L	lua_src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	lua_src/lundump.c	/^ lua_State* L;$/;"	m	struct:__anon49	file:
LAST_ALLOC	legion_runtime/legion_allocation.h	/^      LAST_ALLOC, \/\/ must be last$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LAUNCHER_STACK_SIZE	nautilus/thread.c	1204;"	d	file:
LAUNCHPAD	nautilus/thread.c	1201;"	d	file:
LAUNCH_TASK	legion_runtime/legion_logging.h	/^    LAUNCH_TASK = 10,$/;"	e	enum:LegionRuntime::TimingKind
LAYOUT_DESCRIPTION_ALLOC	legion_runtime/legion_allocation.h	/^      LAYOUT_DESCRIPTION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LEAF	test/circuit.h	/^  static const bool LEAF = true;$/;"	m	class:CheckTask
LEAF_BITS	legion_runtime/lowlevel_impl.h	/^      static const size_t LEAF_BITS = _LEAF_BITS;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableAllocator
LEFT	nautilus/printk.c	522;"	d	file:
LEFT_DIR	legion_runtime/rectangle_set.h	/^        LEFT_DIR = 0,$/;"	e	enum:LegionRuntime::HighLevel::Segment::Direction
LEGION_LOGGING_CHECK_NO_EVENT	legion_runtime/legion_logging.h	34;"	d
LEGION_STATIC_ASSERT	legion_runtime/legion_types.h	157;"	d
LEVEL1_CACHE	legion_runtime/lowlevel.h	/^        LEVEL1_CACHE, \/\/ CPU L1 Visible to all processors on the node, better performance to one processor$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
LEVEL2_CACHE	legion_runtime/lowlevel.h	/^        LEVEL2_CACHE, \/\/ CPU L2 Visible to all processors on the node, better performance to one processor$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
LEVEL3_CACHE	legion_runtime/lowlevel.h	/^        LEVEL3_CACHE, \/\/ CPU L3 Visible to all processors on the node, better performance to processors on same socket $/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
LEVELS1	lua_src/lauxlib.c	40;"	d	file:
LEVELS2	lua_src/lauxlib.c	41;"	d	file:
LEVEL_DEBUG	legion_runtime/utilities.h	/^    LEVEL_DEBUG,$/;"	e	enum:LogLevel
LEVEL_ERROR	legion_runtime/utilities.h	/^    LEVEL_ERROR,$/;"	e	enum:LogLevel
LEVEL_INFO	legion_runtime/utilities.h	/^    LEVEL_INFO,$/;"	e	enum:LogLevel
LEVEL_NONE	legion_runtime/utilities.h	/^    LEVEL_NONE,$/;"	e	enum:LogLevel
LEVEL_PRINT	legion_runtime/utilities.h	/^    LEVEL_PRINT,$/;"	e	enum:LogLevel
LEVEL_SPEW	legion_runtime/utilities.h	/^    LEVEL_SPEW,$/;"	e	enum:LogLevel
LEVEL_WARNING	legion_runtime/utilities.h	/^    LEVEL_WARNING,$/;"	e	enum:LogLevel
LG	lua_src/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	lua_src/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LGNCG_CG_DATA_H_INCLUDED	test/hpcg/cg-data.h	31;"	d
LGNCG_CG_H_INCLUDED	test/hpcg/cg.h	31;"	d
LGNCG_CG_MAPPER_H_INCLUDED	test/hpcg/cg-mapper.h	31;"	d
LGNCG_COMP_DOTPROD_H_INCLUDED	test/hpcg/comp-dotprod.h	31;"	d
LGNCG_COMP_MG_H_INCLUDED	test/hpcg/comp-mg.h	31;"	d
LGNCG_COMP_PROLONGATION_H_INCLUDED	test/hpcg/comp-prolongation.h	31;"	d
LGNCG_COMP_RESTRICTION_H_INCLUDED	test/hpcg/comp-restriction.h	31;"	d
LGNCG_COMP_SPMV_H_INCLUDED	test/hpcg/comp-spmv.h	31;"	d
LGNCG_COMP_SYMGS_H_INCLUDED	test/hpcg/comp-symgs.h	31;"	d
LGNCG_COMP_WAXPBY_H_INCLUDED	test/hpcg/comp-waxpby.h	31;"	d
LGNCG_DENSE_DOTPROD_STRIP_SIZE	test/hpcg/comp-dotprod.h	42;"	d
LGNCG_DENSE_SPMV_STRIP_SIZE	test/hpcg/comp-spmv.h	42;"	d
LGNCG_DENSE_WAXPBY_STRIP_SIZE	test/hpcg/comp-waxpby.h	42;"	d
LGNCG_DOTPROD_ACCUMULATE_H_INCLUDED	test/hpcg/dotprod-accumulate.h	31;"	d
LGNCG_DOTPROD_RED_ID	test/hpcg/tids.h	/^    LGNCG_DOTPROD_RED_ID = 1$/;"	e	enum:lgncg::__anon30
LGNCG_DOTPROD_TID	test/hpcg/tids.h	/^    LGNCG_DOTPROD_TID      = 8,$/;"	e	enum:lgncg::__anon29
LGNCG_GEOMETRY_H_INCLUDED	test/hpcg/geometry.h	45;"	d
LGNCG_H_INCLUDED	test/hpcg/lgncg.h	31;"	d
LGNCG_MG_DATA_H_INCLUDED	test/hpcg/mg-data.h	31;"	d
LGNCG_PROLONGATION_TID	test/hpcg/tids.h	/^    LGNCG_PROLONGATION_TID = 11,$/;"	e	enum:lgncg::__anon29
LGNCG_RESTRICTION_TID	test/hpcg/tids.h	/^    LGNCG_RESTRICTION_TID  = 10,$/;"	e	enum:lgncg::__anon29
LGNCG_SETUP_HALO_H_INCLUDED	test/hpcg/setup-halo.h	45;"	d
LGNCG_SETUP_HALO_TID	test/hpcg/tids.h	/^    LGNCG_SETUP_HALO_TID   = 12$/;"	e	enum:lgncg::__anon29
LGNCG_SPARSEMAT_H_INCLUDED	test/hpcg/sparsemat.h	31;"	d
LGNCG_SPMV_TID	test/hpcg/tids.h	/^    LGNCG_SPMV_TID         = 6,$/;"	e	enum:lgncg::__anon29
LGNCG_SYMGS_TID	test/hpcg/tids.h	/^    LGNCG_SYMGS_TID        = 9,$/;"	e	enum:lgncg::__anon29
LGNCG_TIDS_H_INCLUDED	test/hpcg/tids.h	31;"	d
LGNCG_UTILS_H_INCLUDED	test/hpcg/utils.h	31;"	d
LGNCG_VECCP_H_INCLUDED	test/hpcg/veccp.h	31;"	d
LGNCG_VECCP_TID	test/hpcg/tids.h	/^    LGNCG_VECCP_TID        = 4,$/;"	e	enum:lgncg::__anon29
LGNCG_VECOR_H_INCLUDED	test/hpcg/vector.h	31;"	d
LGNCG_VEC_ZERO_H_INCLUDED	test/hpcg/vec-zero.h	31;"	d
LGNCG_VEC_ZERO_TID	test/hpcg/tids.h	/^    LGNCG_VEC_ZERO_TID     = 5,$/;"	e	enum:lgncg::__anon29
LGNCG_WAXPBY_TID	test/hpcg/tids.h	/^    LGNCG_WAXPBY_TID       = 7,$/;"	e	enum:lgncg::__anon29
LHS	legion_runtime/lowlevel.h	/^      typedef int LHS;$/;"	t	class:LegionRuntime::LowLevel::MyReductionOp
LHS	test/circuit.h	/^  typedef float LHS;$/;"	t	class:AccumulateCharge
LHS	test/hpcg/dotprod-accumulate.h	/^    typedef double LHS;$/;"	t	class:lgncg::DotProdAccumulate
LHS	test/saxpy_array.cc	/^  typedef float LHS;$/;"	t	struct:Add	file:
LHS_assign	lua_src/lparser.c	/^struct LHS_assign {$/;"	s	file:
LIBCCOMPAT	lua_src/loslib.c	18;"	d	file:
LIBCCOMPAT	nautilus/libccompat.c	32;"	d	file:
LIB_FAIL	lua_src/loadlib.c	222;"	d	file:
LIB_FAIL	lua_src/loadlib.c	223;"	d	file:
LIB_FAIL	lua_src/loadlib.c	98;"	d	file:
LIB_LUA	lua_src/lauxlib.c	15;"	d	file:
LIB_LUA	lua_src/liolib.c	27;"	d	file:
LINE_REG_OFFSET	arch/k1om/xeon_phi.c	49;"	d	file:
LIST_MANAGER_ALLOC	legion_runtime/legion_allocation.h	/^      LIST_MANAGER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LL	lua_src/lobject.c	244;"	d	file:
LOCAL_ARGS_ALLOC	legion_runtime/legion_allocation.h	/^      LOCAL_ARGS_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LOCAL_MEM	legion_runtime/shared_lowlevel.cc	82;"	d	file:
LOCK	nautilus/vc.c	57;"	d	file:
LOCK	test/benchmark.h	16;"	d
LOCK	test/benchmark.h	49;"	d
LOCK_COUNT	test/benchmark.c	89;"	d	file:
LOCK_DEINIT	test/benchmark.h	15;"	d
LOCK_DEINIT	test/benchmark.h	48;"	d
LOCK_FREE_MERGED_EVENTS	legion_runtime/lowlevel.cc	1079;"	d	file:
LOCK_GRANT_MSGID	legion_runtime/lowlevel.cc	/^      LOCK_GRANT_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
LOCK_INIT	test/benchmark.h	14;"	d
LOCK_INIT	test/benchmark.h	47;"	d
LOCK_RELEASE_MSGID	legion_runtime/lowlevel.cc	/^      LOCK_RELEASE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
LOCK_REQUEST_MSGID	legion_runtime/lowlevel.cc	/^      LOCK_REQUEST_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
LOCK_T	test/benchmark.h	13;"	d
LOCK_T	test/benchmark.h	42;"	d
LOC_PROC	legion_runtime/lowlevel.h	/^	LOC_PROC, \/\/ Latency core$/;"	e	enum:LegionRuntime::LowLevel::Processor::Kind
LOG2_LOOKUP	legion_runtime/legion_types.h	134;"	d
LOGICAL_FIELD_STATE_ALLOC	legion_runtime/legion_allocation.h	/^      LOGICAL_FIELD_STATE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LOGICAL_FIELD_TREE	legion_runtime/legion_types.h	43;"	d
LOGICAL_FIELD_VERSIONS_ALLOC	legion_runtime/legion_allocation.h	/^      LOGICAL_FIELD_VERSIONS_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LOGICAL_PARTITION_DELETION	legion_runtime/legion_ops.h	/^        LOGICAL_PARTITION_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
LOGICAL_PARTITION_DESTRUCTION_MESSAGE	legion_runtime/runtime.h	/^        LOGICAL_PARTITION_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
LOGICAL_REGION_DELETION	legion_runtime/legion_ops.h	/^        LOGICAL_REGION_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
LOGICAL_REGION_DESTRUCTION_MESSAGE	legion_runtime/runtime.h	/^        LOGICAL_REGION_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
LOGICAL_VIEW_ALLOC	legion_runtime/legion_allocation.h	/^      LOGICAL_VIEW_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LONG_LOCK_COUNT	test/benchmark.c	88;"	d	file:
LOWLEVEL_DMA_H	legion_runtime/lowlevel_dma.h	17;"	d
LOWLEVEL_GPU_H	legion_runtime/lowlevel_gpu.h	17;"	d
LOWLEVEL_IMPL_H	legion_runtime/lowlevel_impl.h	17;"	d
LStream	lua_src/liolib.c	/^typedef luaL_Stream LStream;$/;"	t	file:
LT	legion_runtime/lowlevel_impl.h	/^      typedef GASNetHSL LT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableAllocator
LT	legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::LT LT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTable
LT	legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::LT LT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableFreeList
LUAI_GCMAJOR	lua_src/lstate.c	34;"	d	file:
LUAI_GCMUL	lua_src/lstate.c	38;"	d	file:
LUAI_GCPAUSE	lua_src/lstate.c	30;"	d	file:
LUAI_HASHLIMIT	lua_src/lstring.c	26;"	d	file:
LUAI_THROW	lua_src/ldo.c	55;"	d	file:
LUAI_THROW	lua_src/ldo.c	62;"	d	file:
LUAI_THROW	lua_src/ldo.c	69;"	d	file:
LUAI_TRY	lua_src/ldo.c	56;"	d	file:
LUAI_TRY	lua_src/ldo.c	63;"	d	file:
LUAI_TRY	lua_src/ldo.c	70;"	d	file:
LUA_CORE	lua_src/lapi.c	12;"	d	file:
LUA_CORE	lua_src/lcode.c	11;"	d	file:
LUA_CORE	lua_src/lctype.c	8;"	d	file:
LUA_CORE	lua_src/ldebug.c	14;"	d	file:
LUA_CORE	lua_src/ldo.c	13;"	d	file:
LUA_CORE	lua_src/ldump.c	10;"	d	file:
LUA_CORE	lua_src/lfunc.c	11;"	d	file:
LUA_CORE	lua_src/lgc.c	10;"	d	file:
LUA_CORE	lua_src/llex.c	12;"	d	file:
LUA_CORE	lua_src/lmem.c	11;"	d	file:
LUA_CORE	lua_src/lobject.c	13;"	d	file:
LUA_CORE	lua_src/lopcodes.c	9;"	d	file:
LUA_CORE	lua_src/lparser.c	12;"	d	file:
LUA_CORE	lua_src/lstate.c	12;"	d	file:
LUA_CORE	lua_src/lstring.c	11;"	d	file:
LUA_CORE	lua_src/ltable.c	24;"	d	file:
LUA_CORE	lua_src/ltm.c	11;"	d	file:
LUA_CORE	lua_src/lua_open.c	12;"	d	file:
LUA_CORE	lua_src/lundump.c	10;"	d	file:
LUA_CORE	lua_src/lvm.c	13;"	d	file:
LUA_CORE	lua_src/lzio.c	11;"	d	file:
LUA_CPATH	lua_src/loadlib.c	42;"	d	file:
LUA_CPATHVERSION	lua_src/loadlib.c	48;"	d	file:
LUA_CSUBSEP	lua_src/loadlib.c	80;"	d	file:
LUA_EXEC_DIR	lua_src/loadlib.c	66;"	d	file:
LUA_FLTFRMLEN	lua_src/lstrlib.c	816;"	d	file:
LUA_FLTFRM_T	lua_src/lstrlib.c	817;"	d	file:
LUA_IGMARK	lua_src/loadlib.c	69;"	d	file:
LUA_INIT	lua_src/lua.c	36;"	d	file:
LUA_INITVERSION	lua_src/lua.c	39;"	d	file:
LUA_INTFRMLEN	lua_src/lstrlib.c	797;"	d	file:
LUA_INTFRMLEN	lua_src/lstrlib.c	802;"	d	file:
LUA_INTFRM_T	lua_src/lstrlib.c	798;"	d	file:
LUA_INTFRM_T	lua_src/lstrlib.c	803;"	d	file:
LUA_LIB	lua_src/lbaselib.c	15;"	d	file:
LUA_LIB	lua_src/lbitlib.c	8;"	d	file:
LUA_LIB	lua_src/lcorolib.c	12;"	d	file:
LUA_LIB	lua_src/ldblib.c	14;"	d	file:
LUA_LIB	lua_src/linit.c	17;"	d	file:
LUA_LIB	lua_src/liolib.c	26;"	d	file:
LUA_LIB	lua_src/lmathlib.c	18;"	d	file:
LUA_LIB	lua_src/loadlib.c	25;"	d	file:
LUA_LIB	lua_src/loslib.c	17;"	d	file:
LUA_LIB	lua_src/lstrlib.c	15;"	d	file:
LUA_LIB	lua_src/ltablib.c	12;"	d	file:
LUA_LLE_FLAGS	lua_src/loadlib.c	164;"	d	file:
LUA_LSUBSEP	lua_src/loadlib.c	84;"	d	file:
LUA_MAXCAPTURES	lua_src/lstrlib.c	28;"	d	file:
LUA_MAXINPUT	lua_src/lua.c	32;"	d	file:
LUA_NBITS	lua_src/lbitlib.c	18;"	d	file:
LUA_OFSEP	lua_src/loadlib.c	92;"	d	file:
LUA_PATH	lua_src/loadlib.c	38;"	d	file:
LUA_PATHSUFFIX	lua_src/loadlib.c	45;"	d	file:
LUA_PATHVERSION	lua_src/loadlib.c	47;"	d	file:
LUA_PATH_MARK	lua_src/loadlib.c	63;"	d	file:
LUA_PATH_SEP	lua_src/loadlib.c	60;"	d	file:
LUA_POF	lua_src/loadlib.c	89;"	d	file:
LUA_PROGNAME	lua_src/lua.c	28;"	d	file:
LUA_PROMPT	lua_src/lua.c	23;"	d	file:
LUA_PROMPT2	lua_src/lua.c	24;"	d	file:
LUA_STRFTIMEOPTIONS	lua_src/loslib.c	33;"	d	file:
LUA_STRFTIMEOPTIONS	lua_src/loslib.c	35;"	d	file:
LUA_TMPNAMBUFSIZE	lua_src/loslib.c	51;"	d	file:
LUA_TMPNAMBUFSIZE	lua_src/loslib.c	60;"	d	file:
LX	lua_src/lstate.c	/^typedef struct LX {$/;"	s	file:
LX	lua_src/lstate.c	/^} LX;$/;"	t	typeref:struct:LX	file:
L_ESC	lua_src/lstrlib.c	222;"	d	file:
LayoutDescription	legion_runtime/region_tree.cc	/^    LayoutDescription::LayoutDescription(const FieldMask &mask, const Domain &d,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
LayoutDescription	legion_runtime/region_tree.cc	/^    LayoutDescription::LayoutDescription(const LayoutDescription &rhs)$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
LayoutDescription	legion_runtime/region_tree.h	/^    class LayoutDescription {$/;"	c	namespace:LegionRuntime::HighLevel
LegionAllocation	legion_runtime/legion_allocation.h	/^    struct LegionAllocation {$/;"	s	namespace:LegionRuntime::HighLevel
LegionAllocator	legion_runtime/legion_allocation.h	/^      inline LegionAllocator(const LegionAllocator<T, A> &rhs)$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
LegionAllocator	legion_runtime/legion_allocation.h	/^      inline LegionAllocator(const LegionAllocator<U, A> &rhs) $/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
LegionAllocator	legion_runtime/legion_allocation.h	/^      inline explicit LegionAllocator(void) $/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
LegionAllocator	legion_runtime/legion_allocation.h	/^    class LegionAllocator {$/;"	c	namespace:LegionRuntime::HighLevel
LegionContainer	legion_runtime/legion_allocation.h	/^    struct LegionContainer {$/;"	s	namespace:LegionRuntime::HighLevel
LegionErrorType	legion_runtime/legion_types.h	/^    enum LegionErrorType {$/;"	g	namespace:LegionRuntime::HighLevel
LegionKeyValue	legion_runtime/legion_allocation.h	/^    struct LegionKeyValue {$/;"	s	namespace:LegionRuntime::HighLevel
LegionLogging	legion_runtime/legion.cc	/^    namespace LegionLogging {$/;"	n	namespace:LegionRuntime::HighLevel	file:
LegionLogging	legion_runtime/legion_logging.h	/^    namespace LegionLogging {$/;"	n	namespace:LegionRuntime::HighLevel
LegionProf	legion_runtime/legion.cc	/^    namespace LegionProf {$/;"	n	namespace:LegionRuntime::HighLevel	file:
LegionProf	legion_runtime/legion_profiling.h	/^    namespace LegionProf {$/;"	n	namespace:LegionRuntime::HighLevel
LegionRuntime	legion_runtime/accessor.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/alt_mappers.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/alt_mappers.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/arrays.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/atomics.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/default_mapper.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/default_mapper.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/field_tree.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/garbage_collection.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/garbage_collection.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/interval_tree.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/legion.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/legion.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/legion_allocation.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/legion_logging.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/legion_logging.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/legion_ops.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/legion_ops.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/legion_profiling.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/legion_spy.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/legion_spy.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/legion_tasks.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/legion_tasks.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/legion_trace.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/legion_trace.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/legion_types.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/legion_utilities.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/lowlevel.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/lowlevel.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/lowlevel_dma.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/lowlevel_dma.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/lowlevel_gpu.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/lowlevel_gpu.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/lowlevel_impl.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/mapping_utilities.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/mapping_utilities.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/rectangle_set.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/region_tree.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/region_tree.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/runtime.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/runtime.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/shared_lowlevel.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/shim_mapper.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	legion_runtime/shim_mapper.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	legion_runtime/utilities.h	/^namespace LegionRuntime {$/;"	n
LegionSerialization	legion_runtime/legion.h	/^    class LegionSerialization {$/;"	c	namespace:LegionRuntime::HighLevel
LegionSpy	legion_runtime/legion.cc	/^    namespace LegionSpy {$/;"	n	namespace:LegionRuntime::HighLevel	file:
LegionSpy	legion_runtime/legion_spy.h	/^    namespace LegionSpy {$/;"	n	namespace:LegionRuntime::HighLevel
LegionStack	legion_runtime/region_tree.cc	/^    LegionStack<T,MAX_SIZE,INC_SIZE>::LegionStack($/;"	f	class:LegionRuntime::HighLevel::LegionStack
LegionStack	legion_runtime/region_tree.cc	/^    LegionStack<T,MAX_SIZE,INC_SIZE>::LegionStack(void)$/;"	f	class:LegionRuntime::HighLevel::LegionStack
LegionStack	legion_runtime/region_tree.h	/^    class LegionStack {$/;"	c	namespace:LegionRuntime::HighLevel
LegionStaticAssert	legion_runtime/legion_types.h	/^  template<> struct LegionStaticAssert<true> { };$/;"	s	namespace:LegionRuntime
LegionTaskWrapper	legion_runtime/legion.h	/^    class LegionTaskWrapper {$/;"	c	namespace:LegionRuntime::HighLevel
LegionTrace	legion_runtime/legion_trace.cc	/^    LegionTrace::LegionTrace(TraceID t, SingleTask *c)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
LegionTrace	legion_runtime/legion_trace.cc	/^    LegionTrace::LegionTrace(const LegionTrace &rhs)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
LegionTrace	legion_runtime/legion_trace.h	/^    class LegionTrace {$/;"	c	namespace:LegionRuntime::HighLevel
LegionTypeInequality	legion_runtime/legion_types.h	/^  struct LegionTypeInequality {$/;"	s	namespace:LegionRuntime
LegionTypeInequality	legion_runtime/legion_types.h	/^  struct LegionTypeInequality<T,T> {$/;"	s	namespace:LegionRuntime
LinearSubrectIterator	legion_runtime/arrays.h	/^      typedef GenericLinearSubrectIterator<Blockify<DIM> > LinearSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Blockify
LinearSubrectIterator	legion_runtime/arrays.h	/^      typedef GenericLinearSubrectIterator<Linearization<DIM> > LinearSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Linearization
LinearSubrectIterator	legion_runtime/arrays.h	/^      typedef GenericLinearSubrectIterator<Mapping<IDIM, ODIM> > LinearSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Mapping
Linearization	legion_runtime/arrays.h	/^      Linearization(const Point<DIM> _strides, int _offset = 0)$/;"	f	class:LegionRuntime::Arrays::Linearization
Linearization	legion_runtime/arrays.h	/^      Linearization(void) {}$/;"	f	class:LegionRuntime::Arrays::Linearization
Linearization	legion_runtime/arrays.h	/^    class Linearization {$/;"	c	namespace:LegionRuntime::Arrays
ListReductionManager	legion_runtime/region_tree.cc	/^    ListReductionManager::ListReductionManager(RegionTreeForest *ctx, $/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
ListReductionManager	legion_runtime/region_tree.cc	/^    ListReductionManager::ListReductionManager(const ListReductionManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
ListReductionManager	legion_runtime/region_tree.h	/^    class ListReductionManager : public ReductionManager {$/;"	c	namespace:LegionRuntime::HighLevel
LoadBlock	lua_src/lundump.c	/^static void LoadBlock(LoadState* S, void* b, size_t size)$/;"	f	file:
LoadByte	lua_src/lundump.c	37;"	d	file:
LoadChar	lua_src/lundump.c	/^static int LoadChar(LoadState* S)$/;"	f	file:
LoadCode	lua_src/lundump.c	/^static void LoadCode(LoadState* S, Proto* f)$/;"	f	file:
LoadConstants	lua_src/lundump.c	/^static void LoadConstants(LoadState* S, Proto* f)$/;"	f	file:
LoadDebug	lua_src/lundump.c	/^static void LoadDebug(LoadState* S, Proto* f)$/;"	f	file:
LoadF	lua_src/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	lua_src/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadFunction	lua_src/lundump.c	/^static void LoadFunction(LoadState* S, Proto* f)$/;"	f	file:
LoadHeader	lua_src/lundump.c	/^static void LoadHeader(LoadState* S)$/;"	f	file:
LoadInt	lua_src/lundump.c	/^static int LoadInt(LoadState* S)$/;"	f	file:
LoadMem	lua_src/lundump.c	36;"	d	file:
LoadNumber	lua_src/lundump.c	/^static lua_Number LoadNumber(LoadState* S)$/;"	f	file:
LoadS	lua_src/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	lua_src/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	lua_src/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon49	file:
LoadString	lua_src/lundump.c	/^static TString* LoadString(LoadState* S)$/;"	f	file:
LoadUpvalues	lua_src/lundump.c	/^static void LoadUpvalues(LoadState* S, Proto* f)$/;"	f	file:
LoadVar	lua_src/lundump.c	38;"	d	file:
LoadVector	lua_src/lundump.c	39;"	d	file:
LocalCPUMemory	legion_runtime/lowlevel.cc	/^      LocalCPUMemory(Memory _me, size_t _size,$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
LocalCPUMemory	legion_runtime/lowlevel.cc	/^    class LocalCPUMemory : public Memory::Impl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
LocalFieldInfo	legion_runtime/legion_tasks.h	/^        LocalFieldInfo(FieldSpace sp, FieldID f,$/;"	f	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
LocalFieldInfo	legion_runtime/legion_tasks.h	/^        LocalFieldInfo(void)$/;"	f	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
LocalFieldInfo	legion_runtime/legion_tasks.h	/^      struct LocalFieldInfo {$/;"	s	class:LegionRuntime::HighLevel::SingleTask
LocalProcessor	legion_runtime/lowlevel.cc	/^      LocalProcessor(Processor _me, int _core_id, $/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
LocalProcessor	legion_runtime/lowlevel.cc	/^    class LocalProcessor : public Processor::Impl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
LocalReductionMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      LocalReductionMemPairCopier(Memory _src_mem, Memory _dst_mem,$/;"	f	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier
LocalReductionMemPairCopier	legion_runtime/lowlevel_dma.cc	/^    class LocalReductionMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
LocatorFields	test/circuit.h	/^enum LocatorFields {$/;"	g
Lock	legion_runtime/activemsg.cc	/^    Lock(SrcDataPool& _sdp) : sdp(_sdp) { gasnet_hsl_lock(&sdp.mutex); }$/;"	f	class:SrcDataPool::Lock
Lock	legion_runtime/activemsg.cc	/^  class Lock {$/;"	c	class:SrcDataPool	file:
Lock	legion_runtime/legion.cc	/^    Lock::Lock(Reservation r)$/;"	f	class:LegionRuntime::HighLevel::Lock
Lock	legion_runtime/legion.cc	/^    Lock::Lock(void)$/;"	f	class:LegionRuntime::HighLevel::Lock
Lock	legion_runtime/legion.h	/^    class Lock {$/;"	c	namespace:LegionRuntime::HighLevel
LockGrantArgs	legion_runtime/lowlevel.cc	/^    struct LockGrantArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
LockGrantMessage	legion_runtime/lowlevel.cc	/^				       handle_lock_grant> LockGrantMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
LockReleaseArgs	legion_runtime/lowlevel.cc	/^    struct LockReleaseArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
LockReleaseMessage	legion_runtime/lowlevel.cc	/^				      handle_lock_release> LockReleaseMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
LockRequest	legion_runtime/legion.h	/^    struct LockRequest {$/;"	s	namespace:LegionRuntime::HighLevel
LockRequestArgs	legion_runtime/lowlevel.cc	/^    struct LockRequestArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
LockRequestMessage	legion_runtime/lowlevel.cc	/^				      handle_lock_request> LockRequestMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
LockTraceItem	legion_runtime/lowlevel_impl.h	/^    struct LockTraceItem {$/;"	s	namespace:LegionRuntime::LowLevel
LogLevel	legion_runtime/utilities.h	/^  enum LogLevel {$/;"	g
LogMsgEventDependency	legion_runtime/legion_logging.h	/^        LogMsgEventDependency(Event one, Event two) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventDependency
LogMsgEventDependency	legion_runtime/legion_logging.h	/^      struct LogMsgEventDependency {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgEventTiming	legion_runtime/legion_logging.h	/^        LogMsgEventTiming(Processor proc, Event event, TimingKind kind, unsigned long long time) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventTiming
LogMsgEventTiming	legion_runtime/legion_logging.h	/^      struct LogMsgEventTiming {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgFieldCreation	legion_runtime/legion_logging.h	/^        LogMsgFieldCreation(FieldSpace handle, FieldID fid, bool local) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldCreation
LogMsgFieldCreation	legion_runtime/legion_logging.h	/^      struct LogMsgFieldCreation {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgFieldSpace	legion_runtime/legion_logging.h	/^        LogMsgFieldSpace(FieldSpace handle) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldSpace
LogMsgFieldSpace	legion_runtime/legion_logging.h	/^      struct LogMsgFieldSpace {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgFutureWait	legion_runtime/legion_logging.h	/^        LogMsgFutureWait(Processor proc, UniqueID context, UniqueID wait_on, WaitKind kind, unsigned long long time) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
LogMsgFutureWait	legion_runtime/legion_logging.h	/^      struct LogMsgFutureWait {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgIndexPartition	legion_runtime/legion_logging.h	/^        LogMsgIndexPartition(IndexSpace parent, IndexPartition handle,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexPartition
LogMsgIndexPartition	legion_runtime/legion_logging.h	/^      struct LogMsgIndexPartition {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgIndexSlice	legion_runtime/legion_logging.h	/^        LogMsgIndexSlice(UniqueID index_id, UniqueID slice_id) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSlice
LogMsgIndexSlice	legion_runtime/legion_logging.h	/^      struct LogMsgIndexSlice {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgIndexSubspace	legion_runtime/legion_logging.h	/^        LogMsgIndexSubspace(IndexPartition parent, IndexSpace handle,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSubspace
LogMsgIndexSubspace	legion_runtime/legion_logging.h	/^      struct LogMsgIndexSubspace {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgInlineWait	legion_runtime/legion_logging.h	/^        LogMsgInlineWait(Processor proc, UniqueID context, Event wait_on, WaitKind kind, unsigned long long time) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
LogMsgInlineWait	legion_runtime/legion_logging.h	/^      struct LogMsgInlineWait {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgLogicalRequirement	legion_runtime/legion_logging.h	/^        LogMsgLogicalRequirement(UniqueID unique_op_id, unsigned index,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
LogMsgLogicalRequirement	legion_runtime/legion_logging.h	/^      struct LogMsgLogicalRequirement {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgLowlevelCopy	legion_runtime/legion_logging.h	/^        LogMsgLowlevelCopy(PhysicalInstance src_instance,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
LogMsgLowlevelCopy	legion_runtime/legion_logging.h	/^      struct LogMsgLowlevelCopy {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgLowlevelCopyAssoc	legion_runtime/legion_logging.h	/^        LogMsgLowlevelCopyAssoc(Event highlevel_end_event, Event lowlevel_end_event, unsigned channel_id) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyAssoc
LogMsgLowlevelCopyAssoc	legion_runtime/legion_logging.h	/^      struct LogMsgLowlevelCopyAssoc {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgLowlevelCopyChannel	legion_runtime/legion_logging.h	/^        LogMsgLowlevelCopyChannel(unsigned id, const char* name) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyChannel
LogMsgLowlevelCopyChannel	legion_runtime/legion_logging.h	/^      struct LogMsgLowlevelCopyChannel {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgMappingDependence	legion_runtime/legion_logging.h	/^        LogMsgMappingDependence(UniqueID parent_context, UniqueID previous_id,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
LogMsgMappingDependence	legion_runtime/legion_logging.h	/^      struct LogMsgMappingDependence {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgMemMemAffinity	legion_runtime/legion_logging.h	/^        LogMsgMemMemAffinity(Memory mem1, Memory mem2, size_t bandwidth,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemMemAffinity
LogMsgMemMemAffinity	legion_runtime/legion_logging.h	/^      struct LogMsgMemMemAffinity {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgMemory	legion_runtime/legion_logging.h	/^        LogMsgMemory(Memory mem, Memory::Kind kind, size_t capacity) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemory
LogMsgMemory	legion_runtime/legion_logging.h	/^      struct LogMsgMemory {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgOperation	legion_runtime/legion_logging.h	/^        LogMsgOperation(Processor proc, LogMsgOperationKind k, UniqueID id, UniqueID context, unsigned long long time) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
LogMsgOperation	legion_runtime/legion_logging.h	/^      struct LogMsgOperation {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgOperationEvents	legion_runtime/legion_logging.h	/^        LogMsgOperationEvents(UniqueID unique_op_id, Event start_event,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationEvents
LogMsgOperationEvents	legion_runtime/legion_logging.h	/^      struct LogMsgOperationEvents {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgOperationKind	legion_runtime/legion_logging.h	/^      enum LogMsgOperationKind {$/;"	g	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgOperationTiming	legion_runtime/legion_logging.h	/^        LogMsgOperationTiming(Processor proc, UniqueID unique_op_id, TimingKind kind,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationTiming
LogMsgOperationTiming	legion_runtime/legion_logging.h	/^      struct LogMsgOperationTiming {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgPhysicalInstance	legion_runtime/legion_logging.h	/^        LogMsgPhysicalInstance(PhysicalInstance instance, Memory memory,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
LogMsgPhysicalInstance	legion_runtime/legion_logging.h	/^      struct LogMsgPhysicalInstance {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgPhysicalUser	legion_runtime/legion_logging.h	/^        LogMsgPhysicalUser(PhysicalInstance instance, UniqueID unique_op_id,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalUser
LogMsgPhysicalUser	legion_runtime/legion_logging.h	/^      struct LogMsgPhysicalUser {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgPointPoint	legion_runtime/legion_logging.h	/^        LogMsgPointPoint(UniqueID orig_point, UniqueID new_point) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPointPoint
LogMsgPointPoint	legion_runtime/legion_logging.h	/^      struct LogMsgPointPoint {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgProcMemAffinity	legion_runtime/legion_logging.h	/^        LogMsgProcMemAffinity(Processor proc, Memory mem, size_t bandwidth,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcMemAffinity
LogMsgProcMemAffinity	legion_runtime/legion_logging.h	/^      struct LogMsgProcMemAffinity {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgProcessor	legion_runtime/legion_logging.h	/^        LogMsgProcessor(AddressSpaceID address_space, Processor p) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcessor
LogMsgProcessor	legion_runtime/legion_logging.h	/^      struct LogMsgProcessor {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgRequirementFields	legion_runtime/legion_logging.h	/^        LogMsgRequirementFields(UniqueID unique_op_id, unsigned index,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgRequirementFields
LogMsgRequirementFields	legion_runtime/legion_logging.h	/^      struct LogMsgRequirementFields {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgSlicePoint	legion_runtime/legion_logging.h	/^        LogMsgSlicePoint(UniqueID slice_id, UniqueID point_id,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSlicePoint
LogMsgSlicePoint	legion_runtime/legion_logging.h	/^      struct LogMsgSlicePoint {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgSliceSlice	legion_runtime/legion_logging.h	/^        LogMsgSliceSlice(UniqueID slice_parent, UniqueID slice_subslice) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSliceSlice
LogMsgSliceSlice	legion_runtime/legion_logging.h	/^      struct LogMsgSliceSlice {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTaskCollection	legion_runtime/legion_logging.h	/^        LogMsgTaskCollection(Processor::TaskFuncID task_id, bool leaf,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskCollection
LogMsgTaskCollection	legion_runtime/legion_logging.h	/^      struct LogMsgTaskCollection {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTaskInstanceRequirement	legion_runtime/legion_logging.h	/^        LogMsgTaskInstanceRequirement(UniqueID unique_id, unsigned index,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceRequirement
LogMsgTaskInstanceRequirement	legion_runtime/legion_logging.h	/^      struct LogMsgTaskInstanceRequirement {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTaskInstanceVariant	legion_runtime/legion_logging.h	/^        LogMsgTaskInstanceVariant(UniqueID unique_op_id, VariantID vid) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceVariant
LogMsgTaskInstanceVariant	legion_runtime/legion_logging.h	/^      struct LogMsgTaskInstanceVariant {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTaskOperation	legion_runtime/legion_logging.h	/^        LogMsgTaskOperation(Processor proc, bool i, UniqueID id, Processor::TaskFuncID tid, UniqueID context, unsigned long long time, MappingTagID tag) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
LogMsgTaskOperation	legion_runtime/legion_logging.h	/^      struct LogMsgTaskOperation {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTaskVariant	legion_runtime/legion_logging.h	/^        LogMsgTaskVariant(Processor::TaskFuncID task_id,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
LogMsgTaskVariant	legion_runtime/legion_logging.h	/^      struct LogMsgTaskVariant {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTopIndexSpace	legion_runtime/legion_logging.h	/^        LogMsgTopIndexSpace(IndexSpace space) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopIndexSpace
LogMsgTopIndexSpace	legion_runtime/legion_logging.h	/^      struct LogMsgTopIndexSpace {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTopLevelTask	legion_runtime/legion_logging.h	/^        LogMsgTopLevelTask(Processor::TaskFuncID task_id, UniqueID unique_op_id) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopLevelTask
LogMsgTopLevelTask	legion_runtime/legion_logging.h	/^      struct LogMsgTopLevelTask {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTopRegion	legion_runtime/legion_logging.h	/^        LogMsgTopRegion(IndexSpace ispace, FieldSpace fspace, RegionTreeID tid) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopRegion
LogMsgTopRegion	legion_runtime/legion_logging.h	/^      struct LogMsgTopRegion {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
Logger	legion_runtime/utilities.h	/^  class Logger {$/;"	c	namespace:LegionRuntime
LogicalCloser	legion_runtime/region_tree.cc	/^    LogicalCloser::LogicalCloser(ContextID c, const LogicalUser &u, bool val)$/;"	f	class:LegionRuntime::HighLevel::LogicalCloser
LogicalCloser	legion_runtime/region_tree.h	/^    struct LogicalCloser {$/;"	s	namespace:LegionRuntime::HighLevel
LogicalDepAnalyzer	legion_runtime/region_tree.cc	/^    LogicalDepAnalyzer::LogicalDepAnalyzer(const LogicalUser &u,$/;"	f	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
LogicalDepAnalyzer	legion_runtime/region_tree.h	/^    class LogicalDepAnalyzer {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalFieldInvalidator	legion_runtime/region_tree.h	/^      LogicalFieldInvalidator(void) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalFieldInvalidator
LogicalFieldInvalidator	legion_runtime/region_tree.h	/^    class LogicalFieldInvalidator {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalFilter	legion_runtime/region_tree.cc	/^    LogicalFilter::LogicalFilter(const FieldMask &mask,$/;"	f	class:LegionRuntime::HighLevel::LogicalFilter
LogicalFilter	legion_runtime/region_tree.h	/^    class LogicalFilter {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalInitializer	legion_runtime/region_tree.cc	/^    LogicalInitializer::LogicalInitializer(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
LogicalInitializer	legion_runtime/region_tree.cc	/^    LogicalInitializer::LogicalInitializer(const LogicalInitializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
LogicalInitializer	legion_runtime/region_tree.h	/^    class LogicalInitializer : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalInvalidator	legion_runtime/region_tree.cc	/^    LogicalInvalidator::LogicalInvalidator(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
LogicalInvalidator	legion_runtime/region_tree.cc	/^    LogicalInvalidator::LogicalInvalidator(const LogicalInvalidator &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
LogicalInvalidator	legion_runtime/region_tree.h	/^    class LogicalInvalidator : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalOpAnalyzer	legion_runtime/region_tree.cc	/^    LogicalOpAnalyzer<DOMINATE>::LogicalOpAnalyzer(Operation *o)$/;"	f	class:LegionRuntime::HighLevel::LogicalOpAnalyzer
LogicalOpAnalyzer	legion_runtime/region_tree.h	/^    class LogicalOpAnalyzer {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalPartition	legion_runtime/legion.cc	/^    LogicalPartition::LogicalPartition(RegionTreeID tid, IndexPartition pid, $/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
LogicalPartition	legion_runtime/legion.cc	/^    LogicalPartition::LogicalPartition(const LogicalPartition &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
LogicalPartition	legion_runtime/legion.cc	/^    LogicalPartition::LogicalPartition(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
LogicalPartition	legion_runtime/legion.h	/^    class LogicalPartition {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalPathRegistrar	legion_runtime/region_tree.cc	/^    LogicalPathRegistrar::LogicalPathRegistrar(ContextID c, Operation *o,$/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
LogicalPathRegistrar	legion_runtime/region_tree.cc	/^    LogicalPathRegistrar::LogicalPathRegistrar(const LogicalPathRegistrar&rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
LogicalPathRegistrar	legion_runtime/region_tree.h	/^    class LogicalPathRegistrar : public PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalRegion	legion_runtime/legion.cc	/^    LogicalRegion::LogicalRegion(RegionTreeID tid, IndexSpace index, $/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
LogicalRegion	legion_runtime/legion.cc	/^    LogicalRegion::LogicalRegion(const LogicalRegion &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
LogicalRegion	legion_runtime/legion.cc	/^    LogicalRegion::LogicalRegion(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
LogicalRegion	legion_runtime/legion.h	/^    class LogicalRegion {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalRegistrar	legion_runtime/region_tree.cc	/^    LogicalRegistrar<DOMINATE>::LogicalRegistrar(ContextID c, Operation *o,$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
LogicalRegistrar	legion_runtime/region_tree.cc	/^    LogicalRegistrar<DOMINATE>::LogicalRegistrar(const LogicalRegistrar &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
LogicalRegistrar	legion_runtime/region_tree.h	/^    class LogicalRegistrar : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalState	legion_runtime/region_tree.cc	/^    LogicalState::LogicalState(const LogicalState &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalState
LogicalState	legion_runtime/region_tree.cc	/^    LogicalState::LogicalState(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalState
LogicalState	legion_runtime/region_tree.h	/^    struct LogicalState {$/;"	s	namespace:LegionRuntime::HighLevel
LogicalUser	legion_runtime/region_tree.cc	/^    LogicalUser::LogicalUser(Operation *o, unsigned id, const RegionUsage &u,$/;"	f	class:LegionRuntime::HighLevel::LogicalUser
LogicalUser	legion_runtime/region_tree.cc	/^    LogicalUser::LogicalUser(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalUser
LogicalUser	legion_runtime/region_tree.h	/^    struct LogicalUser : public GenericUser {$/;"	s	namespace:LegionRuntime::HighLevel
LogicalView	legion_runtime/region_tree.cc	/^    LogicalView::LogicalView(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::LogicalView
LogicalView	legion_runtime/region_tree.h	/^    class LogicalView : public HierarchicalCollectable {$/;"	c	namespace:LegionRuntime::HighLevel
LowLevel	legion_runtime/accessor.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	legion_runtime/arrays.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	legion_runtime/atomics.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	legion_runtime/lowlevel.cc	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime	file:
LowLevel	legion_runtime/lowlevel.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	legion_runtime/lowlevel_dma.cc	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime	file:
LowLevel	legion_runtime/lowlevel_dma.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	legion_runtime/lowlevel_gpu.cc	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime	file:
LowLevel	legion_runtime/lowlevel_gpu.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	legion_runtime/lowlevel_impl.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	legion_runtime/shared_lowlevel.cc	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime	file:
LowLevel	legion_runtime/utilities.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevelFnptr	legion_runtime/legion_types.h	/^    typedef void (*LowLevelFnptr)(const void*,size_t,Processor);$/;"	t	namespace:LegionRuntime::HighLevel
MACHINE_SHUTDOWN_MSGID	legion_runtime/lowlevel.cc	/^      MACHINE_SHUTDOWN_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
MACROPROXY	legion_runtime/activemsg.h	245;"	d
MAIN_TASK_ID	test/hpcg/hpcg-main.cc	/^    MAIN_TASK_ID = 0,$/;"	e	enum:__anon37::TID	file:
MAPPER_ID	test/circuit.h	/^  static const int MAPPER_ID = 0;$/;"	m	class:CalcNewCurrentsTask
MAPPER_ID	test/circuit.h	/^  static const int MAPPER_ID = 0;$/;"	m	class:CheckTask
MAPPER_ID	test/circuit.h	/^  static const int MAPPER_ID = 0;$/;"	m	class:DistributeChargeTask
MAPPER_ID	test/circuit.h	/^  static const int MAPPER_ID = 0;$/;"	m	class:UpdateVoltagesTask
MAPPING_OPERATION	legion_runtime/legion_logging.h	/^        MAPPING_OPERATION = 0,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationKind
MAPPING_TRAVERSE_CALL	legion_runtime/region_tree.h	/^      MAPPING_TRAVERSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
MAP_OP_ALLOC	legion_runtime/legion_allocation.h	/^      MAP_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MAP_PHYSICAL_REGION_ANALYSIS	legion_runtime/region_tree.h	/^      MAP_PHYSICAL_REGION_ANALYSIS,$/;"	e	enum:LegionRuntime::HighLevel::TraceKind
MAP_PHYSICAL_REGION_CALL	legion_runtime/region_tree.h	/^      MAP_PHYSICAL_REGION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
MAP_REDUCTION_REGION_CALL	legion_runtime/region_tree.h	/^      MAP_REDUCTION_REGION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
MATERIALIZED_VIEW_ALLOC	legion_runtime/legion_allocation.h	/^      MATERIALIZED_VIEW_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MAXASIZE	lua_src/ltable.c	49;"	d	file:
MAXBITS	lua_src/ltable.c	44;"	d	file:
MAXBITS	lua_src/ltable.c	46;"	d	file:
MAXBUF	nautilus/doprnt.c	146;"	d	file:
MAXCCALLS	lua_src/lstrlib.c	218;"	d	file:
MAXSIZE	lua_src/lstrlib.c	106;"	d	file:
MAXTAGLOOP	lua_src/lvm.c	32;"	d	file:
MAXVARS	lua_src/lparser.c	32;"	d	file:
MAX_CONTEXTS	legion_runtime/legion_types.h	80;"	d
MAX_FIELDS	legion_runtime/legion_types.h	54;"	d
MAX_FIELDS_PER_INST	legion_runtime/lowlevel_impl.h	/^      static const unsigned MAX_FIELDS_PER_INST = 2048;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
MAX_FORMAT	lua_src/lstrlib.c	830;"	d	file:
MAX_ITEM	lua_src/lstrlib.c	823;"	d	file:
MAX_LINEARIZATION_LEN	legion_runtime/lowlevel_impl.h	/^      static const unsigned MAX_LINEARIZATION_LEN = 16;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
MAX_NUM_NODES	legion_runtime/legion_types.h	61;"	d
MAX_NUM_PROCS	legion_runtime/legion_types.h	65;"	d
MAX_NUM_THREADS	legion_runtime/lowlevel_impl.h	28;"	d
MAX_POINT_DIM	legion_runtime/lowlevel.h	/^      enum { MAX_POINT_DIM = 3 };$/;"	e	enum:LegionRuntime::LowLevel::DomainPoint::__anon10
MAX_RANK	nautilus/fmtout.c	75;"	d	file:
MAX_RECT_DIM	legion_runtime/lowlevel.h	/^      enum { MAX_RECT_DIM = 3 };$/;"	e	enum:LegionRuntime::LowLevel::Domain::__anon11
MAX_RETURN_SIZE	legion_runtime/legion_types.h	50;"	d
MAX_SIZE_T	lua_src/liolib.c	396;"	d	file:
MAX_STEAL_COUNT	test/saxpy_array.cc	33;"	d	file:
MEMERRMSG	lua_src/lstate.c	42;"	d	file:
MEMORY_AVAILABLE_ALLOC	legion_runtime/legion_allocation.h	/^      MEMORY_AVAILABLE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MEMORY_INSTANCES_ALLOC	legion_runtime/legion_allocation.h	/^      MEMORY_INSTANCES_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MEMORY_REDUCTION_ALLOC	legion_runtime/legion_allocation.h	/^      MEMORY_REDUCTION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MEMORY_STRIDE	legion_runtime/lowlevel_impl.h	/^      static const size_t MEMORY_STRIDE = 1024;$/;"	m	class:LegionRuntime::LowLevel::GASNetMemory
MESSAGE_BUFFER_ALLOC	legion_runtime/legion_allocation.h	/^      MESSAGE_BUFFER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MESSAGE_CHUNKS_MAGIC	legion_runtime/activemsg.h	/^  static const gasnet_handlerarg_t MESSAGE_CHUNKS_MAGIC = 0x0a550a55;$/;"	m	struct:BaseMedium
MESSAGE_ID_MAGIC	legion_runtime/activemsg.h	/^  static const gasnet_handlerarg_t MESSAGE_ID_MAGIC = 0x0bad0bad;$/;"	m	struct:BaseMedium
MGData	test/hpcg/mg-data.h	/^    MGData(int64_t nFineRows,$/;"	f	struct:lgncg::MGData
MGData	test/hpcg/mg-data.h	/^    MGData(void)$/;"	f	struct:lgncg::MGData
MGData	test/hpcg/mg-data.h	/^struct MGData {$/;"	s	namespace:lgncg
MIL	test/benchmark.c	87;"	d	file:
MINSIZEARRAY	lua_src/lmem.c	43;"	d	file:
MIN_FRACTION_SPLIT	legion_runtime/legion_utilities.h	1128;"	d
MIN_FRACTION_SPLIT	legion_runtime/legion_utilities.h	1353;"	d
MIN_ORDER	nautilus/mm/kmem.c	52;"	d	file:
MIN_RANK	nautilus/fmtout.c	74;"	d	file:
MKIND_GLOBAL	legion_runtime/lowlevel_impl.h	/^	MKIND_GLOBAL,  \/\/ accessible via GASnet (spread over all nodes)$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MKIND_GPUFB	legion_runtime/lowlevel_impl.h	/^	MKIND_GPUFB,   \/\/ GPU framebuffer memory (accessible via cudaMemcpy)$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MKIND_RDMA	legion_runtime/lowlevel_impl.h	/^	MKIND_RDMA,    \/\/ remote, but accessible via RDMA$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MKIND_REMOTE	legion_runtime/lowlevel_impl.h	/^	MKIND_REMOTE,  \/\/ not accessible$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MKIND_SYSMEM	legion_runtime/lowlevel_impl.h	/^	MKIND_SYSMEM,  \/\/ directly accessible from CPU$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MKIND_ZEROCOPY	legion_runtime/lowlevel_impl.h	/^	MKIND_ZEROCOPY, \/\/ CPU memory, pinned for GPU access$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MODE_EXCL	legion_runtime/lowlevel_impl.h	/^      enum { MODE_EXCL = 0, ZERO_COUNT = 0x11223344 };$/;"	e	enum:LegionRuntime::LowLevel::Reservation::Impl::__anon22
MPILegionHandshake	legion_runtime/legion.cc	/^    MPILegionHandshake::MPILegionHandshake(MPILegionHandshake::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
MPILegionHandshake	legion_runtime/legion.cc	/^    MPILegionHandshake::MPILegionHandshake(const MPILegionHandshake &rhs)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
MPILegionHandshake	legion_runtime/legion.cc	/^    MPILegionHandshake::MPILegionHandshake(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
MPILegionHandshake	legion_runtime/legion.h	/^    class MPILegionHandshake {$/;"	c	namespace:LegionRuntime::HighLevel
MPIRankArgs	legion_runtime/runtime.h	/^      struct MPIRankArgs {$/;"	s	class:LegionRuntime::HighLevel::Runtime
MPI_HANDSHAKE_ALLOC	legion_runtime/legion_allocation.h	/^      MPI_HANDSHAKE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MSGID_FLIP_ACK	legion_runtime/activemsg.cc	/^       MSGID_FLIP_ACK = 255 };$/;"	e	enum:__anon18	file:
MSGID_FLIP_REQ	legion_runtime/activemsg.cc	/^       MSGID_FLIP_REQ = 254,$/;"	e	enum:__anon18	file:
MSGID_LONG_EXTENSION	legion_runtime/activemsg.cc	/^enum { MSGID_LONG_EXTENSION = 253,$/;"	e	enum:__anon18	file:
MSGID_RELEASE_SRCPTR	legion_runtime/activemsg.h	/^enum { MSGID_RELEASE_SRCPTR = 252 };$/;"	e	enum:__anon7
MUST_EPOCH_OP_ALLOC	legion_runtime/legion_allocation.h	/^      MUST_EPOCH_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MUTABLE	legion_runtime/legion_types.h	/^      MUTABLE         = 0x00000003,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
MUTEX_DEINIT	test/benchmark.h	22;"	d
MUTEX_DEINIT	test/benchmark.h	55;"	d
MUTEX_INIT	test/benchmark.h	19;"	d
MUTEX_INIT	test/benchmark.h	52;"	d
MUTEX_LOCK	test/benchmark.h	20;"	d
MUTEX_LOCK	test/benchmark.h	53;"	d
MUTEX_T	test/benchmark.h	18;"	d
MUTEX_T	test/benchmark.h	51;"	d
MUTEX_UNLOCK	test/benchmark.h	21;"	d
MUTEX_UNLOCK	test/benchmark.h	54;"	d
MWAIT_LOOPS	test/benchmark.c	85;"	d	file:
MYINT	lua_src/lundump.c	235;"	d	file:
Machine	legion_runtime/legion_types.h	/^    typedef LowLevel::Machine Machine;$/;"	t	namespace:LegionRuntime::HighLevel
Machine	legion_runtime/lowlevel.cc	/^    Machine::Machine(int *argc, char ***argv,$/;"	f	class:LegionRuntime::LowLevel::Machine
Machine	legion_runtime/lowlevel.h	/^    class Machine {$/;"	c	namespace:LegionRuntime::LowLevel
Machine	legion_runtime/shared_lowlevel.cc	/^    Machine::Machine(int *argc, char ***argv,$/;"	f	class:LegionRuntime::LowLevel::Machine
MachineQueryInterface	legion_runtime/mapping_utilities.cc	/^      MachineQueryInterface::MachineQueryInterface(Machine *m)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
MachineQueryInterface	legion_runtime/mapping_utilities.h	/^      class MachineQueryInterface {$/;"	c	namespace:LegionRuntime::HighLevel::MappingUtilities
MachineRunArgs	legion_runtime/lowlevel.cc	/^    struct MachineRunArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
MachineRunArgs	legion_runtime/shared_lowlevel.cc	/^    struct MachineRunArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
MachineShutdownRequestArgs	legion_runtime/lowlevel.cc	/^    struct MachineShutdownRequestArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
MachineShutdownRequestMessage	legion_runtime/lowlevel.cc	/^				      handle_machine_shutdown_request> MachineShutdownRequestMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
MainArgs	test/saxpy_array.cc	/^struct MainArgs {$/;"	s	file:
MapOp	legion_runtime/legion_ops.cc	/^    MapOp::MapOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::MapOp
MapOp	legion_runtime/legion_ops.cc	/^    MapOp::MapOp(const MapOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::MapOp
MapOp	legion_runtime/legion_ops.h	/^    class MapOp : public Inline, public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
Mappable	legion_runtime/legion.cc	/^    Mappable::Mappable(void)$/;"	f	class:LegionRuntime::HighLevel::Mappable
Mappable	legion_runtime/legion.h	/^    class Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
MappableInfo	legion_runtime/region_tree.cc	/^    MappableInfo::MappableInfo(ContextID c, Mappable *m, Processor p,$/;"	f	class:LegionRuntime::HighLevel::MappableInfo
MappableInfo	legion_runtime/region_tree.h	/^    struct MappableInfo {$/;"	s	namespace:LegionRuntime::HighLevel
MappableKind	legion_runtime/legion.h	/^      enum MappableKind {$/;"	g	class:LegionRuntime::HighLevel::Mappable
Mapper	legion_runtime/legion.h	/^      Mapper(HighLevelRuntime *rt) $/;"	f	class:LegionRuntime::HighLevel::Mapper
Mapper	legion_runtime/legion.h	/^    class Mapper {$/;"	c	namespace:LegionRuntime::HighLevel
MapperID	legion_runtime/legion_types.h	/^    typedef unsigned int MapperID;$/;"	t	namespace:LegionRuntime::HighLevel
MapperInfo	legion_runtime/runtime.h	/^        MapperInfo(Processor p, MapperID mid)$/;"	f	struct:LegionRuntime::HighLevel::Runtime::MapperInfo
MapperInfo	legion_runtime/runtime.h	/^        MapperInfo(void)$/;"	f	struct:LegionRuntime::HighLevel::Runtime::MapperInfo
MapperInfo	legion_runtime/runtime.h	/^      struct MapperInfo {$/;"	s	class:LegionRuntime::HighLevel::Runtime
MapperMessage	legion_runtime/runtime.h	/^        MapperMessage(Processor t, void *mes, size_t l)$/;"	f	struct:LegionRuntime::HighLevel::ProcessorManager::MapperMessage
MapperMessage	legion_runtime/runtime.h	/^        MapperMessage(void)$/;"	f	struct:LegionRuntime::HighLevel::ProcessorManager::MapperMessage
MapperMessage	legion_runtime/runtime.h	/^      struct MapperMessage {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
Mapping	legion_runtime/arrays.h	/^      Mapping(void)$/;"	f	class:LegionRuntime::Arrays::Mapping
Mapping	legion_runtime/arrays.h	/^    class Mapping {$/;"	c	namespace:LegionRuntime::Arrays
MappingConstraint	legion_runtime/legion.h	/^        MappingConstraint(Task *one, unsigned id1,$/;"	f	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
MappingConstraint	legion_runtime/legion.h	/^      struct MappingConstraint {$/;"	s	class:LegionRuntime::HighLevel::Mapper
MappingDeserializerFn	legion_runtime/arrays.h	/^      typedef Mapping<IDIM, ODIM> *(*MappingDeserializerFn)(const int *data);$/;"	t	class:LegionRuntime::Arrays::MappingRegistry
MappingKey	legion_runtime/mapping_utilities.h	/^        typedef std::pair<Processor,Processor::TaskFuncID> MappingKey;$/;"	t	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
MappingMemoizer	legion_runtime/mapping_utilities.cc	/^      MappingMemoizer::MappingMemoizer(void)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
MappingMemoizer	legion_runtime/mapping_utilities.h	/^      class MappingMemoizer {$/;"	c	namespace:LegionRuntime::HighLevel::MappingUtilities
MappingProfiler	legion_runtime/mapping_utilities.cc	/^      MappingProfiler::MappingProfiler(void)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
MappingProfiler	legion_runtime/mapping_utilities.h	/^      class MappingProfiler {$/;"	c	namespace:LegionRuntime::HighLevel::MappingUtilities
MappingRef	legion_runtime/region_tree.cc	/^    MappingRef::MappingRef(LogicalView *v, const FieldMask &needed)$/;"	f	class:LegionRuntime::HighLevel::MappingRef
MappingRef	legion_runtime/region_tree.cc	/^    MappingRef::MappingRef(const MappingRef &rhs)$/;"	f	class:LegionRuntime::HighLevel::MappingRef
MappingRef	legion_runtime/region_tree.cc	/^    MappingRef::MappingRef(void)$/;"	f	class:LegionRuntime::HighLevel::MappingRef
MappingRef	legion_runtime/region_tree.h	/^    class MappingRef {$/;"	c	namespace:LegionRuntime::HighLevel
MappingRegistry	legion_runtime/arrays.h	/^    class MappingRegistry {$/;"	c	namespace:LegionRuntime::Arrays
MappingTagID	legion_runtime/legion_types.h	/^    typedef unsigned long MappingTagID;$/;"	t	namespace:LegionRuntime::HighLevel
MappingTraverser	legion_runtime/region_tree.cc	/^    MappingTraverser::MappingTraverser(RegionTreePath &p, MappableInfo *in,$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
MappingTraverser	legion_runtime/region_tree.cc	/^    MappingTraverser::MappingTraverser(const MappingTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
MappingTraverser	legion_runtime/region_tree.h	/^    class MappingTraverser : public PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
MappingUtilities	legion_runtime/mapping_utilities.cc	/^    namespace MappingUtilities {$/;"	n	namespace:LegionRuntime::HighLevel	file:
MappingUtilities	legion_runtime/mapping_utilities.h	/^    namespace MappingUtilities {$/;"	n	namespace:LegionRuntime::HighLevel
MatchState	lua_src/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	lua_src/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
MaterializedView	legion_runtime/region_tree.cc	/^    MaterializedView::MaterializedView($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
MaterializedView	legion_runtime/region_tree.cc	/^    MaterializedView::MaterializedView(const MaterializedView &rhs)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
MaterializedView	legion_runtime/region_tree.h	/^    class MaterializedView : public InstanceView {$/;"	c	namespace:LegionRuntime::HighLevel
MemPair	legion_runtime/lowlevel_dma.cc	/^    typedef std::pair<Memory, Memory> MemPair;$/;"	t	namespace:LegionRuntime::LowLevel	file:
MemPairCopier	legion_runtime/lowlevel_dma.cc	/^      MemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::MemPairCopier
MemPairCopier	legion_runtime/lowlevel_dma.cc	/^    class MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
Memcpy	legion_runtime/lowlevel.cc	/^	Memcpy(T *_dst_base, const T *_src_base)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
Memcpy	legion_runtime/lowlevel.cc	/^	Memcpy(void *_dst_base, const void *_src_base, size_t _elmt_size)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
Memcpy	legion_runtime/lowlevel.cc	/^      class Memcpy {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
Memcpy	legion_runtime/lowlevel_dma.cc	/^	Memcpy(T *_dst_base, const T *_src_base)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
Memcpy	legion_runtime/lowlevel_dma.cc	/^	Memcpy(void *_dst_base, const void *_src_base, size_t _elmt_size)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
Memcpy	legion_runtime/lowlevel_dma.cc	/^      class Memcpy {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
Memcpy	legion_runtime/shared_lowlevel.cc	/^        Memcpy(void *_dst_base, const void *_src_base, size_t _elmt_size)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
Memcpy	legion_runtime/shared_lowlevel.cc	/^      class Memcpy {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
MemcpyMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      MemcpyMemPairCopier(Memory _src_mem, Memory _dst_mem)$/;"	f	class:LegionRuntime::LowLevel::MemcpyMemPairCopier
MemcpyMemPairCopier	legion_runtime/lowlevel_dma.cc	/^    class MemcpyMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
MemoizedMapping	legion_runtime/mapping_utilities.cc	/^      MappingMemoizer::MemoizedMapping::MemoizedMapping(size_t num_elmts)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer::MemoizedMapping
MemoizedMapping	legion_runtime/mapping_utilities.cc	/^      MappingMemoizer::MemoizedMapping::MemoizedMapping(void)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer::MemoizedMapping
MemoizedMapping	legion_runtime/mapping_utilities.h	/^        struct MemoizedMapping {$/;"	s	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
Memory	legion_runtime/legion_types.h	/^    typedef LowLevel::Memory Memory;$/;"	t	namespace:LegionRuntime::HighLevel
Memory	legion_runtime/lowlevel.h	/^    class Memory {$/;"	c	namespace:LegionRuntime::LowLevel
MemoryEvent	legion_runtime/legion_profiling.h	/^        MemoryEvent(unsigned iid, unsigned long long t)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
MemoryEvent	legion_runtime/legion_profiling.h	/^        MemoryEvent(unsigned iid, unsigned mem, unsigned r, $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
MemoryEvent	legion_runtime/legion_profiling.h	/^      struct MemoryEvent {$/;"	s	namespace:LegionRuntime::HighLevel::LegionProf
MemoryImpl	legion_runtime/shared_lowlevel.cc	/^	MemoryImpl(size_t max, Memory::Kind k) $/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
MemoryImpl	legion_runtime/shared_lowlevel.cc	/^    class MemoryImpl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
MemoryKind	legion_runtime/lowlevel_impl.h	/^      enum MemoryKind {$/;"	g	class:LegionRuntime::LowLevel::Memory::Impl
MemoryManager	legion_runtime/runtime.cc	/^    MemoryManager::MemoryManager(Memory m, Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
MemoryManager	legion_runtime/runtime.cc	/^    MemoryManager::MemoryManager(const MemoryManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
MemoryManager	legion_runtime/runtime.h	/^    class MemoryManager {$/;"	c	namespace:LegionRuntime::HighLevel
MemoryMemoryAffinity	legion_runtime/legion_types.h	/^    typedef LowLevel::Machine::MemoryMemoryAffinity MemoryMemoryAffinity;$/;"	t	namespace:LegionRuntime::HighLevel
MemoryMemoryAffinity	legion_runtime/lowlevel.h	/^      struct MemoryMemoryAffinity {$/;"	s	class:LegionRuntime::LowLevel::Machine
MergeComparator	legion_runtime/rectangle_set.h	/^    struct MergeComparator {$/;"	s	namespace:LegionRuntime::HighLevel
Message	legion_runtime/lowlevel.cc	/^					handle_request> Message;$/;"	t	struct:LegionRuntime::LowLevel::BarrierAdjustMessage	file:
MessageHeader	legion_runtime/runtime.h	/^      enum MessageHeader {$/;"	g	class:LegionRuntime::HighLevel::MessageManager
MessageKind	legion_runtime/runtime.h	/^      enum MessageKind {$/;"	g	class:LegionRuntime::HighLevel::MessageManager
MessageManager	legion_runtime/runtime.cc	/^    MessageManager::MessageManager(AddressSpaceID remote,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
MessageManager	legion_runtime/runtime.cc	/^    MessageManager::MessageManager(const MessageManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
MessageManager	legion_runtime/runtime.h	/^    class MessageManager {$/;"	c	namespace:LegionRuntime::HighLevel
MessageRawArgsType	legion_runtime/activemsg.h	/^  typedef MessageRawArgs<MSGTYPE,MSGID,FNPTR,dummy_medium_handler,(sizeof(MSGTYPE)+3)\/4> MessageRawArgsType;$/;"	t	class:ActiveMessageShortNoReply
MessageRawArgsType	legion_runtime/activemsg.h	/^  typedef MessageRawArgs<MSGTYPE,MSGID,dummy_short_handler,FNPTR,(sizeof(MSGTYPE)+3)\/4> MessageRawArgsType;$/;"	t	class:ActiveMessageMediumNoReply
MultiDomainColoring	legion_runtime/legion_types.h	/^    typedef std::map<Color,std::set<Domain> > MultiDomainColoring;$/;"	t	namespace:LegionRuntime::HighLevel
MultiNodeRollUp	legion_runtime/lowlevel.cc	/^    MultiNodeRollUp::MultiNodeRollUp(std::map<int,double>& _timers)$/;"	f	class:LegionRuntime::LowLevel::MultiNodeRollUp
MultiNodeRollUp	legion_runtime/lowlevel.cc	/^    class MultiNodeRollUp {$/;"	c	namespace:LegionRuntime::LowLevel	file:
MultiTask	legion_runtime/legion_tasks.cc	/^    MultiTask::MultiTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
MultiTask	legion_runtime/legion_tasks.h	/^    class MultiTask : public TaskOp {$/;"	c	namespace:LegionRuntime::HighLevel
MustEpochDistributor	legion_runtime/legion_ops.cc	/^    MustEpochDistributor::MustEpochDistributor(MustEpochOp *own)$/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
MustEpochDistributor	legion_runtime/legion_ops.cc	/^    MustEpochDistributor::MustEpochDistributor(const MustEpochDistributor &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
MustEpochDistributor	legion_runtime/legion_ops.h	/^    class MustEpochDistributor {$/;"	c	namespace:LegionRuntime::HighLevel
MustEpochDistributorArgs	legion_runtime/legion_ops.h	/^      struct MustEpochDistributorArgs {$/;"	s	class:LegionRuntime::HighLevel::MustEpochDistributor
MustEpochIndexArgs	legion_runtime/legion_ops.h	/^      struct MustEpochIndexArgs {$/;"	s	class:LegionRuntime::HighLevel::MustEpochTriggerer
MustEpochIndivArgs	legion_runtime/legion_ops.h	/^      struct MustEpochIndivArgs {$/;"	s	class:LegionRuntime::HighLevel::MustEpochTriggerer
MustEpochLauncher	legion_runtime/legion.cc	/^    MustEpochLauncher::MustEpochLauncher(MapperID id \/*= 0*\/,   $/;"	f	class:LegionRuntime::HighLevel::MustEpochLauncher
MustEpochLauncher	legion_runtime/legion.h	/^    struct MustEpochLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
MustEpochLauncherArgs	legion_runtime/legion_ops.h	/^      struct MustEpochLauncherArgs {$/;"	s	class:LegionRuntime::HighLevel::MustEpochDistributor
MustEpochMapArgs	legion_runtime/legion_ops.h	/^      struct MustEpochMapArgs {$/;"	s	class:LegionRuntime::HighLevel::MustEpochMapper
MustEpochMapper	legion_runtime/legion_ops.cc	/^    MustEpochMapper::MustEpochMapper(MustEpochOp *own)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
MustEpochMapper	legion_runtime/legion_ops.cc	/^    MustEpochMapper::MustEpochMapper(const MustEpochMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
MustEpochMapper	legion_runtime/legion_ops.h	/^    class MustEpochMapper {$/;"	c	namespace:LegionRuntime::HighLevel
MustEpochOp	legion_runtime/legion_ops.cc	/^    MustEpochOp::MustEpochOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
MustEpochOp	legion_runtime/legion_ops.cc	/^    MustEpochOp::MustEpochOp(const MustEpochOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
MustEpochOp	legion_runtime/legion_ops.h	/^    class MustEpochOp : public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
MustEpochTriggerer	legion_runtime/legion_ops.cc	/^    MustEpochTriggerer::MustEpochTriggerer(MustEpochOp *own)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
MustEpochTriggerer	legion_runtime/legion_ops.cc	/^    MustEpochTriggerer::MustEpochTriggerer(const MustEpochTriggerer &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
MustEpochTriggerer	legion_runtime/legion_ops.h	/^    class MustEpochTriggerer {$/;"	c	namespace:LegionRuntime::HighLevel
MyReductionOp	legion_runtime/lowlevel.h	/^    class MyReductionOp {$/;"	c	namespace:LegionRuntime::LowLevel
N	test/benchmark.c	1075;"	d	file:
N	test/benchmark.c	1076;"	d	file:
N0	lua_src/lundump.c	185;"	d	file:
N1	lua_src/lundump.c	186;"	d	file:
N2	lua_src/lundump.c	187;"	d	file:
N3	lua_src/lundump.c	188;"	d	file:
NAUTILUS_DEEP_DEBUG	legion_runtime/naut_debug.h	13;"	d
NAUTILUS_DEEP_DEBUG	legion_runtime/naut_debug.h	14;"	d
NAUTILUS_DEEP_DEBUG	legion_runtime/naut_debug.h	18;"	d
NAUTILUS_DEEP_DEBUG	legion_runtime/naut_debug.h	19;"	d
NAUT_WELCOME	arch/hrt/init.c	161;"	d	file:
NAUT_WELCOME	arch/x64/init.c	195;"	d	file:
NDIGITS_MAX	nautilus/fmtout.c	95;"	d	file:
NEMO_DEBUG	nautilus/nemo.c	33;"	d	file:
NEMO_ERR	nautilus/nemo.c	35;"	d	file:
NEMO_INFO	nautilus/nemo.c	34;"	d	file:
NEMO_WARN	nautilus/nemo.c	36;"	d	file:
NODE_ALL_ONES	legion_runtime/legion_types.h	678;"	d
NODE_ANNOUNCE_DONE	legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_DONE = 0,$/;"	e	enum:LegionRuntime::LowLevel::__anon8	file:
NODE_ANNOUNCE_MEM	legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_MEM,  \/\/ MEM id size$/;"	e	enum:LegionRuntime::LowLevel::__anon8	file:
NODE_ANNOUNCE_MMA	legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_MMA,  \/\/ MMA mem1_id mem2_id bw latency$/;"	e	enum:LegionRuntime::LowLevel::__anon8	file:
NODE_ANNOUNCE_MSGID	legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
NODE_ANNOUNCE_PMA	legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_PMA,  \/\/ PMA proc_id mem_id bw latency$/;"	e	enum:LegionRuntime::LowLevel::__anon8	file:
NODE_ANNOUNCE_PROC	legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_PROC, \/\/ PROC id kind$/;"	e	enum:LegionRuntime::LowLevel::__anon8	file:
NODE_BITS	legion_runtime/lowlevel_impl.h	/^	NODE_BITS = 64 - TYPE_BITS - INDEX_BITS \/* 16 = 64k nodes *\/$/;"	e	enum:LegionRuntime::LowLevel::ID::__anon21
NODE_MASK	legion_runtime/legion_types.h	677;"	d
NODE_MASK	legion_runtime/legion_types.h	707;"	d
NODE_MASK_MASK	legion_runtime/lowlevel_impl.h	25;"	d
NODE_MASK_SHIFT	legion_runtime/lowlevel_impl.h	24;"	d
NODE_MASK_TYPE	legion_runtime/lowlevel_impl.h	23;"	d
NODE_SHIFT	legion_runtime/legion_types.h	676;"	d
NODE_SHIFT	legion_runtime/legion_types.h	706;"	d
NODE_TYPE	legion_runtime/legion_types.h	675;"	d
NONE_DIR	legion_runtime/rectangle_set.h	/^        NONE_DIR = 2,$/;"	e	enum:LegionRuntime::HighLevel::Segment::Direction
NONVALIDVALUE	lua_src/lapi.c	38;"	d	file:
NOTIFY_INVALID_CALL	legion_runtime/region_tree.h	/^      NOTIFY_INVALID_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
NOT_OPEN	legion_runtime/legion_types.h	/^      NOT_OPEN            = 0,$/;"	e	enum:LegionRuntime::HighLevel::OpenState
NOT_PRED_OP_ALLOC	legion_runtime/legion_allocation.h	/^      NOT_PRED_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
NO_ACCESS	legion_runtime/legion_types.h	/^      NO_ACCESS       = 0x00000000, \/\/ Deprecated: use the NO_ACCESS_FLAG$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
NO_ACCESS_FLAG	legion_runtime/legion_types.h	/^      NO_ACCESS_FLAG  = 0x00000002,$/;"	e	enum:LegionRuntime::HighLevel::RegionFlags
NO_DEBUG_AMREQUESTS	legion_runtime/activemsg.cc	28;"	d	file:
NO_DEPENDENCE	legion_runtime/legion_types.h	/^      NO_DEPENDENCE = 0,$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
NO_DOMAIN	legion_runtime/lowlevel.cc	/^    \/*static*\/ const Domain Domain::NO_DOMAIN = Domain();$/;"	m	class:LegionRuntime::LowLevel::Domain	file:
NO_DOMAIN	legion_runtime/lowlevel.h	/^      static const Domain NO_DOMAIN;$/;"	m	class:LegionRuntime::LowLevel::Domain
NO_DOMAIN	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ const Domain Domain::NO_DOMAIN = Domain();$/;"	m	class:LegionRuntime::LowLevel::Domain	file:
NO_ERROR	legion_runtime/legion_types.h	/^      NO_ERROR = 0,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
NO_EVENT	legion_runtime/lowlevel.cc	/^    \/*static*\/ const Event Event::NO_EVENT = { 0, 0 };$/;"	m	class:LegionRuntime::LowLevel::Event	file:
NO_EVENT	legion_runtime/lowlevel.h	/^      static const Event NO_EVENT;$/;"	m	class:LegionRuntime::LowLevel::Event
NO_EVENT	legion_runtime/shared_lowlevel.cc	/^    \/* static *\/ const Event Event::NO_EVENT = { 0, 0 };$/;"	m	class:LegionRuntime::LowLevel::Event	file:
NO_FLAG	legion_runtime/legion_types.h	/^      NO_FLAG         = 0x00000000,$/;"	e	enum:LegionRuntime::HighLevel::RegionFlags
NO_INST	legion_runtime/lowlevel.cc	/^    \/*static*\/ const RegionInstance RegionInstance::NO_INST = RegionInstance();$/;"	m	class:LegionRuntime::LowLevel::RegionInstance	file:
NO_INST	legion_runtime/lowlevel.h	/^      static const RegionInstance NO_INST;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance
NO_INST	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ const RegionInstance RegionInstance::NO_INST = { 0 };$/;"	m	class:LegionRuntime::LowLevel::RegionInstance	file:
NO_MEMORY	legion_runtime/legion_types.h	/^      NO_MEMORY       = 0x00000000,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
NO_MEMORY	legion_runtime/lowlevel.cc	/^    \/*static*\/ const Memory Memory::NO_MEMORY = { 0 };$/;"	m	class:LegionRuntime::LowLevel::Memory	file:
NO_MEMORY	legion_runtime/lowlevel.h	/^      static const Memory NO_MEMORY;$/;"	m	class:LegionRuntime::LowLevel::Memory
NO_MEMORY	legion_runtime/shared_lowlevel.cc	/^    const Memory Memory::NO_MEMORY = {0};$/;"	m	class:LegionRuntime::LowLevel::Memory	file:
NO_PART	legion_runtime/legion.cc	/^    const LogicalPartition LogicalPartition::NO_PART = LogicalPartition(); $/;"	m	class:LegionRuntime::HighLevel::LogicalPartition	file:
NO_PART	legion_runtime/legion.h	/^      static const LogicalPartition NO_PART; \/**< empty logical partition *\/$/;"	m	class:LegionRuntime::HighLevel::LogicalPartition
NO_PROC	legion_runtime/lowlevel.cc	/^    \/*static*\/ const Processor Processor::NO_PROC = { 0 };$/;"	m	class:LegionRuntime::LowLevel::Processor	file:
NO_PROC	legion_runtime/lowlevel.h	/^      static const Processor NO_PROC;$/;"	m	class:LegionRuntime::LowLevel::Processor
NO_PROC	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ const Processor Processor::NO_PROC = { 0 };$/;"	m	class:LegionRuntime::LowLevel::Processor	file:
NO_REGION	legion_runtime/legion.cc	/^    const LogicalRegion LogicalRegion::NO_REGION = LogicalRegion();$/;"	m	class:LegionRuntime::HighLevel::LogicalRegion	file:
NO_REGION	legion_runtime/legion.h	/^      static const LogicalRegion NO_REGION; \/**< empty logical region handle*\/$/;"	m	class:LegionRuntime::HighLevel::LogicalRegion
NO_RESERVATION	legion_runtime/lowlevel.cc	/^    \/*static*\/ const Reservation Reservation::NO_RESERVATION = { 0 };$/;"	m	class:LegionRuntime::LowLevel::Reservation	file:
NO_RESERVATION	legion_runtime/lowlevel.h	/^      static const Reservation NO_RESERVATION;$/;"	m	class:LegionRuntime::LowLevel::Reservation
NO_RESERVATION	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ const Reservation Reservation::NO_RESERVATION = Reservation();$/;"	m	class:LegionRuntime::LowLevel::Reservation	file:
NO_SEPARATE_FENCE	legion_runtime/lowlevel_dma.cc	2137;"	d	file:
NO_SPACE	legion_runtime/legion.cc	/^    \/*static*\/ const FieldSpace FieldSpace::NO_SPACE = FieldSpace(0);$/;"	m	class:LegionRuntime::HighLevel::FieldSpace	file:
NO_SPACE	legion_runtime/legion.h	/^      static const FieldSpace NO_SPACE; \/**< empty field space handle*\/$/;"	m	class:LegionRuntime::HighLevel::FieldSpace
NO_SPACE	legion_runtime/lowlevel.cc	/^    \/*static*\/ const IndexSpace IndexSpace::NO_SPACE = IndexSpace();$/;"	m	class:LegionRuntime::LowLevel::IndexSpace	file:
NO_SPACE	legion_runtime/lowlevel.h	/^      static const IndexSpace NO_SPACE;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace
NO_SPACE	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ const IndexSpace IndexSpace::NO_SPACE = IndexSpace();$/;"	m	class:LegionRuntime::LowLevel::IndexSpace	file:
NO_USER_EVENT	legion_runtime/lowlevel.cc	/^    \/* static *\/ const UserEvent UserEvent::NO_USER_EVENT = $/;"	m	class:LegionRuntime::LowLevel::UserEvent	file:
NO_USER_EVENT	legion_runtime/lowlevel.h	/^      static const UserEvent NO_USER_EVENT;$/;"	m	class:LegionRuntime::LowLevel::UserEvent
NO_USER_EVENT	legion_runtime/shared_lowlevel.cc	/^    \/* static *\/ const UserEvent UserEvent::NO_USER_EVENT = $/;"	m	class:LegionRuntime::LowLevel::UserEvent	file:
NO_USE_NBI_ACCESSREGION	legion_runtime/lowlevel.cc	3813;"	d	file:
NUMA_DEBUG	arch/x64/numa.c	43;"	d	file:
NUMA_DEBUG	nautilus/numa.c	45;"	d	file:
NUMA_PRINT	arch/x64/numa.c	42;"	d	file:
NUMA_PRINT	nautilus/numa.c	44;"	d	file:
NUM_CALL_KIND	legion_runtime/region_tree.h	/^      NUM_CALL_KIND,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
NUM_CORES	test/ipi.c	47;"	d	file:
NUM_DMA_THREADS	legion_runtime/shared_lowlevel.cc	79;"	d	file:
NUM_PROCS	legion_runtime/shared_lowlevel.cc	76;"	d	file:
NUM_TESTS	test/test_legion.c	24;"	d	file:
NUM_THREADS	test/benchmark.c	78;"	d	file:
NUM_UTIL_PROCS	legion_runtime/shared_lowlevel.cc	78;"	d	file:
NoShiftCaps	dev/kbd.c	/^static const nk_keycode_t NoShiftCaps[] = {$/;"	v	file:
NoShiftNoCaps	dev/kbd.c	/^static const nk_keycode_t NoShiftNoCaps[] = {$/;"	v	file:
Node	legion_runtime/lowlevel.cc	/^    Node::Node(void)$/;"	f	class:LegionRuntime::LowLevel::Node
Node	legion_runtime/lowlevel_impl.h	/^    struct Node {$/;"	s
NodeAnnounceData	legion_runtime/lowlevel.cc	/^    struct Machine::NodeAnnounceData : public BaseMedium {$/;"	s	class:LegionRuntime::LowLevel::Machine	file:
NodeAnnounceMessage	legion_runtime/lowlevel.cc	/^				       node_announce_handler> NodeAnnounceMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
NodeBase	legion_runtime/lowlevel_impl.h	/^      typedef DynamicTableNodeBase<LT, IT> NodeBase;$/;"	t	class:LegionRuntime::LowLevel::DynamicTable
NodeFields	test/circuit.h	/^enum NodeFields {$/;"	g
NodeMask	legion_runtime/legion_types.h	/^    typedef AVXBitMask<MAX_NUM_NODES> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	legion_runtime/legion_types.h	/^    typedef AVXTLBitMask<MAX_NUM_NODES> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	legion_runtime/legion_types.h	/^    typedef BitMask<NODE_TYPE,MAX_NUM_NODES,NODE_SHIFT,NODE_MASK> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	legion_runtime/legion_types.h	/^    typedef SSEBitMask<MAX_NUM_NODES> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	legion_runtime/legion_types.h	/^    typedef SSETLBitMask<MAX_NUM_NODES> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	legion_runtime/legion_types.h	/^    typedef TLBitMask<NODE_TYPE,MAX_NUM_NODES,NODE_SHIFT,NODE_MASK> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	legion_runtime/lowlevel_impl.h	/^                                              NODE_MASK_SHIFT,NODE_MASK_MASK> NodeMask;$/;"	t	namespace:LegionRuntime::LowLevel
NodeProcMap	legion_runtime/lowlevel_impl.h	/^      typedef std::map<int, std::vector<int> > NodeProcMap;$/;"	t	class:LegionRuntime::LowLevel::ProcessorAssignment
NodeTraverser	legion_runtime/region_tree.h	/^    class NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
NonPODSerializer	legion_runtime/legion.h	/^      struct NonPODSerializer {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
NonPODSerializer	legion_runtime/legion.h	/^      struct NonPODSerializer<T,false> {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
NotPredOp	legion_runtime/legion_ops.cc	/^    NotPredOp::NotPredOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
NotPredOp	legion_runtime/legion_ops.cc	/^    NotPredOp::NotPredOp(const NotPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
NotPredOp	legion_runtime/legion_ops.h	/^    class NotPredOp : public Predicate::Impl, PredicateWaiter {$/;"	c	namespace:LegionRuntime::HighLevel
Notifiable	legion_runtime/garbage_collection.h	/^    class Notifiable : public Collectable {$/;"	c	namespace:LegionRuntime::HighLevel
OASByInst	legion_runtime/lowlevel_dma.cc	/^    typedef std::map<InstPair, OASVec> OASByInst;$/;"	t	namespace:LegionRuntime::LowLevel	file:
OASByMem	legion_runtime/lowlevel_dma.cc	/^    typedef std::map<MemPair, OASByInst *> OASByMem;$/;"	t	namespace:LegionRuntime::LowLevel	file:
OASVec	legion_runtime/lowlevel_dma.cc	/^    typedef std::vector<OffsetsAndSize> OASVec;$/;"	t	namespace:LegionRuntime::LowLevel	file:
ODIM	legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = 1 };$/;"	e	enum:LegionRuntime::Arrays::Linearization::__anon4
ODIM	legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = DIM };$/;"	e	enum:LegionRuntime::Arrays::Blockify::__anon5
ODIM	legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = DIM };$/;"	e	enum:LegionRuntime::Arrays::Translation::__anon3
ODIM	legion_runtime/arrays.h	/^      enum { IDIM = T::IDIM, ODIM = T::ODIM };$/;"	e	enum:LegionRuntime::Arrays::DynamicMapping::__anon2
ODIM	legion_runtime/arrays.h	/^      static const unsigned ODIM = ODIM_;$/;"	m	class:LegionRuntime::Arrays::Mapping
ONE	dev/kbd.c	269;"	d	file:
ONES	legion_runtime/arrays.h	/^      static Point<DIM> ONES(void)$/;"	f	class:LegionRuntime::Arrays::Point
ONE_TASK_ONLY	legion_runtime/lowlevel.h	/^	ONE_TASK_ONLY,  \/\/ a single task on a single node of the machine$/;"	e	enum:LegionRuntime::LowLevel::Machine::RunStyle
ONE_TASK_PER_NODE	legion_runtime/lowlevel.h	/^	ONE_TASK_PER_NODE, \/\/ one task running on one proc of each node$/;"	e	enum:LegionRuntime::LowLevel::Machine::RunStyle
ONE_TASK_PER_PROC	legion_runtime/lowlevel.h	/^	ONE_TASK_PER_PROC, \/\/ a task for every processor in the machine$/;"	e	enum:LegionRuntime::LowLevel::Machine::RunStyle
OPEN_LOGICAL_NODE_CALL	legion_runtime/region_tree.h	/^      OPEN_LOGICAL_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
OPEN_MULTI_REDUCE	legion_runtime/legion_types.h	/^      OPEN_MULTI_REDUCE   = 4, \/\/ multiple open children with same reduction$/;"	e	enum:LegionRuntime::HighLevel::OpenState
OPEN_READ_ONLY	legion_runtime/legion_types.h	/^      OPEN_READ_ONLY      = 1,$/;"	e	enum:LegionRuntime::HighLevel::OpenState
OPEN_READ_WRITE	legion_runtime/legion_types.h	/^      OPEN_READ_WRITE     = 2, \/\/ unknown dirty information below$/;"	e	enum:LegionRuntime::HighLevel::OpenState
OPEN_SINGLE_REDUCE	legion_runtime/legion_types.h	/^      OPEN_SINGLE_REDUCE  = 3, \/\/ only one open child with reductions below$/;"	e	enum:LegionRuntime::HighLevel::OpenState
OR_PRED_OP_ALLOC	legion_runtime/legion_allocation.h	/^      OR_PRED_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
OUTPUT_AVAIL_REG_OFFSET	arch/k1om/xeon_phi.c	45;"	d	file:
OUTPUT_DRAWN_REG_OFFSET	arch/k1om/xeon_phi.c	46;"	d	file:
OVERLAP_MAYBE	legion_runtime/lowlevel.h	/^      enum OverlapResult { OVERLAP_NO, OVERLAP_MAYBE, OVERLAP_YES };$/;"	e	enum:LegionRuntime::LowLevel::ElementMask::OverlapResult
OVERLAP_NO	legion_runtime/lowlevel.h	/^      enum OverlapResult { OVERLAP_NO, OVERLAP_MAYBE, OVERLAP_YES };$/;"	e	enum:LegionRuntime::LowLevel::ElementMask::OverlapResult
OVERLAP_YES	legion_runtime/lowlevel.h	/^      enum OverlapResult { OVERLAP_NO, OVERLAP_MAYBE, OVERLAP_YES };$/;"	e	enum:LegionRuntime::LowLevel::ElementMask::OverlapResult
OffsetEntry	legion_runtime/region_tree.h	/^        OffsetEntry(const FieldMask &m,$/;"	f	struct:LegionRuntime::HighLevel::InstanceManager::OffsetEntry
OffsetEntry	legion_runtime/region_tree.h	/^        OffsetEntry(const FieldMask &m,$/;"	f	struct:LegionRuntime::HighLevel::LayoutDescription::OffsetEntry
OffsetEntry	legion_runtime/region_tree.h	/^        OffsetEntry(void) { }$/;"	f	struct:LegionRuntime::HighLevel::InstanceManager::OffsetEntry
OffsetEntry	legion_runtime/region_tree.h	/^        OffsetEntry(void) { }$/;"	f	struct:LegionRuntime::HighLevel::LayoutDescription::OffsetEntry
OffsetEntry	legion_runtime/region_tree.h	/^      struct OffsetEntry {$/;"	s	class:LegionRuntime::HighLevel::InstanceManager
OffsetEntry	legion_runtime/region_tree.h	/^      struct OffsetEntry {$/;"	s	class:LegionRuntime::HighLevel::LayoutDescription
OffsetsAndSize	legion_runtime/lowlevel_dma.cc	/^    struct OffsetsAndSize {$/;"	s	namespace:LegionRuntime::LowLevel	file:
OpInstance	legion_runtime/legion_profiling.h	/^        OpInstance(UniqueID uid, UniqueID pid)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::OpInstance
OpInstance	legion_runtime/legion_profiling.h	/^        OpInstance(void) { }$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::OpInstance
OpInstance	legion_runtime/legion_profiling.h	/^      struct OpInstance {$/;"	s	namespace:LegionRuntime::HighLevel::LegionProf
OpenState	legion_runtime/legion_types.h	/^    enum OpenState {$/;"	g	namespace:LegionRuntime::HighLevel
Operation	legion_runtime/legion_ops.cc	/^    Operation::Operation(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::Operation
Operation	legion_runtime/legion_ops.h	/^    class Operation {$/;"	c	namespace:LegionRuntime::HighLevel
OrPredOp	legion_runtime/legion_ops.cc	/^    OrPredOp::OrPredOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
OrPredOp	legion_runtime/legion_ops.cc	/^    OrPredOp::OrPredOp(const OrPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
OrPredOp	legion_runtime/legion_ops.h	/^    class OrPredOp : public Predicate::Impl, PredicateWaiter {$/;"	c	namespace:LegionRuntime::HighLevel
OutgoingMessage	legion_runtime/activemsg.cc	/^OutgoingMessage::OutgoingMessage(unsigned _msgid, unsigned _num_args,$/;"	f	class:OutgoingMessage
OutgoingMessage	legion_runtime/activemsg.cc	/^struct OutgoingMessage {$/;"	s	file:
OverlapResult	legion_runtime/lowlevel.h	/^      enum OverlapResult { OVERLAP_NO, OVERLAP_MAYBE, OVERLAP_YES };$/;"	g	class:LegionRuntime::LowLevel::ElementMask
PARTIAL_MESSAGE	legion_runtime/runtime.h	/^        PARTIAL_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageHeader
PARTITIONING_MAPPER_ID	test/custom_mapper.cc	/^  PARTITIONING_MAPPER_ID = 1,$/;"	e	enum:__anon28	file:
PART_PROJECTION	legion_runtime/legion_types.h	/^      PART_PROJECTION, \/\/ projection from a partition$/;"	e	enum:LegionRuntime::HighLevel::HandleType
PAUSEADJ	lua_src/lgc.c	51;"	d	file:
PAYLOAD_COPY	legion_runtime/activemsg.h	/^       PAYLOAD_COPY, \/\/ make a copy of the payload$/;"	e	enum:__anon6
PAYLOAD_FREE	legion_runtime/activemsg.h	/^       PAYLOAD_FREE, \/\/ take ownership of payload, free when done$/;"	e	enum:__anon6
PAYLOAD_KEEP	legion_runtime/activemsg.h	/^       PAYLOAD_KEEP, \/\/ use payload pointer, guaranteed to be stable$/;"	e	enum:__anon6
PAYLOAD_KEEPREG	legion_runtime/activemsg.h	/^       PAYLOAD_KEEPREG, \/\/ use payload pointer, AND it's registered!$/;"	e	enum:__anon6
PAYLOAD_NONE	legion_runtime/activemsg.h	/^enum { PAYLOAD_NONE, \/\/ no payload in packet$/;"	e	enum:__anon6
PAYLOAD_PENDING	legion_runtime/activemsg.h	/^       PAYLOAD_PENDING, \/\/ payload needs to be copied, but hasn't yet$/;"	e	enum:__anon6
PAYLOAD_SRCPTR	legion_runtime/activemsg.h	/^       PAYLOAD_SRCPTR, \/\/ payload has been copied to the src data pool$/;"	e	enum:__anon6
PCI_PRINT	dev/pci.c	34;"	d	file:
PENDING_ACTIVE_STATE	legion_runtime/garbage_collection.h	/^        PENDING_ACTIVE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
PENDING_INACTIVE_STATE	legion_runtime/garbage_collection.h	/^        PENDING_INACTIVE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
PENDING_INVALID_STATE	legion_runtime/garbage_collection.h	/^        PENDING_INVALID_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
PENDING_MAP_STATE	legion_runtime/legion_ops.h	/^        PENDING_MAP_STATE,$/;"	e	enum:LegionRuntime::HighLevel::SpeculativeOp::SpecState
PENDING_UPDATES_ALLOC	legion_runtime/legion_allocation.h	/^      PENDING_UPDATES_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PENDING_VALID_STATE	legion_runtime/garbage_collection.h	/^        PENDING_VALID_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
PERFORM_CLOSING_CHECKS_CALL	legion_runtime/region_tree.h	/^      PERFORM_CLOSING_CHECKS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PERFORM_COPY_DOMAIN_CALL	legion_runtime/region_tree.h	/^      PERFORM_COPY_DOMAIN_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PERFORM_DEPENDENCE_CHECKS_CALL	legion_runtime/region_tree.h	/^      PERFORM_DEPENDENCE_CHECKS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PERFORM_LOGICAL_CLOSE_CALL	legion_runtime/region_tree.h	/^      PERFORM_LOGICAL_CLOSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PERFORM_PREMAP_CLOSE_CALL	legion_runtime/region_tree.h	/^      PERFORM_PREMAP_CLOSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PERFORM_REDUCTION_CALL	legion_runtime/region_tree.h	/^      PERFORM_REDUCTION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PF2CTaskArgs	test/hpcg/hpcg-problem.cc	/^    PF2CTaskArgs(const lgncg::Geometry &fGeom,$/;"	f	struct:__anon33::PF2CTaskArgs
PF2CTaskArgs	test/hpcg/hpcg-problem.cc	/^struct PF2CTaskArgs {$/;"	s	namespace:__anon33	file:
PHI_FB_CTRL_REG_ADDR	arch/k1om/xeon_phi.c	43;"	d	file:
PHYSICAL_FIELD_TREE	legion_runtime/legion_types.h	44;"	d
PHYSICAL_MANAGER_ALLOC	legion_runtime/legion_allocation.h	/^      PHYSICAL_MANAGER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PHYSICAL_REGION_ALLOC	legion_runtime/legion_allocation.h	/^      PHYSICAL_REGION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PHYSICAL_VERSION_ALLOC	legion_runtime/legion_allocation.h	/^      PHYSICAL_VERSION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PI	lua_src/lmathlib.c	25;"	d	file:
PI	lua_src/lmathlib.c	26;"	d	file:
PING_VEC	test/ipi.c	32;"	d	file:
PLUS	nautilus/printk.c	520;"	d	file:
PMC_DEBUG	nautilus/pmc.c	30;"	d	file:
PMC_ERR	nautilus/pmc.c	32;"	d	file:
PMC_INFO	nautilus/pmc.c	31;"	d	file:
PMC_WARN	nautilus/pmc.c	33;"	d	file:
PML4_STRIDE	arch/hrt/hrt.c	32;"	d	file:
POINT_TASK_ALLOC	legion_runtime/legion_allocation.h	/^      POINT_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
POINT_TASK_KIND	legion_runtime/legion_tasks.h	/^        POINT_TASK_KIND,$/;"	e	enum:LegionRuntime::HighLevel::TaskOp::TaskKind
PONG_BCAST_VEC	test/ipi.c	34;"	d	file:
PONG_VEC	test/ipi.c	33;"	d	file:
POP_F2C_FID	test/hpcg/hpcg-problem.cc	/^    POP_F2C_FID$/;"	e	enum:__anon32	file:
POS	lua_src/lobject.c	248;"	d	file:
PRE	lua_src/lobject.c	247;"	d	file:
PREDICATE_ALLOC	legion_runtime/legion_allocation.h	/^      PREDICATE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PREFIX	acpi/osl.c	40;"	d	file:
PREFIX	acpi/tables.c	34;"	d	file:
PREFIX	nautilus/acpi.c	43;"	d	file:
PREMAP_PHYSICAL_REGION_ANALYSIS	legion_runtime/region_tree.h	/^      PREMAP_PHYSICAL_REGION_ANALYSIS,$/;"	e	enum:LegionRuntime::HighLevel::TraceKind
PREV_LOGICAL_ALLOC	legion_runtime/legion_allocation.h	/^      PREV_LOGICAL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PREV_PHYSICAL_ALLOC	legion_runtime/legion_allocation.h	/^      PREV_PHYSICAL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PRINT	test/benchmark.h	40;"	d
PRINT	test/benchmark.h	7;"	d
PRINT_MAX	nautilus/vc.c	634;"	d	file:
PRINT_REG	legion_runtime/legion_tasks.cc	27;"	d	file:
PRINT_REG	legion_runtime/legion_tasks.cc	9871;"	d	file:
PRIVATE_PTR	test/circuit.h	/^  PRIVATE_PTR,$/;"	e	enum:PointerLocation
PRId64	test/hpcg/cg.h	56;"	d
PRId64	test/hpcg/hpcg-main.cc	55;"	d	file:
PROCESSOR_GROUP_ALLOC	legion_runtime/legion_allocation.h	/^      PROCESSOR_GROUP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PROC_ALL_ONES	legion_runtime/legion_types.h	714;"	d
PROC_GROUP	legion_runtime/lowlevel.h	/^	PROC_GROUP, \/\/ Processor group$/;"	e	enum:LegionRuntime::LowLevel::Processor::Kind
PROC_MASK	legion_runtime/legion_types.h	713;"	d
PROC_MASK	legion_runtime/legion_types.h	744;"	d
PROC_SHIFT	legion_runtime/legion_types.h	712;"	d
PROC_SHIFT	legion_runtime/legion_types.h	743;"	d
PROC_TYPE	legion_runtime/legion_types.h	711;"	d
PROF_BEGIN_DEP_ANALYSIS	legion_runtime/legion_profiling.h	/^      PROF_BEGIN_DEP_ANALYSIS = 0,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_EXECUTION	legion_runtime/legion_profiling.h	/^      PROF_BEGIN_EXECUTION = 6,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_GC	legion_runtime/legion_profiling.h	/^      PROF_BEGIN_GC = 18,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_MAP_ANALYSIS	legion_runtime/legion_profiling.h	/^      PROF_BEGIN_MAP_ANALYSIS = 4,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_MESSAGE	legion_runtime/legion_profiling.h	/^      PROF_BEGIN_MESSAGE = 20,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_POST	legion_runtime/legion_profiling.h	/^      PROF_BEGIN_POST = 14,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_PREMAP_ANALYSIS	legion_runtime/legion_profiling.h	/^      PROF_BEGIN_PREMAP_ANALYSIS = 2,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_SCHEDULER	legion_runtime/legion_profiling.h	/^      PROF_BEGIN_SCHEDULER = 10,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_TRIGGER	legion_runtime/legion_profiling.h	/^      PROF_BEGIN_TRIGGER = 16,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_WAIT	legion_runtime/legion_profiling.h	/^      PROF_BEGIN_WAIT = 8,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_COMPLETE	legion_runtime/legion_profiling.h	/^      PROF_COMPLETE = 12,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_DEP_ANALYSIS	legion_runtime/legion_profiling.h	/^      PROF_END_DEP_ANALYSIS = 1,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_EXECUTION	legion_runtime/legion_profiling.h	/^      PROF_END_EXECUTION = 7,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_GC	legion_runtime/legion_profiling.h	/^      PROF_END_GC = 19,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_MAP_ANALYSIS	legion_runtime/legion_profiling.h	/^      PROF_END_MAP_ANALYSIS = 5,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_MESSAGE	legion_runtime/legion_profiling.h	/^      PROF_END_MESSAGE = 21,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_POST	legion_runtime/legion_profiling.h	/^      PROF_END_POST = 15,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_PREMAP_ANALYSIS	legion_runtime/legion_profiling.h	/^      PROF_END_PREMAP_ANALYSIS = 3,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_SCHEDULER	legion_runtime/legion_profiling.h	/^      PROF_END_SCHEDULER = 11,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_TRIGGER	legion_runtime/legion_profiling.h	/^      PROF_END_TRIGGER = 17,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_WAIT	legion_runtime/legion_profiling.h	/^      PROF_END_WAIT = 9,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_LAUNCH	legion_runtime/legion_profiling.h	/^      PROF_LAUNCH = 13,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROMOTED	legion_runtime/legion_types.h	/^      PROMOTED        = 0x00001000, \/\/ Internal use only$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
PROMOTED_DEPENDENCE	legion_runtime/legion_types.h	/^      PROMOTED_DEPENDENCE = 5,$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
PTHREAD_SAFE_CALL	legion_runtime/shared_lowlevel.cc	108;"	d	file:
PTHREAD_SAFE_CALL	legion_runtime/shared_lowlevel.cc	117;"	d	file:
PTHREAD_SAFE_CALL	legion_runtime/utilities.h	508;"	d
PTHREAD_SAFE_CALL	legion_runtime/utilities.h	517;"	d
PTHREAD_SAFE_CALL	legion_runtime/utilities.h	816;"	d
PTRDIFF_T_RANK	nautilus/fmtout.c	79;"	d	file:
PULL_VALID_VIEWS_CALL	legion_runtime/region_tree.h	/^      PULL_VALID_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PVecItem	test/hpcg/vector.h	/^    PVecItem(const std::vector< Rect<1> > &sgb,$/;"	f	struct:lgncg::PVecItem
PVecItem	test/hpcg/vector.h	/^struct PVecItem {$/;"	s	namespace:lgncg
PartialWriteEntry	legion_runtime/lowlevel.cc	/^    struct PartialWriteEntry {$/;"	s	namespace:LegionRuntime::LowLevel	file:
PartialWriteKey	legion_runtime/lowlevel.cc	/^    struct PartialWriteKey {$/;"	s	namespace:LegionRuntime::LowLevel	file:
PartialWriteMap	legion_runtime/lowlevel.cc	/^    typedef std::map<PartialWriteKey, PartialWriteEntry> PartialWriteMap;$/;"	t	namespace:LegionRuntime::LowLevel	file:
PartitionNode	legion_runtime/region_tree.cc	/^    PartitionNode::PartitionNode(LogicalPartition p, RegionNode *par,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
PartitionNode	legion_runtime/region_tree.cc	/^    PartitionNode::PartitionNode(const PartitionNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
PartitionNode	legion_runtime/region_tree.h	/^    class PartitionNode : public RegionTreeNode {$/;"	c	namespace:LegionRuntime::HighLevel
PartitionProjectionFnptr	legion_runtime/legion_types.h	/^    typedef LogicalRegion (*PartitionProjectionFnptr)(LogicalPartition parent, $/;"	t	namespace:LegionRuntime::HighLevel
PartitionProjectionTable	legion_runtime/legion_types.h	/^      PartitionProjectionTable;$/;"	t	namespace:LegionRuntime::HighLevel
PartitioningMapper	test/custom_mapper.cc	/^PartitioningMapper::PartitioningMapper(Machine *m,$/;"	f	class:PartitioningMapper
PartitioningMapper	test/custom_mapper.cc	/^class PartitioningMapper : public DefaultMapper {$/;"	c	file:
Partitions	test/circuit.h	/^struct Partitions {$/;"	s
PathReturner	legion_runtime/region_tree.cc	/^    PathReturner::PathReturner(RegionTreePath &path, ContextID c,$/;"	f	class:LegionRuntime::HighLevel::PathReturner
PathReturner	legion_runtime/region_tree.cc	/^    PathReturner::PathReturner(const PathReturner &rhs)$/;"	f	class:LegionRuntime::HighLevel::PathReturner
PathReturner	legion_runtime/region_tree.h	/^    class PathReturner : public PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
PathTraverser	legion_runtime/region_tree.cc	/^    PathTraverser::PathTraverser(RegionTreePath &p)$/;"	f	class:LegionRuntime::HighLevel::PathTraverser
PathTraverser	legion_runtime/region_tree.cc	/^    PathTraverser::PathTraverser(const PathTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PathTraverser
PathTraverser	legion_runtime/region_tree.h	/^    class PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
PayloadSource	legion_runtime/activemsg.cc	/^  PayloadSource(void) { }$/;"	f	class:PayloadSource
PayloadSource	legion_runtime/activemsg.cc	/^class PayloadSource {$/;"	c	file:
PendingGather	legion_runtime/lowlevel_dma.cc	/^      struct PendingGather {$/;"	s	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
PendingUpdates	legion_runtime/lowlevel.cc	/^      PendingUpdates(void) : unguarded_delta(0) {}$/;"	f	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates
PendingUpdates	legion_runtime/lowlevel.cc	/^    class Event::Impl::PendingUpdates {$/;"	c	class:LegionRuntime::LowLevel::Event::Impl	file:
PerNodeUpdates	legion_runtime/lowlevel.cc	/^      struct PerNodeUpdates {$/;"	s	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates	file:
PerThreadTimerData	legion_runtime/lowlevel.cc	/^      PerThreadTimerData(void)$/;"	f	struct:LegionRuntime::LowLevel::PerThreadTimerData
PerThreadTimerData	legion_runtime/lowlevel.cc	/^    struct PerThreadTimerData {$/;"	s	namespace:LegionRuntime::LowLevel	file:
PerThreadTimerData	legion_runtime/shared_lowlevel.cc	/^      PerThreadTimerData(void)$/;"	f	struct:LegionRuntime::LowLevel::PerThreadTimerData
PerThreadTimerData	legion_runtime/shared_lowlevel.cc	/^    struct PerThreadTimerData {$/;"	s	namespace:LegionRuntime::LowLevel	file:
PerfTrace	legion_runtime/region_tree.cc	/^    RegionTreeForest::PerfTrace::PerfTrace(int k, unsigned long long s)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
PerfTrace	legion_runtime/region_tree.h	/^        PerfTrace(void)$/;"	f	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
PerfTrace	legion_runtime/region_tree.h	/^      struct PerfTrace {$/;"	s	class:LegionRuntime::HighLevel::RegionTreeForest
PerfTracer	legion_runtime/region_tree.h	/^      PerfTracer(RegionTreeForest *f, int k)$/;"	f	class:LegionRuntime::HighLevel::PerfTracer
PerfTracer	legion_runtime/region_tree.h	/^    class PerfTracer {$/;"	c	namespace:LegionRuntime::HighLevel
PhaseBarrier	legion_runtime/legion.cc	/^    PhaseBarrier::PhaseBarrier(Barrier b, unsigned parts)$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
PhaseBarrier	legion_runtime/legion.cc	/^    PhaseBarrier::PhaseBarrier(void)$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
PhaseBarrier	legion_runtime/legion.h	/^    class PhaseBarrier {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalCloser	legion_runtime/region_tree.cc	/^    PhysicalCloser::PhysicalCloser(MappableInfo *in, bool open, LogicalRegion h)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
PhysicalCloser	legion_runtime/region_tree.cc	/^    PhysicalCloser::PhysicalCloser(const PhysicalCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
PhysicalCloser	legion_runtime/region_tree.h	/^    struct PhysicalCloser {$/;"	s	namespace:LegionRuntime::HighLevel
PhysicalCopyAnalyzer	legion_runtime/region_tree.cc	/^    PhysicalCopyAnalyzer<READING,REDUCE,TRACK,ABOVE>::PhysicalCopyAnalyzer($/;"	f	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
PhysicalCopyAnalyzer	legion_runtime/region_tree.h	/^    class PhysicalCopyAnalyzer {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalDepAnalyzer	legion_runtime/region_tree.cc	/^    PhysicalDepAnalyzer<FILTER>::PhysicalDepAnalyzer(const PhysicalUser &u,$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
PhysicalDepAnalyzer	legion_runtime/region_tree.h	/^    class PhysicalDepAnalyzer {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalEventFilter	legion_runtime/region_tree.h	/^      PhysicalEventFilter(Event term)$/;"	f	class:LegionRuntime::HighLevel::PhysicalEventFilter
PhysicalEventFilter	legion_runtime/region_tree.h	/^    class PhysicalEventFilter {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalFilter	legion_runtime/region_tree.cc	/^    PhysicalFilter::PhysicalFilter(const FieldMask &mask)$/;"	f	class:LegionRuntime::HighLevel::PhysicalFilter
PhysicalFilter	legion_runtime/region_tree.h	/^    class PhysicalFilter {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalInitializer	legion_runtime/region_tree.cc	/^    PhysicalInitializer::PhysicalInitializer(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
PhysicalInitializer	legion_runtime/region_tree.cc	/^    PhysicalInitializer::PhysicalInitializer(const PhysicalInitializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
PhysicalInitializer	legion_runtime/region_tree.h	/^    class PhysicalInitializer : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalInstance	legion_runtime/legion_types.h	/^    typedef LowLevel::RegionInstance PhysicalInstance;$/;"	t	namespace:LegionRuntime::HighLevel
PhysicalInvalidator	legion_runtime/region_tree.cc	/^    PhysicalInvalidator::PhysicalInvalidator(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
PhysicalInvalidator	legion_runtime/region_tree.cc	/^    PhysicalInvalidator::PhysicalInvalidator(ContextID c, const FieldMask &m,$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
PhysicalInvalidator	legion_runtime/region_tree.cc	/^    PhysicalInvalidator::PhysicalInvalidator(const PhysicalInvalidator &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
PhysicalInvalidator	legion_runtime/region_tree.h	/^    class PhysicalInvalidator : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalManager	legion_runtime/region_tree.cc	/^    PhysicalManager::PhysicalManager(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
PhysicalManager	legion_runtime/region_tree.h	/^    class PhysicalManager : public DistributedCollectable {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalRegion	legion_runtime/legion.cc	/^    PhysicalRegion::PhysicalRegion(PhysicalRegion::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
PhysicalRegion	legion_runtime/legion.cc	/^    PhysicalRegion::PhysicalRegion(const PhysicalRegion &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
PhysicalRegion	legion_runtime/legion.cc	/^    PhysicalRegion::PhysicalRegion(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
PhysicalRegion	legion_runtime/legion.h	/^    class PhysicalRegion {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalState	legion_runtime/region_tree.cc	/^    PhysicalState::PhysicalState(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::PhysicalState
PhysicalState	legion_runtime/region_tree.cc	/^    PhysicalState::PhysicalState(ContextID c, RegionTreeNode *n)$/;"	f	class:LegionRuntime::HighLevel::PhysicalState
PhysicalState	legion_runtime/region_tree.cc	/^    PhysicalState::PhysicalState(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalState
PhysicalState	legion_runtime/region_tree.h	/^    struct PhysicalState {$/;"	s	namespace:LegionRuntime::HighLevel
PhysicalUnpacker	legion_runtime/region_tree.cc	/^    PhysicalUnpacker::PhysicalUnpacker(FieldSpaceNode *node,$/;"	f	class:LegionRuntime::HighLevel::PhysicalUnpacker
PhysicalUnpacker	legion_runtime/region_tree.h	/^    class PhysicalUnpacker {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalUser	legion_runtime/region_tree.cc	/^    PhysicalUser::PhysicalUser(const RegionUsage &u, const FieldMask &m,$/;"	f	class:LegionRuntime::HighLevel::PhysicalUser
PhysicalUser	legion_runtime/region_tree.cc	/^    PhysicalUser::PhysicalUser(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalUser
PhysicalUser	legion_runtime/region_tree.h	/^    struct PhysicalUser : public GenericUser {$/;"	s	namespace:LegionRuntime::HighLevel
Point	legion_runtime/arrays.h	/^      Point(const Point<1>& other) { for(unsigned i = 0; i < DIM; i++) x[i] = other.x[i]; }$/;"	f	class:LegionRuntime::Arrays::Point
Point	legion_runtime/arrays.h	/^      Point(const Point<DIM>& other) { for(unsigned i = 0; i < DIM; i++) x[i] = other.x[i]; }$/;"	f	class:LegionRuntime::Arrays::Point
Point	legion_runtime/arrays.h	/^      Point(const int *vals) { for(unsigned i = 0; i < DIM; i++) x[i] = vals[i]; }$/;"	f	class:LegionRuntime::Arrays::Point
Point	legion_runtime/arrays.h	/^      Point(int val) { x[0] = val; }$/;"	f	class:LegionRuntime::Arrays::Point
Point	legion_runtime/arrays.h	/^      Point(void) {}$/;"	f	class:LegionRuntime::Arrays::Point
Point	legion_runtime/arrays.h	/^    class Point {$/;"	c	namespace:LegionRuntime::Arrays
Point	legion_runtime/arrays.h	/^    class Point<1> {$/;"	c	namespace:LegionRuntime::Arrays
PointInInputRectIterator	legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<DIM> PointInInputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Blockify
PointInInputRectIterator	legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<IDIM> PointInInputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Linearization
PointInInputRectIterator	legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<IDIM> PointInInputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Mapping
PointInOutputRectIterator	legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<DIM> PointInOutputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Blockify
PointInOutputRectIterator	legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<ODIM> PointInOutputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Linearization
PointInOutputRectIterator	legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<ODIM> PointInOutputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Mapping
PointTask	legion_runtime/legion_tasks.cc	/^    PointTask::PointTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::PointTask
PointTask	legion_runtime/legion_tasks.cc	/^    PointTask::PointTask(const PointTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::PointTask
PointTask	legion_runtime/legion_tasks.h	/^    class PointTask : public SingleTask {$/;"	c	namespace:LegionRuntime::HighLevel
PointerLocation	test/circuit.h	/^enum PointerLocation {$/;"	g
PostEndArgs	legion_runtime/legion_tasks.h	/^      struct PostEndArgs {$/;"	s	class:LegionRuntime::HighLevel::SingleTask
PreconditionSet	legion_runtime/region_tree.h	/^      PreconditionSet(const FieldMask &m)$/;"	f	struct:LegionRuntime::HighLevel::PreconditionSet
PreconditionSet	legion_runtime/region_tree.h	/^      PreconditionSet(void) { }$/;"	f	struct:LegionRuntime::HighLevel::PreconditionSet
PreconditionSet	legion_runtime/region_tree.h	/^    struct PreconditionSet {$/;"	s	namespace:LegionRuntime::HighLevel
Predicate	legion_runtime/legion.cc	/^    Predicate::Predicate(Predicate::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::Predicate
Predicate	legion_runtime/legion.cc	/^    Predicate::Predicate(bool value)$/;"	f	class:LegionRuntime::HighLevel::Predicate
Predicate	legion_runtime/legion.cc	/^    Predicate::Predicate(const Predicate &p)$/;"	f	class:LegionRuntime::HighLevel::Predicate
Predicate	legion_runtime/legion.cc	/^    Predicate::Predicate(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate
Predicate	legion_runtime/legion.h	/^    class Predicate {$/;"	c	namespace:LegionRuntime::HighLevel
PredicateFnptr	legion_runtime/legion_types.h	/^    typedef bool (*PredicateFnptr)(const void*, size_t, $/;"	t	namespace:LegionRuntime::HighLevel
PredicateOp	legion_runtime/legion_ops.h	/^    typedef Predicate::Impl PredicateOp;$/;"	t	namespace:LegionRuntime::HighLevel
PredicateWaiter	legion_runtime/legion_ops.h	/^    class PredicateWaiter {$/;"	c	namespace:LegionRuntime::HighLevel
PreemptableThread	legion_runtime/lowlevel_impl.h	/^      PreemptableThread(void) {}$/;"	f	class:LegionRuntime::LowLevel::PreemptableThread
PreemptableThread	legion_runtime/lowlevel_impl.h	/^    class PreemptableThread {$/;"	c	namespace:LegionRuntime::LowLevel
PremapTraverser	legion_runtime/region_tree.cc	/^    PremapTraverser::PremapTraverser(RegionTreePath &p, MappableInfo *i)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
PremapTraverser	legion_runtime/region_tree.cc	/^    PremapTraverser::PremapTraverser(const PremapTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
PremapTraverser	legion_runtime/region_tree.h	/^    class PremapTraverser : public PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
PrivilegeMode	legion_runtime/legion_types.h	/^    enum PrivilegeMode {$/;"	g	namespace:LegionRuntime::HighLevel
Problem	test/hpcg/hpcg-problem.h	/^    Problem(const lgncg::Geometry &geom,$/;"	f	struct:Problem
Problem	test/hpcg/hpcg-problem.h	/^    Problem(void) { ; }$/;"	f	struct:Problem
Problem	test/hpcg/hpcg-problem.h	/^struct Problem {$/;"	s
ProblemGenerator	test/hpcg/hpcg-problem-generator.h	/^    ProblemGenerator(const lgncg::Geometry &geom,$/;"	f	struct:ProblemGenerator
ProblemGenerator	test/hpcg/hpcg-problem-generator.h	/^struct ProblemGenerator {$/;"	s
Processor	legion_runtime/legion_types.h	/^    typedef LowLevel::Processor Processor;$/;"	t	namespace:LegionRuntime::HighLevel
Processor	legion_runtime/lowlevel.h	/^    class Processor {$/;"	c	namespace:LegionRuntime::LowLevel
ProcessorAssignment	legion_runtime/lowlevel.cc	/^    ProcessorAssignment::ProcessorAssignment(int _num_local_procs)$/;"	f	class:LegionRuntime::LowLevel::ProcessorAssignment
ProcessorAssignment	legion_runtime/lowlevel_impl.h	/^    class ProcessorAssignment {$/;"	c	namespace:LegionRuntime::LowLevel
ProcessorGroup	legion_runtime/lowlevel.cc	/^    ProcessorGroup::ProcessorGroup(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
ProcessorGroup	legion_runtime/lowlevel_impl.h	/^    class ProcessorGroup : public Processor::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
ProcessorGroup	legion_runtime/shared_lowlevel.cc	/^      ProcessorGroup(Processor p) $/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
ProcessorGroup	legion_runtime/shared_lowlevel.cc	/^    class ProcessorGroup : public ProcessorImpl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ProcessorGroupInfo	legion_runtime/runtime.h	/^        ProcessorGroupInfo(Processor p, const ProcessorMask &m)$/;"	f	struct:LegionRuntime::HighLevel::Runtime::ProcessorGroupInfo
ProcessorGroupInfo	legion_runtime/runtime.h	/^        ProcessorGroupInfo(void)$/;"	f	struct:LegionRuntime::HighLevel::Runtime::ProcessorGroupInfo
ProcessorGroupInfo	legion_runtime/runtime.h	/^      struct ProcessorGroupInfo {$/;"	s	class:LegionRuntime::HighLevel::Runtime
ProcessorGroupTableAllocator	legion_runtime/lowlevel_impl.h	/^    typedef DynamicTableAllocator<ProcessorGroup, 10, 4> ProcessorGroupTableAllocator;$/;"	t
ProcessorImpl	legion_runtime/shared_lowlevel.cc	/^        ProcessorImpl(nk_barrier_t *init, const Processor::TaskIDTable &table, $/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
ProcessorImpl	legion_runtime/shared_lowlevel.cc	/^        ProcessorImpl(nk_barrier_t *init, const Processor::TaskIDTable &table,$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
ProcessorImpl	legion_runtime/shared_lowlevel.cc	/^    class ProcessorImpl : public Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ProcessorManager	legion_runtime/runtime.cc	/^    ProcessorManager::ProcessorManager(Processor proc, Processor::Kind kind,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
ProcessorManager	legion_runtime/runtime.cc	/^    ProcessorManager::ProcessorManager(const ProcessorManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
ProcessorManager	legion_runtime/runtime.h	/^    class ProcessorManager {$/;"	c	namespace:LegionRuntime::HighLevel
ProcessorMask	legion_runtime/legion_types.h	/^                                                                  ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	legion_runtime/legion_types.h	/^    typedef AVXBitMask<MAX_NUM_PROCS> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	legion_runtime/legion_types.h	/^    typedef AVXTLBitMask<MAX_NUM_PROCS> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	legion_runtime/legion_types.h	/^    typedef BitMask<PROCTYPE,MAX_NUM_PROCS,PROC_SHIFT,PROC_MASK> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	legion_runtime/legion_types.h	/^    typedef BitMask<PROC_TYPE,MAX_NUM_PROCS,PROC_SHIFT,PROC_MASK> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	legion_runtime/legion_types.h	/^    typedef SSEBitMask<MAX_NUM_PROCS> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	legion_runtime/legion_types.h	/^    typedef SSETLBitMask<MAX_NUM_PROCS> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMemoryAffinity	legion_runtime/legion_types.h	/^    typedef LowLevel::Machine::ProcessorMemoryAffinity ProcessorMemoryAffinity;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMemoryAffinity	legion_runtime/lowlevel.h	/^      struct ProcessorMemoryAffinity {$/;"	s	class:LegionRuntime::LowLevel::Machine
ProcessorProfiler	legion_runtime/legion_logging.h	/^        ProcessorProfiler() {$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
ProcessorProfiler	legion_runtime/legion_logging.h	/^        ProcessorProfiler(const ProcessorProfiler& copy_from) {assert(false);}$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
ProcessorProfiler	legion_runtime/legion_logging.h	/^      struct ProcessorProfiler {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
ProcessorProfiler	legion_runtime/legion_profiling.h	/^	ProcessorProfiler(const ProcessorProfiler& copy_from) $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
ProcessorProfiler	legion_runtime/legion_profiling.h	/^        ProcessorProfiler(Processor p, bool util, Processor::Kind k) $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
ProcessorProfiler	legion_runtime/legion_profiling.h	/^        ProcessorProfiler(void)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
ProcessorProfiler	legion_runtime/legion_profiling.h	/^      struct ProcessorProfiler {$/;"	s	namespace:LegionRuntime::HighLevel::LegionProf
ProcessorThread	legion_runtime/lowlevel.cc	/^      ProcessorThread(int _id, int _core_id)$/;"	f	class:LegionRuntime::LowLevel::ProcessorThread
ProcessorThread	legion_runtime/lowlevel.cc	/^    class ProcessorThread : public ThreadImpl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ProfKind	legion_runtime/legion_profiling.h	/^    enum ProfKind {$/;"	g	namespace:LegionRuntime::HighLevel
ProfilingEvent	legion_runtime/legion_profiling.h	/^        ProfilingEvent(unsigned k, UniqueID uid, unsigned long long t)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProfilingEvent
ProfilingEvent	legion_runtime/legion_profiling.h	/^      struct ProfilingEvent {$/;"	s	namespace:LegionRuntime::HighLevel::LegionProf
ProjectionID	legion_runtime/legion_types.h	/^    typedef unsigned int ProjectionID;$/;"	t	namespace:LegionRuntime::HighLevel
Protect	lua_src/lvm.c	511;"	d	file:
PthreadCondWaiter	legion_runtime/lowlevel.cc	/^      PthreadCondWaiter(Event::Impl *i)$/;"	f	class:LegionRuntime::LowLevel::PthreadCondWaiter
PthreadCondWaiter	legion_runtime/lowlevel.cc	/^    class PthreadCondWaiter : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
RA	lua_src/lvm.c	489;"	d	file:
RADIANS_PER_DEGREE	lua_src/lmathlib.c	27;"	d	file:
RB	lua_src/lvm.c	491;"	d	file:
RC	lua_src/lvm.c	492;"	d	file:
READ_ONLY	legion_runtime/legion_types.h	/^      READ_ONLY       = 0x00000001,$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
READ_WRITE	legion_runtime/legion_types.h	/^      READ_WRITE      = 0x00000007, \/\/ All three privileges$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
RECORD_CLOSE_CALL	legion_runtime/region_tree.h	/^      RECORD_CLOSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REDUCE	legion_runtime/legion_types.h	/^      REDUCE          = 0x00000004,$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
REDUCE_FROM_CALL	legion_runtime/region_tree.h	/^      REDUCE_FROM_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REDUCE_ID	test/circuit.h	/^  REDUCE_ID = 1,$/;"	e	enum:__anon41
REDUCE_TO_CALL	legion_runtime/region_tree.h	/^      REDUCE_TO_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REDUCTION_ALLOC	legion_runtime/legion_allocation.h	/^      REDUCTION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
REDUCTION_VIEW_ALLOC	legion_runtime/legion_allocation.h	/^      REDUCTION_VIEW_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
REGDMA_MEM	legion_runtime/lowlevel.h	/^        REGDMA_MEM, \/\/ Registered memory visible to all processors on a node, can be a target of RDMA$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
REGION_CREATION	legion_runtime/legion_types.h	/^      REGION_CREATION = 0x00000004,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
REGION_DELETION	legion_runtime/legion_types.h	/^      REGION_DELETION = 0x00000008,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
REGION_DEPENDENCE_ANALYSIS	legion_runtime/region_tree.h	/^      REGION_DEPENDENCE_ANALYSIS,  $/;"	e	enum:LegionRuntime::HighLevel::TraceKind
REGISTER_LOGICAL_DEPS_CALL	legion_runtime/region_tree.h	/^      REGISTER_LOGICAL_DEPS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REGISTER_LOGICAL_NODE_CALL	legion_runtime/region_tree.h	/^      REGISTER_LOGICAL_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REGISTER_PHYSICAL_REGION_ANALYSIS	legion_runtime/region_tree.h	/^      REGISTER_PHYSICAL_REGION_ANALYSIS,$/;"	e	enum:LegionRuntime::HighLevel::TraceKind
REGISTER_REGION_CALL	legion_runtime/region_tree.h	/^      REGISTER_REGION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REG_LOAD	asm/thread_lowlevel.S	/^#define REG_LOAD() FPR_LOAD() SR_LOAD() GPR_LOAD()$/;"	d
REG_LOAD_SKIP_RAX	asm/thread_lowlevel.S	/^#define REG_LOAD_SKIP_RAX() FPR_LOAD() SR_LOAD() GPR_LOAD_SKIP_RAX()$/;"	d
REG_PROJECTION	legion_runtime/legion_types.h	/^      REG_PROJECTION, \/\/ projection from a region$/;"	e	enum:LegionRuntime::HighLevel::HandleType
REG_SAVE	asm/thread_lowlevel.S	/^#define REG_SAVE() GPR_SAVE() SR_SAVE() FPR_SAVE()$/;"	d
REG_SAVE_SIZE	asm/thread_lowlevel.S	/^#define REG_SAVE_SIZE (GPR_SAVE_SIZE+SR_SAVE_SIZE+FPR_SAVE_SIZE)$/;"	d
RELAXED	legion_runtime/legion_types.h	/^      RELAXED      = 3,$/;"	e	enum:LegionRuntime::HighLevel::CoherenceProperty
RELEASE_MAPPABLE	legion_runtime/legion.h	/^        RELEASE_MAPPABLE,$/;"	e	enum:LegionRuntime::HighLevel::Mappable::MappableKind
RELEASE_OP_ALLOC	legion_runtime/legion_allocation.h	/^      RELEASE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RELEASE_PHYSICAL_STATE_CALL	legion_runtime/region_tree.h	/^      RELEASE_PHYSICAL_STATE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REMAP_PHYSICAL_REGION_ANALYSIS	legion_runtime/region_tree.h	/^      REMAP_PHYSICAL_REGION_ANALYSIS,$/;"	e	enum:LegionRuntime::HighLevel::TraceKind
REMAP_REGION_CALL	legion_runtime/region_tree.h	/^      REMAP_REGION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REMOTE_COPY_MSGID	legion_runtime/lowlevel_dma.h	/^      REMOTE_COPY_MSGID = 200,$/;"	e	enum:LegionRuntime::LowLevel::DMAActiveMessageIDs
REMOTE_MALLOC_MSGID	legion_runtime/lowlevel.cc	/^      REMOTE_MALLOC_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REMOTE_MALLOC_RPLID	legion_runtime/lowlevel.cc	/^      REMOTE_MALLOC_RPLID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REMOTE_REDLIST_MSGID	legion_runtime/lowlevel.cc	/^      REMOTE_REDLIST_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REMOTE_REDUCE_MSGID	legion_runtime/lowlevel.cc	/^      REMOTE_REDUCE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REMOTE_TASK_ALLOC	legion_runtime/legion_allocation.h	/^      REMOTE_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
REMOTE_TASK_KIND	legion_runtime/legion_tasks.h	/^        REMOTE_TASK_KIND,$/;"	e	enum:LegionRuntime::HighLevel::TaskOp::TaskKind
REMOTE_WRITE_FENCE_MSGID	legion_runtime/lowlevel.cc	/^      REMOTE_WRITE_FENCE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REMOTE_WRITE_MSGID	legion_runtime/lowlevel.cc	/^      REMOTE_WRITE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REM_CORE	test/benchmark.c	242;"	d	file:
RESERVEDSLOT	lua_src/lbaselib.c	283;"	d	file:
RESERVE_CONTEXTS_CALL	legion_runtime/region_tree.h	/^      RESERVE_CONTEXTS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
RESIZE_CONTEXTS_CALL	legion_runtime/region_tree.h	/^      RESIZE_CONTEXTS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
RESOLVE_FALSE_STATE	legion_runtime/legion_ops.h	/^        RESOLVE_FALSE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::SpeculativeOp::SpecState
RESOLVE_SPECULATION	legion_runtime/legion_logging.h	/^    RESOLVE_SPECULATION = 11,$/;"	e	enum:LegionRuntime::TimingKind
RESOLVE_TRUE_STATE	legion_runtime/legion_ops.h	/^        RESOLVE_TRUE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::SpeculativeOp::SpecState
RETS	lua_src/lobject.c	246;"	d	file:
RETURN	test/benchmark.h	11;"	d
RETURN	test/benchmark.h	45;"	d
RHS	legion_runtime/lowlevel.h	/^      typedef int RHS;$/;"	t	class:LegionRuntime::LowLevel::MyReductionOp
RHS	test/circuit.h	/^  typedef float RHS;$/;"	t	class:AccumulateCharge
RHS	test/hpcg/dotprod-accumulate.h	/^    typedef double RHS;$/;"	t	class:lgncg::DotProdAccumulate
RHS	test/saxpy_array.cc	/^  typedef float RHS;$/;"	t	struct:Add	file:
RIGHT_DIR	legion_runtime/rectangle_set.h	/^        RIGHT_DIR = 1,$/;"	e	enum:LegionRuntime::HighLevel::Segment::Direction
RKB	lua_src/lvm.c	493;"	d	file:
RKC	lua_src/lvm.c	495;"	d	file:
ROLL_UP_DATA_MSGID	legion_runtime/lowlevel.cc	/^      ROLL_UP_DATA_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
ROLL_UP_TIMER_MSGID	legion_runtime/lowlevel.cc	/^      ROLL_UP_TIMER_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
RSP_STACK_OFFSET	nautilus/thread.c	403;"	d	file:
RUNTIME_ACCESSOR_H	legion_runtime/accessor.h	17;"	d
RUNTIME_DISTRIBUTED_ALLOC	legion_runtime/legion_allocation.h	/^      RUNTIME_DISTRIBUTED_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUNTIME_DIST_COLLECT_ALLOC	legion_runtime/legion_allocation.h	/^      RUNTIME_DIST_COLLECT_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUNTIME_FUTURE_ALLOC	legion_runtime/legion_allocation.h	/^      RUNTIME_FUTURE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUNTIME_GC_EPOCH_ALLOC	legion_runtime/legion_allocation.h	/^      RUNTIME_GC_EPOCH_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUNTIME_HIER_COLLECT_ALLOC	legion_runtime/legion_allocation.h	/^      RUNTIME_HIER_COLLECT_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUNTIME_LOWLEVEL_H	legion_runtime/lowlevel.h	17;"	d
RUNTIME_REMOTE_ALLOC	legion_runtime/legion_allocation.h	/^      RUNTIME_REMOTE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUN_TRIALS	test/benchmark.c	606;"	d	file:
RangeExecutors	legion_runtime/lowlevel.cc	/^    namespace RangeExecutors {$/;"	n	namespace:LegionRuntime::LowLevel	file:
RangeExecutors	legion_runtime/lowlevel_dma.cc	/^    namespace RangeExecutors {$/;"	n	namespace:LegionRuntime::LowLevel	file:
RangeExecutors	legion_runtime/shared_lowlevel.cc	/^    namespace RangeExecutors {$/;"	n	namespace:LegionRuntime::LowLevel	file:
RebuildRect	legion_runtime/rectangle_set.h	/^      RebuildRect(T lx, T ly, T hx, T hy)$/;"	f	struct:LegionRuntime::HighLevel::RebuildRect
RebuildRect	legion_runtime/rectangle_set.h	/^    struct RebuildRect {$/;"	s	namespace:LegionRuntime::HighLevel
Rect	legion_runtime/arrays.h	/^      Rect(const Point<DIM> _lo, const Point<DIM> _hi) : lo(_lo), hi(_hi) {}$/;"	f	class:LegionRuntime::Arrays::Rect
Rect	legion_runtime/arrays.h	/^      Rect(const Rect<DIM>& other) : lo(other.lo), hi(other.hi) {}$/;"	f	class:LegionRuntime::Arrays::Rect
Rect	legion_runtime/arrays.h	/^      Rect(const int *vals) : lo(vals), hi(vals + DIM) {}$/;"	f	class:LegionRuntime::Arrays::Rect
Rect	legion_runtime/arrays.h	/^      Rect(void) {}$/;"	f	class:LegionRuntime::Arrays::Rect
Rect	legion_runtime/arrays.h	/^    class Rect {$/;"	c	namespace:LegionRuntime::Arrays
RectangleSet	legion_runtime/rectangle_set.h	/^    RectangleSet<T,DISCRETE>::RectangleSet(const RectangleSet &rhs)$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
RectangleSet	legion_runtime/rectangle_set.h	/^    RectangleSet<T,DISCRETE>::RectangleSet(void)$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
RectangleSet	legion_runtime/rectangle_set.h	/^    class RectangleSet {$/;"	c	namespace:LegionRuntime::HighLevel
RedopApply	legion_runtime/shared_lowlevel.cc	/^        RedopApply(const ReductionOpUntyped *_redop, void *_dst_base,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply
RedopApply	legion_runtime/shared_lowlevel.cc	/^      class RedopApply {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
RedopFold	legion_runtime/shared_lowlevel.cc	/^        RedopFold(const ReductionOpUntyped *_redop, void *_dst_base,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RedopFold
RedopFold	legion_runtime/shared_lowlevel.cc	/^      class RedopFold {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
ReduceInfo	legion_runtime/region_tree.h	/^        ReduceInfo(const FieldMask &valid, $/;"	f	struct:LegionRuntime::HighLevel::CompositeView::ReduceInfo
ReduceInfo	legion_runtime/region_tree.h	/^        ReduceInfo(const FieldMask &valid, const Domain &dom)$/;"	f	struct:LegionRuntime::HighLevel::CompositeView::ReduceInfo
ReduceInfo	legion_runtime/region_tree.h	/^        ReduceInfo(void) { }$/;"	f	struct:LegionRuntime::HighLevel::CompositeView::ReduceInfo
ReduceInfo	legion_runtime/region_tree.h	/^      struct ReduceInfo {$/;"	s	class:LegionRuntime::HighLevel::CompositeView
ReduceRequest	legion_runtime/lowlevel_dma.cc	/^    ReduceRequest::ReduceRequest(const Domain& _domain,$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
ReduceRequest	legion_runtime/lowlevel_dma.cc	/^    ReduceRequest::ReduceRequest(const void *data, size_t datalen,$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
ReduceRequest	legion_runtime/lowlevel_dma.cc	/^    class ReduceRequest : public DmaRequest {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ReductionApply	legion_runtime/shared_lowlevel.cc	/^        ReductionApply(const std::vector<Domain::CopySrcDstField>& _srcs,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply
ReductionApply	legion_runtime/shared_lowlevel.cc	/^      class ReductionApply {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
ReductionCloser	legion_runtime/region_tree.cc	/^    ReductionCloser::ReductionCloser(ContextID c, ReductionView *t,$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
ReductionCloser	legion_runtime/region_tree.cc	/^    ReductionCloser::ReductionCloser(const ReductionCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
ReductionCloser	legion_runtime/region_tree.h	/^    class ReductionCloser : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
ReductionFold	legion_runtime/accessor.h	/^      struct ReductionFold {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
ReductionFold	legion_runtime/shared_lowlevel.cc	/^        ReductionFold(const std::vector<Domain::CopySrcDstField>& _srcs,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold
ReductionFold	legion_runtime/shared_lowlevel.cc	/^      class ReductionFold {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
ReductionList	legion_runtime/accessor.h	/^      struct ReductionList {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
ReductionListEntry	legion_runtime/accessor.h	/^	struct ReductionListEntry {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::ReductionList
ReductionListEntry	legion_runtime/lowlevel.h	/^    struct ReductionListEntry {$/;"	s	namespace:LegionRuntime::LowLevel
ReductionManager	legion_runtime/region_tree.cc	/^    ReductionManager::ReductionManager(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
ReductionManager	legion_runtime/region_tree.h	/^    class ReductionManager : public PhysicalManager {$/;"	c	namespace:LegionRuntime::HighLevel
ReductionOp	legion_runtime/legion_types.h	/^    typedef LowLevel::ReductionOpUntyped ReductionOp;$/;"	t	namespace:LegionRuntime::HighLevel
ReductionOp	legion_runtime/lowlevel.h	/^      ReductionOp(void)$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
ReductionOp	legion_runtime/lowlevel.h	/^    class ReductionOp : public ReductionOpUntyped {$/;"	c	namespace:LegionRuntime::LowLevel
ReductionOpID	legion_runtime/legion_types.h	/^    typedef LowLevel::ReductionOpID ReductionOpID;$/;"	t	namespace:LegionRuntime::HighLevel
ReductionOpID	legion_runtime/lowlevel.h	/^    typedef int ReductionOpID;$/;"	t	namespace:LegionRuntime::LowLevel
ReductionOpTable	legion_runtime/lowlevel.h	/^    typedef std::map<ReductionOpID, const ReductionOpUntyped *> ReductionOpTable;$/;"	t	namespace:LegionRuntime::LowLevel
ReductionOpUntyped	legion_runtime/lowlevel.h	/^      ReductionOpUntyped(size_t _sizeof_lhs, size_t _sizeof_rhs,$/;"	f	class:LegionRuntime::LowLevel::ReductionOpUntyped
ReductionOpUntyped	legion_runtime/lowlevel.h	/^    class ReductionOpUntyped {$/;"	c	namespace:LegionRuntime::LowLevel
ReductionView	legion_runtime/region_tree.cc	/^    ReductionView::ReductionView(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
ReductionView	legion_runtime/region_tree.cc	/^    ReductionView::ReductionView(const ReductionView &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
ReductionView	legion_runtime/region_tree.h	/^    class ReductionView : public LogicalView {$/;"	c	namespace:LegionRuntime::HighLevel
RegionAccessor	legion_runtime/accessor.h	/^      RegionAccessor()$/;"	f	struct:LegionRuntime::Accessor::RegionAccessor
RegionAccessor	legion_runtime/accessor.h	/^      RegionAccessor(const typename AT::Untyped& to_copy)$/;"	f	struct:LegionRuntime::Accessor::RegionAccessor
RegionAccessor	legion_runtime/accessor.h	/^      RegionAccessor(const typename AT::template Typed<ET, PT>& to_copy) $/;"	f	struct:LegionRuntime::Accessor::RegionAccessor
RegionAccessor	legion_runtime/accessor.h	/^    struct RegionAccessor : public AT::template Typed<ET, PT> {$/;"	s	namespace:LegionRuntime::Accessor
RegionAccessor	legion_runtime/accessor.h	/^    template <typename AT> struct RegionAccessor<AT, void, void> : public AT::Untyped {$/;"	s	namespace:LegionRuntime::Accessor
RegionAccessor	legion_runtime/lowlevel.cc	/^    RegionAccessor<AccessorReductionList>::RegionAccessor(void *_internal_data,$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
RegionFlags	legion_runtime/legion_types.h	/^    enum RegionFlags {$/;"	g	namespace:LegionRuntime::HighLevel
RegionInstance	legion_runtime/lowlevel.h	/^    class RegionInstance {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessor	legion_runtime/lowlevel.h	/^      RegionInstanceAccessor(const RegionInstanceAccessorUntyped<AT> &_ria) : ria(_ria) {}$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
RegionInstanceAccessor	legion_runtime/lowlevel.h	/^      __device__ RegionInstanceAccessor(const RegionInstanceAccessorUntyped<AccessorGPU> &_ria) : ria(_ria) {}$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
RegionInstanceAccessor	legion_runtime/lowlevel.h	/^    class RegionInstanceAccessor {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessor	legion_runtime/lowlevel.h	/^    class RegionInstanceAccessor<ET,AccessorGPU> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped(const RegionInstanceAccessorUntyped<AccessorArray> &old)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped(const RegionInstanceAccessorUntyped<AccessorArrayReductionFold> &old)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped(const RegionInstanceAccessorUntyped<AccessorGPU> &old)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped(const RegionInstanceAccessorUntyped<AccessorGPUReductionFold> &old)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped(const RegionInstanceAccessorUntyped<AccessorReductionList> &old)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^      explicit RegionInstanceAccessorUntyped(void *_array_base)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^      explicit RegionInstanceAccessorUntyped(void)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^    template <> class RegionInstanceAccessorUntyped<AccessorArray> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^    template <> class RegionInstanceAccessorUntyped<AccessorArrayReductionFold> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^    template <> class RegionInstanceAccessorUntyped<AccessorGPU> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^    template <> class RegionInstanceAccessorUntyped<AccessorGPUReductionFold> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessorUntyped	legion_runtime/lowlevel.h	/^    template <> class RegionInstanceAccessorUntyped<AccessorReductionList> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionNode	legion_runtime/region_tree.cc	/^    RegionNode::RegionNode(LogicalRegion r, PartitionNode *par,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
RegionNode	legion_runtime/region_tree.cc	/^    RegionNode::RegionNode(const RegionNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
RegionNode	legion_runtime/region_tree.h	/^    class RegionNode : public RegionTreeNode {$/;"	c	namespace:LegionRuntime::HighLevel
RegionProjectionFnptr	legion_runtime/legion_types.h	/^    typedef LogicalRegion (*RegionProjectionFnptr)(LogicalRegion parent, $/;"	t	namespace:LegionRuntime::HighLevel
RegionProjectionTable	legion_runtime/legion_types.h	/^      RegionProjectionTable;$/;"	t	namespace:LegionRuntime::HighLevel
RegionRequirement	legion_runtime/legion.cc	/^    RegionRequirement::RegionRequirement(LogicalPartition pid, $/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
RegionRequirement	legion_runtime/legion.cc	/^    RegionRequirement::RegionRequirement(LogicalRegion _handle,  $/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
RegionRequirement	legion_runtime/legion.cc	/^    RegionRequirement::RegionRequirement(LogicalRegion _handle, $/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
RegionRequirement	legion_runtime/legion.cc	/^    RegionRequirement::RegionRequirement(void)$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
RegionRequirement	legion_runtime/legion.h	/^    struct RegionRequirement {$/;"	s	namespace:LegionRuntime::HighLevel
RegionTreeContext	legion_runtime/runtime.h	/^      RegionTreeContext(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeContext
RegionTreeContext	legion_runtime/runtime.h	/^      RegionTreeContext(void)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeContext
RegionTreeContext	legion_runtime/runtime.h	/^    class RegionTreeContext {$/;"	c	namespace:LegionRuntime::HighLevel
RegionTreeForest	legion_runtime/region_tree.cc	/^    RegionTreeForest::RegionTreeForest(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
RegionTreeForest	legion_runtime/region_tree.cc	/^    RegionTreeForest::RegionTreeForest(const RegionTreeForest &rhs)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
RegionTreeForest	legion_runtime/region_tree.h	/^    class RegionTreeForest {$/;"	c	namespace:LegionRuntime::HighLevel
RegionTreeID	legion_runtime/legion_types.h	/^    typedef unsigned int RegionTreeID;$/;"	t	namespace:LegionRuntime::HighLevel
RegionTreeNode	legion_runtime/region_tree.cc	/^    RegionTreeNode::RegionTreeNode(RegionTreeForest *ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
RegionTreeNode	legion_runtime/region_tree.h	/^    class RegionTreeNode { $/;"	c	namespace:LegionRuntime::HighLevel
RegionTreePath	legion_runtime/region_tree.cc	/^    RegionTreePath::RegionTreePath(void) $/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
RegionTreePath	legion_runtime/region_tree.h	/^    class RegionTreePath {$/;"	c	namespace:LegionRuntime::HighLevel
RegionUsage	legion_runtime/legion_utilities.h	/^      RegionUsage(PrivilegeMode p, CoherenceProperty c, ReductionOpID r)$/;"	f	struct:LegionRuntime::HighLevel::RegionUsage
RegionUsage	legion_runtime/legion_utilities.h	/^      RegionUsage(const RegionRequirement &req)$/;"	f	struct:LegionRuntime::HighLevel::RegionUsage
RegionUsage	legion_runtime/legion_utilities.h	/^      RegionUsage(void)$/;"	f	struct:LegionRuntime::HighLevel::RegionUsage
RegionUsage	legion_runtime/legion_utilities.h	/^    struct RegionUsage {$/;"	s	namespace:LegionRuntime::HighLevel
RegistrationCallbackFnptr	legion_runtime/legion_types.h	/^    typedef void (*RegistrationCallbackFnptr)(Machine *machine, $/;"	t	namespace:LegionRuntime::HighLevel
Release	legion_runtime/legion.cc	/^    Release::Release(void)$/;"	f	class:LegionRuntime::HighLevel::Release
Release	legion_runtime/legion.h	/^    class Release : public Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
ReleaseLauncher	legion_runtime/legion.cc	/^    ReleaseLauncher::ReleaseLauncher(LogicalRegion reg, LogicalRegion par,$/;"	f	class:LegionRuntime::HighLevel::ReleaseLauncher
ReleaseLauncher	legion_runtime/legion.h	/^    struct ReleaseLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
ReleaseOp	legion_runtime/legion_ops.cc	/^    ReleaseOp::ReleaseOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
ReleaseOp	legion_runtime/legion_ops.cc	/^    ReleaseOp::ReleaseOp(const ReleaseOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
ReleaseOp	legion_runtime/legion_ops.h	/^    class ReleaseOp : public Release, public SpeculativeOp {$/;"	c	namespace:LegionRuntime::HighLevel
RemoteCopyArgs	legion_runtime/lowlevel_dma.h	/^    struct RemoteCopyArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel
RemoteCopyMessage	legion_runtime/lowlevel_dma.h	/^				       handle_remote_copy> RemoteCopyMessage;$/;"	t	namespace:LegionRuntime::LowLevel
RemoteMemAllocArgs	legion_runtime/lowlevel.cc	/^    struct RemoteMemAllocArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RemoteMemAllocMessage	legion_runtime/lowlevel.cc	/^				    handle_remote_mem_alloc> RemoteMemAllocMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RemoteMemory	legion_runtime/lowlevel.cc	/^      RemoteMemory(Memory _me, size_t _size, Memory::Kind k, void *_regbase)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
RemoteMemory	legion_runtime/lowlevel.cc	/^    class RemoteMemory : public Memory::Impl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
RemoteProcessor	legion_runtime/lowlevel.cc	/^      RemoteProcessor(Processor _me, Processor::Kind _kind, Processor _util)$/;"	f	class:LegionRuntime::LowLevel::RemoteProcessor
RemoteProcessor	legion_runtime/lowlevel.cc	/^    class RemoteProcessor : public Processor::Impl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
RemoteRedListArgs	legion_runtime/lowlevel.cc	/^    struct RemoteRedListArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RemoteRedListMessage	legion_runtime/lowlevel.cc	/^				       handle_remote_redlist> RemoteRedListMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RemoteReduceArgs	legion_runtime/lowlevel.cc	/^    struct RemoteReduceArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RemoteReduceMessage	legion_runtime/lowlevel.cc	/^				       handle_remote_reduce> RemoteReduceMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RemoteTask	legion_runtime/legion_tasks.cc	/^    RemoteTask::RemoteTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
RemoteTask	legion_runtime/legion_tasks.cc	/^    RemoteTask::RemoteTask(const RemoteTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
RemoteTask	legion_runtime/legion_tasks.h	/^    class RemoteTask : public WrapperTask {$/;"	c	namespace:LegionRuntime::HighLevel
RemoteWrite	legion_runtime/lowlevel.cc	/^	RemoteWrite(Memory _tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
RemoteWrite	legion_runtime/lowlevel.cc	/^      class RemoteWrite {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
RemoteWrite	legion_runtime/lowlevel_dma.cc	/^	RemoteWrite(Memory _tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
RemoteWrite	legion_runtime/lowlevel_dma.cc	/^      class RemoteWrite {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
RemoteWriteArgs	legion_runtime/lowlevel.cc	/^    struct RemoteWriteArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RemoteWriteFenceArgs	legion_runtime/lowlevel.cc	/^    struct RemoteWriteFenceArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RemoteWriteFenceMessage	legion_runtime/lowlevel.cc	/^				      handle_remote_write_fence> RemoteWriteFenceMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RemoteWriteInstPairCopier	legion_runtime/lowlevel_dma.cc	/^      RemoteWriteInstPairCopier(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier
RemoteWriteInstPairCopier	legion_runtime/lowlevel_dma.cc	/^    class RemoteWriteInstPairCopier : public InstPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
RemoteWriteMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      RemoteWriteMemPairCopier(Memory _src_mem, Memory _dst_mem)$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
RemoteWriteMemPairCopier	legion_runtime/lowlevel_dma.cc	/^    class RemoteWriteMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
RemoteWriteMessage	legion_runtime/lowlevel.cc	/^				       handle_remote_write> RemoteWriteMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
ReqRawArgsType	legion_runtime/activemsg.h	/^                         (sizeof(void*)+sizeof(REQTYPE)+3)\/4> ReqRawArgsType;$/;"	t	class:ActiveMessageMediumReply
ReqRawArgsType	legion_runtime/activemsg.h	/^                         (sizeof(void*)+sizeof(REQTYPE)+3)\/4> ReqRawArgsType;$/;"	t	class:ActiveMessageShortReply
RequestArgs	legion_runtime/lowlevel.cc	/^      struct RequestArgs {$/;"	s	struct:LegionRuntime::LowLevel::BarrierAdjustMessage	file:
Reservation	legion_runtime/legion_types.h	/^    typedef LowLevel::Reservation Reservation;$/;"	t	namespace:LegionRuntime::HighLevel
Reservation	legion_runtime/lowlevel.h	/^    class Reservation {$/;"	c	namespace:LegionRuntime::LowLevel
ReservationImpl	legion_runtime/shared_lowlevel.cc	/^	ReservationImpl(int idx, bool activate = false, size_t dsize = 0) : index(idx) {$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
ReservationImpl	legion_runtime/shared_lowlevel.cc	/^    class ReservationImpl : public Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ReservationRecord	legion_runtime/shared_lowlevel.cc	/^	class ReservationRecord {$/;"	c	class:LegionRuntime::LowLevel::ReservationImpl	file:
ReservationRequest	legion_runtime/runtime.h	/^        ReservationRequest(Reservation r, unsigned m, bool e)$/;"	f	struct:LegionRuntime::HighLevel::Grant::Impl::ReservationRequest
ReservationRequest	legion_runtime/runtime.h	/^        ReservationRequest(void)$/;"	f	struct:LegionRuntime::HighLevel::Grant::Impl::ReservationRequest
ReservationRequest	legion_runtime/runtime.h	/^      struct ReservationRequest {$/;"	s	class:LegionRuntime::HighLevel::Grant::Impl
ReservationTableAllocator	legion_runtime/lowlevel_impl.h	/^    typedef DynamicTableAllocator<Reservation::Impl, 10, 8> ReservationTableAllocator;$/;"	t
ResolveFuturePredArgs	legion_runtime/legion_ops.h	/^      struct ResolveFuturePredArgs {$/;"	s	class:LegionRuntime::HighLevel::FuturePredOp
RestrictedTraverser	legion_runtime/region_tree.cc	/^    RestrictedTraverser::RestrictedTraverser(ContextID c, RegionTreePath &path)$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
RestrictedTraverser	legion_runtime/region_tree.cc	/^    RestrictedTraverser::RestrictedTraverser(const RestrictedTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
RestrictedTraverser	legion_runtime/region_tree.h	/^    class RestrictedTraverser : public PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
RezCheck	legion_runtime/legion_utilities.h	/^      RezCheck(RezCheck &rhs) : rez(rhs.rez) { assert(false); }$/;"	f	class:LegionRuntime::HighLevel::RezCheck
RezCheck	legion_runtime/legion_utilities.h	/^      RezCheck(Serializer &r) : rez(r) { rez.begin_context(); }$/;"	f	class:LegionRuntime::HighLevel::RezCheck
RezCheck	legion_runtime/legion_utilities.h	/^    class RezCheck {$/;"	c	namespace:LegionRuntime::HighLevel
RollUpDataArgs	legion_runtime/lowlevel.cc	/^    struct RollUpDataArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RollUpDataMessage	legion_runtime/lowlevel.cc	/^                                       handle_roll_up_data> RollUpDataMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RollUpRequestArgs	legion_runtime/lowlevel.cc	/^    struct RollUpRequestArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RollUpRequestMessage	legion_runtime/lowlevel.cc	/^                                      handle_roll_up_request> RollUpRequestMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RplRawArgsType	legion_runtime/activemsg.h	/^  typedef MediumReplyRawArgs<RPLTYPE, RPLID, (sizeof(void*)+sizeof(RPLTYPE)+3)\/4> RplRawArgsType;$/;"	t	class:ActiveMessageMediumReply
RplRawArgsType	legion_runtime/activemsg.h	/^  typedef ShortReplyRawArgs<RPLTYPE, RPLID, (sizeof(void*)+sizeof(RPLTYPE)+3)\/4> RplRawArgsType;$/;"	t	class:ActiveMessageShortReply
RunStyle	legion_runtime/lowlevel.h	/^      enum RunStyle {$/;"	g	class:LegionRuntime::LowLevel::Machine
Runtime	legion_runtime/lowlevel_impl.h	/^    class Runtime {$/;"	c
Runtime	legion_runtime/runtime.cc	/^    Runtime::Runtime(Machine *m, AddressSpaceID unique,$/;"	f	class:LegionRuntime::HighLevel::Runtime
Runtime	legion_runtime/runtime.cc	/^    Runtime::Runtime(const Runtime &rhs)$/;"	f	class:LegionRuntime::HighLevel::Runtime
Runtime	legion_runtime/runtime.h	/^    class Runtime {$/;"	c	namespace:LegionRuntime::HighLevel
Runtime	legion_runtime/shared_lowlevel.cc	/^    Runtime::Runtime(Machine *m, const ReductionOpTable &table)$/;"	f	class:LegionRuntime::LowLevel::Runtime
Runtime	legion_runtime/shared_lowlevel.cc	/^    class Runtime {$/;"	c	namespace:LegionRuntime::LowLevel	file:
SCAN_MAX_QUEUE	dev/kbd.c	42;"	d	file:
SCHEDULER_ID	legion_runtime/legion_types.h	/^      SCHEDULER_ID          = LowLevel::Processor::TASK_ID_PROCESSOR_IDLE,$/;"	e	enum:LegionRuntime::HighLevel::__anon12
SCHED_DEBUG	nautilus/thread.c	45;"	d	file:
SCHED_PRINT	nautilus/thread.c	44;"	d	file:
SCHED_WARN	nautilus/thread.c	46;"	d	file:
SELECT_CLOSE_TARGETS_CALL	legion_runtime/region_tree.h	/^      SELECT_CLOSE_TARGETS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
SEND_BACK_COMPOSITE_VIEW	legion_runtime/runtime.h	/^        SEND_BACK_COMPOSITE_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_BACK_MATERIALIZED_VIEW	legion_runtime/runtime.h	/^        SEND_BACK_MATERIALIZED_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_BACK_PARTITION_STATE	legion_runtime/runtime.h	/^        SEND_BACK_PARTITION_STATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_BACK_REDUCTION_VIEW	legion_runtime/runtime.h	/^        SEND_BACK_REDUCTION_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_BACK_REGION_STATE	legion_runtime/runtime.h	/^        SEND_BACK_REGION_STATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_BACK_USER	legion_runtime/runtime.h	/^        SEND_BACK_USER,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_COMPOSITE_UPDATE	legion_runtime/runtime.h	/^        SEND_COMPOSITE_UPDATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_COMPOSITE_VIEW	legion_runtime/runtime.h	/^        SEND_COMPOSITE_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_FIELD_SPACE_NODE	legion_runtime/runtime.h	/^        SEND_FIELD_SPACE_NODE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_FUTURE	legion_runtime/runtime.h	/^        SEND_FUTURE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_FUTURE_RESULT	legion_runtime/runtime.h	/^        SEND_FUTURE_RESULT,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_FUTURE_SUBSCRIPTION	legion_runtime/runtime.h	/^        SEND_FUTURE_SUBSCRIPTION,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_INDEX_PARTITION_NODE	legion_runtime/runtime.h	/^        SEND_INDEX_PARTITION_NODE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_INDEX_SPACE_NODE	legion_runtime/runtime.h	/^        SEND_INDEX_SPACE_NODE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_INDIVIDUAL_REQUEST	legion_runtime/runtime.h	/^        SEND_INDIVIDUAL_REQUEST,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_INDIVIDUAL_RETURN	legion_runtime/runtime.h	/^        SEND_INDIVIDUAL_RETURN,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_INSTANCE_MANAGER	legion_runtime/runtime.h	/^        SEND_INSTANCE_MANAGER,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_LOGICAL_REGION_NODE	legion_runtime/runtime.h	/^        SEND_LOGICAL_REGION_NODE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_MAKE_PERSISTENT	legion_runtime/runtime.h	/^        SEND_MAKE_PERSISTENT,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_MAPPER_MESSAGE	legion_runtime/runtime.h	/^        SEND_MAPPER_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_MATERIALIZED_UPDATE	legion_runtime/runtime.h	/^        SEND_MATERIALIZED_UPDATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_MATERIALIZED_VIEW	legion_runtime/runtime.h	/^        SEND_MATERIALIZED_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_PARTITION_STATE	legion_runtime/runtime.h	/^        SEND_PARTITION_STATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_REDUCTION_MANAGER	legion_runtime/runtime.h	/^        SEND_REDUCTION_MANAGER,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_REDUCTION_UPDATE	legion_runtime/runtime.h	/^        SEND_REDUCTION_UPDATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_REDUCTION_VIEW	legion_runtime/runtime.h	/^        SEND_REDUCTION_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_REGION_STATE	legion_runtime/runtime.h	/^        SEND_REGION_STATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_REMOTE_REFERENCES	legion_runtime/runtime.h	/^        SEND_REMOTE_REFERENCES,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_SLICE_REQUEST	legion_runtime/runtime.h	/^        SEND_SLICE_REQUEST,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_SLICE_RETURN	legion_runtime/runtime.h	/^        SEND_SLICE_RETURN,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_SUBSCRIBER	legion_runtime/runtime.h	/^        SEND_SUBSCRIBER,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SFI_DEBUG	nautilus/sfi.c	36;"	d	file:
SFI_DEBUG	nautilus/sfi.c	38;"	d	file:
SHARED_PTR	test/circuit.h	/^  SHARED_PTR,$/;"	e	enum:PointerLocation
SHRT_MAX	lua_src/lparser.c	10;"	d	file:
SHUTDOWN_FUNC_ID	legion_runtime/legion_types.h	/^      SHUTDOWN_FUNC_ID      = LowLevel::Processor::TASK_ID_PROCESSOR_SHUTDOWN,$/;"	e	enum:LegionRuntime::HighLevel::__anon12
SIGN	nautilus/printk.c	519;"	d	file:
SIMULTANEOUS	legion_runtime/legion_types.h	/^      SIMULTANEOUS = 2,$/;"	e	enum:LegionRuntime::HighLevel::CoherenceProperty
SIMULTANEOUS_DEPENDENCE	legion_runtime/legion_types.h	/^      SIMULTANEOUS_DEPENDENCE = 4,$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
SINGULAR	legion_runtime/legion_types.h	/^      SINGULAR, \/\/ a single logical region$/;"	e	enum:LegionRuntime::HighLevel::HandleType
SIPHON_LOGICAL_CHILDREN_CALL	legion_runtime/region_tree.h	/^      SIPHON_LOGICAL_CHILDREN_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
SIPHON_PHYSICAL_CHILDREN_CALL	legion_runtime/region_tree.h	/^      SIPHON_PHYSICAL_CHILDREN_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
SIZE	legion_runtime/lowlevel_impl.h	/^      static const size_t SIZE = _SIZE;$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNode
SIZE	test/benchmark.c	80;"	d	file:
SIZE_T_RANK	nautilus/fmtout.c	78;"	d	file:
SLICE_REMOTE_COMMIT	legion_runtime/runtime.h	/^        SLICE_REMOTE_COMMIT,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SLICE_REMOTE_COMPLETE	legion_runtime/runtime.h	/^        SLICE_REMOTE_COMPLETE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SLICE_REMOTE_MAPPED	legion_runtime/runtime.h	/^        SLICE_REMOTE_MAPPED,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SLICE_TASK_ALLOC	legion_runtime/legion_allocation.h	/^      SLICE_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
SLICE_TASK_KIND	legion_runtime/legion_tasks.h	/^        SLICE_TASK_KIND,$/;"	e	enum:LegionRuntime::HighLevel::TaskOp::TaskKind
SMALL	nautilus/printk.c	523;"	d	file:
SMP_DEBUG	arch/x64/smp.c	38;"	d	file:
SMP_DEBUG	nautilus/smp.c	47;"	d	file:
SMP_PRINT	arch/x64/smp.c	37;"	d	file:
SMP_PRINT	nautilus/smp.c	46;"	d	file:
SOA	legion_runtime/accessor.h	/^      struct SOA {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
SOCKET_MEM	legion_runtime/lowlevel.h	/^        SOCKET_MEM, \/\/ Memory visible to all processors within a node, better performance to processors on same socket $/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
SPACE	nautilus/printk.c	521;"	d	file:
SPACECHARS	lua_src/lbaselib.c	46;"	d	file:
SPAWN_TASK_MSGID	legion_runtime/lowlevel.cc	/^      SPAWN_TASK_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
SPECIAL	nautilus/printk.c	524;"	d	file:
SPECIALIZED_RAW_ARGS	legion_runtime/activemsg.h	247;"	d
SPECIALS	lua_src/lstrlib.c	223;"	d	file:
SPECULATE_FALSE_STATE	legion_runtime/legion_ops.h	/^        SPECULATE_FALSE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::SpeculativeOp::SpecState
SPECULATE_TRUE_STATE	legion_runtime/legion_ops.h	/^        SPECULATE_TRUE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::SpeculativeOp::SpecState
SPINLOCK_LOOPS	test/benchmark.c	83;"	d	file:
SParser	lua_src/ldo.c	/^struct SParser {  \/* data to `f_parser' *\/$/;"	s	file:
SR_LOAD	asm/thread_lowlevel.S	/^#define SR_LOAD()$/;"	d
SR_SAVE	asm/thread_lowlevel.S	/^#define SR_SAVE()           \/\/ WRITE ME$/;"	d
SR_SAVE_SIZE	asm/thread_lowlevel.S	/^#define SR_SAVE_SIZE (0)$/;"	d
SSEBitMask	legion_runtime/legion_utilities.h	/^    SSEBitMask<MAX>::SSEBitMask(const SSEBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
SSEBitMask	legion_runtime/legion_utilities.h	/^    SSEBitMask<MAX>::SSEBitMask(uint64_t init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
SSEBitMask	legion_runtime/legion_utilities.h	/^    class SSEBitMask {$/;"	c	namespace:LegionRuntime::HighLevel
SSETLBitMask	legion_runtime/legion_utilities.h	/^    SSETLBitMask<MAX>::SSETLBitMask(const SSETLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
SSETLBitMask	legion_runtime/legion_utilities.h	/^    SSETLBitMask<MAX>::SSETLBitMask(uint64_t init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
SSETLBitMask	legion_runtime/legion_utilities.h	/^    class SSETLBitMask {$/;"	c	namespace:LegionRuntime::HighLevel
SSE_ELMTS	legion_runtime/legion_utilities.h	2585;"	d
SSE_ELMTS	legion_runtime/legion_utilities.h	3790;"	d
SSE_FUNC	test/circuit.h	29;"	d
SSE_STACK_ALIGN	test/circuit.h	30;"	d
STACK_CLONE_DEPTH	nautilus/thread.c	1202;"	d	file:
STACK_SAVE_SIZE	nautilus/thread.c	407;"	d	file:
STACK_SIZE	legion_runtime/shared_lowlevel.cc	84;"	d	file:
STACK_SIZE_MIN	nautilus/thread.c	1203;"	d	file:
STATE_BEFORE_EVENT	legion_runtime/lowlevel_dma.cc	/^	STATE_BEFORE_EVENT,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_BLOCKED	legion_runtime/lowlevel.cc	/^		     STATE_BLOCKED, STATE_RESUMABLE };$/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_DONE	legion_runtime/lowlevel_dma.cc	/^	STATE_DONE$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_IDLE	legion_runtime/lowlevel.cc	/^	enum State { STATE_INIT, STATE_INIT_WAIT, STATE_START, STATE_IDLE, $/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_INIT	legion_runtime/lowlevel.cc	/^	enum State { STATE_INIT, STATE_INIT_WAIT, STATE_START, STATE_IDLE, $/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_INIT	legion_runtime/lowlevel_dma.cc	/^	STATE_INIT,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_INIT_WAIT	legion_runtime/lowlevel.cc	/^	enum State { STATE_INIT, STATE_INIT_WAIT, STATE_START, STATE_IDLE, $/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_INST_LOCK	legion_runtime/lowlevel_dma.cc	/^	STATE_INST_LOCK,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_METADATA_FETCH	legion_runtime/lowlevel_dma.cc	/^	STATE_METADATA_FETCH,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_PREEMPTABLE	legion_runtime/lowlevel.cc	/^		     STATE_RUN, STATE_SUSPEND, STATE_PREEMPTABLE,$/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_QUEUED	legion_runtime/lowlevel_dma.cc	/^	STATE_QUEUED,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_READY	legion_runtime/lowlevel_dma.cc	/^	STATE_READY,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_RESUMABLE	legion_runtime/lowlevel.cc	/^		     STATE_BLOCKED, STATE_RESUMABLE };$/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_RUN	legion_runtime/lowlevel.cc	/^		     STATE_RUN, STATE_SUSPEND, STATE_PREEMPTABLE,$/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_START	legion_runtime/lowlevel.cc	/^	enum State { STATE_INIT, STATE_INIT_WAIT, STATE_START, STATE_IDLE, $/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_SUSPEND	legion_runtime/lowlevel.cc	/^		     STATE_RUN, STATE_SUSPEND, STATE_PREEMPTABLE,$/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATIC_BREADTH_FIRST	legion_runtime/default_mapper.cc	26;"	d	file:
STATIC_LOG2	legion_runtime/legion_types.h	133;"	d
STATIC_MAX_FAILED_MAPPINGS	legion_runtime/default_mapper.cc	31;"	d	file:
STATIC_MAX_PERMITTED_STEALS	legion_runtime/default_mapper.cc	23;"	d	file:
STATIC_MAX_SCHEDULE_COUNT	legion_runtime/default_mapper.cc	29;"	d	file:
STATIC_MAX_STEAL_COUNT	legion_runtime/default_mapper.cc	24;"	d	file:
STATIC_NUM_PROFILE_SAMPLES	legion_runtime/default_mapper.cc	30;"	d	file:
STATIC_SPLIT_FACTOR	legion_runtime/default_mapper.cc	25;"	d	file:
STATIC_STEALING_ENABLED	legion_runtime/default_mapper.cc	28;"	d	file:
STATIC_WAR_ENABLED	legion_runtime/default_mapper.cc	27;"	d	file:
STATUS_OUTPUT_FULL	dev/kbd.c	158;"	d	file:
STEAL_MESSAGE	legion_runtime/runtime.h	/^        STEAL_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
STENCIL_TASK_ID	test/multiple_partitions.cc	/^  STENCIL_TASK_ID,$/;"	e	enum:TaskIDs	file:
STEPMULADJ	lua_src/lgc.c	44;"	d	file:
STEPS	test/circuit.h	33;"	d
STLComparator	legion_runtime/arrays.h	/^      struct STLComparator {$/;"	s	class:LegionRuntime::Arrays::Point
STLComparator	legion_runtime/lowlevel.h	/^      struct STLComparator {$/;"	s	class:LegionRuntime::LowLevel::DomainPoint
STORE_ARGUMENT_ALLOC	legion_runtime/legion_allocation.h	/^      STORE_ARGUMENT_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
SUBREGION_TUNABLE	test/custom_mapper.cc	/^  SUBREGION_TUNABLE,$/;"	e	enum:__anon27	file:
SUBREGION_TUNABLE	test/hpcg/cg-mapper.h	/^    SUBREGION_TUNABLE$/;"	e	enum:__anon39
SUM_TASK_ID	test/tasks_and_futures.cc	/^  SUM_TASK_ID,$/;"	e	enum:TaskIDs	file:
SYSTEM_MEM	legion_runtime/lowlevel.h	/^        SYSTEM_MEM, \/\/ Visible to all processors on a node$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
Scancode_QUEUE_SIZE	nautilus/vc.c	71;"	d	file:
SchedulerArgs	legion_runtime/runtime.h	/^      struct SchedulerArgs {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
ScopedPush	legion_runtime/utilities.h	/^        ScopedPush(int timer_kind) { push_timer(timer_kind); }$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer::ScopedPush
ScopedPush	legion_runtime/utilities.h	/^      class ScopedPush {$/;"	c	class:LegionRuntime::LowLevel::DetailedTimer
Segment	legion_runtime/rectangle_set.h	/^    Segment<T>::Segment(T one, T two, T other, Direction d)$/;"	f	class:LegionRuntime::HighLevel::Segment
Segment	legion_runtime/rectangle_set.h	/^    Segment<T>::Segment(const Segment<T> &rhs)$/;"	f	class:LegionRuntime::HighLevel::Segment
Segment	legion_runtime/rectangle_set.h	/^    Segment<T>::Segment(void)$/;"	f	class:LegionRuntime::HighLevel::Segment
Segment	legion_runtime/rectangle_set.h	/^    class Segment {$/;"	c	namespace:LegionRuntime::HighLevel
SegmentComparator	legion_runtime/rectangle_set.h	/^    class SegmentComparator {$/;"	c	namespace:LegionRuntime::HighLevel
SequoiaMapper	legion_runtime/alt_mappers.cc	/^    SequoiaMapper::SequoiaMapper(Machine *m, HighLevelRuntime *rt, Processor local)$/;"	f	class:LegionRuntime::HighLevel::SequoiaMapper
SequoiaMapper	legion_runtime/alt_mappers.h	/^    class SequoiaMapper : public DefaultMapper {$/;"	c	namespace:LegionRuntime::HighLevel
Serial_Emit	dev/serial.c	/^Serial_Emit (struct Output_Sink * o, int ch) $/;"	f	file:
Serial_Finish	dev/serial.c	/^Serial_Finish (struct Output_Sink * o) { return; }$/;"	f	file:
Serializer	legion_runtime/legion_utilities.h	/^      Serializer(const Serializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::Serializer
Serializer	legion_runtime/legion_utilities.h	/^      Serializer(size_t base_bytes = 4096)$/;"	f	class:LegionRuntime::HighLevel::Serializer
Serializer	legion_runtime/legion_utilities.h	/^    class Serializer {$/;"	c	namespace:LegionRuntime::HighLevel
SharedAccess	legion_runtime/lowlevel_impl.h	/^      SharedAccess(T* thing_with_data, bool already_held = false)$/;"	f	class:LegionRuntime::LowLevel::SharedAccess
SharedAccess	legion_runtime/lowlevel_impl.h	/^    class SharedAccess {$/;"	c	namespace:LegionRuntime::LowLevel
SharedMapper	legion_runtime/alt_mappers.cc	/^    SharedMapper::SharedMapper(Machine *m, HighLevelRuntime *rt, Processor local)$/;"	f	class:LegionRuntime::HighLevel::SharedMapper
SharedMapper	legion_runtime/alt_mappers.h	/^    class SharedMapper : public DefaultMapper {$/;"	c	namespace:LegionRuntime::HighLevel
ShiftCaps	dev/kbd.c	/^static const nk_keycode_t ShiftCaps[] = {$/;"	v	file:
ShiftNoCaps	dev/kbd.c	/^static const nk_keycode_t ShiftNoCaps[] = {$/;"	v	file:
ShimMapper	legion_runtime/shim_mapper.cc	/^    ShimMapper::ShimMapper(Machine *m, HighLevelRuntime *rt, Processor local)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
ShimMapper	legion_runtime/shim_mapper.cc	/^    ShimMapper::ShimMapper(const ShimMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
ShimMapper	legion_runtime/shim_mapper.h	/^    class ShimMapper : public DefaultMapper {$/;"	c	namespace:LegionRuntime::HighLevel
SingleTask	legion_runtime/legion_tasks.cc	/^    SingleTask::SingleTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
SingleTask	legion_runtime/legion_tasks.h	/^    class SingleTask : public TaskOp {$/;"	c	namespace:LegionRuntime::HighLevel
SliceTask	legion_runtime/legion_tasks.cc	/^    SliceTask::SliceTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
SliceTask	legion_runtime/legion_tasks.cc	/^    SliceTask::SliceTask(const SliceTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
SliceTask	legion_runtime/legion_tasks.h	/^    class SliceTask : public MultiTask {$/;"	c	namespace:LegionRuntime::HighLevel
SpanBasedInstPairCopier	legion_runtime/lowlevel_dma.cc	/^      SpanBasedInstPairCopier(T *_span_copier, $/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
SpanBasedInstPairCopier	legion_runtime/lowlevel_dma.cc	/^    class SpanBasedInstPairCopier : public InstPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
SpanList	legion_runtime/activemsg.h	/^typedef std::vector<SpanListEntry> SpanList;$/;"	t
SpanListEntry	legion_runtime/activemsg.h	/^typedef std::pair<const void *, size_t> SpanListEntry;$/;"	t
SpanPayload	legion_runtime/activemsg.cc	/^SpanPayload::SpanPayload(const SpanList&_spans, size_t _size, int _mode)$/;"	f	class:SpanPayload
SpanPayload	legion_runtime/activemsg.cc	/^class SpanPayload : public PayloadSource {$/;"	c	file:
SparseMatrix	test/hpcg/sparsemat.h	/^    SparseMatrix(void)$/;"	f	struct:lgncg::SparseMatrix
SparseMatrix	test/hpcg/sparsemat.h	/^struct SparseMatrix {$/;"	s	namespace:lgncg
SpawnTaskArgs	legion_runtime/lowlevel.cc	/^    struct SpawnTaskArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
SpawnTaskMessage	legion_runtime/lowlevel.cc	/^				       handle_spawn_task_message> SpawnTaskMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
SpecState	legion_runtime/legion_ops.h	/^      enum SpecState {$/;"	g	class:LegionRuntime::HighLevel::SpeculativeOp
SpeculativeOp	legion_runtime/legion_ops.cc	/^    SpeculativeOp::SpeculativeOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
SpeculativeOp	legion_runtime/legion_ops.h	/^    class SpeculativeOp : public Operation, PredicateWaiter {$/;"	c	namespace:LegionRuntime::HighLevel
SplitComparator	legion_runtime/rectangle_set.h	/^    struct SplitComparator {$/;"	s	namespace:LegionRuntime::HighLevel
SplitSegment	legion_runtime/rectangle_set.h	/^      SplitSegment(Segment<T> *seg, Segment<T> *l, Segment<T> *h)$/;"	f	struct:LegionRuntime::HighLevel::SplitSegment
SplitSegment	legion_runtime/rectangle_set.h	/^      SplitSegment(void)$/;"	f	struct:LegionRuntime::HighLevel::SplitSegment
SplitSegment	legion_runtime/rectangle_set.h	/^    struct SplitSegment {$/;"	s	namespace:LegionRuntime::HighLevel
SrcDataPool	legion_runtime/activemsg.cc	/^SrcDataPool::SrcDataPool(void *base, size_t size)$/;"	f	class:SrcDataPool
SrcDataPool	legion_runtime/activemsg.cc	/^class SrcDataPool {$/;"	c	file:
State	legion_runtime/garbage_collection.h	/^      enum State {$/;"	g	class:LegionRuntime::HighLevel::CollectableState
State	legion_runtime/lowlevel.cc	/^	enum State { STATE_INIT, STATE_INIT_WAIT, STATE_START, STATE_IDLE, $/;"	g	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
State	legion_runtime/lowlevel_dma.cc	/^      enum State {$/;"	g	class:LegionRuntime::LowLevel::DmaRequest	file:
StateReturner	legion_runtime/region_tree.cc	/^    StateReturner::StateReturner(ContextID c, RegionTreeContext remote,$/;"	f	class:LegionRuntime::HighLevel::StateReturner
StateReturner	legion_runtime/region_tree.cc	/^    StateReturner::StateReturner(const StateReturner &rhs)$/;"	f	class:LegionRuntime::HighLevel::StateReturner
StateReturner	legion_runtime/region_tree.h	/^    class StateReturner : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
StateSender	legion_runtime/region_tree.cc	/^    StateSender::StateSender(ContextID c, UniqueID id, AddressSpaceID t,$/;"	f	class:LegionRuntime::HighLevel::StateSender
StateSender	legion_runtime/region_tree.cc	/^    StateSender::StateSender(const StateSender &rhs)$/;"	f	class:LegionRuntime::HighLevel::StateSender
StateSender	legion_runtime/region_tree.h	/^    class StateSender : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
StaticAccess	legion_runtime/lowlevel_impl.h	/^      StaticAccess(T* thing_with_data, bool already_valid = false)$/;"	f	class:LegionRuntime::LowLevel::StaticAccess
StaticAccess	legion_runtime/lowlevel_impl.h	/^    class StaticAccess {$/;"	c	namespace:LegionRuntime::LowLevel
StaticData	legion_runtime/lowlevel_impl.h	/^      struct StaticData {$/;"	s	class:LegionRuntime::LowLevel::IndexSpace::Impl
StaticData	legion_runtime/lowlevel_impl.h	/^      struct StaticData {$/;"	s	class:LegionRuntime::LowLevel::RegionInstance::Impl
StaticData	legion_runtime/lowlevel_impl.h	/^      typedef typename T::StaticData StaticData;$/;"	t	class:LegionRuntime::LowLevel::StaticAccess
Stride	legion_runtime/accessor.h	/^        Stride(size_t _value) : Const<size_t, STRIDE>(_value) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Stride
Stride	legion_runtime/accessor.h	/^        Stride(void) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Stride
Stride	legion_runtime/accessor.h	/^      template <size_t STRIDE> struct Stride : public Const<size_t, STRIDE> {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
StructHandler	legion_runtime/legion.h	/^      struct StructHandler {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
StructHandler	legion_runtime/legion.h	/^      struct StructHandler<T,false> {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
StructSpecific	legion_runtime/accessor.h	/^	template <typename T, typename PT, bool B> struct StructSpecific {};$/;"	s	struct:LegionRuntime::Accessor::AccessorType::Generic
StructSpecific	legion_runtime/accessor.h	/^      struct Generic::StructSpecific<T, PT, true> {$/;"	s	class:LegionRuntime::Accessor::AccessorType::Generic
SystemProcMap	legion_runtime/lowlevel_impl.h	/^      typedef std::map<int, NodeProcMap> SystemProcMap;$/;"	t	class:LegionRuntime::LowLevel::ProcessorAssignment
TARGET_XFER_SIZE	legion_runtime/lowlevel_dma.cc	/^      static const size_t TARGET_XFER_SIZE = 4 << 20;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
TASKID_ADD_VECTORS	test/saxpy_array.cc	/^  TASKID_ADD_VECTORS,$/;"	e	enum:__anon25	file:
TASKID_ADD_VECTORS_ALL	test/saxpy_array.cc	/^  TASKID_ADD_VECTORS_ALL,$/;"	e	enum:__anon25	file:
TASKID_INIT_VECTORS	test/saxpy_array.cc	/^  TASKID_INIT_VECTORS,$/;"	e	enum:__anon25	file:
TASKID_INIT_VECTORS_ALL	test/saxpy_array.cc	/^  TASKID_INIT_VECTORS_ALL,$/;"	e	enum:__anon25	file:
TASKID_MAIN	test/saxpy_array.cc	/^  TASKID_MAIN,$/;"	e	enum:__anon25	file:
TASK_ARGS_ALLOC	legion_runtime/legion_allocation.h	/^      TASK_ARGS_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_BARRIER_ALLOC	legion_runtime/legion_allocation.h	/^      TASK_BARRIER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_ID	test/circuit.h	/^  static const int TASK_ID = CALC_NEW_CURRENTS_TASK_ID;$/;"	m	class:CalcNewCurrentsTask
TASK_ID	test/circuit.h	/^  static const int TASK_ID = CHECK_FIELD_TASK_ID;$/;"	m	class:CheckTask
TASK_ID	test/circuit.h	/^  static const int TASK_ID = DISTRIBUTE_CHARGE_TASK_ID;$/;"	m	class:DistributeChargeTask
TASK_ID	test/circuit.h	/^  static const int TASK_ID = UPDATE_VOLTAGES_TASK_ID;$/;"	m	class:UpdateVoltagesTask
TASK_ID_AVAILABLE	legion_runtime/legion_types.h	/^      TASK_ID_AVAILABLE     = (LowLevel::Processor::TASK_ID_FIRST_AVAILABLE+1),$/;"	e	enum:LegionRuntime::HighLevel::__anon12
TASK_ID_FIRST_AVAILABLE	legion_runtime/lowlevel.h	/^	TASK_ID_FIRST_AVAILABLE    = 4,$/;"	e	enum:LegionRuntime::LowLevel::Processor::__anon9
TASK_ID_PROCESSOR_IDLE	legion_runtime/lowlevel.h	/^	TASK_ID_PROCESSOR_IDLE     = 3, \/\/ typically used for high-level scheduler, only called by utility processors$/;"	e	enum:LegionRuntime::LowLevel::Processor::__anon9
TASK_ID_PROCESSOR_INIT	legion_runtime/lowlevel.h	/^	TASK_ID_PROCESSOR_INIT     = 1, \/\/ only called by utility processors$/;"	e	enum:LegionRuntime::LowLevel::Processor::__anon9
TASK_ID_PROCESSOR_SHUTDOWN	legion_runtime/lowlevel.h	/^	TASK_ID_PROCESSOR_SHUTDOWN = 2, \/\/ only called by utility processors$/;"	e	enum:LegionRuntime::LowLevel::Processor::__anon9
TASK_ID_REQUEST_SHUTDOWN	legion_runtime/lowlevel.h	/^	TASK_ID_REQUEST_SHUTDOWN   = 0,$/;"	e	enum:LegionRuntime::LowLevel::Processor::__anon9
TASK_INLINE_ALLOC	legion_runtime/legion_allocation.h	/^      TASK_INLINE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_INLINE_REGION_ALLOC	legion_runtime/legion_allocation.h	/^      TASK_INLINE_REGION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_INSTANCE_REGION_ALLOC	legion_runtime/legion_allocation.h	/^      TASK_INSTANCE_REGION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_LOCAL_FIELD_ALLOC	legion_runtime/legion_allocation.h	/^      TASK_LOCAL_FIELD_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_LOCAL_REGION_ALLOC	legion_runtime/legion_allocation.h	/^      TASK_LOCAL_REGION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_MAPPABLE	legion_runtime/legion.h	/^        TASK_MAPPABLE,$/;"	e	enum:LegionRuntime::HighLevel::Mappable::MappableKind
TASK_MESSAGE	legion_runtime/runtime.h	/^        TASK_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
TASK_NAME	test/circuit.h	/^  static const char * const TASK_NAME;$/;"	m	class:CalcNewCurrentsTask
TASK_NAME	test/circuit.h	/^  static const char * const TASK_NAME;$/;"	m	class:CheckTask
TASK_NAME	test/circuit.h	/^  static const char * const TASK_NAME;$/;"	m	class:DistributeChargeTask
TASK_NAME	test/circuit.h	/^  static const char * const TASK_NAME;$/;"	m	class:UpdateVoltagesTask
TASK_NAME	test/circuit_cpu.cc	/^\/*static*\/ const char * const CalcNewCurrentsTask::TASK_NAME = "calc_new_currents";$/;"	m	class:CalcNewCurrentsTask	file:
TASK_NAME	test/circuit_cpu.cc	/^\/*static*\/ const char * const DistributeChargeTask::TASK_NAME = "distribute_charge";$/;"	m	class:DistributeChargeTask	file:
TASK_NAME	test/circuit_cpu.cc	/^const char * const CheckTask::TASK_NAME = "check_task";$/;"	m	class:CheckTask	file:
TASK_NAME	test/circuit_cpu.cc	/^const char * const UpdateVoltagesTask::TASK_NAME = "update_voltages";$/;"	m	class:UpdateVoltagesTask	file:
TASK_RESERVATION_ALLOC	legion_runtime/legion_allocation.h	/^      TASK_RESERVATION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_TRACES_ALLOC	legion_runtime/legion_allocation.h	/^      TASK_TRACES_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TEST_STEALING	test/saxpy_array.cc	31;"	d	file:
THREAD_SETUP_SIZE	nautilus/thread.c	408;"	d	file:
THREAD_T	test/benchmark.h	41;"	d
THREAD_T	test/benchmark.h	8;"	d
THR_CREATE_LOOPS	test/benchmark.c	81;"	d	file:
THR_LONG_CREATE_LOOPS	test/benchmark.c	82;"	d	file:
TID	test/hpcg/hpcg-main.cc	/^enum TID {$/;"	g	namespace:__anon37	file:
TILDE	dev/kbd.c	271;"	d	file:
TIMEOUT	legion_runtime/region_tree.h	/^      static const int TIMEOUT = DEFAULT_LOGICAL_USER_TIMEOUT;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
TIMEOUT	nautilus/idle.c	28;"	d	file:
TIME_AM	legion_runtime/utilities.h	/^  TIME_AM,$/;"	e	enum:__anon23
TIME_COPY	legion_runtime/utilities.h	/^  TIME_COPY,$/;"	e	enum:__anon23
TIME_HIGH_LEVEL	legion_runtime/utilities.h	/^  TIME_HIGH_LEVEL,$/;"	e	enum:__anon23
TIME_HIGH_LEVEL_ALLOCATE_FIELD	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_ALLOCATE_FIELD = 128,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_CHILDREN_MAPPED	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_CHILDREN_MAPPED = 108,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_CREATE_FIELD_SPACE	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_CREATE_FIELD_SPACE = 124,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_CREATE_INDEX_PARTITION	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_CREATE_INDEX_PARTITION = 120,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_CREATE_INDEX_SPACE	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_CREATE_INDEX_SPACE = 118,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_CREATE_REGION	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_CREATE_REGION = 100,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_DESTROY_FIELD_SPACE	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_DESTROY_FIELD_SPACE = 125,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_DESTROY_INDEX_PARTITION	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_DESTROY_INDEX_PARTITION = 121,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_DESTROY_INDEX_SPACE	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_DESTROY_INDEX_SPACE = 119,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_DESTROY_PARTITION	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_DESTROY_PARTITION = 105,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_DESTROY_REGION	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_DESTROY_REGION = 101,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_ENQUEUE_TASKS	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_ENQUEUE_TASKS = 106,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_EXECUTE_TASK	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_EXECUTE_TASK = 113,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_FINISH_TASK	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_FINISH_TASK = 109,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_FREE_FIELD	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_FREE_FIELD = 129,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_GET_INDEX_PARTITION	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_GET_INDEX_PARTITION = 122,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_GET_INDEX_SUBSPACE	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_GET_INDEX_SUBSPACE = 123,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_GET_LOGICAL_PARTITION	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_GET_LOGICAL_PARTITION = 126,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_GET_LOGICAL_SUBREGION	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_GET_LOGICAL_SUBREGION = 127,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_GET_SUBREGION	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_GET_SUBREGION = 116,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_INLINE_MAP	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_INLINE_MAP = 117,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_ISSUE_STEAL	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_ISSUE_STEAL = 115,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_NOTIFY_FINISH	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_NOTIFY_FINISH = 112,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_NOTIFY_MAPPED	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_NOTIFY_MAPPED = 111,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_NOTIFY_START	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_NOTIFY_START = 110,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_SCHEDULER	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_SCHEDULER = 114,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_SMASH_REGION	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_SMASH_REGION = 102$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_HIGH_LEVEL_STEAL_REQUEST	legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_STEAL_REQUEST = 107,$/;"	e	enum:LegionRuntime::HighLevel::__anon13
TIME_KERNEL	legion_runtime/utilities.h	/^  TIME_KERNEL,$/;"	e	enum:__anon23
TIME_LOW_LEVEL	legion_runtime/utilities.h	/^  TIME_LOW_LEVEL,$/;"	e	enum:__anon23
TIME_MAPPER	legion_runtime/utilities.h	/^  TIME_MAPPER,$/;"	e	enum:__anon23
TIME_NONE	legion_runtime/utilities.h	/^  TIME_NONE,$/;"	e	enum:__anon23
TIME_SYSTEM	legion_runtime/utilities.h	/^  TIME_SYSTEM,$/;"	e	enum:__anon23
TLBitMask	legion_runtime/legion_utilities.h	/^    TLBitMask<T,MAX,SHIFT,MASK>::TLBitMask(T init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
TLBitMask	legion_runtime/legion_utilities.h	/^    TLBitMask<T,MAX,SHIFT,MASK>::TLBitMask(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
TLBitMask	legion_runtime/legion_utilities.h	/^    class TLBitMask {$/;"	c	namespace:LegionRuntime::HighLevel
TOC_PROC	legion_runtime/lowlevel.h	/^	TOC_PROC, \/\/ Throughput core$/;"	e	enum:LegionRuntime::LowLevel::Processor::Kind
TOLOWER	nautilus/printk.c	167;"	d	file:
TOP_LEVEL_TASK_ID	test/circuit.h	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:__anon40
TOP_LEVEL_TASK_ID	test/custom_mapper.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	test/global_vars.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	test/index_tasks.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	test/logical_regions.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	test/multiple_partitions.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	test/partitioning.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	test/physical_regions.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	test/privileges.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	test/saxpy_array.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:__anon25	file:
TOP_LEVEL_TASK_ID	test/tasks_and_futures.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TRACE_ALLOC	legion_runtime/legion_allocation.h	/^      TRACE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TRACE_ALLOCATION_FREQUENCY	legion_runtime/legion_types.h	125;"	d
TRACE_CAPTURE_OP_ALLOC	legion_runtime/legion_allocation.h	/^      TRACE_CAPTURE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TRACE_COMPLETE_OP_ALLOC	legion_runtime/legion_allocation.h	/^      TRACE_COMPLETE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TRACK_MESSAGES	legion_runtime/activemsg.cc	1321;"	d	file:
TREE_CLOSE_ALLOC	legion_runtime/legion_allocation.h	/^      TREE_CLOSE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TREE_CLOSE_IMPL_ALLOC	legion_runtime/legion_allocation.h	/^      TREE_CLOSE_IMPL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TRIALS	test/benchmark.c	807;"	d	file:
TRIALS	test/ipi.c	61;"	d	file:
TRUE_DEPENDENCE	legion_runtime/legion_types.h	/^      TRUE_DEPENDENCE = 1,$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
TRUE_PRED	legion_runtime/legion.cc	/^    const Predicate Predicate::TRUE_PRED = Predicate(true);$/;"	m	class:LegionRuntime::HighLevel::Predicate	file:
TRUE_PRED	legion_runtime/legion.h	/^      static const Predicate TRUE_PRED;$/;"	m	class:LegionRuntime::HighLevel::Predicate
TWO	dev/kbd.c	270;"	d	file:
TYPE_BITS	legion_runtime/lowlevel_impl.h	/^	TYPE_BITS = 4,$/;"	e	enum:LegionRuntime::LowLevel::ID::__anon21
TYPE_CHAR_DRAWN	arch/k1om/xeon_phi.c	/^    TYPE_CHAR_DRAWN,$/;"	e	enum:__anon43	file:
TYPE_CONSOLE_SHUTDOWN	arch/k1om/xeon_phi.c	/^    TYPE_CONSOLE_SHUTDOWN,$/;"	e	enum:__anon43	file:
TYPE_CURSOR_UPDATE	arch/k1om/xeon_phi.c	/^    TYPE_CURSOR_UPDATE,$/;"	e	enum:__anon43	file:
TYPE_INVAL	arch/k1om/xeon_phi.c	/^    TYPE_INVAL$/;"	e	enum:__anon43	file:
TYPE_LINE_DRAWN	arch/k1om/xeon_phi.c	/^    TYPE_LINE_DRAWN,$/;"	e	enum:__anon43	file:
TYPE_NO_UPDATE	arch/k1om/xeon_phi.c	/^    TYPE_NO_UPDATE = 0,$/;"	e	enum:__anon43	file:
TYPE_SCREEN_REDRAW	arch/k1om/xeon_phi.c	/^    TYPE_SCREEN_REDRAW,$/;"	e	enum:__anon43	file:
TYPE_SCROLLUP	arch/k1om/xeon_phi.c	/^    TYPE_SCROLLUP,$/;"	e	enum:__anon43	file:
Task	legion_runtime/legion.cc	/^    Task::Task(void)$/;"	f	class:LegionRuntime::HighLevel::Task
Task	legion_runtime/legion.h	/^    class Task : public Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
Task	legion_runtime/lowlevel.cc	/^      Task(FuncPtr _func, const void *_args, size_t _arglen,$/;"	f	class:LegionRuntime::LowLevel::Task
Task	legion_runtime/lowlevel.cc	/^    Task::Task(Processor _proc, Processor::TaskFuncID _func_id,$/;"	f	class:LegionRuntime::LowLevel::Task
Task	legion_runtime/lowlevel.cc	/^    class Task {$/;"	c	namespace:LegionRuntime::LowLevel	file:
Task	legion_runtime/lowlevel_impl.h	/^    class Task {$/;"	c	namespace:LegionRuntime::LowLevel
TaskArgument	legion_runtime/legion.h	/^      TaskArgument(const TaskArgument &rhs)$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
TaskArgument	legion_runtime/legion.h	/^      TaskArgument(const void *arg, size_t argsize)$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
TaskArgument	legion_runtime/legion.h	/^      TaskArgument(void) : args(NULL), arglen(0) { }$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
TaskArgument	legion_runtime/legion.h	/^    class TaskArgument {$/;"	c	namespace:LegionRuntime::HighLevel
TaskConfigOptions	legion_runtime/legion.cc	/^    TaskConfigOptions::TaskConfigOptions(bool l \/*=false*\/,$/;"	f	class:LegionRuntime::HighLevel::TaskConfigOptions
TaskConfigOptions	legion_runtime/legion.h	/^    struct TaskConfigOptions {$/;"	s	namespace:LegionRuntime::HighLevel
TaskDesc	legion_runtime/shared_lowlevel.cc	/^	class TaskDesc {$/;"	c	class:LegionRuntime::LowLevel::ProcessorImpl	file:
TaskDesc	legion_runtime/shared_lowlevel.cc	/^          TaskDesc(Processor::TaskFuncID id, const void *_args, size_t _arglen,$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc
TaskFuncID	legion_runtime/lowlevel.h	/^      typedef unsigned TaskFuncID;$/;"	t	class:LegionRuntime::LowLevel::Processor
TaskFuncPtr	legion_runtime/lowlevel.h	/^      typedef void (*TaskFuncPtr)(const void *args, size_t arglen, Processor proc);$/;"	t	class:LegionRuntime::LowLevel::Processor
TaskHelper	test/circuit.cc	/^namespace TaskHelper {$/;"	n	file:
TaskHelper	test/circuit.h	/^namespace TaskHelper {$/;"	n
TaskID	legion_runtime/legion_types.h	/^    typedef Processor::TaskFuncID TaskID;$/;"	t	namespace:LegionRuntime::HighLevel
TaskID	test/hello_world.cc	/^enum TaskID {$/;"	g	file:
TaskIDTable	legion_runtime/lowlevel.h	/^      typedef std::map<TaskFuncID, TaskFuncPtr> TaskIDTable;$/;"	t	class:LegionRuntime::LowLevel::Processor
TaskIDs	test/custom_mapper.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	test/global_vars.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	test/index_tasks.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	test/logical_regions.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	test/multiple_partitions.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	test/partitioning.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	test/physical_regions.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	test/privileges.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	test/tasks_and_futures.cc	/^enum TaskIDs {$/;"	g	file:
TaskInstance	legion_runtime/legion_profiling.h	/^        TaskInstance(unsigned tid, UniqueID uid, const DomainPoint &p)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::TaskInstance
TaskInstance	legion_runtime/legion_profiling.h	/^        TaskInstance(void) { }$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::TaskInstance
TaskInstance	legion_runtime/legion_profiling.h	/^      struct TaskInstance {$/;"	s	namespace:LegionRuntime::HighLevel::LegionProf
TaskKind	legion_runtime/legion_tasks.h	/^      enum TaskKind {$/;"	g	class:LegionRuntime::HighLevel::TaskOp
TaskLauncher	legion_runtime/legion.cc	/^    TaskLauncher::TaskLauncher(Processor::TaskFuncID tid, TaskArgument arg,$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
TaskLauncher	legion_runtime/legion.cc	/^    TaskLauncher::TaskLauncher(void)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
TaskLauncher	legion_runtime/legion.h	/^    struct TaskLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
TaskMap	legion_runtime/mapping_utilities.h	/^        typedef std::map<Processor::TaskFuncID,VariantMap> TaskMap;$/;"	t	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
TaskOp	legion_runtime/legion_tasks.cc	/^    TaskOp::TaskOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
TaskOp	legion_runtime/legion_tasks.h	/^    class TaskOp : public Task, public SpeculativeOp {$/;"	c	namespace:LegionRuntime::HighLevel
TaskPriority	legion_runtime/legion_types.h	/^    typedef int TaskPriority;$/;"	t	namespace:LegionRuntime::HighLevel
TaskVariantCollection	legion_runtime/legion.h	/^      TaskVariantCollection(Processor::TaskFuncID uid, $/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
TaskVariantCollection	legion_runtime/legion.h	/^    class TaskVariantCollection {$/;"	c	namespace:LegionRuntime::HighLevel
TemplateFu	legion_runtime/accessor.h	/^    namespace TemplateFu {$/;"	n	namespace:LegionRuntime::Accessor
Thread	legion_runtime/lowlevel.cc	/^	Thread(LocalProcessor *_proc) $/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
Thread	legion_runtime/lowlevel.cc	/^      class Thread : public PreemptableThread {$/;"	c	class:LegionRuntime::LowLevel::LocalProcessor	file:
ThreadImpl	legion_runtime/lowlevel.cc	/^      ThreadImpl(void)$/;"	f	class:LegionRuntime::LowLevel::ThreadImpl
ThreadImpl	legion_runtime/lowlevel.cc	/^    class ThreadImpl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
TimeStamp	legion_runtime/utilities.h	/^    TimeStamp(const char *message, bool difference)$/;"	f	class:LegionRuntime::TimeStamp
TimeStamp	legion_runtime/utilities.h	/^  class TimeStamp {$/;"	c	namespace:LegionRuntime
TimerStackEntry	legion_runtime/lowlevel.cc	/^    struct TimerStackEntry {$/;"	s	namespace:LegionRuntime::LowLevel	file:
TimerStackEntry	legion_runtime/shared_lowlevel.cc	/^    struct TimerStackEntry {$/;"	s	namespace:LegionRuntime::LowLevel	file:
TimingKind	legion_runtime/legion_logging.h	/^  enum TimingKind {$/;"	g	namespace:LegionRuntime
TraceBlock	legion_runtime/utilities.h	/^	TraceBlock(size_t block_size, double exp_arrv_rate)$/;"	f	class:LegionRuntime::LowLevel::Tracer::TraceBlock
TraceBlock	legion_runtime/utilities.h	/^        explicit TraceBlock(const TraceBlock &refblk)$/;"	f	class:LegionRuntime::LowLevel::Tracer::TraceBlock
TraceBlock	legion_runtime/utilities.h	/^      class TraceBlock {$/;"	c	class:LegionRuntime::LowLevel::Tracer
TraceCaptureOp	legion_runtime/legion_trace.cc	/^    TraceCaptureOp::TraceCaptureOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
TraceCaptureOp	legion_runtime/legion_trace.cc	/^    TraceCaptureOp::TraceCaptureOp(const TraceCaptureOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
TraceCaptureOp	legion_runtime/legion_trace.h	/^    class TraceCaptureOp : public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
TraceCompleteOp	legion_runtime/legion_trace.cc	/^    TraceCompleteOp::TraceCompleteOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
TraceCompleteOp	legion_runtime/legion_trace.cc	/^    TraceCompleteOp::TraceCompleteOp(const TraceCompleteOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
TraceCompleteOp	legion_runtime/legion_trace.h	/^    class TraceCompleteOp : public FenceOp {$/;"	c	namespace:LegionRuntime::HighLevel
TraceID	legion_runtime/legion_types.h	/^    typedef unsigned int TraceID;$/;"	t	namespace:LegionRuntime::HighLevel
TraceKind	legion_runtime/region_tree.h	/^    enum TraceKind {$/;"	g	namespace:LegionRuntime::HighLevel
Tracer	legion_runtime/utilities.h	/^    class Tracer {$/;"	c	namespace:LegionRuntime::LowLevel
Translation	legion_runtime/arrays.h	/^      Translation(const Point<DIM> _offset) : offset(_offset) {}$/;"	f	class:LegionRuntime::Arrays::Translation
Translation	legion_runtime/arrays.h	/^      Translation(void) : offset(0) {}$/;"	f	class:LegionRuntime::Arrays::Translation
Translation	legion_runtime/arrays.h	/^    class Translation {$/;"	c	namespace:LegionRuntime::Arrays
TreeClose	legion_runtime/region_tree.cc	/^    TreeClose::TreeClose(TreeCloseImpl *op)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
TreeClose	legion_runtime/region_tree.cc	/^    TreeClose::TreeClose(const TreeClose &rhs)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
TreeClose	legion_runtime/region_tree.cc	/^    TreeClose::TreeClose(void)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
TreeClose	legion_runtime/region_tree.h	/^    class TreeClose {$/;"	c	namespace:LegionRuntime::HighLevel
TreeCloseImpl	legion_runtime/region_tree.cc	/^    TreeCloseImpl::TreeCloseImpl(const TreeCloseImpl &rhs)$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
TreeCloseImpl	legion_runtime/region_tree.cc	/^    TreeCloseImpl::TreeCloseImpl(int c, const FieldMask &m, bool o)$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
TreeCloseImpl	legion_runtime/region_tree.h	/^    class TreeCloseImpl : public Collectable {$/;"	c	namespace:LegionRuntime::HighLevel
TreeStateLogger	legion_runtime/legion_logging.cc	/^    TreeStateLogger::TreeStateLogger(Processor local_proc)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
TreeStateLogger	legion_runtime/legion_spy.cc	/^    TreeStateLogger::TreeStateLogger(AddressSpaceID sid, bool verb,$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
TreeStateLogger	legion_runtime/legion_spy.cc	/^    TreeStateLogger::TreeStateLogger(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
TreeStateLogger	legion_runtime/legion_spy.h	/^    class TreeStateLogger {$/;"	c	namespace:LegionRuntime::HighLevel
TriggerHandle	legion_runtime/shared_lowlevel.cc	/^        typedef unsigned TriggerHandle;$/;"	t	class:LegionRuntime::LowLevel::Triggerable	file:
TriggerOpArgs	legion_runtime/runtime.h	/^      struct TriggerOpArgs {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
TriggerTaskArgs	legion_runtime/runtime.h	/^      struct TriggerTaskArgs {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
Triggerable	legion_runtime/shared_lowlevel.cc	/^    class Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
TriggerableInfo	legion_runtime/shared_lowlevel.cc	/^            TriggerableInfo(Triggerable *t, TriggerHandle h,$/;"	f	struct:LegionRuntime::LowLevel::EventImpl::TriggerableInfo
TriggerableInfo	legion_runtime/shared_lowlevel.cc	/^        struct TriggerableInfo {$/;"	s	class:LegionRuntime::LowLevel::EventImpl	file:
TunableID	legion_runtime/legion_types.h	/^    typedef unsigned int TunableID;$/;"	t	namespace:LegionRuntime::HighLevel
TwoDPayload	legion_runtime/activemsg.cc	/^TwoDPayload::TwoDPayload(const void *_srcptr, size_t _line_size,$/;"	f	class:TwoDPayload
TwoDPayload	legion_runtime/activemsg.cc	/^class TwoDPayload : public PayloadSource {$/;"	c	file:
TypeHandle	legion_runtime/legion_types.h	/^    typedef unsigned int TypeHandle;$/;"	t	namespace:LegionRuntime::HighLevel
Typed	legion_runtime/accessor.h	/^	  Typed() : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
Typed	legion_runtime/accessor.h	/^	  Typed() : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
Typed	legion_runtime/accessor.h	/^	  Typed() : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
Typed	legion_runtime/accessor.h	/^	  Typed() : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
Typed	legion_runtime/accessor.h	/^	  Typed(const Typed& other): Untyped(other.base, other.Stride<STRIDE>::value) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
Typed	legion_runtime/accessor.h	/^	  Typed(void *_base) : Untyped(_base) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Typed
Typed	legion_runtime/accessor.h	/^	  Typed(void *_base, ptr_t *_next_entry) : Untyped(_base, _next_entry) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Typed
Typed	legion_runtime/accessor.h	/^	  Typed(void *_base, size_t _stride) : Untyped(_base, _stride) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
Typed	legion_runtime/accessor.h	/^	  Typed(void *_base, size_t _stride) : Untyped(_base, _stride) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
Typed	legion_runtime/accessor.h	/^	  Typed(void *_base, size_t _stride, size_t _block_size, size_t _block_stride)$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
Typed	legion_runtime/accessor.h	/^	  Typed(void *_internal, off_t _field_offset = 0) : Untyped(_internal, _field_offset) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
Typed	legion_runtime/accessor.h	/^	  Typed(void) : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Typed
Typed	legion_runtime/accessor.h	/^	  Typed(void) : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Typed
Typed	legion_runtime/accessor.h	/^	struct Typed : protected Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::AOS
Typed	legion_runtime/accessor.h	/^	struct Typed : protected Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::HybridSOA
Typed	legion_runtime/accessor.h	/^	struct Typed : protected Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::ReductionFold
Typed	legion_runtime/accessor.h	/^	struct Typed : protected Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::ReductionList
Typed	legion_runtime/accessor.h	/^	struct Typed : protected Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::SOA
Typed	legion_runtime/accessor.h	/^	struct Typed : public Untyped, public StructSpecific<T, PT, TemplateFu::IsAStruct<T>::value> {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::Generic
UNARY_PRIORITY	lua_src/lparser.c	1033;"	d	file:
UNIMPLEMENTED_METHOD	legion_runtime/legion.h	24;"	d
UNLOCK	nautilus/vc.c	58;"	d	file:
UNLOCK	test/benchmark.h	17;"	d
UNLOCK	test/benchmark.h	50;"	d
UPDATE_CLOSE_CALL	legion_runtime/region_tree.h	/^      UPDATE_CLOSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
UPDATE_REDUCTION_VIEWS_CALL	legion_runtime/region_tree.h	/^      UPDATE_REDUCTION_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
UPDATE_VALID_VIEWS_CALL	legion_runtime/region_tree.h	/^      UPDATE_VALID_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
UPDATE_VERSIONS_CALL	legion_runtime/region_tree.h	/^      UPDATE_VERSIONS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
UPDATE_VOLTAGES_TASK_ID	test/circuit.h	/^  UPDATE_VOLTAGES_TASK_ID,$/;"	e	enum:__anon40
USE_BATCHED_GASNET_XFERS	legion_runtime/lowlevel_dma.cc	2617;"	d	file:
UTIL_PROC	legion_runtime/lowlevel.h	/^	UTIL_PROC, \/\/ Utility core$/;"	e	enum:LegionRuntime::LowLevel::Processor::Kind
UniqueID	legion_runtime/legion_types.h	/^    typedef unsigned long long UniqueID;$/;"	t	namespace:LegionRuntime::HighLevel
Untyped	legion_runtime/accessor.h	/^	  Untyped() : Stride<STRIDE>(), base(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
Untyped	legion_runtime/accessor.h	/^	  Untyped() : Stride<STRIDE>(0), BlockSize<BLOCK_SIZE>(0), BlockStride<BLOCK_STRIDE>(0), base(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
Untyped	legion_runtime/accessor.h	/^	  Untyped() : Stride<STRIDE>(STRIDE), base(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
Untyped	legion_runtime/accessor.h	/^	  Untyped() : base(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
Untyped	legion_runtime/accessor.h	/^	  Untyped() : internal(0), field_offset(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
Untyped	legion_runtime/accessor.h	/^	  Untyped(void *_base) : base((char *)_base) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
Untyped	legion_runtime/accessor.h	/^	  Untyped(void *_base, size_t _stride) : Stride<STRIDE>(_stride), base((char *)_base) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
Untyped	legion_runtime/accessor.h	/^	  Untyped(void *_base, size_t _stride) : Stride<STRIDE>(_stride), base((char *)_base) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
Untyped	legion_runtime/accessor.h	/^	  Untyped(void *_internal, off_t _field_offset = 0) : internal(_internal), field_offset(_field_offset) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
Untyped	legion_runtime/accessor.h	/^	Untyped() : base(0), next_entry(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
Untyped	legion_runtime/accessor.h	/^	Untyped(void *_base, ptr_t *_next_entry) : base((char *)_base), next_entry(_next_entry) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
Untyped	legion_runtime/accessor.h	/^	struct Untyped : public Stride<STRIDE> {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::AOS
Untyped	legion_runtime/accessor.h	/^	struct Untyped : public Stride<STRIDE> {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::SOA
Untyped	legion_runtime/accessor.h	/^	struct Untyped : public Stride<STRIDE>, public BlockSize<BLOCK_SIZE>, public BlockStride<BLOCK_STRIDE> {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::HybridSOA
Untyped	legion_runtime/accessor.h	/^	struct Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::Generic
Untyped	legion_runtime/accessor.h	/^	struct Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::ReductionFold
Untyped	legion_runtime/accessor.h	/^	struct Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::ReductionList
Untyped	legion_runtime/accessor.h	/^          Untyped(void *_base, size_t _stride, size_t _block_size, size_t _block_stride) $/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
UpdateVoltagesTask	test/circuit.h	/^class UpdateVoltagesTask : public IndexLauncher {$/;"	c
UpdateVoltagesTask	test/circuit_cpu.cc	/^UpdateVoltagesTask::UpdateVoltagesTask(LogicalPartition lp_pvt_nodes,$/;"	f	class:UpdateVoltagesTask
UserEvent	legion_runtime/legion_types.h	/^    typedef LowLevel::UserEvent UserEvent;$/;"	t	namespace:LegionRuntime::HighLevel
UserEvent	legion_runtime/lowlevel.h	/^    class UserEvent : public Event {$/;"	c	namespace:LegionRuntime::LowLevel
UtilityBarrier	legion_runtime/utilities.h	/^      explicit UtilityBarrier(unsigned expected_arrivals)$/;"	f	class:LegionRuntime::LowLevel::UtilityBarrier
UtilityBarrier	legion_runtime/utilities.h	/^    class UtilityBarrier {$/;"	c	namespace:LegionRuntime::LowLevel
UtilityProcessor	legion_runtime/lowlevel.cc	/^    UtilityProcessor::UtilityProcessor(Processor _me,$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
UtilityProcessor	legion_runtime/lowlevel_impl.h	/^    class UtilityProcessor : public Processor::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
UtilityThread	legion_runtime/lowlevel.cc	/^      UtilityThread(UtilityProcessor *_proc)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
UtilityThread	legion_runtime/lowlevel.cc	/^    class UtilityProcessor::UtilityThread : public PreemptableThread {$/;"	c	class:LegionRuntime::LowLevel::UtilityProcessor	file:
V3_VM_RESET_ALL	nautilus/vmm.c	/^typedef enum {V3_VM_RESET_ALL,V3_VM_RESET_HRT,V3_VM_RESET_ROS,V3_VM_RESET_CORE_RANGE} v3_vm_reset_type;$/;"	e	enum:__anon45	file:
V3_VM_RESET_CORE_RANGE	nautilus/vmm.c	/^typedef enum {V3_VM_RESET_ALL,V3_VM_RESET_HRT,V3_VM_RESET_ROS,V3_VM_RESET_CORE_RANGE} v3_vm_reset_type;$/;"	e	enum:__anon45	file:
V3_VM_RESET_HRT	nautilus/vmm.c	/^typedef enum {V3_VM_RESET_ALL,V3_VM_RESET_HRT,V3_VM_RESET_ROS,V3_VM_RESET_CORE_RANGE} v3_vm_reset_type;$/;"	e	enum:__anon45	file:
V3_VM_RESET_ROS	nautilus/vmm.c	/^typedef enum {V3_VM_RESET_ALL,V3_VM_RESET_HRT,V3_VM_RESET_ROS,V3_VM_RESET_CORE_RANGE} v3_vm_reset_type;$/;"	e	enum:__anon45	file:
VALID_MASK_DATA_MSGID	legion_runtime/lowlevel.cc	/^      VALID_MASK_DATA_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
VALID_MASK_REQ_MSGID	legion_runtime/lowlevel.cc	/^      VALID_MASK_REQ_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
VALID_REDUCTION_ALLOC	legion_runtime/legion_allocation.h	/^      VALID_REDUCTION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
VALID_STATE	legion_runtime/garbage_collection.h	/^        VALID_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
VALID_VIEW_ALLOC	legion_runtime/legion_allocation.h	/^      VALID_VIEW_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
VC_CONTEXT	dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon46	file:
VC_MENU	dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon46	file:
VC_MENU_ALT	dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon46	file:
VC_NEXT	dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon46	file:
VC_NEXT_ALT	dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon46	file:
VC_PREV	dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon46	file:
VC_PREV_ALT	dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon46	file:
VC_START	dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon46	file:
VERIFIED_FLAG	legion_runtime/legion_types.h	/^      VERIFIED_FLAG   = 0x00000001,$/;"	e	enum:LegionRuntime::HighLevel::RegionFlags
VERSION	lua_src/lundump.c	236;"	d	file:
VGA_BASE_ADDR	dev/vga.c	29;"	d	file:
ValidMaskDataArgs	legion_runtime/lowlevel.cc	/^    struct ValidMaskDataArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
ValidMaskDataMessage	legion_runtime/lowlevel.cc	/^				       handle_valid_mask_data> ValidMaskDataMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
ValidMaskRequestArgs	legion_runtime/lowlevel.cc	/^    struct ValidMaskRequestArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
ValidMaskRequestMessage	legion_runtime/lowlevel.cc	/^				      handle_valid_mask_request> ValidMaskRequestMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
Variant	legion_runtime/legion.h	/^        Variant(Processor::TaskFuncID id, Processor::Kind k, $/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
Variant	legion_runtime/legion.h	/^        Variant(void)$/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
Variant	legion_runtime/legion.h	/^      class Variant {$/;"	c	class:LegionRuntime::HighLevel::TaskVariantCollection
VariantID	legion_runtime/legion_types.h	/^    typedef unsigned long VariantID;$/;"	t	namespace:LegionRuntime::HighLevel
VariantMap	legion_runtime/mapping_utilities.h	/^        typedef std::map<Processor::Kind,VariantProfile> VariantMap;$/;"	t	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
VariantProfile	legion_runtime/mapping_utilities.cc	/^      MappingProfiler::VariantProfile::VariantProfile(void)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler::VariantProfile
VariantProfile	legion_runtime/mapping_utilities.h	/^        struct VariantProfile {$/;"	s	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
Vector	test/hpcg/vector.h	/^struct Vector {$/;"	s	namespace:lgncg
VersionID	legion_runtime/legion_types.h	/^    typedef unsigned long long VersionID;$/;"	t	namespace:LegionRuntime::HighLevel
ViewHandle	legion_runtime/region_tree.cc	/^    ViewHandle::ViewHandle(LogicalView *v)$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
ViewHandle	legion_runtime/region_tree.cc	/^    ViewHandle::ViewHandle(const ViewHandle &rhs)$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
ViewHandle	legion_runtime/region_tree.cc	/^    ViewHandle::ViewHandle(void)$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
ViewHandle	legion_runtime/region_tree.h	/^    class ViewHandle {$/;"	c	namespace:LegionRuntime::HighLevel
WAIT_BEGIN	legion_runtime/legion_logging.h	/^        WAIT_BEGIN = 0,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::WaitKind
WAIT_END	legion_runtime/legion_logging.h	/^        WAIT_END = 1,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::WaitKind
WAIT_NOWAIT	legion_runtime/legion_logging.h	/^        WAIT_NOWAIT = 2, \/\/ indicates that the resource being waited on is already ready$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::WaitKind
WARAnalyzer	legion_runtime/region_tree.cc	/^    WARAnalyzer<ABOVE>::WARAnalyzer(int color\/*=-1*\/, $/;"	f	class:LegionRuntime::HighLevel::WARAnalyzer
WARAnalyzer	legion_runtime/region_tree.h	/^    class WARAnalyzer {$/;"	c	namespace:LegionRuntime::HighLevel
WIRE_SEGMENTS	test/circuit.h	32;"	d
WRITE_DISCARD	legion_runtime/legion_types.h	/^      WRITE_DISCARD   = 0x00000002, \/\/ same as WRITE_ONLY$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
WRITE_ONLY	legion_runtime/legion_types.h	/^      WRITE_ONLY      = 0x00000002, \/\/ same as WRITE_DISCARD$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
WaitKind	legion_runtime/legion_logging.h	/^      enum WaitKind {$/;"	g	namespace:LegionRuntime::HighLevel::LegionLogging
Waiter	legion_runtime/lowlevel_dma.cc	/^        Waiter(void) { }$/;"	f	class:LegionRuntime::LowLevel::DmaRequest::Waiter
Waiter	legion_runtime/lowlevel_dma.cc	/^      class Waiter : public Event::Impl::EventWaiter {$/;"	c	class:LegionRuntime::LowLevel::DmaRequest	file:
WireFields	test/circuit.h	/^enum WireFields {$/;"	g
WrapperTask	legion_runtime/legion_tasks.cc	/^    WrapperTask::WrapperTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
WrapperTask	legion_runtime/legion_tasks.h	/^    class WrapperTask : public SingleTask {$/;"	c	namespace:LegionRuntime::HighLevel
YIELD	test/benchmark.h	32;"	d
YIELD	test/benchmark.h	65;"	d
YIELD_COUNT	test/benchmark.c	688;"	d	file:
Z	lua_src/lundump.c	/^ ZIO* Z;$/;"	m	struct:__anon49	file:
ZEROES	legion_runtime/arrays.h	/^      static Point<DIM> ZEROES(void)$/;"	f	class:LegionRuntime::Arrays::Point
ZEROPAD	nautilus/printk.c	518;"	d	file:
ZERO_COUNT	legion_runtime/lowlevel_impl.h	/^      enum { MODE_EXCL = 0, ZERO_COUNT = 0x11223344 };$/;"	e	enum:LegionRuntime::LowLevel::Reservation::Impl::__anon22
ZERO_SIZE_INSTANCE_OFFSET	legion_runtime/lowlevel.cc	/^    static const off_t ZERO_SIZE_INSTANCE_OFFSET = 1ULL << 50;$/;"	m	namespace:LegionRuntime::LowLevel	file:
Z_COPY_MEM	legion_runtime/lowlevel.h	/^        Z_COPY_MEM, \/\/ Zero-Copy memory visible to all CPUs within a node and one or more GPUs $/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
_AB	nautilus/random.c	60;"	d	file:
_ACCONFIG_H	acpi/acpica/acconfig.h	45;"	d
_ACPI_DIV	acpi/acpica/acmacros.h	214;"	d
_ACPI_MOD	acpi/acpica/acmacros.h	216;"	d
_ACPI_MUL	acpi/acpica/acmacros.h	215;"	d
_ACUTILS_H	acpi/acpica/acutils.h	45;"	d
_AMD_FPU_FEAT_QUERY	nautilus/fpu.c	50;"	d	file:
_ARRAYS_H	legion_runtime/arrays.h	19;"	d
_COMPONENT	acpi/acpica/tbinstal.c	49;"	d	file:
_COMPONENT	acpi/acpica/tbutils.c	50;"	d	file:
_COMPONENT	acpi/acpica/tbxface.c	50;"	d	file:
_COMPONENT	acpi/acpica/tbxfroot.c	48;"	d	file:
_COMPONENT	acpi/acpica/utalloc.c	48;"	d	file:
_COMPONENT	acpi/acpica/utglobal.c	50;"	d	file:
_COMPONENT	acpi/acpica/utmisc.c	48;"	d	file:
_COMPONENT	acpi/acpica/utxferror.c	48;"	d	file:
_COMPONENT	acpi/osl.c	38;"	d	file:
_FILE_OFFSET_BITS	lua_src/liolib.c	14;"	d	file:
_GNU_SOURCE	test/benchmark.c	25;"	d	file:
_GNU_SOURCE	test/benchmark.h	6;"	d
_INTEL_FPU_FEAT_QUERY	nautilus/fpu.c	41;"	d	file:
_LARGEFILE_SOURCE	lua_src/liolib.c	13;"	d	file:
_Unwind_DeleteException	cxx/cxxglue.cc	/^_Unwind_DeleteException (struct _Unwind_Exception *exception_object)$/;"	f
_Unwind_GetDataRelBase	cxx/cxxglue.cc	/^_Unwind_GetDataRelBase(struct _Unwind_Context * context)$/;"	f
_Unwind_GetIP	cxx/cxxglue.cc	/^_Unwind_GetIP (struct _Unwind_Context *context)$/;"	f
_Unwind_GetIPInfo	cxx/cxxglue.cc	/^_Unwind_GetIPInfo (struct _Unwind_Context *context, int *ip_before_insn)$/;"	f
_Unwind_GetLanguageSpecificData	cxx/cxxglue.cc	/^_Unwind_GetLanguageSpecificData (struct _Unwind_Context *context){$/;"	f
_Unwind_GetRegionStart	cxx/cxxglue.cc	/^_Unwind_GetRegionStart(struct _Unwind_Context *context)$/;"	f
_Unwind_GetTextRelBase	cxx/cxxglue.cc	/^_Unwind_GetTextRelBase(struct _Unwind_Context *context)$/;"	f
_Unwind_RaiseException	cxx/cxxglue.cc	/^_Unwind_RaiseException (struct _Unwind_Exception *exception_object)$/;"	f
_Unwind_Resume	cxx/cxxglue.cc	/^void _Unwind_Resume(void)$/;"	f
_Unwind_Resume_or_Rethrow	cxx/cxxglue.cc	/^_Unwind_Resume_or_Rethrow (struct _Unwind_Exception * exception_object)$/;"	f
_Unwind_SetGR	cxx/cxxglue.cc	/^_Unwind_SetGR (struct _Unwind_Context *context,$/;"	f
_Unwind_SetIP	cxx/cxxglue.cc	/^_Unwind_SetIP (struct _Unwind_Context *context, uint64_t new_value)$/;"	f
_VERBOSE_STRUCTURES	acpi/acpica/acmacros.h	472;"	d
__ACCOMMON_H__	acpi/acpica/accommon.h	45;"	d
__ACGLOBAL_H__	acpi/acpica/acglobal.h	45;"	d
__ACLOCAL_H__	acpi/acpica/aclocal.h	45;"	d
__ACMACROS_H__	acpi/acpica/acmacros.h	45;"	d
__ACTABLES_H__	acpi/acpica/actables.h	45;"	d
__ALTERNATIVE_MAPPERS__	legion_runtime/alt_mappers.h	18;"	d
__AVX2__	legion_runtime/naut_debug.h	6;"	d
__AVX__	legion_runtime/naut_debug.h	5;"	d
__BENCHMARK_H__	test/benchmark.h	2;"	d
__CIRCUIT_H__	test/circuit.h	18;"	d
__CIRCUIT_MAPPER_H__	test/circuit_mapper.h	17;"	d
__DEFAULT_MAPPER_H__	legion_runtime/default_mapper.h	18;"	d
__LEGION_ALLOCATION__	legion_runtime/legion_allocation.h	18;"	d
__LEGION_ATOMICS__	legion_runtime/atomics.h	18;"	d
__LEGION_FIELD_TREE_H__	legion_runtime/field_tree.h	18;"	d
__LEGION_GARBAGE_COLLECTION__	legion_runtime/garbage_collection.h	18;"	d
__LEGION_INTERVAL_TREE_H__	legion_runtime/interval_tree.h	18;"	d
__LEGION_LOGGING_H__	legion_runtime/legion_logging.h	19;"	d
__LEGION_OPERATIONS_H__	legion_runtime/legion_ops.h	18;"	d
__LEGION_PROFILING_H__	legion_runtime/legion_profiling.h	18;"	d
__LEGION_RECTANGLE_SET_H__	legion_runtime/rectangle_set.h	18;"	d
__LEGION_REGION_TREE_H__	legion_runtime/region_tree.h	18;"	d
__LEGION_RUNTIME_H__	legion_runtime/legion.h	18;"	d
__LEGION_SPY_H__	legion_runtime/legion_spy.h	18;"	d
__LEGION_TASKS_H__	legion_runtime/legion_tasks.h	18;"	d
__LEGION_TRACE__	legion_runtime/legion_trace.h	18;"	d
__LEGION_TYPES_H__	legion_runtime/legion_types.h	18;"	d
__LEGION_UTILITIES_H__	legion_runtime/legion_utilities.h	18;"	d
__LEGION__	legion_runtime/shared_lowlevel.cc	50;"	d	file:
__MAPPING_UTILITIES__	legion_runtime/mapping_utilities.h	18;"	d
__NAUTILUS_MAIN__	arch/hrt/init.c	23;"	d	file:
__NAUTILUS_MAIN__	arch/hrt/main.c	23;"	d	file:
__NAUTILUS_MAIN__	arch/k1om/init.c	23;"	d	file:
__NAUTILUS_MAIN__	arch/k1om/main.c	23;"	d	file:
__NAUTILUS_MAIN__	arch/x64/init.c	23;"	d	file:
__NAUTILUS_MAIN__	arch/x64/main.c	23;"	d	file:
__NAUT_DEBUG_H__	legion_runtime/naut_debug.h	2;"	d
__RUNTIME_H__	legion_runtime/runtime.h	18;"	d
__RUNTIME_UTILITIES_H__	legion_runtime/utilities.h	18;"	d
__SETJMP_H__	include/nautilus/setjmp.h	24;"	d
__SHIM_MAPPER_H__	legion_runtime/shim_mapper.h	18;"	d
__SSE2__	legion_runtime/naut_debug.h	7;"	d
__assert_fail	nautilus/libccompat.c	/^__assert_fail (const char * assertion, const char * file, unsigned line, const char * function)$/;"	f
__associate_domains_adhoc	nautilus/numa.c	/^__associate_domains_adhoc (struct nk_locality_info * loc)$/;"	f	file:
__associate_domains_slit	nautilus/numa.c	/^__associate_domains_slit (struct nk_locality_info * loc)$/;"	f	file:
__atexit_func_count	cxx/cxxglue.cc	/^unsigned __atexit_func_count = 0;$/;"	v
__atexit_funcs	cxx/cxxglue.cc	/^atexit_func_entry_t __atexit_funcs[ATEXIT_MAX_FUNCS];$/;"	v
__clear_bit	nautilus/mm/buddy.c	/^__clear_bit (int nr, volatile void * addr)$/;"	f	file:
__clear_bit	nautilus/mm/buddy.c	/^__clear_bit (ulong_t nr, volatile void * addr)$/;"	f	file:
__coalesce_regions	nautilus/numa.c	/^__coalesce_regions (struct numa_domain * d)$/;"	f	file:
__construct_tables_1g	nautilus/paging.c	/^__construct_tables_1g (pml4e_t * pml, ulong_t bytes)$/;"	f	file:
__construct_tables_2m	nautilus/paging.c	/^__construct_tables_2m (pml4e_t * pml, ulong_t bytes)$/;"	f	file:
__construct_tables_4k	nautilus/paging.c	/^__construct_tables_4k (pml4e_t * pml, ulong_t bytes)$/;"	f	file:
__ctype_get_mb_cur_max	nautilus/libccompat.c	/^size_t __ctype_get_mb_cur_max (void)$/;"	f
__cxa_atexit	cxx/cxxglue.cc	/^__cxa_atexit (void (*destructor)(void*), void * arg, void * __dso_handle)$/;"	f
__cxa_finalize	cxx/cxxglue.cc	/^__cxa_finalize (void *f)$/;"	f
__cxa_pure_virtual	cxx/cxxglue.cc	/^__cxa_pure_virtual (void)$/;"	f
__do_backtrace	nautilus/backtrace.c	/^__do_backtrace (void ** fp, unsigned depth)$/;"	f
__do_ctors_init	cxx/cxxinit.c	/^__do_ctors_init (void) $/;"	f	file:
__dso_handle	cxx/cxxglue.cc	/^void * __dso_handle;$/;"	v
__duplocale	nautilus/libccompat.c	/^locale_t __duplocale (locale_t locobj)$/;"	f
__early_init_hrt	arch/hrt/hrt.c	/^__early_init_hrt (struct naut_info * naut)$/;"	f
__early_init_mp	arch/x64/smp.c	/^__early_init_mp (struct naut_info * naut)$/;"	f	file:
__early_init_sfi	arch/k1om/sfi.c	/^__early_init_sfi (struct naut_info * naut)$/;"	f
__exit_refok	acpi/osl.c	57;"	d	file:
__fill_pd	nautilus/paging.c	/^__fill_pd (pde_t * pd, $/;"	f	file:
__fill_pdpt	nautilus/paging.c	/^__fill_pdpt (pdpte_t * pdpt, $/;"	f	file:
__fill_pml	nautilus/paging.c	/^__fill_pml (pml4e_t * pml, $/;"	f	file:
__fill_pt	nautilus/paging.c	/^__fill_pt (pte_t * pt, $/;"	f	file:
__init	acpi/acpica/accommon.h	59;"	d
__init	acpi/osl.c	51;"	d	file:
__init	acpi/tables.c	38;"	d	file:
__init_refok	acpi/osl.c	55;"	d	file:
__initdata	acpi/acpica/accommon.h	60;"	d
__initdata_refok	acpi/osl.c	56;"	d	file:
__ioapic_init	dev/ioapic.c	/^__ioapic_init (struct ioapic * ioapic, uint8_t ioapic_id)$/;"	f	file:
__iomem	acpi/osl.c	52;"	d	file:
__jmp_buf	include/nautilus/setjmp.h	/^typedef uint64_t __jmp_buf[8];$/;"	t
__jmp_buf_tag	include/nautilus/setjmp.h	/^struct __jmp_buf_tag {$/;"	s
__jmpbuf	include/nautilus/setjmp.h	/^	__jmp_buf __jmpbuf;$/;"	m	struct:__jmp_buf_tag
__mm_boot_alloc	nautilus/mm/boot_mm.c	/^__mm_boot_alloc (ulong_t size, ulong_t align, ulong_t goal)$/;"	f
__newlocale	nautilus/libccompat.c	/^locale_t __newlocale (int category_mask, const char *locale, locale_t base)$/;"	f
__nl_langinfo_l	nautilus/libccompat.c	/^char *__nl_langinfo_l (nl_item item, locale_t locale)$/;"	f
__packed	nautilus/libccompat.c	/^    } __packed;$/;"	m	union:ieee754dbl	typeref:struct:ieee754dbl::__anon44	file:
__packed	nautilus/libccompat.c	/^} __packed;$/;"	v	typeref:union:ieee754dbl
__packed	nautilus/mm/kmem.c	/^} __packed;$/;"	v	typeref:struct:kmem_block_hdr
__popcountdi2	nautilus/libccompat.c	/^__popcountdi2 (long long a)$/;"	f
__rb_erase_color	nautilus/rbtree.c	/^static void __rb_erase_color(struct rb_node *node, struct rb_node *parent,$/;"	f	file:
__rb_rotate_left	nautilus/rbtree.c	/^static void __rb_rotate_left(struct rb_node *node, struct rb_root *root)$/;"	f	file:
__rb_rotate_right	nautilus/rbtree.c	/^static void __rb_rotate_right(struct rb_node *node, struct rb_root *root)$/;"	f	file:
__ref	acpi/osl.c	53;"	d	file:
__refdata	acpi/osl.c	54;"	d	file:
__serial_print	dev/serial.c	/^__serial_print (const char * format, va_list ap) $/;"	f
__set_bit	nautilus/mm/buddy.c	/^__set_bit (int nr, volatile void * addr)$/;"	f	file:
__set_bit	nautilus/mm/buddy.c	/^__set_bit (ulong_t nr, volatile void * addr)$/;"	f	file:
__sync_add_and_fetch	legion_runtime/atomics.h	/^    inline int __sync_add_and_fetch(int *ptr, int value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_add_and_fetch	legion_runtime/atomics.h	/^    inline long __sync_add_and_fetch(long *ptr, long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_add_and_fetch	legion_runtime/atomics.h	/^    inline long long __sync_add_and_fetch(long long *ptr, long long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_add_and_fetch	legion_runtime/atomics.h	/^    inline unsigned int __sync_add_and_fetch(unsigned int *ptr, unsigned int value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_add_and_fetch	legion_runtime/atomics.h	/^    inline unsigned long __sync_add_and_fetch(unsigned long *ptr, unsigned long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_add_and_fetch	legion_runtime/atomics.h	/^    inline unsigned long long __sync_add_and_fetch(unsigned long long *ptr, unsigned long long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	legion_runtime/atomics.h	/^    inline int __sync_fetch_and_add(int *ptr, int value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	legion_runtime/atomics.h	/^    inline long __sync_fetch_and_add(long *ptr, long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	legion_runtime/atomics.h	/^    inline long long __sync_fetch_and_add(long long *ptr, long long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	legion_runtime/atomics.h	/^    inline unsigned int __sync_fetch_and_add(unsigned int *ptr, unsigned int value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	legion_runtime/atomics.h	/^    inline unsigned long __sync_fetch_and_add(unsigned long *ptr, unsigned long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	legion_runtime/atomics.h	/^    inline unsigned long long __sync_fetch_and_add(unsigned long long *ptr, unsigned long long value)$/;"	f	namespace:LegionRuntime::LowLevel
__thread_fork	nautilus/thread.c	/^__thread_fork (void)$/;"	f
_ctype	nautilus/naut_string.c	/^unsigned char _ctype[] = {$/;"	v
_destroy_vc	nautilus/vc.c	/^static int _destroy_vc(struct nk_virtual_console *vc) $/;"	f	file:
_doprnt	nautilus/doprnt.c	/^void _doprnt (register const char * fmt, $/;"	f
_doprnt_truncates	nautilus/doprnt.c	/^bool_t	_doprnt_truncates = FALSE;$/;"	v
_switch_to_vc	nautilus/vc.c	/^static int _switch_to_vc(struct nk_virtual_console *vc) $/;"	f	file:
_vc_clear_specific	nautilus/vc.c	/^static int _vc_clear_specific(struct nk_virtual_console *vc, uint8_t attr)$/;"	f	file:
_vc_display_char	nautilus/vc.c	/^static int _vc_display_char(uint8_t c, uint8_t attr, uint8_t x, uint8_t y) $/;"	f	file:
_vc_display_char_specific	nautilus/vc.c	/^static int _vc_display_char_specific(struct nk_virtual_console *vc, uint8_t c, uint8_t attr, uint8_t x, uint8_t y) $/;"	f	file:
_vc_print_specific	nautilus/vc.c	/^static int _vc_print_specific(struct nk_virtual_console *vc, char *s) $/;"	f	file:
_vc_putchar	nautilus/vc.c	/^static int _vc_putchar(uint8_t c) $/;"	f	file:
_vc_putchar_specific	nautilus/vc.c	/^static int _vc_putchar_specific(struct nk_virtual_console *vc, uint8_t c) $/;"	f	file:
_vc_scrollup_specific	nautilus/vc.c	/^static int _vc_scrollup_specific(struct nk_virtual_console *vc) $/;"	f	file:
_vc_setattr_specific	nautilus/vc.c	/^static int _vc_setattr_specific(struct nk_virtual_console *vc, uint8_t attr)$/;"	f	file:
_vc_setpos	nautilus/vc.c	/^static int _vc_setpos(uint8_t x, uint8_t y) $/;"	f	file:
_vc_setpos_specific	nautilus/vc.c	/^static int _vc_setpos_specific(struct nk_virtual_console *vc, uint8_t x, uint8_t y) $/;"	f	file:
a	test/hpcg/sparsemat.h	/^    int64_t a;$/;"	m	struct:lgncg::I64Tuple
a1	legion_runtime/rectangle_set.h	/^      T a1, a2, b;$/;"	m	class:LegionRuntime::HighLevel::Segment
a2	legion_runtime/rectangle_set.h	/^      T a1, a2, b;$/;"	m	class:LegionRuntime::HighLevel::Segment
abort	nautilus/libccompat.c	/^abort(void) $/;"	f
abs	nautilus/libccompat.c	/^double abs(double x)$/;"	f
abs_time	legion_runtime/utilities.h	/^      static double abs_time(void)$/;"	f	class:LegionRuntime::LowLevel::Clock
abs_to_rel	legion_runtime/utilities.h	/^      static double abs_to_rel(double abs_time)$/;"	f	class:LegionRuntime::LowLevel::Clock
access_bit_mask	acpi/acpica/aclocal.h	/^	u16 access_bit_mask;$/;"	m	struct:acpi_bit_register_info
accum_child_time	legion_runtime/lowlevel.cc	/^      double accum_child_time;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
accum_child_time	legion_runtime/shared_lowlevel.cc	/^      double accum_child_time;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
accumulate_events	legion_runtime/region_tree.cc	/^    void MaterializedView::accumulate_events(std::set<Event> &all_events)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
acos	nautilus/libccompat.c	/^double acos(double x)$/;"	f
acpi_bit_register_info	acpi/acpica/aclocal.h	/^struct acpi_bit_register_info {$/;"	s
acpi_btype	acpi/acpica/aclocal.h	/^	u32 acpi_btype;$/;"	m	struct:acpi_parse_obj_asl
acpi_common_state	acpi/acpica/aclocal.h	/^struct acpi_common_state {$/;"	s
acpi_control_state	acpi/acpica/aclocal.h	/^struct acpi_control_state {$/;"	s
acpi_create_field_info	acpi/acpica/aclocal.h	/^struct acpi_create_field_info {$/;"	s
acpi_current_gpe_count	acpi/acpica/acglobal.h	/^u32 acpi_current_gpe_count;$/;"	v
acpi_db_method_info	acpi/acpica/aclocal.h	/^struct acpi_db_method_info {$/;"	s
acpi_debug_mem_block	acpi/acpica/aclocal.h	/^struct acpi_debug_mem_block {$/;"	s
acpi_debug_mem_header	acpi/acpica/aclocal.h	/^struct acpi_debug_mem_header {$/;"	s
acpi_disable	arch/hrt/shutdown.c	/^    uint8_t   acpi_disable;$/;"	m	struct:shutdown_info	file:
acpi_disable	arch/x64/shutdown.c	/^    uint8_t   acpi_disable;$/;"	m	struct:shutdown_info	file:
acpi_disabled	nautilus/acpi.c	/^int acpi_disabled;$/;"	v
acpi_enable	arch/hrt/shutdown.c	/^    uint8_t   acpi_enable;$/;"	m	struct:shutdown_info	file:
acpi_enable	arch/x64/shutdown.c	/^    uint8_t   acpi_enable;$/;"	m	struct:shutdown_info	file:
acpi_error	acpi/acpica/utxferror.c	/^acpi_error(const char *module_name, u32 line_number, const char *format, ...)$/;"	f
acpi_field_info	acpi/acpica/aclocal.h	/^struct acpi_field_info {$/;"	s
acpi_find_context	acpi/acpica/aclocal.h	/^struct acpi_find_context {$/;"	s
acpi_find_root_pointer	acpi/acpica/tbxfroot.c	/^acpi_status acpi_find_root_pointer(acpi_size *table_address)$/;"	f
acpi_fix_pin2_polarity	nautilus/acpi.c	/^int acpi_fix_pin2_polarity ;$/;"	v
acpi_fixed_event_count	acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_fixed_event_count[ACPI_NUM_FIXED_EVENTS];$/;"	v
acpi_fixed_event_handler	acpi/acpica/aclocal.h	/^struct acpi_fixed_event_handler {$/;"	s
acpi_fixed_event_info	acpi/acpica/aclocal.h	/^struct acpi_fixed_event_info {$/;"	s
acpi_gbl_FADT	acpi/acpica/acglobal.h	/^struct acpi_table_fadt acpi_gbl_FADT;$/;"	v	typeref:struct:acpi_table_fadt
acpi_gbl_integer_bit_width	acpi/acpica/acglobal.h	/^ACPI_EXTERN u8 acpi_gbl_integer_bit_width;$/;"	v
acpi_gbl_integer_byte_width	acpi/acpica/acglobal.h	/^ACPI_EXTERN u8 acpi_gbl_integer_byte_width;$/;"	v
acpi_gbl_integer_nybble_width	acpi/acpica/acglobal.h	/^ACPI_EXTERN u8 acpi_gbl_integer_nybble_width;$/;"	v
acpi_gbl_original_dbg_layer	acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_gbl_original_dbg_layer;$/;"	v
acpi_gbl_original_dbg_level	acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_gbl_original_dbg_level;$/;"	v
acpi_gbl_root_table_list	acpi/acpica/acglobal.h	/^ACPI_EXTERN struct acpi_table_list acpi_gbl_root_table_list;$/;"	v	typeref:struct:acpi_table_list
acpi_gbl_system_awake_and_running	acpi/acpica/acglobal.h	/^u8 acpi_gbl_system_awake_and_running;$/;"	v
acpi_gbl_trace_dbg_layer	acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_gbl_trace_dbg_layer;$/;"	v
acpi_gbl_trace_dbg_level	acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_gbl_trace_dbg_level;$/;"	v
acpi_gbl_trace_flags	acpi/acpica/acglobal.h	/^u32 acpi_gbl_trace_flags;$/;"	v
acpi_gbl_trace_method_name	acpi/acpica/acglobal.h	/^acpi_name acpi_gbl_trace_method_name;$/;"	v
acpi_generic_state	acpi/acpica/aclocal.h	/^union acpi_generic_state {$/;"	u
acpi_get_table_with_size	acpi/acpica/tbxface.c	/^acpi_get_table_with_size(char *signature,$/;"	f
acpi_gpe_block_info	acpi/acpica/aclocal.h	/^struct acpi_gpe_block_info {$/;"	s
acpi_gpe_callback	acpi/acpica/aclocal.h	/^typedef acpi_status(*acpi_gpe_callback) (struct acpi_gpe_xrupt_info *gpe_xrupt_info,$/;"	t
acpi_gpe_count	acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_gpe_count;$/;"	v
acpi_gpe_device_info	acpi/acpica/aclocal.h	/^struct acpi_gpe_device_info {$/;"	s
acpi_gpe_dispatch_info	acpi/acpica/aclocal.h	/^union acpi_gpe_dispatch_info {$/;"	u
acpi_gpe_event_info	acpi/acpica/aclocal.h	/^struct acpi_gpe_event_info {$/;"	s
acpi_gpe_handler_info	acpi/acpica/aclocal.h	/^struct acpi_gpe_handler_info {$/;"	s
acpi_gpe_notify_object	acpi/acpica/aclocal.h	/^struct acpi_gpe_notify_object {$/;"	s
acpi_gpe_register_info	acpi/acpica/aclocal.h	/^struct acpi_gpe_register_info {$/;"	s
acpi_gpe_walk_info	acpi/acpica/aclocal.h	/^struct acpi_gpe_walk_info {$/;"	s
acpi_gpe_xrupt_info	acpi/acpica/aclocal.h	/^struct acpi_gpe_xrupt_info {$/;"	s
acpi_initialize_tables	acpi/acpica/tbxface.c	/^acpi_initialize_tables(struct acpi_table_desc * initial_table_array,$/;"	f
acpi_integrity_info	acpi/acpica/aclocal.h	/^struct acpi_integrity_info {$/;"	s
acpi_interface_info	acpi/acpica/aclocal.h	/^struct acpi_interface_info {$/;"	s
acpi_interpreter_mode	acpi/acpica/aclocal.h	/^} acpi_interpreter_mode;$/;"	t	typeref:enum:__anon24
acpi_ioapic	nautilus/acpi.c	/^int acpi_ioapic;$/;"	v
acpi_lapic	nautilus/acpi.c	/^int acpi_lapic;$/;"	v
acpi_lapic_addr	nautilus/acpi.c	/^static uint64_t acpi_lapic_addr = APIC_DEFAULT_PHYS_BASE;$/;"	v	file:
acpi_mutex_handle	acpi/acpica/aclocal.h	/^typedef u32 acpi_mutex_handle;$/;"	t
acpi_mutex_info	acpi/acpica/aclocal.h	/^struct acpi_mutex_info {$/;"	s
acpi_name_info	acpi/acpica/aclocal.h	/^struct acpi_name_info {$/;"	s
acpi_namespace_node	acpi/acpica/aclocal.h	/^struct acpi_namespace_node {$/;"	s
acpi_namestring_info	acpi/acpica/aclocal.h	/^struct acpi_namestring_info {$/;"	s
acpi_noirq	nautilus/acpi.c	/^int acpi_noirq;				\/* skip ACPI IRQ initialization *\/$/;"	v
acpi_notify_info	acpi/acpica/aclocal.h	/^struct acpi_notify_info {$/;"	s
acpi_ns_search_data	acpi/acpica/aclocal.h	/^struct acpi_ns_search_data {$/;"	s
acpi_opcode_info	acpi/acpica/aclocal.h	/^struct acpi_opcode_info {$/;"	s
acpi_os_dpc	acpi/osl.c	/^struct acpi_os_dpc {$/;"	s	file:
acpi_os_get_root_pointer	acpi/osl.c	/^acpi_physical_address acpi_os_get_root_pointer(void)$/;"	f
acpi_os_map_memory	acpi/osl.c	/^acpi_os_map_memory(acpi_physical_address phys, acpi_size size)$/;"	f
acpi_os_printf	acpi/osl.c	/^void acpi_os_printf(const char *fmt, ...)$/;"	f
acpi_os_unmap_memory	acpi/osl.c	/^void __ref acpi_os_unmap_memory(void __iomem *virt, acpi_size size)$/;"	f
acpi_os_vprintf	acpi/osl.c	/^void acpi_os_vprintf(const char *fmt, va_list args)$/;"	f
acpi_package_info	acpi/acpica/aclocal.h	/^struct acpi_package_info {$/;"	s
acpi_package_info2	acpi/acpica/aclocal.h	/^struct acpi_package_info2 {$/;"	s
acpi_package_info3	acpi/acpica/aclocal.h	/^struct acpi_package_info3 {$/;"	s
acpi_parse_downwards	acpi/acpica/aclocal.h	/^acpi_status(*acpi_parse_downwards) (struct acpi_walk_state * walk_state,$/;"	t
acpi_parse_memory_affinity	arch/x64/numa.c	/^acpi_parse_memory_affinity(struct acpi_subtable_header * header,$/;"	f	file:
acpi_parse_obj_asl	acpi/acpica/aclocal.h	/^struct acpi_parse_obj_asl {$/;"	s
acpi_parse_obj_common	acpi/acpica/aclocal.h	/^struct acpi_parse_obj_common {$/;"	s
acpi_parse_obj_named	acpi/acpica/aclocal.h	/^struct acpi_parse_obj_named {$/;"	s
acpi_parse_object	acpi/acpica/aclocal.h	/^union acpi_parse_object {$/;"	u
acpi_parse_processor_affinity	arch/x64/numa.c	/^acpi_parse_processor_affinity(struct acpi_subtable_header * header,$/;"	f	file:
acpi_parse_slit	arch/x64/numa.c	/^acpi_parse_slit(struct acpi_table_header *table, void * arg)$/;"	f	file:
acpi_parse_srat	arch/x64/numa.c	/^acpi_parse_srat (struct acpi_table_header * hdr, void * arg)$/;"	f	file:
acpi_parse_state	acpi/acpica/aclocal.h	/^struct acpi_parse_state {$/;"	s
acpi_parse_upwards	acpi/acpica/aclocal.h	/^typedef acpi_status(*acpi_parse_upwards) (struct acpi_walk_state * walk_state);$/;"	t
acpi_parse_value	acpi/acpica/aclocal.h	/^union acpi_parse_value {$/;"	u
acpi_parse_x2apic_affinity	arch/x64/numa.c	/^acpi_parse_x2apic_affinity(struct acpi_subtable_header *header,$/;"	f	file:
acpi_pci_disabled	nautilus/acpi.c	/^int acpi_pci_disabled;		\/* skip ACPI PCI scan and IRQ initialization *\/$/;"	v
acpi_pkg_state	acpi/acpica/aclocal.h	/^struct acpi_pkg_state {$/;"	s
acpi_port_info	acpi/acpica/aclocal.h	/^struct acpi_port_info {$/;"	s
acpi_predefined_data	acpi/acpica/aclocal.h	/^struct acpi_predefined_data {$/;"	s
acpi_predefined_info	acpi/acpica/aclocal.h	/^union acpi_predefined_info {$/;"	u
acpi_pscope_state	acpi/acpica/aclocal.h	/^struct acpi_pscope_state {$/;"	s
acpi_reboot	arch/hrt/shutdown.c	/^acpi_reboot (void)$/;"	f
acpi_reboot	arch/x64/shutdown.c	/^acpi_reboot (void)$/;"	f
acpi_result_values	acpi/acpica/aclocal.h	/^struct acpi_result_values {$/;"	s
acpi_rsdt_forced	nautilus/acpi.c	/^uint32_t acpi_rsdt_forced;$/;"	v
acpi_rw_lock	acpi/acpica/aclocal.h	/^struct acpi_rw_lock {$/;"	s
acpi_sci_flags	nautilus/acpi.c	/^uint8_t acpi_sci_flags ;$/;"	v
acpi_sci_override_gsi	nautilus/acpi.c	/^int acpi_sci_override_gsi ;$/;"	v
acpi_scope_state	acpi/acpica/aclocal.h	/^struct acpi_scope_state {$/;"	s
acpi_shutdown	arch/hrt/shutdown.c	/^acpi_shutdown (void)$/;"	f
acpi_shutdown	arch/x64/shutdown.c	/^acpi_shutdown (void)$/;"	f
acpi_skip_timer_override	nautilus/acpi.c	/^int acpi_skip_timer_override ;$/;"	v
acpi_strict	nautilus/acpi.c	/^int acpi_strict;$/;"	v
acpi_table_init	acpi/tables.c	/^int acpi_table_init(void)$/;"	f
acpi_table_list	acpi/acpica/aclocal.h	/^struct acpi_table_list {$/;"	s
acpi_table_parse	acpi/tables.c	/^acpi_table_parse (char *id, acpi_table_handler handler, void * arg)$/;"	f
acpi_table_parse_entries	acpi/tables.c	/^acpi_table_parse_entries(char *id,$/;"	f
acpi_table_parse_srat	arch/x64/numa.c	/^acpi_table_parse_srat(enum acpi_srat_entry_id id,$/;"	f	file:
acpi_table_print_madt_entry	acpi/tables.c	/^void acpi_table_print_madt_entry(struct acpi_subtable_header *header)$/;"	f
acpi_table_print_srat_entry	arch/x64/numa.c	/^acpi_table_print_srat_entry (struct acpi_subtable_header * header)$/;"	f	file:
acpi_tb_check_xsdt	acpi/acpica/tbutils.c	/^acpi_tb_check_xsdt(acpi_physical_address address)$/;"	f	file:
acpi_tb_checksum	acpi/acpica/tbutils.c	/^u8 acpi_tb_checksum(u8 *buffer, u32 length)$/;"	f
acpi_tb_cleanup_table_header	acpi/acpica/tbutils.c	/^acpi_tb_cleanup_table_header(struct acpi_table_header *out_header,$/;"	f	file:
acpi_tb_fix_string	acpi/acpica/tbutils.c	/^static void acpi_tb_fix_string(char *string, acpi_size length)$/;"	f	file:
acpi_tb_get_root_table_entry	acpi/acpica/tbutils.c	/^acpi_tb_get_root_table_entry(u8 *table_entry, u32 table_entry_size)$/;"	f	file:
acpi_tb_install_table	acpi/acpica/tbutils.c	/^acpi_tb_install_table(acpi_physical_address address,$/;"	f
acpi_tb_parse_root_table	acpi/acpica/tbutils.c	/^acpi_tb_parse_root_table(acpi_physical_address rsdp_address)$/;"	f
acpi_tb_print_table_header	acpi/acpica/tbutils.c	/^acpi_tb_print_table_header(acpi_physical_address address,$/;"	f
acpi_tb_resize_root_table_list	acpi/acpica/tbinstal.c	/^acpi_status acpi_tb_resize_root_table_list(void)$/;"	f
acpi_tb_scan_memory_for_rsdp	acpi/acpica/tbxfroot.c	/^static u8 *acpi_tb_scan_memory_for_rsdp(u8 * start_address, u32 length)$/;"	f	file:
acpi_tb_validate_rsdp	acpi/acpica/tbxfroot.c	/^static acpi_status acpi_tb_validate_rsdp(struct acpi_table_rsdp *rsdp)$/;"	f	file:
acpi_tb_verify_checksum	acpi/acpica/tbutils.c	/^acpi_status acpi_tb_verify_checksum(struct acpi_table_header *table, u32 length)$/;"	f
acpi_tb_verify_table	acpi/acpica/tbinstal.c	/^acpi_status acpi_tb_verify_table(struct acpi_table_desc *table_desc)$/;"	f
acpi_thread_state	acpi/acpica/aclocal.h	/^struct acpi_thread_state {$/;"	s
acpi_update_state	acpi/acpica/aclocal.h	/^struct acpi_update_state {$/;"	s
acpi_use_timer_override	nautilus/acpi.c	/^int acpi_use_timer_override ;$/;"	v
acpi_ut_allocate	acpi/acpica/utalloc.c	/^void *acpi_ut_allocate(acpi_size size,$/;"	f
acpi_ut_allocate_zeroed	acpi/acpica/utalloc.c	/^void *acpi_ut_allocate_zeroed(acpi_size size,$/;"	f
acpi_ut_set_integer_width	acpi/acpica/utmisc.c	/^void acpi_ut_set_integer_width(u8 revision)$/;"	f
acquire	legion_runtime/legion.cc	/^    void Lock::acquire(unsigned mode \/*=0*\/, bool exclusive \/*=true*\/)$/;"	f	class:LegionRuntime::HighLevel::Lock
acquire	legion_runtime/lowlevel.cc	/^    Event Reservation::Impl::acquire(unsigned new_mode, bool exclusive,$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
acquire	legion_runtime/lowlevel.cc	/^    Event Reservation::acquire(unsigned mode \/* = 0 *\/, bool exclusive \/* = true *\/,$/;"	f	class:LegionRuntime::LowLevel::Reservation
acquire	legion_runtime/shared_lowlevel.cc	/^    Event Reservation::acquire(unsigned mode, bool exclusive, Event wait_on) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
acquire	legion_runtime/shared_lowlevel.cc	/^    Event ReservationImpl::acquire(unsigned m, bool exc, Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
acquire_grant	legion_runtime/legion.cc	/^    Grant HighLevelRuntime::acquire_grant(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
acquire_grant	legion_runtime/runtime.cc	/^    Event Grant::Impl::acquire_grant(void)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
acquire_grant	legion_runtime/runtime.cc	/^    Grant Runtime::acquire_grant(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
acquire_op_lock	legion_runtime/runtime.h	/^      Reservation acquire_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
acquire_physical_state	legion_runtime/region_tree.cc	/^    PhysicalState& RegionTreeNode::acquire_physical_state(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
acquire_physical_state	legion_runtime/region_tree.cc	/^    void RegionTreeNode::acquire_physical_state(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
acquire_user_coherence	legion_runtime/region_tree.cc	/^    void RegionTreeForest::acquire_user_coherence(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
acquire_user_coherence	legion_runtime/region_tree.cc	/^    void RegionTreeNode::acquire_user_coherence(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
acquired	legion_runtime/runtime.h	/^      bool acquired;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
acquired_count	legion_runtime/region_tree.h	/^      unsigned acquired_count;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
acquired_mutex_list	acpi/acpica/aclocal.h	/^	union acpi_operand_object *acquired_mutex_list;	\/* List of all currently acquired mutexes *\/$/;"	m	struct:acpi_thread_state	typeref:union:acpi_thread_state::acpi_operand_object
action	legion_runtime/lowlevel_impl.h	/^      unsigned time_units, event_id, event_gen, action;$/;"	m	struct:LegionRuntime::LowLevel::EventTraceItem
action	legion_runtime/lowlevel_impl.h	/^      unsigned time_units, lock_id, owner, action;$/;"	m	struct:LegionRuntime::LowLevel::LockTraceItem
activate	legion_runtime/legion_ops.cc	/^    void AcquireOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
activate	legion_runtime/legion_ops.cc	/^    void AndPredOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
activate	legion_runtime/legion_ops.cc	/^    void CloseOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
activate	legion_runtime/legion_ops.cc	/^    void CopyOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
activate	legion_runtime/legion_ops.cc	/^    void DeletionOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
activate	legion_runtime/legion_ops.cc	/^    void FenceOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
activate	legion_runtime/legion_ops.cc	/^    void FuturePredOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
activate	legion_runtime/legion_ops.cc	/^    void MapOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
activate	legion_runtime/legion_ops.cc	/^    void MustEpochOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
activate	legion_runtime/legion_ops.cc	/^    void NotPredOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
activate	legion_runtime/legion_ops.cc	/^    void OrPredOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
activate	legion_runtime/legion_ops.cc	/^    void ReleaseOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
activate	legion_runtime/legion_tasks.cc	/^    void IndexTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
activate	legion_runtime/legion_tasks.cc	/^    void IndividualTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
activate	legion_runtime/legion_tasks.cc	/^    void InlineTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
activate	legion_runtime/legion_tasks.cc	/^    void PointTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
activate	legion_runtime/legion_tasks.cc	/^    void RemoteTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
activate	legion_runtime/legion_tasks.cc	/^    void SliceTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
activate	legion_runtime/legion_trace.cc	/^    void TraceCaptureOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
activate	legion_runtime/legion_trace.cc	/^    void TraceCompleteOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
activate	legion_runtime/shared_lowlevel.cc	/^    bool EventImpl::activate(void)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
activate	legion_runtime/shared_lowlevel.cc	/^    bool IndexSpace::Impl::activate(IndexSpace::Impl *par, const ElementMask &m)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
activate	legion_runtime/shared_lowlevel.cc	/^    bool IndexSpace::Impl::activate(const ElementMask &m)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
activate	legion_runtime/shared_lowlevel.cc	/^    bool IndexSpace::Impl::activate(size_t num)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
activate	legion_runtime/shared_lowlevel.cc	/^    bool RegionInstance::Impl::activate(IndexSpace r, Memory m, size_t num, size_t alloc, $/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
activate	legion_runtime/shared_lowlevel.cc	/^    bool ReservationImpl::activate(size_t dsize)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
activate_context	legion_runtime/runtime.cc	/^    void ProcessorManager::activate_context(SingleTask *context)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
activate_context	legion_runtime/runtime.cc	/^    void Runtime::activate_context(SingleTask *context)$/;"	f	class:LegionRuntime::HighLevel::Runtime
activate_multi	legion_runtime/legion_tasks.cc	/^    void MultiTask::activate_multi(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
activate_operation	legion_runtime/legion_ops.cc	/^    void Operation::activate_operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
activate_outstanding_task	legion_runtime/legion_tasks.cc	/^    void TaskOp::activate_outstanding_task(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
activate_predicate	legion_runtime/legion_ops.cc	/^    void Predicate::Impl::activate_predicate(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
activate_single	legion_runtime/legion_tasks.cc	/^    void SingleTask::activate_single(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
activate_speculative	legion_runtime/legion_ops.cc	/^    void SpeculativeOp::activate_speculative(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
activate_task	legion_runtime/legion_tasks.cc	/^    void TaskOp::activate_task(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
activate_wrapper	legion_runtime/legion_tasks.cc	/^    void WrapperTask::activate_wrapper(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
active	legion_runtime/runtime.h	/^        bool active;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::ContextState
active	legion_runtime/shared_lowlevel.cc	/^	bool active;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
active	legion_runtime/shared_lowlevel.cc	/^	bool active;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
active	legion_runtime/shared_lowlevel.cc	/^	bool active;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
active_thread_count	legion_runtime/lowlevel.cc	/^      int total_threads, active_thread_count, max_active_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
add	legion_runtime/legion_utilities.h	/^    void Fraction<T>::add(const Fraction<T> &rhs)$/;"	f	class:LegionRuntime::HighLevel::Fraction
add_adjacent	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::add_adjacent(Segment<T> *seg)$/;"	f	class:LegionRuntime::HighLevel::Segment
add_alias_did	legion_runtime/region_tree.cc	/^    void InstanceView::add_alias_did(DistributedID alias)$/;"	f	class:LegionRuntime::HighLevel::InstanceView
add_arg	legion_runtime/runtime.cc	/^    TaskArgument ArgumentMapStore::add_arg(const TaskArgument &arg)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMapStore
add_arrival_barrier	legion_runtime/legion.h	/^    inline void AcquireLauncher::add_arrival_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::AcquireLauncher
add_arrival_barrier	legion_runtime/legion.h	/^    inline void CopyLauncher::add_arrival_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_arrival_barrier	legion_runtime/legion.h	/^    inline void IndexLauncher::add_arrival_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_arrival_barrier	legion_runtime/legion.h	/^    inline void ReleaseLauncher::add_arrival_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::ReleaseLauncher
add_arrival_barrier	legion_runtime/legion.h	/^    inline void TaskLauncher::add_arrival_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_category	legion_runtime/utilities.h	/^    static int add_category(const std::string& name)$/;"	f	class:LegionRuntime::Logger
add_child	legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::add_child(FieldTree<UT> *child)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
add_child	legion_runtime/region_tree.cc	/^    void IndexPartNode::add_child(IndexSpaceNode *child)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
add_child	legion_runtime/region_tree.cc	/^    void IndexSpaceNode::add_child(IndexPartNode *child)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
add_child	legion_runtime/region_tree.cc	/^    void PartitionNode::add_child(RegionNode *child)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
add_child	legion_runtime/region_tree.cc	/^    void RegionNode::add_child(PartitionNode *child)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
add_child_space	legion_runtime/region_tree.cc	/^    void RegionTreeForest::DynamicPartTest::add_child_space(bool l, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
add_close	legion_runtime/legion_profiling.h	/^        inline void add_close(const OpInstance &inst)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_close_op	legion_runtime/region_tree.cc	/^    void TreeClose::add_close_op(const FieldMask &close_mask,$/;"	f	class:LegionRuntime::HighLevel::TreeClose
add_close_op	legion_runtime/region_tree.cc	/^    void TreeCloseImpl::add_close_op(const FieldMask &close_mask,$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
add_collection	legion_runtime/runtime.cc	/^    void GarbageCollectionEpoch::add_collection(LogicalView *view, Event term)$/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
add_copy	legion_runtime/legion_profiling.h	/^        inline void add_copy(const OpInstance &inst)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_copy_requirements	legion_runtime/legion.h	/^    inline void CopyLauncher::add_copy_requirements($/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_copy_user	legion_runtime/region_tree.cc	/^    void CompositeView::add_copy_user(ReductionOpID redop, Event copy_term,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
add_copy_user	legion_runtime/region_tree.cc	/^    void MaterializedView::add_copy_user(ReductionOpID redop, Event copy_term,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_copy_user	legion_runtime/region_tree.cc	/^    void ReductionView::add_copy_user(ReductionOpID redop, Event copy_term,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
add_copy_user_above	legion_runtime/region_tree.cc	/^    void MaterializedView::add_copy_user_above(PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_created_field	legion_runtime/legion_tasks.cc	/^    void MultiTask::add_created_field(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
add_created_field	legion_runtime/legion_tasks.cc	/^    void SingleTask::add_created_field(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_created_index	legion_runtime/legion_tasks.cc	/^    void MultiTask::add_created_index(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
add_created_index	legion_runtime/legion_tasks.cc	/^    void SingleTask::add_created_index(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_created_region	legion_runtime/legion_tasks.cc	/^    void MultiTask::add_created_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
add_created_region	legion_runtime/legion_tasks.cc	/^    void SingleTask::add_created_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_creation_source	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::add_creation_source(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
add_creation_source	legion_runtime/region_tree.cc	/^    void IndexPartNode::add_creation_source(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
add_creation_source	legion_runtime/region_tree.cc	/^    void IndexSpaceNode::add_creation_source(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
add_creation_source	legion_runtime/region_tree.cc	/^    void PartitionNode::add_creation_source(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
add_creation_source	legion_runtime/region_tree.cc	/^    void RegionNode::add_creation_source(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
add_device_device_copy	legion_runtime/lowlevel_gpu.cc	/^      void add_device_device_copy(GPUJob *copy)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
add_device_host_copy	legion_runtime/lowlevel_gpu.cc	/^      void add_device_host_copy(GPUJob *copy)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
add_disjoint	legion_runtime/region_tree.cc	/^    void IndexPartNode::add_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
add_disjoint	legion_runtime/region_tree.cc	/^    void IndexSpaceNode::add_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
add_disjointness_test	legion_runtime/region_tree.cc	/^    void RegionTreeForest::add_disjointness_test(const DynamicPartTest &test)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
add_disjointness_tests	legion_runtime/region_tree.cc	/^    void IndexPartNode::add_disjointness_tests(IndexPartNode *child,$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
add_disjointness_tests	legion_runtime/region_tree.cc	/^    void IndexSpaceNode::add_disjointness_tests(IndexPartNode *child,$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
add_dst_field	legion_runtime/legion.h	/^    inline void CopyLauncher::add_dst_field(unsigned idx,FieldID fid,bool inst)$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_event	legion_runtime/legion_profiling.h	/^        inline void add_event(const MemoryEvent &event) $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_event	legion_runtime/legion_profiling.h	/^        inline void add_event(const ProfilingEvent &event) $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_event	legion_runtime/lowlevel.cc	/^      void add_event(Event wait_for)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
add_field	legion_runtime/legion.h	/^    inline RegionRequirement& RegionRequirement::add_field(FieldID fid, $/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
add_field	legion_runtime/legion.h	/^    inline void AcquireLauncher::add_field(FieldID f)$/;"	f	class:LegionRuntime::HighLevel::AcquireLauncher
add_field	legion_runtime/legion.h	/^    inline void IndexLauncher::add_field(unsigned idx, FieldID fid, bool inst)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_field	legion_runtime/legion.h	/^    inline void InlineLauncher::add_field(FieldID fid, bool inst)$/;"	f	class:LegionRuntime::HighLevel::InlineLauncher
add_field	legion_runtime/legion.h	/^    inline void ReleaseLauncher::add_field(FieldID f)$/;"	f	class:LegionRuntime::HighLevel::ReleaseLauncher
add_field	legion_runtime/legion.h	/^    inline void TaskLauncher::add_field(unsigned idx, FieldID fid, bool inst)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_field_info	legion_runtime/region_tree.cc	/^    void LayoutDescription::add_field_info(FieldID fid, unsigned index,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
add_fields	legion_runtime/legion.h	/^    inline RegionRequirement& RegionRequirement::add_fields($/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
add_free_pages	nautilus/mm/boot_mm.c	/^add_free_pages (struct mem_region * region) $/;"	f	file:
add_future	legion_runtime/legion.h	/^    inline void IndexLauncher::add_future(Future f)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_future	legion_runtime/legion.h	/^    inline void TaskLauncher::add_future(Future f)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_gc_reference	legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::add_gc_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
add_gc_reference	legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_gc_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_gc_references	legion_runtime/region_tree.cc	/^    void CompositeNode::add_gc_references(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
add_grant	legion_runtime/legion.h	/^    inline void AcquireLauncher::add_grant(Grant g)$/;"	f	class:LegionRuntime::HighLevel::AcquireLauncher
add_grant	legion_runtime/legion.h	/^    inline void CopyLauncher::add_grant(Grant g)$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_grant	legion_runtime/legion.h	/^    inline void IndexLauncher::add_grant(Grant g)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_grant	legion_runtime/legion.h	/^    inline void ReleaseLauncher::add_grant(Grant g)$/;"	f	class:LegionRuntime::HighLevel::ReleaseLauncher
add_grant	legion_runtime/legion.h	/^    inline void TaskLauncher::add_grant(Grant g)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_handler_entries	legion_runtime/activemsg.h	/^  static int add_handler_entries(gasnet_handlerentry_t *entries)$/;"	f	class:ActiveMessageMediumNoReply
add_handler_entries	legion_runtime/activemsg.h	/^  static int add_handler_entries(gasnet_handlerentry_t *entries)$/;"	f	class:ActiveMessageMediumReply
add_handler_entries	legion_runtime/activemsg.h	/^  static int add_handler_entries(gasnet_handlerentry_t *entries)$/;"	f	class:ActiveMessageShortNoReply
add_handler_entries	legion_runtime/activemsg.h	/^  static int add_handler_entries(gasnet_handlerentry_t *entries)$/;"	f	class:ActiveMessageShortReply
add_held_remote_reference	legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::add_held_remote_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
add_held_remote_reference	legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_held_remote_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_host_device_copy	legion_runtime/lowlevel_gpu.cc	/^      void add_host_device_copy(GPUJob *copy)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
add_index_requirement	legion_runtime/legion.h	/^    inline void IndexLauncher::add_index_requirement($/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_index_requirement	legion_runtime/legion.h	/^    inline void TaskLauncher::add_index_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_index_task	legion_runtime/legion.h	/^    inline void MustEpochLauncher::add_index_task(const IndexLauncher &launcher)$/;"	f	class:LegionRuntime::HighLevel::MustEpochLauncher
add_inline_task	legion_runtime/legion_tasks.cc	/^    void SingleTask::add_inline_task(InlineTask *inline_task)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_instance	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::add_instance(RegionNode *inst)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
add_instance	legion_runtime/region_tree.cc	/^    void IndexPartNode::add_instance(PartitionNode *inst)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
add_instance	legion_runtime/region_tree.cc	/^    void IndexSpaceNode::add_instance(RegionNode *inst)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
add_local_copy_user	legion_runtime/region_tree.cc	/^    void MaterializedView::add_local_copy_user(PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_local_field	legion_runtime/legion_tasks.cc	/^    void SingleTask::add_local_field(FieldSpace handle, FieldID fid, $/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_local_fields	legion_runtime/legion_tasks.cc	/^    void SingleTask::add_local_fields(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_local_reference	legion_runtime/lowlevel.h	/^      void add_local_reference(void)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
add_local_user	legion_runtime/region_tree.cc	/^    void MaterializedView::add_local_user(std::set<Event> &wait_on,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_map	legion_runtime/legion_profiling.h	/^        inline void add_map(const OpInstance &inst)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_mapper	legion_runtime/legion.cc	/^    void HighLevelRuntime::add_mapper(MapperID map_id, Mapper *mapper, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
add_mapper	legion_runtime/runtime.cc	/^    void ProcessorManager::add_mapper(MapperID mid, Mapper *m, bool check)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
add_mapper	legion_runtime/runtime.cc	/^    void Runtime::add_mapper(MapperID map_id, Mapper *mapper, $/;"	f	class:LegionRuntime::HighLevel::Runtime
add_mapping_reference	legion_runtime/legion_ops.cc	/^    void Operation::add_mapping_reference(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
add_member	legion_runtime/shared_lowlevel.cc	/^      void add_member(ProcessorImpl *new_member) {$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgEventDependency &msg) { msgs_event_dependency.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgEventTiming &msg) { msgs_event_timing.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgFieldCreation &msg) { msgs_field_creation.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgFieldSpace &msg) { msgs_field_space.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgFutureWait &msg) { msgs_future_wait.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgIndexPartition &msg) { msgs_index_partition.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgIndexSlice &msg) { msgs_index_slice.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgIndexSubspace &msg) { msgs_index_subspace.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgInlineWait &msg) { msgs_inline_wait.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgLogicalRequirement &msg) { msgs_logical_requirement.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgLowlevelCopy &msg) { msgs_lowlevel_copy.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgLowlevelCopyAssoc &msg) { msgs_lowlevel_copy_assoc.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgLowlevelCopyChannel &msg) { msgs_lowlevel_copy_channel.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgMappingDependence &msg) { msgs_mapping_dependence.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgOperation &msg) { msgs_operation.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgOperationEvents &msg) { msgs_operation_events.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgOperationTiming &msg) { msgs_operation_timing.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgPhysicalInstance &msg) { msgs_physical_instance.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgPhysicalUser &msg) { msgs_phyiscal_user.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgPointPoint &msg) { msgs_point_point.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgRequirementFields &msg) { msgs_requirement_fields.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgSlicePoint &msg) { msgs_slice_point.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgSliceSlice &msg) { msgs_slice_slice.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgTaskInstanceRequirement &msg) { msgs_task_instance_requirement.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgTaskInstanceVariant &msg) { msgs_task_instance_variant.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgTaskOperation &msg) { msgs_task_operation.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgTopIndexSpace &msg) { msgs_top_index_space.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgTopRegion &msg) { msgs_top_region.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_pending	legion_runtime/activemsg.cc	/^void SrcDataPool::add_pending(OutgoingMessage *msg, Lock& held_lock)$/;"	f	class:SrcDataPool
add_predicate_reference	legion_runtime/legion_ops.cc	/^    void Predicate::Impl::add_predicate_reference(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
add_rectangle	legion_runtime/rectangle_set.h	/^    inline void RectangleSet<T,DISCRETE>::add_rectangle(T lower_x, T lower_y, $/;"	f	class:LegionRuntime::HighLevel::RectangleSet
add_reference	legion_runtime/arrays.h	/^      inline void add_reference(void)$/;"	f	class:LegionRuntime::Arrays::Mapping
add_reference	legion_runtime/garbage_collection.h	/^    inline void Collectable::add_reference(unsigned cnt \/*= 1*\/)$/;"	f	class:LegionRuntime::HighLevel::Collectable
add_reference	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::add_reference(void)$/;"	f	class:LegionRuntime::HighLevel::Segment
add_region_requirement	legion_runtime/legion.h	/^    inline void IndexLauncher::add_region_requirement($/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_region_requirement	legion_runtime/legion.h	/^    inline void TaskLauncher::add_region_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_remote_reference	legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::add_remote_reference(AddressSpaceID sid,$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
add_remote_reference	legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_remote_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_resource_reference	legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::add_resource_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
add_resource_reference	legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_resource_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_root	legion_runtime/region_tree.cc	/^    void CompositeView::add_root(CompositeNode *root, const FieldMask &valid)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
add_s	lua_src/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_single_task	legion_runtime/legion.h	/^    inline void MustEpochLauncher::add_single_task(const DomainPoint &point,$/;"	f	class:LegionRuntime::HighLevel::MustEpochLauncher
add_single_user	legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::add_single_user(unsigned index, const UT &user)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
add_src_field	legion_runtime/legion.h	/^    inline void CopyLauncher::add_src_field(unsigned idx,FieldID fid,bool inst)$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_subscriber	legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_subscriber(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_subview	legion_runtime/region_tree.cc	/^    bool CompositeView::add_subview(CompositeView *view, Color c)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
add_subview	legion_runtime/region_tree.cc	/^    bool MaterializedView::add_subview(MaterializedView *view, Color c)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_target	legion_runtime/region_tree.cc	/^    void PhysicalCloser::add_target(MaterializedView *target)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
add_task	legion_runtime/legion_profiling.h	/^        inline void add_task(const TaskInstance &inst)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_task	legion_runtime/lowlevel.cc	/^      void add_task(Task::FuncPtr func, const void *args, size_t arglen)$/;"	f	class:LegionRuntime::LowLevel::ProcessorThread
add_thread	legion_runtime/lowlevel.cc	/^    void Runtime::add_thread(const pthread_t *thread)$/;"	f	class:LegionRuntime::LowLevel::Runtime
add_to_dependence_queue	legion_runtime/runtime.cc	/^    void ProcessorManager::add_to_dependence_queue(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
add_to_dependence_queue	legion_runtime/runtime.cc	/^    void Runtime::add_to_dependence_queue(Processor p, Operation *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
add_to_group	legion_runtime/shared_lowlevel.cc	/^        void add_to_group(ProcessorGroup *grp) { groups.push_back(grp); }$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
add_to_local_queue	legion_runtime/runtime.cc	/^    void Runtime::add_to_local_queue(Processor p, $/;"	f	class:LegionRuntime::HighLevel::Runtime
add_to_local_ready_queue	legion_runtime/runtime.cc	/^    void ProcessorManager::add_to_local_ready_queue(Operation *op, $/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
add_to_pointer	legion_runtime/accessor.h	/^      T *add_to_pointer(T *ptr) const$/;"	f	class:LegionRuntime::Accessor::ByteOffset
add_to_ready_queue	legion_runtime/runtime.cc	/^    void ProcessorManager::add_to_ready_queue(TaskOp *task, bool prev_failure)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
add_to_ready_queue	legion_runtime/runtime.cc	/^    void Runtime::add_to_ready_queue(Processor p, $/;"	f	class:LegionRuntime::HighLevel::Runtime
add_to_ready_queue	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::add_to_ready_queue(TaskDesc *task)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
add_top_region	legion_runtime/legion_tasks.cc	/^    void RemoteTask::add_top_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
add_user	legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::add_user(const UT &user, bool precise)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
add_user	legion_runtime/region_tree.cc	/^    InstanceRef CompositeView::add_user(PhysicalUser &user,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
add_user	legion_runtime/region_tree.cc	/^    InstanceRef MaterializedView::add_user(PhysicalUser &user, $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_user	legion_runtime/region_tree.cc	/^    InstanceRef ReductionView::add_user(PhysicalUser &user, Processor exec_proc)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
add_user_above	legion_runtime/region_tree.cc	/^    void MaterializedView::add_user_above(std::set<Event> &wait_on,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_utility_user	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::add_utility_user(Processor p, ProcessorImpl *impl)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
add_valid_domain	legion_runtime/runtime.cc	/^    void FutureMap::Impl::add_valid_domain(const Domain &d)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
add_valid_point	legion_runtime/runtime.cc	/^    void FutureMap::Impl::add_valid_point(const DomainPoint &dp)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
add_valid_reference	legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::add_valid_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
add_valid_reference	legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_valid_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_valid_reference	legion_runtime/region_tree.cc	/^    void InstanceRef::add_valid_reference(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
add_valid_references	legion_runtime/region_tree.cc	/^    void CompositeNode::add_valid_references(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
add_valid_view	legion_runtime/region_tree.cc	/^    void InstanceManager::add_valid_view(MaterializedView *view)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
add_value	lua_src/lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_variant	legion_runtime/legion.cc	/^    void TaskVariantCollection::add_variant(Processor::TaskFuncID low_id, $/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
add_vectors_all_task	test/saxpy_array.cc	/^void add_vectors_all_task(const void *args, size_t arglen,$/;"	f
add_vectors_task	test/saxpy_array.cc	/^void add_vectors_task(const void *global_args, size_t global_arglen,$/;"	f
add_vectors_task_aos	test/saxpy_array.cc	/^void add_vectors_task_aos(const void *global_args, size_t global_arglen,$/;"	f
add_vectors_task_gen	test/saxpy_array.cc	/^void add_vectors_task_gen(const void *global_args, size_t global_arglen,$/;"	f
add_wait_barrier	legion_runtime/legion.h	/^    inline void AcquireLauncher::add_wait_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::AcquireLauncher
add_wait_barrier	legion_runtime/legion.h	/^    inline void CopyLauncher::add_wait_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_wait_barrier	legion_runtime/legion.h	/^    inline void IndexLauncher::add_wait_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_wait_barrier	legion_runtime/legion.h	/^    inline void ReleaseLauncher::add_wait_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::ReleaseLauncher
add_wait_barrier	legion_runtime/legion.h	/^    inline void TaskLauncher::add_wait_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_waiter	legion_runtime/lowlevel.cc	/^	  void add_waiter(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry
add_waiter	legion_runtime/lowlevel.cc	/^    void Event::Impl::add_waiter(Event event, EventWaiter *waiter, bool pre_subscribed \/*= false*\/)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
addbuff	lua_src/lstate.c	85;"	d	file:
addfield	lua_src/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, int i) {$/;"	f	file:
addinfo	lua_src/ldebug.c	/^static void addinfo (lua_State *L, const char *msg) {$/;"	f	file:
additional_fields	legion_runtime/legion.h	/^      std::set<FieldID> additional_fields;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
additional_procs	legion_runtime/legion.h	/^      std::set<Processor>                 additional_procs;$/;"	m	class:LegionRuntime::HighLevel::Task
addk	lua_src/lcode.c	/^static int addk (FuncState *fs, TValue *key, TValue *v) {$/;"	f	file:
addlenmod	lua_src/lstrlib.c	/^static void addlenmod (char *form, const char *lenmod) {$/;"	f	file:
addprototype	lua_src/lparser.c	/^static Proto *addprototype (LexState *ls) {$/;"	f	file:
addquoted	lua_src/lstrlib.c	/^static void addquoted (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
addr	nautilus/mm/kmem.c	/^    void *   addr;   \/* address of block *\/$/;"	m	struct:kmem_block_hdr	file:
address	acpi/acpica/aclocal.h	/^	acpi_gpe_handler address;	\/* Address of handler, if any *\/$/;"	m	struct:acpi_gpe_handler_info
address	legion_runtime/legion_allocation.h	/^      inline const_pointer address(const_reference r) { return &r; }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
address	legion_runtime/legion_allocation.h	/^      inline pointer address(reference r) { return &r; }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
address_space	legion_runtime/legion.cc	/^      AddressSpaceID address_space;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
address_space	legion_runtime/legion_logging.h	/^        AddressSpaceID address_space;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcessor
address_space	legion_runtime/lowlevel.cc	/^    AddressSpace Memory::address_space(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory
address_space	legion_runtime/lowlevel.cc	/^    AddressSpace Processor::address_space(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
address_space	legion_runtime/lowlevel.cc	/^    AddressSpace RegionInstance::address_space(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
address_space	legion_runtime/runtime.h	/^      const AddressSpaceID address_space; $/;"	m	class:LegionRuntime::HighLevel::Runtime
address_space	legion_runtime/shared_lowlevel.cc	/^    AddressSpace Memory::address_space(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory
address_space	legion_runtime/shared_lowlevel.cc	/^    AddressSpace Processor::address_space(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
address_space	legion_runtime/shared_lowlevel.cc	/^    AddressSpace RegionInstance::address_space(void) const $/;"	f	class:LegionRuntime::LowLevel::RegionInstance
addstr	lua_src/lobject.c	250;"	d	file:
adjacent_deg	legion_runtime/rectangle_set.h	/^      std::list<Segment<T>*> adjacent_deg;$/;"	m	class:LegionRuntime::HighLevel::Segment
adjacent_high	legion_runtime/rectangle_set.h	/^      Segment<T> *adjacent_high[2];$/;"	m	class:LegionRuntime::HighLevel::Segment
adjacent_low	legion_runtime/rectangle_set.h	/^      Segment<T> *adjacent_low[2];$/;"	m	class:LegionRuntime::HighLevel::Segment
adjust_arrival	legion_runtime/lowlevel.cc	/^    void Event::Impl::adjust_arrival(Event::gen_t barrier_gen, int delta, $/;"	f	class:LegionRuntime::LowLevel::Event::Impl
adjust_assign	lua_src/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjust_long_msgsize	legion_runtime/activemsg.cc	/^  bool adjust_long_msgsize(gasnet_node_t source, void *&ptr, size_t &buffer_size,$/;"	f	class:EndpointManager
adjust_long_msgsize	legion_runtime/activemsg.cc	/^  bool adjust_long_msgsize(void *&ptr, size_t &buffer_size, $/;"	f	class:ActiveMessageEndpoint
adjust_long_msgsize	legion_runtime/activemsg.cc	/^extern bool adjust_long_msgsize(gasnet_node_t source, void *&ptr, size_t &buffer_size,$/;"	f
adjust_varargs	lua_src/ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	file:
adjustlocalvars	lua_src/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
advance_barrier	legion_runtime/lowlevel.cc	/^    Barrier Barrier::advance_barrier(void) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
advance_barrier	legion_runtime/shared_lowlevel.cc	/^    Barrier Barrier::advance_barrier(void) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
advance_field_versions	legion_runtime/region_tree.cc	/^    void RegionTreeNode::advance_field_versions(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
advance_phase_barrier	legion_runtime/legion.cc	/^    PhaseBarrier HighLevelRuntime::advance_phase_barrier(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
advance_phase_barrier	legion_runtime/runtime.cc	/^    PhaseBarrier Runtime::advance_phase_barrier(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
advance_pointer	legion_runtime/legion_utilities.h	/^    inline void Deserializer::advance_pointer(size_t bytes)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
after_copy	legion_runtime/lowlevel_dma.cc	/^      Event after_copy;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest	file:
after_copy	legion_runtime/lowlevel_dma.h	/^      Event before_copy, after_copy;$/;"	m	struct:LegionRuntime::LowLevel::RemoteCopyArgs
after_event	legion_runtime/lowlevel.cc	/^      Event after_event;$/;"	m	class:LegionRuntime::LowLevel::DeferredEventTrigger	file:
after_lock	legion_runtime/lowlevel.cc	/^      Event after_lock;$/;"	m	class:LegionRuntime::LowLevel::DeferredLockRequest	file:
aliases	legion_runtime/region_tree.h	/^      std::set<DistributedID> aliases;$/;"	m	class:LegionRuntime::HighLevel::InstanceView
align_addr	nautilus/paging.c	/^align_addr (ulong_t addr, ulong_t align) $/;"	f	file:
alignment	legion_runtime/lowlevel_impl.h	/^      size_t alignment;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
all_children_mapped	legion_runtime/legion_tasks.h	/^      UserEvent all_children_mapped;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
all_cpus	test/circuit_mapper.h	/^  std::vector<Processor> all_cpus;$/;"	m	class:CircuitMapper
all_gpus	test/circuit_mapper.h	/^  std::vector<Processor> all_gpus;$/;"	m	class:CircuitMapper
all_nodes	test/circuit.h	/^  LogicalRegion all_nodes;$/;"	m	struct:Circuit
all_threads	legion_runtime/lowlevel.cc	/^      std::set<Thread *> all_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
all_threads	legion_runtime/lowlevel_impl.h	/^      pthread_t all_threads[MAX_NUM_THREADS];$/;"	m	class:Runtime
all_wires	test/circuit.h	/^  LogicalRegion all_wires;$/;"	m	struct:Circuit
alloc	legion_runtime/legion.h	/^    inline ptr_t IndexAllocator::alloc(unsigned num_elements \/*= 1*\/)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
alloc	legion_runtime/lowlevel.cc	/^    unsigned IndexSpaceAllocator::alloc(unsigned count \/*= 1*\/) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
alloc	legion_runtime/shared_lowlevel.cc	/^    unsigned IndexSpaceAllocator::alloc(unsigned count \/*= 1*\/) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
alloc_bytes	legion_runtime/lowlevel.cc	/^      virtual off_t alloc_bytes(size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
alloc_bytes	legion_runtime/lowlevel.cc	/^      virtual off_t alloc_bytes(size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
alloc_bytes	legion_runtime/lowlevel.cc	/^    off_t GASNetMemory::alloc_bytes(size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
alloc_bytes	legion_runtime/lowlevel_gpu.h	/^      virtual off_t alloc_bytes(size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
alloc_bytes	legion_runtime/lowlevel_gpu.h	/^      virtual off_t alloc_bytes(size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
alloc_bytes_local	legion_runtime/lowlevel.cc	/^    off_t Memory::Impl::alloc_bytes_local(size_t size)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
alloc_bytes_remote	legion_runtime/lowlevel.cc	/^    off_t Memory::Impl::alloc_bytes_remote(size_t size)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
alloc_counts	legion_runtime/activemsg.cc	/^  std::map<void *, off_t> alloc_counts;$/;"	m	class:SrcDataPool	file:
alloc_elements	legion_runtime/lowlevel.cc	/^    unsigned IndexSpaceAllocator::Impl::alloc_elements(unsigned count \/*= 1 *\/)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
alloc_elmt	legion_runtime/shared_lowlevel.cc	/^    unsigned IndexSpaceAllocator::Impl::alloc_elmt(size_t num_elmts)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
alloc_entry	legion_runtime/lowlevel_impl.h	/^    typename DynamicTableFreeList<ALLOCATOR>::ET *DynamicTableFreeList<ALLOCATOR>::alloc_entry(void)$/;"	f	class:LegionRuntime::LowLevel::DynamicTableFreeList
alloc_offset	legion_runtime/lowlevel_impl.h	/^	off_t alloc_offset; \/\/, access_offset;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
alloc_srcptr	legion_runtime/activemsg.cc	/^void *SrcDataPool::alloc_srcptr(size_t size_needed, Lock& held_lock)$/;"	f	class:SrcDataPool
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = ACQUIRE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::AcquireOp
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = AND_PRED_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = CLOSE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::CloseOp
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = COPY_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::CopyOp
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = DELETION_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = FENCE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::FenceOp
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = FUTURE_PRED_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::FuturePredOp
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = MAP_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::MapOp
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = MUST_EPOCH_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = NOT_PRED_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::NotPredOp
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = OR_PRED_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
alloc_type	legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = RELEASE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::ReleaseOp
alloc_type	legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = INDEX_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
alloc_type	legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = INDIVIDUAL_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
alloc_type	legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = INLINE_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::InlineTask
alloc_type	legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = POINT_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::PointTask
alloc_type	legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = REMOTE_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::RemoteTask
alloc_type	legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = SLICE_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
alloc_type	legion_runtime/legion_trace.h	/^      static const AllocationType alloc_type = TRACE_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
alloc_type	legion_runtime/legion_trace.h	/^      static const AllocationType alloc_type = TRACE_CAPTURE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::TraceCaptureOp
alloc_type	legion_runtime/legion_trace.h	/^      static const AllocationType alloc_type = TRACE_COMPLETE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::TraceCompleteOp
alloc_type	legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = COMPOSITE_NODE_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
alloc_type	legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = COMPOSITE_VIEW_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
alloc_type	legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = FOLD_MANAGER_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::FoldReductionManager
alloc_type	legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = INSTANCE_MANAGER_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
alloc_type	legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = LIST_MANAGER_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::ListReductionManager
alloc_type	legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = MATERIALIZED_VIEW_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
alloc_type	legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = REDUCTION_VIEW_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::ReductionView
alloc_type	legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = TREE_CLOSE_IMPL_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
alloc_type	legion_runtime/runtime.h	/^      static const AllocationType alloc_type = ALLOC_MANAGER_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::AllocManager
alloc_type	legion_runtime/runtime.h	/^      static const AllocationType alloc_type = ARGUMENT_MAP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap::Impl
alloc_type	legion_runtime/runtime.h	/^      static const AllocationType alloc_type = ARGUMENT_MAP_STORE_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMapStore
alloc_type	legion_runtime/runtime.h	/^      static const AllocationType alloc_type = FUTURE_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
alloc_type	legion_runtime/runtime.h	/^      static const AllocationType alloc_type = FUTURE_MAP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
alloc_type	legion_runtime/runtime.h	/^      static const AllocationType alloc_type = GRANT_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
alloc_type	legion_runtime/runtime.h	/^      static const AllocationType alloc_type = MPI_HANDSHAKE_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
alloc_type	legion_runtime/runtime.h	/^      static const AllocationType alloc_type = PHYSICAL_REGION_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
allocate	legion_runtime/legion_allocation.h	/^      inline pointer allocate(size_type cnt,$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
allocate_context	legion_runtime/runtime.cc	/^    void Runtime::allocate_context(SingleTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
allocate_event_id	nautilus/nemo.c	/^allocate_event_id (void) $/;"	f	file:
allocate_field	legion_runtime/legion.cc	/^    FieldID HighLevelRuntime::allocate_field(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
allocate_field	legion_runtime/legion.h	/^    inline FieldID FieldAllocator::allocate_field(size_t field_size, $/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
allocate_field	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::allocate_field(FieldSpace handle, size_t field_size,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
allocate_field	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::allocate_field(FieldID fid, size_t size, bool local)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
allocate_field	legion_runtime/runtime.cc	/^    FieldID Runtime::allocate_field(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::Runtime
allocate_field_index	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::allocate_field_index(FieldID fid, size_t size,$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
allocate_field_index	legion_runtime/region_tree.cc	/^    void RegionTreeForest::allocate_field_index(FieldSpace handle, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
allocate_field_indexes	legion_runtime/region_tree.cc	/^    void RegionTreeForest::allocate_field_indexes(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
allocate_fields	legion_runtime/legion.cc	/^    void HighLevelRuntime::allocate_fields(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
allocate_fields	legion_runtime/legion.h	/^    inline void FieldAllocator::allocate_fields($/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
allocate_fields	legion_runtime/region_tree.cc	/^    void RegionTreeForest::allocate_fields(FieldSpace handle, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
allocate_fields	legion_runtime/runtime.cc	/^    void Runtime::allocate_fields(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::Runtime
allocate_index	legion_runtime/region_tree.cc	/^    unsigned FieldSpaceNode::allocate_index(bool local, int goal \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
allocate_local_field	legion_runtime/legion.h	/^    inline FieldID FieldAllocator::allocate_local_field(size_t field_size,$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
allocate_local_field	legion_runtime/legion_tasks.cc	/^    void SingleTask::allocate_local_field(const LocalFieldInfo &info)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
allocate_local_fields	legion_runtime/legion.h	/^    inline void FieldAllocator::allocate_local_fields($/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
allocate_locator_fields	test/circuit.cc	/^void allocate_locator_fields(Context ctx, HighLevelRuntime *runtime, FieldSpace locator_space)$/;"	f
allocate_node_fields	test/circuit.cc	/^void allocate_node_fields(Context ctx, HighLevelRuntime *runtime, FieldSpace node_space)$/;"	f
allocate_physical_instance	legion_runtime/runtime.cc	/^    void MemoryManager::allocate_physical_instance(PhysicalManager *manager)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
allocate_physical_instance	legion_runtime/runtime.cc	/^    void Runtime::allocate_physical_instance(PhysicalManager *instance)$/;"	f	class:LegionRuntime::HighLevel::Runtime
allocate_space	legion_runtime/shared_lowlevel.cc	/^    unsigned IndexSpace::Impl::allocate_space(unsigned count)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
allocate_space	legion_runtime/shared_lowlevel.cc	/^    void* MemoryImpl::allocate_space(size_t size)$/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
allocate_wire_fields	test/circuit.cc	/^void allocate_wire_fields(Context ctx, HighLevelRuntime *runtime, FieldSpace wire_space)$/;"	f
allocated_fields	legion_runtime/region_tree.h	/^      const FieldMask allocated_fields;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
allocated_indexes	legion_runtime/region_tree.h	/^      FieldMask allocated_indexes;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
allocation	legion_runtime/runtime.h	/^      void *const allocation;$/;"	m	class:LegionRuntime::HighLevel::AllocManager
allocation_lock	legion_runtime/runtime.h	/^      Reservation allocation_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
allocation_manager	legion_runtime/runtime.h	/^      std::map<AllocationType,AllocationTracker> allocation_manager;$/;"	m	class:LegionRuntime::HighLevel::Runtime
allocation_size	legion_runtime/runtime.h	/^      size_t allocation_size;$/;"	m	class:LegionRuntime::HighLevel::AllocManager
allocation_size	legion_runtime/shared_lowlevel.cc	/^        size_t allocation_size;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
allocation_tracing_count	legion_runtime/runtime.h	/^      unsigned long long allocation_tracing_count;$/;"	m	class:LegionRuntime::HighLevel::Runtime
allocator	legion_runtime/legion.h	/^      IndexSpaceAllocator *allocator;$/;"	m	class:LegionRuntime::HighLevel::IndexAllocator
allocator	legion_runtime/region_tree.h	/^      IndexSpaceAllocator *allocator;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
allocator_lock	legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         allocator_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
alpha	test/hpcg/comp-waxpby.h	/^    double alpha;$/;"	m	struct:__anon36::waxpbyTaskArgs
alpha	test/saxpy_array.cc	/^  float alpha;$/;"	m	struct:Block	file:
alpha	test/saxpy_array.cc	/^  float alpha;$/;"	m	struct:MainArgs	file:
already_traced	legion_runtime/legion_ops.h	/^      inline bool already_traced(void) const $/;"	f	class:LegionRuntime::HighLevel::Operation
alter_arrival_count	legion_runtime/lowlevel.cc	/^    Barrier Barrier::alter_arrival_count(int delta) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
alter_arrival_count	legion_runtime/shared_lowlevel.cc	/^    Barrier Barrier::alter_arrival_count(int delta) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
alter_arrival_count	legion_runtime/shared_lowlevel.cc	/^    Barrier EventImpl::alter_arrival_count(int delta)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
amd_fpu_init	nautilus/fpu.c	/^amd_fpu_init (struct naut_info * naut)$/;"	f	file:
amd_get_cmplegacy	nautilus/numa.c	/^amd_get_cmplegacy (void)$/;"	f	file:
amd_get_topo_secondary	nautilus/numa.c	/^amd_get_topo_secondary (struct nk_topo_params * tp)$/;"	f	file:
amd_has_3dnow	nautilus/fpu.c	/^amd_has_3dnow (void)$/;"	f	file:
amd_has_3dnow_ext	nautilus/fpu.c	/^amd_has_3dnow_ext (void)$/;"	f	file:
amd_has_ext_lvt	dev/apic.c	/^amd_has_ext_lvt (struct apic_dev * apic)$/;"	f	file:
amd_has_fma4	nautilus/fpu.c	/^amd_has_fma4 (void)$/;"	f	file:
amd_has_misal_sse	nautilus/fpu.c	/^amd_has_misal_sse (void)$/;"	f	file:
amd_has_mmx_ext	nautilus/fpu.c	/^amd_has_mmx_ext (void)$/;"	f	file:
amd_has_prefetch	nautilus/fpu.c	/^amd_has_prefetch (void)$/;"	f	file:
amd_has_sse4a	nautilus/fpu.c	/^amd_has_sse4a (void)$/;"	f	file:
amd_setup_ext_lvt	dev/apic.c	/^amd_setup_ext_lvt (struct apic_dev * apic)$/;"	f	file:
aml	acpi/acpica/aclocal.h	/^	u8 *aml;		\/* Next AML byte *\/$/;"	m	struct:acpi_parse_state
aml_end	acpi/acpica/aclocal.h	/^	u8 *aml_end;		\/* (last + 1) AML byte *\/$/;"	m	struct:acpi_parse_state
aml_length	acpi/acpica/aclocal.h	/^	u32 aml_length;$/;"	m	struct:acpi_parse_obj_asl
aml_opcode_length	acpi/acpica/aclocal.h	/^	u8 aml_opcode_length;$/;"	m	struct:acpi_parse_obj_asl
aml_pkg_len_bytes	acpi/acpica/aclocal.h	/^	u8 aml_pkg_len_bytes;$/;"	m	struct:acpi_parse_obj_asl
aml_predicate_start	acpi/acpica/aclocal.h	/^	u8 *aml_predicate_start;	\/* Start of if\/while predicate *\/$/;"	m	struct:acpi_control_state
aml_size	acpi/acpica/aclocal.h	/^	u32 aml_size;$/;"	m	struct:acpi_parse_state
aml_start	acpi/acpica/aclocal.h	/^	u8 *aml_start;		\/* First AML byte *\/$/;"	m	struct:acpi_parse_state
aml_subtree_length	acpi/acpica/aclocal.h	/^	u32 aml_subtree_length;$/;"	m	struct:acpi_parse_obj_asl
analyze	legion_runtime/field_tree.h	/^    void FieldTree<UT>::analyze(const FieldMask &mask, AT &analyzer)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze	legion_runtime/region_tree.cc	/^    bool LogicalCloser::analyze(LogicalUser &prev_user)$/;"	f	class:LegionRuntime::HighLevel::LogicalCloser
analyze	legion_runtime/region_tree.cc	/^    bool LogicalDepAnalyzer::analyze(LogicalUser &prev_user)$/;"	f	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
analyze	legion_runtime/region_tree.cc	/^    bool LogicalFieldInvalidator::analyze(const LogicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::LogicalFieldInvalidator
analyze	legion_runtime/region_tree.cc	/^    bool LogicalFilter::analyze(LogicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::LogicalFilter
analyze	legion_runtime/region_tree.cc	/^    bool LogicalOpAnalyzer<DOMINATE>::analyze(LogicalUser &prev_user)$/;"	f	class:LegionRuntime::HighLevel::LogicalOpAnalyzer
analyze	legion_runtime/region_tree.cc	/^    bool PhysicalCopyAnalyzer<READING,REDUCE,TRACK,ABOVE>::analyze($/;"	f	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
analyze	legion_runtime/region_tree.cc	/^    bool PhysicalDepAnalyzer<FILTER>::analyze(PhysicalUser &prev_user)$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
analyze	legion_runtime/region_tree.cc	/^    bool PhysicalFilter::analyze(PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::PhysicalFilter
analyze	legion_runtime/region_tree.cc	/^    bool PhysicalUnpacker::analyze(PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::PhysicalUnpacker
analyze	legion_runtime/region_tree.cc	/^    bool WARAnalyzer<ABOVE>::analyze(const PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::WARAnalyzer
analyze	legion_runtime/region_tree.h	/^      inline bool analyze(const PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::PhysicalEventFilter
analyze_destroy_field_space	legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_field_space(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_field_space	legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_field_space(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_destroy_fields	legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_fields(FieldSpace handle, Operation *op,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_fields	legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_fields(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_destroy_index_partition	legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_index_partition(IndexPartition handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_index_partition	legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_index_partition($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_destroy_index_space	legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_index_space(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_index_space	legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_index_space(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_destroy_logical_partition	legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_logical_partition(LogicalPartition handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_logical_partition	legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_logical_partition($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_destroy_logical_region	legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_logical_region(LogicalRegion handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_logical_region	legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_logical_region(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_imprecise	legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_imprecise(const FieldMask &mask, $/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_no_checks	legion_runtime/field_tree.h	/^    void FieldTree<UT>::analyze_no_checks(AT &analyzer)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_precise	legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_precise(AT &analyzer)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_recurse	legion_runtime/field_tree.h	/^    void FieldTree<UT>::analyze_recurse(const FieldMask &mask, AT &analyzer)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_single	legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_single(const FieldMask &mask, $/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_single	legion_runtime/field_tree.h	/^    void FieldTree<UT>::analyze_single(unsigned index, AT &analyzer)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_single_imprecise	legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_single_imprecise(unsigned index,$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_single_precise	legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_single_precise(unsigned index, $/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_single_single	legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_single_single(unsigned index,$/;"	f	class:LegionRuntime::HighLevel::FieldTree
anchor_token	lua_src/lparser.c	/^static void anchor_token (LexState *ls) {$/;"	f	file:
and_pred_op_lock	legion_runtime/runtime.h	/^      Reservation and_pred_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
andaux	lua_src/lbitlib.c	/^static b_uint andaux (lua_State *L) {$/;"	f	file:
annotate_early_mapped_regions	legion_runtime/legion_tasks.cc	/^    void IndexTask::annotate_early_mapped_regions(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
announcement_mutex	legion_runtime/lowlevel.cc	/^    static gasnet_hsl_t announcement_mutex = GASNET_HSL_INITIALIZER;$/;"	m	namespace:LegionRuntime::LowLevel	file:
announcements_received	legion_runtime/lowlevel.cc	/^    static int announcements_received = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
any_left	legion_runtime/arrays.h	/^      bool any_left;$/;"	m	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
any_left	legion_runtime/arrays.h	/^      bool any_left;$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
any_left	legion_runtime/arrays.h	/^      bool any_left;$/;"	m	class:LegionRuntime::Arrays::GenericPointInRectIterator
any_left	legion_runtime/lowlevel.h	/^	bool any_left;$/;"	m	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
api_checkstackindex	lua_src/lapi.c	51;"	d	file:
api_checkvalidindex	lua_src/lapi.c	49;"	d	file:
apic_assign_spiv	dev/apic.c	/^apic_assign_spiv (struct apic_dev * apic, uint8_t spiv_vec)$/;"	f	file:
apic_bcast_deinit_iipi	dev/apic.c	/^apic_bcast_deinit_iipi (struct apic_dev * apic)$/;"	f
apic_bcast_iipi	dev/apic.c	/^apic_bcast_iipi (struct apic_dev * apic) $/;"	f
apic_bcast_sipi	dev/apic.c	/^apic_bcast_sipi (struct apic_dev * apic, uint8_t target)$/;"	f
apic_deinit_iipi	dev/apic.c	/^apic_deinit_iipi (struct apic_dev * apic, uint32_t remote_id)$/;"	f
apic_do_eoi	dev/apic.c	/^apic_do_eoi (void)$/;"	f
apic_dump	dev/apic.c	/^apic_dump (struct apic_dev * apic)$/;"	f	file:
apic_err_codes	dev/apic.c	/^static const char * apic_err_codes[8] = {$/;"	v	file:
apic_get_base_addr	dev/apic.c	/^apic_get_base_addr (void) $/;"	f	file:
apic_get_id	dev/apic.c	/^apic_get_id (struct apic_dev * apic)$/;"	f
apic_get_maxlvt	dev/apic.c	/^apic_get_maxlvt (struct apic_dev * apic)$/;"	f
apic_get_version	dev/apic.c	/^apic_get_version (struct apic_dev * apic)$/;"	f	file:
apic_global_enable	dev/apic.c	/^apic_global_enable (void)$/;"	f	file:
apic_init	dev/apic.c	/^apic_init (struct cpu * core)$/;"	f
apic_is_bsp	dev/apic.c	/^apic_is_bsp (struct apic_dev * apic)$/;"	f	file:
apic_read_timer	dev/apic.c	/^apic_read_timer (struct apic_dev * apic)$/;"	f
apic_self_ipi	dev/apic.c	/^apic_self_ipi (struct apic_dev * apic, uint_t vector)$/;"	f
apic_send_iipi	dev/apic.c	/^apic_send_iipi (struct apic_dev * apic, uint32_t remote_id) $/;"	f
apic_send_sipi	dev/apic.c	/^apic_send_sipi (struct apic_dev * apic, uint32_t remote_id, uint8_t target)$/;"	f
apic_set_base_addr	dev/apic.c	/^apic_set_base_addr (struct apic_dev * apic, addr_t addr)$/;"	f	file:
apic_sw_disable	dev/apic.c	/^apic_sw_disable (struct apic_dev * apic)$/;"	f	file:
apic_sw_enable	dev/apic.c	/^apic_sw_enable (struct apic_dev * apic)$/;"	f	file:
apic_timer_setup	dev/apic.c	/^apic_timer_setup (struct apic_dev * apic, uint32_t quantum)$/;"	f
apic_wait_for_send	dev/apic.c	/^apic_wait_for_send(struct apic_dev * apic)$/;"	f
append	legion_runtime/region_tree.cc	/^    void LegionStack<T,MAX_SIZE,INC_SIZE>::append(unsigned int append_count)$/;"	f	class:LegionRuntime::HighLevel::LegionStack
append_list	legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::append_list(RegionInstance::Impl *target)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
apply	legion_runtime/lowlevel.h	/^      virtual void apply(void *lhs_ptr, const void *rhs_ptr, size_t count,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
apply	test/circuit_cpu.cc	/^void AccumulateCharge::apply<false>(LHS &lhs, RHS rhs)$/;"	f	class:AccumulateCharge
apply	test/circuit_cpu.cc	/^void AccumulateCharge::apply<true>(LHS &lhs, RHS rhs) $/;"	f	class:AccumulateCharge
apply	test/hpcg/dotprod-accumulate.h	/^DotProdAccumulate::apply<false>(LHS &lhs, RHS rhs) {$/;"	f	class:lgncg::DotProdAccumulate
apply	test/hpcg/dotprod-accumulate.h	/^DotProdAccumulate::apply<true>(LHS &lhs, RHS rhs) {$/;"	f	class:lgncg::DotProdAccumulate
apply	test/saxpy_array.cc	/^  template <bool EXCL> static void apply(float& lhs, float rhs) { lhs += rhs; }$/;"	f	struct:Add
apply_list	legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::apply_list(RegionInstance::Impl *target)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
apply_list_entry	legion_runtime/lowlevel.h	/^      virtual void apply_list_entry(void *lhs_ptr, const void *entry_ptr, size_t count,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
apply_reduction_list	legion_runtime/lowlevel.cc	/^    void GASNetMemory::apply_reduction_list(off_t offset, const ReductionOpUntyped *redop,$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
apply_reduction_list	legion_runtime/lowlevel_impl.h	/^      virtual void apply_reduction_list(off_t offset, const ReductionOpUntyped *redop,$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
apply_strided	legion_runtime/lowlevel.h	/^      virtual void apply_strided(void *lhs_ptr, const void *rhs_ptr,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
arch_detect_mem_map	arch/hrt/early_mem.c	/^arch_detect_mem_map (mmap_info_t * mm_info, $/;"	f
arch_detect_mem_map	arch/k1om/early_mem.c	/^arch_detect_mem_map (mmap_info_t * mm_info, $/;"	f
arch_detect_mem_map	arch/x64/early_mem.c	/^arch_detect_mem_map (mmap_info_t * mm_info, $/;"	f
arch_early_init	arch/hrt/smp.c	/^arch_early_init (struct naut_info * naut)$/;"	f
arch_early_init	arch/k1om/smp.c	/^arch_early_init (struct naut_info * naut)$/;"	f
arch_early_init	arch/x64/smp.c	/^arch_early_init (struct naut_info * naut)$/;"	f
arch_numa_init	arch/hrt/numa.c	/^arch_numa_init (struct sys_info * sys)$/;"	f
arch_numa_init	arch/k1om/numa.c	/^arch_numa_init (struct sys_info * sys)$/;"	f
arch_numa_init	arch/x64/numa.c	/^arch_numa_init (struct sys_info * sys)$/;"	f
arch_reserve_boot_regions	arch/hrt/early_mem.c	/^arch_reserve_boot_regions (unsigned long mbd)$/;"	f
arch_reserve_boot_regions	arch/k1om/early_mem.c	/^arch_reserve_boot_regions (unsigned long mbd)$/;"	f
arch_reserve_boot_regions	arch/x64/early_mem.c	/^arch_reserve_boot_regions (unsigned long mbd)$/;"	f
are_all_children_disjoint	legion_runtime/region_tree.cc	/^    bool PartitionNode::are_all_children_disjoint(void)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
are_all_children_disjoint	legion_runtime/region_tree.cc	/^    bool RegionNode::are_all_children_disjoint(void)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
are_children_disjoint	legion_runtime/region_tree.cc	/^    bool PartitionNode::are_children_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
are_children_disjoint	legion_runtime/region_tree.cc	/^    bool RegionNode::are_children_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
are_compatible	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::are_compatible(IndexSpace left, IndexSpace right)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
are_disjoint	legion_runtime/region_tree.cc	/^    \/*static*\/ bool RegionTreeForest::are_disjoint(IndexSpaceNode *left,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
are_disjoint	legion_runtime/region_tree.cc	/^    \/*static*\/ bool RegionTreeForest::are_disjoint(const Domain &left,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
are_disjoint	legion_runtime/region_tree.cc	/^    bool IndexPartNode::are_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
are_disjoint	legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::are_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
are_disjoint	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::are_disjoint(IndexSpace parent, IndexPartition child)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
are_disjoint	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::are_disjoint(IndexSpace parent, IndexSpace child)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
arg	acpi/acpica/aclocal.h	/^	union acpi_parse_object *arg;	\/* arguments and contained ops *\/$/;"	m	union:acpi_parse_value	typeref:union:acpi_parse_value::acpi_parse_object
arg0	legion_runtime/lowlevel.cc	/^	gasnet_handlerarg_t arg0, arg1, arg2, arg3;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
arg1	legion_runtime/lowlevel.cc	/^	gasnet_handlerarg_t arg0, arg1, arg2, arg3;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
arg2	legion_runtime/lowlevel.cc	/^	gasnet_handlerarg_t arg0, arg1, arg2, arg3;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
arg3	legion_runtime/lowlevel.cc	/^	gasnet_handlerarg_t arg0, arg1, arg2, arg3;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
arg_count	acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON u32 arg_count;	\/* Number of fixed arguments *\/$/;"	m	struct:acpi_pscope_state
arg_end	acpi/acpica/aclocal.h	/^	u8 *arg_end;		\/* Current argument end *\/$/;"	m	struct:acpi_pscope_state
arg_list	acpi/acpica/aclocal.h	/^	u32 arg_list;		\/* Next argument to parse *\/$/;"	m	struct:acpi_pscope_state
arg_manager	legion_runtime/legion_tasks.h	/^      AllocManager *arg_manager;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
argc	legion_runtime/legion.h	/^      int argc;$/;"	m	struct:LegionRuntime::HighLevel::InputArgs
arglen	legion_runtime/legion.h	/^      size_t                              arglen;$/;"	m	class:LegionRuntime::HighLevel::Task
arglen	legion_runtime/legion.h	/^      size_t arglen;$/;"	m	class:LegionRuntime::HighLevel::TaskArgument
arglen	legion_runtime/lowlevel.cc	/^      size_t arglen;$/;"	m	class:LegionRuntime::LowLevel::Task	file:
arglen	legion_runtime/lowlevel.cc	/^      size_t arglen;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
arglen	legion_runtime/lowlevel_gpu.cc	/^      size_t arglen;$/;"	m	class:LegionRuntime::LowLevel::GPUTask	file:
arglen	legion_runtime/lowlevel_impl.h	/^      size_t arglen;$/;"	m	class:LegionRuntime::LowLevel::Task
arglen	legion_runtime/shared_lowlevel.cc	/^		size_t arglen;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
arglen	legion_runtime/shared_lowlevel.cc	/^      size_t arglen;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
args	acpi/acpica/aclocal.h	/^	char **args;$/;"	m	struct:acpi_db_method_info
args	legion_runtime/activemsg.cc	/^  int args[16];$/;"	m	struct:OutgoingMessage	file:
args	legion_runtime/activemsg.h	/^  ARGTYPE                      args;$/;"	m	struct:ArgsWithReplyInfo
args	legion_runtime/legion.h	/^      void                               *args;                         $/;"	m	class:LegionRuntime::HighLevel::Task
args	legion_runtime/legion.h	/^      void *args;$/;"	m	class:LegionRuntime::HighLevel::TaskArgument
args	legion_runtime/lowlevel.cc	/^      const void *args;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
args	legion_runtime/lowlevel.cc	/^      void *args;$/;"	m	class:LegionRuntime::LowLevel::Task	file:
args	legion_runtime/lowlevel_gpu.cc	/^      void *args;$/;"	m	class:LegionRuntime::LowLevel::GPUTask	file:
args	legion_runtime/lowlevel_impl.h	/^      void *args;$/;"	m	class:LegionRuntime::LowLevel::Task
args	legion_runtime/shared_lowlevel.cc	/^		void * args;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
args	legion_runtime/shared_lowlevel.cc	/^      const void *args;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
argument	legion_runtime/legion.h	/^      TaskArgument                       argument;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
argument_map	legion_runtime/legion.h	/^      ArgumentMap                        argument_map;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
argument_map	legion_runtime/legion_tasks.h	/^      ArgumentMap argument_map;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
arguments	acpi/acpica/aclocal.h	/^	char *arguments[4];$/;"	m	struct:acpi_db_method_info
arguments	legion_runtime/runtime.h	/^      std::map<DomainPoint,TaskArgument,DomainPoint::STLComparator> arguments;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap::Impl
argv	legion_runtime/legion.h	/^      char **argv;$/;"	m	struct:LegionRuntime::HighLevel::InputArgs
arith_op	lua_src/lvm.c	520;"	d	file:
arm	legion_runtime/lowlevel.cc	/^      bool arm(void)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
array_base	legion_runtime/lowlevel.h	/^      void *array_base;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
arrayindex	lua_src/ltable.c	/^static int arrayindex (const TValue *key) {$/;"	f	file:
arrivals	legion_runtime/shared_lowlevel.cc	/^        unsigned arrivals; \/\/ for use with barriers$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
arrive	legion_runtime/legion.cc	/^    void PhaseBarrier::arrive(unsigned count \/*=0*\/)$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
arrive	legion_runtime/lowlevel.cc	/^    void Barrier::arrive(unsigned count \/*= 1*\/, Event wait_on \/*= Event::NO_EVENT*\/) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
arrive	legion_runtime/shared_lowlevel.cc	/^    void Barrier::arrive(unsigned count \/*=1*\/, Event wait_on \/*= Event::NO_EVENT*\/) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
arrive	legion_runtime/utilities.h	/^      bool arrive(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityBarrier
arrive_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>           arrive_barriers;$/;"	m	class:LegionRuntime::HighLevel::Task
arrive_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>          arrive_barriers;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
arrive_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>          arrive_barriers;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
arrive_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         arrive_barriers;$/;"	m	class:LegionRuntime::HighLevel::Acquire
arrive_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         arrive_barriers;$/;"	m	class:LegionRuntime::HighLevel::Copy
arrive_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         arrive_barriers;$/;"	m	class:LegionRuntime::HighLevel::Release
arrive_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       arrive_barriers;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
arrive_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       arrive_barriers;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
arrive_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       arrive_barriers;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
as_composite_view	legion_runtime/region_tree.cc	/^    CompositeView* CompositeView::as_composite_view(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
as_composite_view	legion_runtime/region_tree.cc	/^    CompositeView* MaterializedView::as_composite_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
as_fold_manager	legion_runtime/region_tree.cc	/^    FoldReductionManager* FoldReductionManager::as_fold_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
as_fold_manager	legion_runtime/region_tree.cc	/^    FoldReductionManager* ListReductionManager::as_fold_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
as_instance_manager	legion_runtime/region_tree.cc	/^    InstanceManager* InstanceManager::as_instance_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
as_instance_manager	legion_runtime/region_tree.cc	/^    InstanceManager* ReductionManager::as_instance_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
as_instance_view	legion_runtime/region_tree.cc	/^    InstanceView* InstanceView::as_instance_view(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceView
as_instance_view	legion_runtime/region_tree.cc	/^    InstanceView* ReductionView::as_instance_view(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
as_list_manager	legion_runtime/region_tree.cc	/^    ListReductionManager* FoldReductionManager::as_list_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
as_list_manager	legion_runtime/region_tree.cc	/^    ListReductionManager* ListReductionManager::as_list_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
as_mappable_acquire	legion_runtime/legion_ops.cc	/^    Acquire* AcquireOp::as_mappable_acquire(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
as_mappable_acquire	legion_runtime/legion_ops.cc	/^    Acquire* CopyOp::as_mappable_acquire(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
as_mappable_acquire	legion_runtime/legion_ops.cc	/^    Acquire* MapOp::as_mappable_acquire(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
as_mappable_acquire	legion_runtime/legion_ops.cc	/^    Acquire* ReleaseOp::as_mappable_acquire(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
as_mappable_acquire	legion_runtime/legion_tasks.cc	/^    Acquire* TaskOp::as_mappable_acquire(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
as_mappable_copy	legion_runtime/legion_ops.cc	/^    Copy* AcquireOp::as_mappable_copy(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
as_mappable_copy	legion_runtime/legion_ops.cc	/^    Copy* CopyOp::as_mappable_copy(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
as_mappable_copy	legion_runtime/legion_ops.cc	/^    Copy* MapOp::as_mappable_copy(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
as_mappable_copy	legion_runtime/legion_ops.cc	/^    Copy* ReleaseOp::as_mappable_copy(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
as_mappable_copy	legion_runtime/legion_tasks.cc	/^    Copy* TaskOp::as_mappable_copy(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
as_mappable_inline	legion_runtime/legion_ops.cc	/^    Inline* AcquireOp::as_mappable_inline(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
as_mappable_inline	legion_runtime/legion_ops.cc	/^    Inline* CopyOp::as_mappable_inline(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
as_mappable_inline	legion_runtime/legion_ops.cc	/^    Inline* MapOp::as_mappable_inline(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
as_mappable_inline	legion_runtime/legion_ops.cc	/^    Inline* ReleaseOp::as_mappable_inline(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
as_mappable_inline	legion_runtime/legion_tasks.cc	/^    Inline* TaskOp::as_mappable_inline(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
as_mappable_release	legion_runtime/legion_ops.cc	/^    Release* AcquireOp::as_mappable_release(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
as_mappable_release	legion_runtime/legion_ops.cc	/^    Release* CopyOp::as_mappable_release(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
as_mappable_release	legion_runtime/legion_ops.cc	/^    Release* MapOp::as_mappable_release(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
as_mappable_release	legion_runtime/legion_ops.cc	/^    Release* ReleaseOp::as_mappable_release(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
as_mappable_release	legion_runtime/legion_tasks.cc	/^    Release* TaskOp::as_mappable_release(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
as_mappable_task	legion_runtime/legion_ops.cc	/^    Task* AcquireOp::as_mappable_task(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
as_mappable_task	legion_runtime/legion_ops.cc	/^    Task* CopyOp::as_mappable_task(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
as_mappable_task	legion_runtime/legion_ops.cc	/^    Task* MapOp::as_mappable_task(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
as_mappable_task	legion_runtime/legion_ops.cc	/^    Task* ReleaseOp::as_mappable_task(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
as_mappable_task	legion_runtime/legion_tasks.cc	/^    Task* TaskOp::as_mappable_task(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
as_materialized_view	legion_runtime/region_tree.cc	/^    MaterializedView* CompositeView::as_materialized_view(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
as_materialized_view	legion_runtime/region_tree.cc	/^    MaterializedView* MaterializedView::as_materialized_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
as_partition_node	legion_runtime/region_tree.cc	/^    PartitionNode* PartitionNode::as_partition_node(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
as_partition_node	legion_runtime/region_tree.cc	/^    PartitionNode* RegionNode::as_partition_node(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
as_reduction_manager	legion_runtime/region_tree.cc	/^    ReductionManager* InstanceManager::as_reduction_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
as_reduction_manager	legion_runtime/region_tree.cc	/^    ReductionManager* ReductionManager::as_reduction_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
as_reduction_view	legion_runtime/region_tree.cc	/^    ReductionView* InstanceView::as_reduction_view(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceView
as_reduction_view	legion_runtime/region_tree.cc	/^    ReductionView* ReductionView::as_reduction_view(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
as_region_node	legion_runtime/region_tree.cc	/^    RegionNode* PartitionNode::as_region_node(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
as_region_node	legion_runtime/region_tree.cc	/^    RegionNode* RegionNode::as_region_node(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
asin	nautilus/libccompat.c	/^double asin(double x)$/;"	f
asl	acpi/acpica/aclocal.h	/^	struct acpi_parse_obj_asl asl;$/;"	m	union:acpi_parse_object	typeref:struct:acpi_parse_object::acpi_parse_obj_asl
assign_bit	legion_runtime/legion_utilities.h	/^    inline void AVXBitMask<MAX>::assign_bit(unsigned bit, bool val)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
assign_bit	legion_runtime/legion_utilities.h	/^    inline void AVXTLBitMask<MAX>::assign_bit(unsigned bit, bool val)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
assign_bit	legion_runtime/legion_utilities.h	/^    inline void BitMask<T,MAX,SHIFT,MASK>::assign_bit(unsigned bit, bool val)$/;"	f	class:LegionRuntime::HighLevel::BitMask
assign_bit	legion_runtime/legion_utilities.h	/^    inline void SSEBitMask<MAX>::assign_bit(unsigned bit, bool val)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
assign_bit	legion_runtime/legion_utilities.h	/^    inline void SSETLBitMask<MAX>::assign_bit(unsigned bit, bool val)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
assign_bit	legion_runtime/legion_utilities.h	/^    inline void TLBitMask<T,MAX,SHIFT,MASK>::assign_bit(unsigned b, bool v)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
assign_context	legion_runtime/legion_tasks.cc	/^    void SingleTask::assign_context(RegionTreeContext ctx)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
assign_core_coords	nautilus/numa.c	/^assign_core_coords (struct cpu * me, struct nk_cpu_coords * coord, struct nk_topo_params *tp)$/;"	f	file:
assign_perf_event	nautilus/pmc.c	/^assign_perf_event (uint8_t event_id, uint8_t unit_mask)$/;"	f
assign_srcdata_pointer	legion_runtime/activemsg.cc	/^void OutgoingMessage::assign_srcdata_pointer(void *ptr)$/;"	f	class:OutgoingMessage
assignment	lua_src/lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
associate_domains	nautilus/numa.c	/^associate_domains (struct nk_locality_info * loc)$/;"	f	file:
atan	nautilus/libccompat.c	/^double atan(double __x){$/;"	f
atan2	nautilus/libccompat.c	/^double atan2(double y, double x){$/;"	f
atoi	nautilus/naut_string.c	/^atoi (const char * buf) $/;"	f
atomic	lua_src/lgc.c	/^static l_mem atomic (lua_State *L) {$/;"	f	file:
atox	nautilus/naut_string.c	/^atox (const char * buf) {$/;"	f
attribute	acpi/acpica/aclocal.h	/^	u8 attribute;$/;"	m	struct:acpi_create_field_info
aux_close	lua_src/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_getn	lua_src/ltablib.c	20;"	d	file:
aux_lines	lua_src/liolib.c	/^static void aux_lines (lua_State *L, int toclose) {$/;"	f	file:
aux_upvalue	lua_src/lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val,$/;"	f	file:
auxgetinfo	lua_src/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxresume	lua_src/lcorolib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsort	lua_src/ltablib.c	/^static void auxsort (lua_State *L, int l, int u) {$/;"	f	file:
auxupvalue	lua_src/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
avail_mask	legion_runtime/lowlevel_impl.h	/^      ElementMask *avail_mask;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
avail_mask_owner	legion_runtime/lowlevel_impl.h	/^	int avail_mask_owner;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::CoherentData
avail_threads	legion_runtime/lowlevel.cc	/^      std::list<Thread *> avail_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
available	arch/hrt/mwait.c	/^    uint8_t available;$/;"	m	struct:mwait_info	file:
available	arch/x64/mwait.c	/^    uint8_t available;$/;"	m	struct:mwait_info	file:
available_acquire_ops	legion_runtime/runtime.h	/^      std::deque<AcquireOp*>       available_acquire_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_and_pred_ops	legion_runtime/runtime.h	/^      std::deque<AndPredOp*>       available_and_pred_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_capture_ops	legion_runtime/runtime.h	/^      std::deque<TraceCaptureOp*>  available_capture_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_close_ops	legion_runtime/runtime.h	/^      std::deque<CloseOp*>         available_close_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_contexts	legion_runtime/runtime.h	/^      std::deque<RegionTreeContext> available_contexts;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_copy_ops	legion_runtime/runtime.h	/^      std::deque<CopyOp*>          available_copy_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_deletion_ops	legion_runtime/runtime.h	/^      std::deque<DeletionOp*>      available_deletion_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_distributed_ids	legion_runtime/runtime.h	/^                                              available_distributed_ids;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_epoch_ops	legion_runtime/runtime.h	/^      std::deque<MustEpochOp*>     available_epoch_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_fence_ops	legion_runtime/runtime.h	/^      std::deque<FenceOp*>         available_fence_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_future_pred_ops	legion_runtime/runtime.h	/^      std::deque<FuturePredOp*>    available_future_pred_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_index_tasks	legion_runtime/runtime.h	/^      std::deque<IndexTask*>       available_index_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_individual_tasks	legion_runtime/runtime.h	/^      std::deque<IndividualTask*>  available_individual_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_inline_tasks	legion_runtime/runtime.h	/^      std::deque<InlineTask*>      available_inline_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_instances	legion_runtime/runtime.h	/^                      MEMORY_AVAILABLE_ALLOC>::set available_instances;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
available_lock	legion_runtime/runtime.h	/^      Reservation available_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_map_ops	legion_runtime/runtime.h	/^      std::deque<MapOp*>           available_map_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_not_pred_ops	legion_runtime/runtime.h	/^      std::deque<NotPredOp*>       available_not_pred_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_or_pred_ops	legion_runtime/runtime.h	/^      std::deque<OrPredOp*>        available_or_pred_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_point_tasks	legion_runtime/runtime.h	/^      std::deque<PointTask*>       available_point_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_release_ops	legion_runtime/runtime.h	/^      std::deque<ReleaseOp*>       available_release_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_remote_tasks	legion_runtime/runtime.h	/^      std::deque<RemoteTask*>      available_remote_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_slice_tasks	legion_runtime/runtime.h	/^      std::deque<SliceTask*>       available_slice_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_trace_ops	legion_runtime/runtime.h	/^      std::deque<TraceCompleteOp*> available_trace_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
avg_nsec	nautilus/instrument.c	/^    uint64_t avg_nsec;$/;"	m	struct:func_data	file:
avx_double	legion_runtime/legion_utilities.h	/^        __m256d *avx_double;$/;"	m	union:LegionRuntime::HighLevel::AVXBitMask::__anon16
avx_double	legion_runtime/legion_utilities.h	/^        __m256d *avx_double;$/;"	m	union:LegionRuntime::HighLevel::AVXTLBitMask::__anon17
avx_vector	legion_runtime/legion_utilities.h	/^        __m256i *avx_vector;$/;"	m	union:LegionRuntime::HighLevel::AVXBitMask::__anon16
avx_vector	legion_runtime/legion_utilities.h	/^        __m256i *avx_vector;$/;"	m	union:LegionRuntime::HighLevel::AVXTLBitMask::__anon17
b	legion_runtime/rectangle_set.h	/^      T a1, a2, b;$/;"	m	class:LegionRuntime::HighLevel::Segment
b	lua_src/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b	lua_src/lundump.c	/^ Mbuffer* b;$/;"	m	struct:__anon49	file:
b	test/benchmark.c	/^	BARRIER_T * b;$/;"	m	struct:switch_cont	file:
b	test/hpcg/hpcg-problem-generator.h	/^    double *b;$/;"	m	struct:ProblemGenerator
b	test/hpcg/hpcg-problem.h	/^    lgncg::Vector b;$/;"	m	struct:Problem
b	test/hpcg/sparsemat.h	/^    int64_t b;$/;"	m	struct:lgncg::I64Tuple
b_and	lua_src/lbitlib.c	/^static int b_and (lua_State *L) {$/;"	f	file:
b_arshift	lua_src/lbitlib.c	/^static int b_arshift (lua_State *L) {$/;"	f	file:
b_extract	lua_src/lbitlib.c	/^static int b_extract (lua_State *L) {$/;"	f	file:
b_lrot	lua_src/lbitlib.c	/^static int b_lrot (lua_State *L) {$/;"	f	file:
b_lshift	lua_src/lbitlib.c	/^static int b_lshift (lua_State *L) {$/;"	f	file:
b_not	lua_src/lbitlib.c	/^static int b_not (lua_State *L) {$/;"	f	file:
b_or	lua_src/lbitlib.c	/^static int b_or (lua_State *L) {$/;"	f	file:
b_replace	lua_src/lbitlib.c	/^static int b_replace (lua_State *L) {$/;"	f	file:
b_rot	lua_src/lbitlib.c	/^static int b_rot (lua_State *L, int i) {$/;"	f	file:
b_rrot	lua_src/lbitlib.c	/^static int b_rrot (lua_State *L) {$/;"	f	file:
b_rshift	lua_src/lbitlib.c	/^static int b_rshift (lua_State *L) {$/;"	f	file:
b_shift	lua_src/lbitlib.c	/^static int b_shift (lua_State *L, b_uint r, int i) {$/;"	f	file:
b_test	lua_src/lbitlib.c	/^static int b_test (lua_State *L) {$/;"	f	file:
b_uint	lua_src/lbitlib.c	/^typedef lua_Unsigned b_uint;$/;"	t	file:
b_xor	lua_src/lbitlib.c	/^static int b_xor (lua_State *L) {$/;"	f	file:
background_kthread	legion_runtime/lowlevel.h	/^      void *background_kthread;$/;"	m	class:LegionRuntime::LowLevel::Machine
background_run_thread	legion_runtime/lowlevel.cc	/^    static void *background_run_thread(void *data)$/;"	f	namespace:LegionRuntime::LowLevel
background_run_thread	legion_runtime/shared_lowlevel.cc	/^    static void *background_run_thread(void *data)$/;"	f	namespace:LegionRuntime::LowLevel
bad	asm/thread_lowlevel.S	/^bad:$/;"	l
bandwidth	legion_runtime/legion_logging.h	/^        size_t bandwidth;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemMemAffinity
bandwidth	legion_runtime/legion_logging.h	/^        size_t bandwidth;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcMemAffinity
bandwidth	legion_runtime/lowlevel.h	/^	unsigned bandwidth; \/\/ TODO: consider splitting read vs. write?$/;"	m	struct:LegionRuntime::LowLevel::Machine::ProcessorMemoryAffinity
bandwidth	legion_runtime/lowlevel.h	/^	unsigned bandwidth;$/;"	m	struct:LegionRuntime::LowLevel::Machine::MemoryMemoryAffinity
bank_value	acpi/acpica/aclocal.h	/^	u32 bank_value;$/;"	m	struct:acpi_create_field_info
barrier	legion_runtime/lowlevel.cc	/^      Barrier barrier;$/;"	m	class:LegionRuntime::LowLevel::DeferredBarrierArrival	file:
barrier	test/benchmark.c	/^	BARRIER_T * barrier;$/;"	m	struct:container	file:
barrier_adjustment_timestamp	legion_runtime/lowlevel.cc	/^    static Barrier::timestamp_t barrier_adjustment_timestamp;$/;"	m	namespace:LegionRuntime::LowLevel	file:
barrier_func1	nautilus/barrier.c	/^barrier_func1 (void * in, void ** out)$/;"	f	file:
barrier_func2	nautilus/barrier.c	/^barrier_func2 (void * in, void ** out)$/;"	f	file:
barrier_xcall_handler	nautilus/barrier.c	/^barrier_xcall_handler (void * arg) $/;"	f	file:
base	legion_runtime/accessor.h	/^	  char *base;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
base	legion_runtime/accessor.h	/^	  char *base;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
base	legion_runtime/accessor.h	/^	  char *base;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
base	legion_runtime/accessor.h	/^	  char *base;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
base	legion_runtime/accessor.h	/^	  char *base;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
base	legion_runtime/legion_utilities.h	/^    inline const uint64_t* AVXBitMask<MAX>::base(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
base	legion_runtime/legion_utilities.h	/^    inline const uint64_t* AVXTLBitMask<MAX>::base(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
base	legion_runtime/legion_utilities.h	/^    inline const uint64_t* SSEBitMask<MAX>::base(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
base	legion_runtime/legion_utilities.h	/^    inline const uint64_t* SSETLBitMask<MAX>::base(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
base	legion_runtime/lowlevel.cc	/^      char *base, *base_orig;$/;"	m	class:LegionRuntime::LowLevel::LocalCPUMemory	file:
base	legion_runtime/lowlevel_gpu.h	/^      char *base;$/;"	m	class:LegionRuntime::LowLevel::GPUFBMemory
base	nautilus/printk.c	/^	int			base;$/;"	m	struct:printf_spec	file:
base_arrival_count	legion_runtime/lowlevel_impl.h	/^      unsigned base_arrival_count, current_arrival_count;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
base_cpu_wrapper	test/circuit.h	/^  void base_cpu_wrapper(const Task *task,$/;"	f	namespace:TaskHelper
base_funcs	lua_src/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
base_gpe_number	acpi/acpica/aclocal.h	/^	u8 base_gpe_number;	\/* Base GPE number for this register *\/$/;"	m	struct:acpi_gpe_register_info
base_gpu_wrapper	test/circuit.h	/^  void base_gpu_wrapper(const Task *task,$/;"	f	namespace:TaskHelper
base_orig	legion_runtime/lowlevel.cc	/^      char *base, *base_orig;$/;"	m	class:LegionRuntime::LowLevel::LocalCPUMemory	file:
base_ptr	legion_runtime/activemsg.cc	/^    void *base_ptr;$/;"	m	struct:ActiveMessageEndpoint::ChunkInfo	file:
base_ptr	legion_runtime/shared_lowlevel.cc	/^	char *base_ptr;	$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
before_copy	legion_runtime/lowlevel_dma.cc	/^      Event before_copy;$/;"	m	class:LegionRuntime::LowLevel::CopyRequest	file:
before_copy	legion_runtime/lowlevel_dma.cc	/^      Event before_copy;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
before_copy	legion_runtime/lowlevel_dma.h	/^      Event before_copy, after_copy;$/;"	m	struct:LegionRuntime::LowLevel::RemoteCopyArgs
begin_context	legion_runtime/legion_utilities.h	/^    inline void Deserializer::begin_context(void)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
begin_context	legion_runtime/legion_utilities.h	/^    inline void Serializer::begin_context(void)$/;"	f	class:LegionRuntime::HighLevel::Serializer
begin_dependence_analysis	legion_runtime/legion_ops.cc	/^    void Operation::begin_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
begin_node	legion_runtime/region_tree.cc	/^    void LogicalCloser::begin_node(FieldTree<LogicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalCloser
begin_node	legion_runtime/region_tree.cc	/^    void LogicalFilter::begin_node(FieldTree<LogicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalFilter
begin_node	legion_runtime/region_tree.cc	/^    void PhysicalDepAnalyzer<FILTER>::begin_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
begin_node	legion_runtime/region_tree.cc	/^    void PhysicalFilter::begin_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalFilter
begin_node	legion_runtime/region_tree.cc	/^    void PhysicalUnpacker::begin_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalUnpacker
begin_node	legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
begin_node	legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalFieldInvalidator
begin_node	legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalOpAnalyzer
begin_node	legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
begin_node	legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::PhysicalEventFilter
begin_node	legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::WARAnalyzer
begin_perf_trace	legion_runtime/region_tree.cc	/^    void RegionTreeForest::begin_perf_trace(int kind)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
begin_premapping	legion_runtime/legion_tasks.cc	/^    UserEvent SingleTask::begin_premapping(RegionTreeID tid, $/;"	f	class:LegionRuntime::HighLevel::SingleTask
begin_task	legion_runtime/legion.cc	/^    const std::vector<PhysicalRegion>& HighLevelRuntime::begin_task(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
begin_task	legion_runtime/legion_tasks.cc	/^    const std::vector<PhysicalRegion>& SingleTask::begin_task(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
begin_task	legion_runtime/runtime.cc	/^    const std::vector<PhysicalRegion>& Runtime::begin_task(SingleTask *ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
begin_trace	legion_runtime/legion.cc	/^    void HighLevelRuntime::begin_trace(Context ctx, TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
begin_trace	legion_runtime/legion_tasks.cc	/^    void SingleTask::begin_trace(TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
begin_trace	legion_runtime/runtime.cc	/^    void Runtime::begin_trace(Context ctx, TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
best_processor_kind	legion_runtime/mapping_utilities.cc	/^      Processor::Kind MappingProfiler::best_processor_kind($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
beta	test/hpcg/comp-waxpby.h	/^    double beta;$/;"	m	struct:__anon36::waxpbyTaskArgs
bind_thread	legion_runtime/lowlevel.cc	/^    void ProcessorAssignment::bind_thread(int core_id, pthread_attr_t *attr, const char *debug_name \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::ProcessorAssignment
bindtextdomain	nautilus/libccompat.c	/^char *bindtextdomain (const char * domainname, const char * dirname)$/;"	f
bit_mask_logging	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::bit_mask_logging = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
bit_mask_logging	legion_runtime/runtime.h	/^      static bool bit_mask_logging;$/;"	m	class:LegionRuntime::HighLevel::Runtime
bit_position	acpi/acpica/aclocal.h	/^	u8 bit_position;$/;"	m	struct:acpi_bit_register_info
bit_vector	legion_runtime/legion_utilities.h	/^        uint64_t *bit_vector;$/;"	m	union:LegionRuntime::HighLevel::AVXBitMask::__anon16
bit_vector	legion_runtime/legion_utilities.h	/^        uint64_t *bit_vector;$/;"	m	union:LegionRuntime::HighLevel::AVXTLBitMask::__anon17
bit_vector	legion_runtime/legion_utilities.h	/^        uint64_t bit_vector[MAX\/64];$/;"	m	union:LegionRuntime::HighLevel::SSEBitMask::__anon14
bit_vector	legion_runtime/legion_utilities.h	/^        uint64_t bit_vector[MAX\/64];$/;"	m	union:LegionRuntime::HighLevel::SSETLBitMask::__anon15
bit_vector	legion_runtime/legion_utilities.h	/^      T bit_vector[MAX\/(8*sizeof(T))];$/;"	m	class:LegionRuntime::HighLevel::BitMask
bit_vector	legion_runtime/legion_utilities.h	/^      T bit_vector[MAX\/(8*sizeof(T))];$/;"	m	class:LegionRuntime::HighLevel::TLBitMask
bitlib	lua_src/lbitlib.c	/^static const luaL_Reg bitlib[] = {$/;"	v	file:
bits	legion_runtime/legion_utilities.h	/^      } bits;$/;"	m	class:LegionRuntime::HighLevel::AVXBitMask	typeref:union:LegionRuntime::HighLevel::AVXBitMask::__anon16
bits	legion_runtime/legion_utilities.h	/^      } bits;$/;"	m	class:LegionRuntime::HighLevel::AVXTLBitMask	typeref:union:LegionRuntime::HighLevel::AVXTLBitMask::__anon17
bits	legion_runtime/legion_utilities.h	/^      } bits;$/;"	m	class:LegionRuntime::HighLevel::SSEBitMask	typeref:union:LegionRuntime::HighLevel::SSEBitMask::__anon14
bits	legion_runtime/legion_utilities.h	/^      } bits;$/;"	m	class:LegionRuntime::HighLevel::SSETLBitMask	typeref:union:LegionRuntime::HighLevel::SSETLBitMask::__anon15
bits	legion_runtime/lowlevel_impl.h	/^      uint64_t bits[0];$/;"	m	struct:LegionRuntime::LowLevel::ElementMaskImpl
bits	legion_runtime/shared_lowlevel.cc	/^      unsigned bits[0];$/;"	m	struct:LegionRuntime::LowLevel::ElementMaskImpl	file:
black2gray	lua_src/lgc.c	63;"	d	file:
blk_cksum_ok	arch/k1om/early_mem.c	/^blk_cksum_ok (const uint8_t * cursor, unsigned len)$/;"	f	file:
blk_cksum_ok	arch/x64/smp.c	/^blk_cksum_ok (uint8_t * mp, unsigned len)$/;"	f	file:
blk_cksum_ok	nautilus/sfi.c	/^blk_cksum_ok (const uint8_t * cursor, unsigned len)$/;"	f	file:
blkify	test/saxpy_array.cc	/^  Blockify<1> blkify;$/;"	m	struct:MainArgs	file:
block	lua_src/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
block	nautilus/mm/buddy.c	/^struct block {$/;"	s	file:
block_address	acpi/acpica/aclocal.h	/^	struct acpi_generic_address block_address;	\/* Base address of the block *\/$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_generic_address
block_base_number	acpi/acpica/aclocal.h	/^	u8 block_base_number;	\/* Base GPE number for this block *\/$/;"	m	struct:acpi_gpe_block_info
block_buffer	legion_runtime/legion_spy.h	/^      char block_buffer[128];$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
block_follow	lua_src/lparser.c	/^static int block_follow (LexState *ls, int withuntil) {$/;"	f	file:
block_hash_alloc	nautilus/mm/kmem.c	/^static inline struct kmem_block_hdr * block_hash_alloc(void *ptr)$/;"	f	file:
block_hash_entries	nautilus/mm/kmem.c	/^static struct kmem_block_hdr *block_hash_entries=0;$/;"	v	typeref:struct:kmem_block_hdr	file:
block_hash_find_entry	nautilus/mm/kmem.c	/^static inline struct kmem_block_hdr * block_hash_find_entry(const void *ptr)$/;"	f	file:
block_hash_free	nautilus/mm/kmem.c	/^static inline int block_hash_free(void *ptr)$/;"	f	file:
block_hash_free_entry	nautilus/mm/kmem.c	/^static inline void block_hash_free_entry(struct kmem_block_hdr *b)$/;"	f	file:
block_hash_hash	nautilus/mm/kmem.c	/^static inline uint64_t block_hash_hash(const void *ptr)$/;"	f	file:
block_hash_init	nautilus/mm/kmem.c	/^static int block_hash_init(uint64_t bytes)$/;"	f	file:
block_hash_num_entries	nautilus/mm/kmem.c	/^static uint64_t               block_hash_num_entries=0;$/;"	v	file:
block_id	legion_runtime/lowlevel.cc	/^      unsigned block_id;$/;"	m	struct:LegionRuntime::LowLevel::ValidMaskDataArgs	file:
block_size	legion_runtime/arrays.h	/^      Point<DIM> block_size;$/;"	m	class:LegionRuntime::Arrays::Blockify
block_size	legion_runtime/lowlevel.cc	/^      size_t block_size;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
block_size	legion_runtime/lowlevel_impl.h	/^	size_t block_size, elmt_size;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
block_size	legion_runtime/shared_lowlevel.cc	/^        size_t block_size;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
block_to_id	nautilus/mm/buddy.c	/^block_to_id (struct buddy_mempool *mp, struct block *block)$/;"	f	file:
blocking_factor	legion_runtime/legion.h	/^      size_t blocking_factor;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
blocking_factor	legion_runtime/legion_profiling.h	/^        size_t blocking_factor;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
blocking_factor	legion_runtime/region_tree.h	/^      const size_t blocking_factor;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
body	lua_src/lparser.c	/^static void body (LexState *ls, expdesc *e, int ismethod, int line) {$/;"	f	file:
boolK	lua_src/lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	file:
boot_mm_inactive	nautilus/mm/boot_mm.c	/^uint8_t boot_mm_inactive = 0;$/;"	v
bootmem	nautilus/mm/boot_mm.c	/^static boot_mem_info_t bootmem;$/;"	v	file:
boundary	legion_runtime/rectangle_set.h	/^    \/*static*\/ bool RectangleSet<T,DISCRETE>::boundary($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
boundary_edges	legion_runtime/rectangle_set.h	/^    \/*static*\/ void RectangleSet<T,DISCRETE>::boundary_edges($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
bounds	legion_runtime/runtime.h	/^      Domain bounds;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
bounds	test/hpcg/vector.h	/^    LegionRuntime::Arrays::Rect<1> bounds;$/;"	m	struct:lgncg::Vector
bounds_check	legion_runtime/lowlevel.h	/^      void bounds_check(ptr_t ptr) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
breadth_first_traversal	legion_runtime/default_mapper.h	/^      bool breadth_first_traversal;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
breaklabel	lua_src/lparser.c	/^static void breaklabel (LexState *ls) {$/;"	f	file:
broadcast_result	legion_runtime/runtime.cc	/^    void Future::Impl::broadcast_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
bset	test/benchmark.h	/^bset (unsigned int nr, unsigned long * addr)$/;"	f
bset	test/ipi.c	/^bset(unsigned int nr, unsigned long * addr)$/;"	f	file:
bspin_lock	nautilus/barrier.c	/^bspin_lock (volatile int * lock)$/;"	f	file:
bspin_unlock	nautilus/barrier.c	/^bspin_unlock (volatile int * lock)$/;"	f	file:
buddy_alloc	nautilus/mm/buddy.c	/^buddy_alloc (struct buddy_mempool *mp, ulong_t order)$/;"	f
buddy_dump_mempool	nautilus/mm/buddy.c	/^buddy_dump_mempool(struct buddy_mempool *mp)$/;"	f
buddy_free	nautilus/mm/buddy.c	/^buddy_free($/;"	f
buddy_init	nautilus/mm/buddy.c	/^buddy_init (ulong_t base_addr,$/;"	f
buf	nautilus/printk.c	/^	char buf[PRINTK_BUFMAX];$/;"	m	struct:printk_state	file:
buf_lock	nautilus/vc.c	/^  spinlock_t       buf_lock;$/;"	m	struct:nk_virtual_console	file:
buff	lua_src/lauxlib.c	/^  char buff[LUAL_BUFFERSIZE];  \/* area for reading file *\/$/;"	m	struct:LoadF	file:
buff	lua_src/ldo.c	/^  Mbuffer buff;  \/* dynamic structure used by the scanner *\/$/;"	m	struct:SParser	file:
buff	lua_src/lstate.c	/^  char buff[LUAI_EXTRASPACE];$/;"	m	struct:LX	file:
buff2d	lua_src/llex.c	212;"	d	file:
buffer	acpi/acpica/aclocal.h	/^	u8 *buffer;		\/* buffer or string *\/$/;"	m	union:acpi_parse_value
buffer	legion_runtime/legion_utilities.h	/^      char *buffer;$/;"	m	class:LegionRuntime::HighLevel::Serializer
buffer	legion_runtime/legion_utilities.h	/^      const char *buffer;$/;"	m	class:LegionRuntime::HighLevel::Deserializer
buffer	legion_runtime/lowlevel.cc	/^      AMQueueEntry *buffer;$/;"	m	class:LegionRuntime::LowLevel::AMQueue	file:
buffer	legion_runtime/lowlevel_dma.cc	/^      char *buffer;$/;"	m	class:LegionRuntime::LowLevel::BufferedMemPairCopier	file:
buffer	legion_runtime/shared_lowlevel.cc	/^	char *buffer;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter	file:
buffer_messages	legion_runtime/runtime.cc	/^    void MessageManager::buffer_messages(unsigned num_messages,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
buffer_size	legion_runtime/lowlevel_dma.cc	/^      size_t buffer_size;$/;"	m	class:LegionRuntime::LowLevel::BufferedMemPairCopier	file:
buffer_size	legion_runtime/lowlevel_dma.cc	/^      size_t buffer_size;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
buffer_size	legion_runtime/region_tree.h	/^      size_t buffer_size;$/;"	m	class:LegionRuntime::HighLevel::LegionStack
buffonstack	lua_src/lauxlib.c	437;"	d	file:
buffreplace	lua_src/llex.c	/^static void buffreplace (LexState *ls, char from, char to) {$/;"	f	file:
bytes	legion_runtime/lowlevel_gpu.cc	/^      size_t bytes, lines;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
bytes_needed	legion_runtime/lowlevel.cc	/^      size_t bytes_needed;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
bytes_needed	legion_runtime/lowlevel_impl.h	/^      static size_t bytes_needed(off_t offset, off_t count)$/;"	f	struct:LegionRuntime::LowLevel::ElementMaskImpl
bytes_needed	legion_runtime/shared_lowlevel.cc	/^      static size_t bytes_needed(int offset, int count)$/;"	f	struct:LegionRuntime::LowLevel::ElementMaskImpl
c0_substates	arch/hrt/mwait.c	/^    uint8_t c0_substates;$/;"	m	struct:mwait_info	file:
c0_substates	arch/x64/mwait.c	/^    uint8_t c0_substates;$/;"	m	struct:mwait_info	file:
c1_substates	arch/hrt/mwait.c	/^    uint8_t c1_substates;$/;"	m	struct:mwait_info	file:
c1_substates	arch/x64/mwait.c	/^    uint8_t c1_substates;$/;"	m	struct:mwait_info	file:
c2_substates	arch/hrt/mwait.c	/^    uint8_t c2_substates;$/;"	m	struct:mwait_info	file:
c2_substates	arch/x64/mwait.c	/^    uint8_t c2_substates;$/;"	m	struct:mwait_info	file:
c3_substates	arch/hrt/mwait.c	/^    uint8_t c3_substates;$/;"	m	struct:mwait_info	file:
c3_substates	arch/x64/mwait.c	/^    uint8_t c3_substates;$/;"	m	struct:mwait_info	file:
c4_substates	arch/hrt/mwait.c	/^    uint8_t c4_substates;$/;"	m	struct:mwait_info	file:
c4_substates	arch/x64/mwait.c	/^    uint8_t c4_substates;$/;"	m	struct:mwait_info	file:
cGeom	test/hpcg/hpcg-problem.cc	/^    lgncg::Geometry cGeom;$/;"	m	struct:__anon33::PF2CTaskArgs	file:
calc_mem_loc	legion_runtime/lowlevel_dma.cc	/^    static inline off_t calc_mem_loc(off_t alloc_offset, off_t field_start, int field_size, int elmt_size,$/;"	f	namespace:LegionRuntime::LowLevel
callTM	lua_src/lvm.c	/^static void callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f	file:
call_binTM	lua_src/lvm.c	/^static int call_binTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
call_count	nautilus/instrument.c	/^    uint64_t call_count;$/;"	m	struct:func_data	file:
call_orderTM	lua_src/lvm.c	/^static int call_orderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
callallpendingfinalizers	lua_src/lgc.c	/^static void callallpendingfinalizers (lua_State *L, int propagateerrors) {$/;"	f	file:
callhook	lua_src/ldo.c	/^static void callhook (lua_State *L, CallInfo *ci) {$/;"	f	file:
can_access_peer	legion_runtime/lowlevel_gpu.cc	/^    bool GPUProcessor::can_access_peer(GPUProcessor *peer) const$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
can_convert	legion_runtime/accessor.h	/^	  bool can_convert(void) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_convert	legion_runtime/lowlevel.cc	/^    bool RegionAccessor<AccessorGeneric>::can_convert<AccessorArrayReductionFold>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
can_convert	legion_runtime/lowlevel.cc	/^    bool RegionAccessor<AccessorGeneric>::can_convert<AccessorReductionList>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
can_convert	legion_runtime/lowlevel.h	/^      bool can_convert(void) const { return ria.can_convert<AT2>(); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
can_convert	legion_runtime/lowlevel_gpu.cc	/^    bool RegionAccessor<AccessorGeneric>::can_convert<AccessorGPUReductionFold>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
can_convert_helper	legion_runtime/accessor.h	/^	  bool can_convert_helper(AOS<STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_convert_helper	legion_runtime/accessor.h	/^	  bool can_convert_helper(HybridSOA<STRIDE, BLOCK_SIZE, BLOCK_STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_convert_helper	legion_runtime/accessor.h	/^	  bool can_convert_helper(ReductionFold<REDOP> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_convert_helper	legion_runtime/accessor.h	/^	  bool can_convert_helper(ReductionList<REDOP> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_convert_helper	legion_runtime/accessor.h	/^	  bool can_convert_helper(SOA<STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_delete	legion_runtime/garbage_collection.cc	/^    bool CollectableState::can_delete(bool has_gc_refs,$/;"	f	class:LegionRuntime::HighLevel::CollectableState
can_early_complete	legion_runtime/legion_tasks.cc	/^    bool IndividualTask::can_early_complete(UserEvent &chain_event)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
can_early_complete	legion_runtime/legion_tasks.cc	/^    bool PointTask::can_early_complete(UserEvent &chain_event)$/;"	f	class:LegionRuntime::HighLevel::PointTask
can_early_complete	legion_runtime/legion_tasks.cc	/^    bool WrapperTask::can_early_complete(UserEvent &chain_event)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
capacity	legion_runtime/legion_logging.h	/^        size_t capacity;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemory
capacity	legion_runtime/runtime.h	/^      const size_t capacity;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
capture	lua_src/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon48	file:
capture_op_lock	legion_runtime/runtime.h	/^      Reservation capture_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
capture_physical_state	legion_runtime/region_tree.cc	/^    void CompositeNode::capture_physical_state(RegionTreeNode *tree_node,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
capture_state	legion_runtime/legion_logging.cc	/^    \/*static*\/ void TreeStateLogger::capture_state(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
capture_state	legion_runtime/legion_logging.cc	/^    \/*static*\/ void TreeStateLogger::capture_state(Runtime *rt, unsigned idx, $/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
capture_state	legion_runtime/legion_logging.cc	/^    void TreeStateLogger::capture_state(Runtime *rt, LogicalRegion handle, $/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
capture_state	legion_runtime/legion_spy.cc	/^    \/*static*\/ void TreeStateLogger::capture_state(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
capture_to_close	lua_src/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
catch_hang	legion_runtime/runtime.cc	/^    static void catch_hang(int signal)$/;"	f	namespace:LegionRuntime::HighLevel
ceil	nautilus/libccompat.c	/^double ceil(double x)$/;"	f
cg	test/hpcg/cg.h	/^namespace cg {$/;"	n	namespace:lgncg
cgSolv	test/hpcg/lgncg.cc	/^cgSolv(SparseMatrix &A,$/;"	f	namespace:lgncg
channel_id	legion_runtime/legion_logging.h	/^        unsigned channel_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyAssoc
check	lua_src/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
checkCGTask	test/hpcg/hpcg-main.cc	/^checkCGTask(const lrthl::Task *task,$/;"	f	namespace:__anon37
checkGC	lua_src/lvm.c	513;"	d	file:
checkSizes	lua_src/lgc.c	/^static void checkSizes (lua_State *L) {$/;"	f	file:
check_acquire_privilege	legion_runtime/legion_ops.cc	/^    void AcquireOp::check_acquire_privilege(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
check_apic_avail	dev/apic.c	/^check_apic_avail (void)$/;"	f	file:
check_bounds	legion_runtime/runtime.cc	/^      void check_bounds(void *impl, const LowLevel::DomainPoint &dp)$/;"	f	namespace:LegionRuntime::Accessor::AccessorType
check_bounds	legion_runtime/runtime.cc	/^      void check_bounds(void *impl, ptr_t ptr)$/;"	f	namespace:LegionRuntime::Accessor::AccessorType
check_bounds	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::check_bounds(void *impl, const DomainPoint &dp)$/;"	f	class:LegionRuntime::HighLevel::Runtime
check_bounds	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::check_bounds(void *impl, ptr_t ptr)$/;"	f	class:LegionRuntime::HighLevel::Runtime
check_capture	lua_src/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_condition	lua_src/lparser.c	125;"	d	file:
check_conflict	lua_src/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_context_state	legion_runtime/region_tree.cc	/^    void RegionTreeForest::check_context_state(RegionTreeContext ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
check_copy_privilege	legion_runtime/legion_ops.cc	/^    void CopyOp::check_copy_privilege(const RegionRequirement &requirement, $/;"	f	class:LegionRuntime::HighLevel::CopyOp
check_dependence_type	legion_runtime/legion_utilities.h	/^    static inline DependenceType check_dependence_type(const RegionUsage &u1,$/;"	f	namespace:LegionRuntime::HighLevel
check_empty_field_requirements	legion_runtime/legion_tasks.cc	/^    void TaskOp::check_empty_field_requirements(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
check_field_space	legion_runtime/legion_tasks.cc	/^    void SingleTask::check_field_space(FieldSpace handle, const char *caller)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_for_anti_dependence	legion_runtime/legion_utilities.h	/^    static inline DependenceType check_for_anti_dependence($/;"	f	namespace:LegionRuntime::HighLevel
check_for_complete_copies	legion_runtime/lowlevel_gpu.cc	/^      void check_for_complete_copies(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
check_for_promotion	legion_runtime/legion_utilities.h	/^    static inline DependenceType check_for_promotion(const RegionUsage &u1, $/;"	f	namespace:LegionRuntime::HighLevel
check_future_size	legion_runtime/legion_tasks.cc	/^    size_t TaskOp::check_future_size(Future::Impl *impl)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
check_index_subpartition	legion_runtime/legion_tasks.cc	/^    void SingleTask::check_index_subpartition(IndexPartition handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_index_subspace	legion_runtime/legion_tasks.cc	/^    void SingleTask::check_index_subspace(IndexSpace handle, const char *caller)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_logical_subpartition	legion_runtime/legion_tasks.cc	/^    void SingleTask::check_logical_subpartition(LogicalPartition handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_logical_subregion	legion_runtime/legion_tasks.cc	/^    void SingleTask::check_logical_subregion(LogicalRegion handle, $/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_match	lua_src/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_next	lua_src/llex.c	/^static int check_next (LexState *ls, const char *set) {$/;"	f	file:
check_privilege	legion_runtime/legion_ops.cc	/^    void MapOp::check_privilege(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
check_privilege	legion_runtime/legion_tasks.cc	/^    LegionErrorType SingleTask::check_privilege($/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_privilege	legion_runtime/legion_tasks.cc	/^    LegionErrorType SingleTask::check_privilege(const RegionRequirement &req,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_privileges	legion_runtime/accessor.h	/^      static inline void check_privileges(AccessorPrivilege held, void *region)$/;"	f	namespace:LegionRuntime::Accessor::AccessorType
check_privileges	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::check_privileges = true;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
check_privileges	legion_runtime/runtime.h	/^      static bool check_privileges;$/;"	m	class:LegionRuntime::HighLevel::Runtime
check_readiness	legion_runtime/lowlevel_dma.cc	/^    bool CopyRequest::check_readiness(bool just_check, DmaRequestQueue *rq)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
check_readiness	legion_runtime/lowlevel_dma.cc	/^    bool ReduceRequest::check_readiness(bool just_check, DmaRequestQueue *rq)$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
check_region_dependence	legion_runtime/legion_tasks.cc	/^    bool SingleTask::check_region_dependence(RegionTreeID our_tid,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_release_privilege	legion_runtime/legion_ops.cc	/^    void ReleaseOp::check_release_privilege(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
check_simultaneous_restricted	legion_runtime/legion_tasks.cc	/^    void SingleTask::check_simultaneous_restricted($/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_state	legion_runtime/field_tree.h	/^    void FieldTree<UT>::check_state(void)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
check_task	test/custom_mapper.cc	/^void check_task(const Task *task,$/;"	f
check_task	test/multiple_partitions.cc	/^void check_task(const Task *task,$/;"	f
check_task	test/partitioning.cc	/^void check_task(const Task *task,$/;"	f
check_task	test/privileges.cc	/^void check_task(const Task *task,$/;"	f
checkcg	test/hpcg/hpcg-main.cc	/^checkcg(lgncg::Vector &x,$/;"	f	namespace:__anon37
checkconsistency	lua_src/lgc.c	71;"	d	file:
checkdeadkey	lua_src/lgc.c	68;"	d	file:
checklimit	lua_src/lparser.c	/^static void checklimit (FuncState *fs, int v, int l, const char *what) {$/;"	f	file:
checkload	lua_src/loadlib.c	/^static int checkload (lua_State *L, int stat, const char *filename) {$/;"	f	file:
checkmode	lua_src/ldo.c	/^static void checkmode (lua_State *L, const char *mode, const char *x) {$/;"	f	file:
checkname	lua_src/lparser.c	/^static void checkname (LexState *ls, expdesc *e) {$/;"	f	file:
checknext	lua_src/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkoption	lua_src/loslib.c	/^static const char *checkoption (lua_State *L, const char *conv, char *buff) {$/;"	f	file:
checkrepeated	lua_src/lparser.c	/^static void checkrepeated (FuncState *fs, Labellist *ll, TString *label) {$/;"	f	file:
checkresults	lua_src/lapi.c	879;"	d	file:
checkstack	lua_src/ldblib.c	/^static void checkstack (lua_State *L, lua_State *L1, int n) {$/;"	f	file:
checkupval	lua_src/ldblib.c	/^static int checkupval (lua_State *L, int argf, int argnup) {$/;"	f	file:
child	acpi/acpica/aclocal.h	/^	ACPI_PARSE_COMMON union acpi_parse_object *child;$/;"	m	struct:acpi_parse_obj_asl	typeref:union:acpi_parse_obj_asl::acpi_parse_object
child	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *child;	\/* First child *\/$/;"	m	struct:acpi_namespace_node	typeref:struct:acpi_namespace_node::acpi_namespace_node
child	legion_runtime/region_tree.h	/^      int child;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalUser
child_operations	legion_runtime/legion_tasks.h	/^      std::set<Operation*> child_operations;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
children	legion_runtime/field_tree.h	/^      std::set<FieldTree<UT>*> children;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
children	legion_runtime/region_tree.h	/^      ChildState children;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
children	legion_runtime/region_tree.h	/^      std::map<Color,CompositeView*> children;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
children	legion_runtime/region_tree.h	/^      std::map<Color,MaterializedView*> children;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
children_commit	legion_runtime/legion_tasks.h	/^      bool children_commit;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
children_commit_invoked	legion_runtime/legion_tasks.h	/^      bool children_commit_invoked;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
children_complete	legion_runtime/legion_tasks.h	/^      bool children_complete;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
children_complete_invoked	legion_runtime/legion_tasks.h	/^      bool children_complete_invoked;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
children_mapped	legion_runtime/legion_ops.h	/^      Event children_mapped;$/;"	m	class:LegionRuntime::HighLevel::Operation
chosen	legion_runtime/mapping_utilities.h	/^          std::vector<Memory> chosen;$/;"	m	struct:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer::MemoizedMapping
chunk	legion_runtime/lowlevel.cc	/^	char chunk[CHUNK_SIZE];$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
chunk	legion_runtime/lowlevel_dma.cc	/^	char chunk[CHUNK_SIZE];$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
chunks	legion_runtime/activemsg.cc	/^    int chunks;$/;"	m	struct:ActiveMessageEndpoint::ChunkInfo	file:
classend	lua_src/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
cleanup_proc	legion_runtime/runtime.h	/^      const Processor cleanup_proc;$/;"	m	class:LegionRuntime::HighLevel::Runtime
clear	legion_runtime/utilities.h	/^    void clear(void) {$/;"	f	class:LegionRuntime::ImmovableLock
clear_adjacent	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::clear_adjacent(T value)$/;"	f	class:LegionRuntime::HighLevel::Segment
clear_adjacent	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::clear_adjacent(void)$/;"	f	class:LegionRuntime::HighLevel::Segment
clear_timers	legion_runtime/lowlevel.cc	/^    \/*static*\/ void DetailedTimer::clear_timers(bool all_nodes \/*= true*\/)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
clear_timers	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void DetailedTimer::clear_timers(bool all_nodes \/*=true*\/)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
clearb	nautilus/mm/buddy.c	/^static inline void clearb(ulong_t nr, volatile char *addr)$/;"	f	file:
clearerr	nautilus/libccompat.c	/^void clearerr(FILE *stream)$/;"	f
clearkeys	lua_src/lgc.c	/^static void clearkeys (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
clearvalues	lua_src/lgc.c	/^static void clearvalues (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
clock	nautilus/libccompat.c	/^clock_t clock()$/;"	f
clock_gettime	nautilus/libccompat.c	/^clock_gettime (clockid_t clk_id, struct timespec * tp)$/;"	f
clone	legion_runtime/runtime.cc	/^    ArgumentMap::Impl* ArgumentMap::Impl::clone(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
clone_as_point_task	legion_runtime/legion_tasks.cc	/^    PointTask* SliceTask::clone_as_point_task(const DomainPoint &p)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
clone_as_slice_task	legion_runtime/legion_tasks.cc	/^    SliceTask* IndexTask::clone_as_slice_task(const Domain &d, Processor p,$/;"	f	class:LegionRuntime::HighLevel::IndexTask
clone_as_slice_task	legion_runtime/legion_tasks.cc	/^    SliceTask* SliceTask::clone_as_slice_task(const Domain &d, Processor p,$/;"	f	class:LegionRuntime::HighLevel::SliceTask
clone_multi_from	legion_runtime/legion_tasks.cc	/^    void MultiTask::clone_multi_from(MultiTask *rhs, const Domain &d,$/;"	f	class:LegionRuntime::HighLevel::MultiTask
clone_task_op_from	legion_runtime/legion_tasks.cc	/^    void TaskOp::clone_task_op_from(TaskOp *rhs, Processor p, $/;"	f	class:LegionRuntime::HighLevel::TaskOp
close_func	lua_src/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_handle	legion_runtime/region_tree.h	/^      TreeClose close_handle;$/;"	m	struct:LegionRuntime::HighLevel::CloseInfo
close_logical_node	legion_runtime/region_tree.cc	/^    void RegionTreeNode::close_logical_node(LogicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
close_mask	legion_runtime/region_tree.h	/^      FieldMask close_mask;$/;"	m	struct:LegionRuntime::HighLevel::CloseInfo
close_mask	legion_runtime/region_tree.h	/^      const FieldMask close_mask;$/;"	m	class:LegionRuntime::HighLevel::ReductionCloser
close_op_lock	legion_runtime/runtime.h	/^      Reservation close_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
close_operations	legion_runtime/region_tree.h	/^                                                            close_operations;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
close_operations	legion_runtime/region_tree.h	/^      std::deque<TreeClose> close_operations;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
close_ops	legion_runtime/region_tree.h	/^      std::vector<std::deque<std::pair<TreeClose,FieldMask> > > close_ops;$/;"	m	class:LegionRuntime::HighLevel::RegionTreePath
close_physical_child	legion_runtime/region_tree.cc	/^    bool RegionTreeNode::close_physical_child(PhysicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
close_physical_child	legion_runtime/region_tree.cc	/^    void RegionTreeNode::close_physical_child(CompositeCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
close_physical_context	legion_runtime/region_tree.cc	/^    Event RegionTreeForest::close_physical_context(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
close_physical_node	legion_runtime/region_tree.cc	/^    void RegionTreeNode::close_physical_node(CompositeCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
close_physical_node	legion_runtime/region_tree.cc	/^    void RegionTreeNode::close_physical_node(PhysicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
close_state	legion_runtime/region_tree.cc	/^    Event RegionNode::close_state(MappableInfo *info, PhysicalUser &user,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
close_state	lua_src/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
close_tree_node	legion_runtime/region_tree.cc	/^    void PhysicalCloser::close_tree_node(RegionTreeNode *node,$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
closed_mask	legion_runtime/region_tree.h	/^      FieldMask closed_mask;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
closed_users	legion_runtime/region_tree.h	/^      std::deque<LogicalUser> closed_users;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
closegoto	lua_src/lparser.c	/^static void closegoto (LexState *ls, int g, Labeldesc *label) {$/;"	f	file:
closelistfield	lua_src/lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
closes	legion_runtime/legion_profiling.h	/^        std::deque<OpInstance> closes;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
cmpxchg32	nautilus/ticketlock.c	/^cmpxchg32 (void * m, uint32_t old, uint32_t new)$/;"	f	file:
co_funcs	lua_src/lcorolib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
coalesce_regions	nautilus/numa.c	/^coalesce_regions (struct nk_locality_info * loc)$/;"	f	file:
code_label	lua_src/lcode.c	/^static int code_label (FuncState *fs, int A, int b, int jump) {$/;"	f	file:
codearith	lua_src/lcode.c	/^static void codearith (FuncState *fs, OpCode op,$/;"	f	file:
codeclosure	lua_src/lparser.c	/^static void codeclosure (LexState *ls, expdesc *v) {$/;"	f	file:
codecomp	lua_src/lcode.c	/^static void codecomp (FuncState *fs, OpCode op, int cond, expdesc *e1,$/;"	f	file:
codeextraarg	lua_src/lcode.c	/^static int codeextraarg (FuncState *fs, int a) {$/;"	f	file:
codenot	lua_src/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codestring	lua_src/lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	file:
coherence_mask	legion_runtime/region_tree.h	/^      FieldMask coherence_mask;$/;"	m	class:LegionRuntime::HighLevel::RestrictedTraverser
col	arch/k1om/xeon_phi.c	/^  size_t col;$/;"	m	struct:__anon42	file:
collapsed_nodes	legion_runtime/region_tree.h	/^      std::map<CompositeNode*,FieldMask> collapsed_nodes;$/;"	m	struct:LegionRuntime::HighLevel::CompositeCloser
collect_users	legion_runtime/region_tree.cc	/^    void CompositeView::collect_users(const std::set<Event> &term_events) $/;"	f	class:LegionRuntime::HighLevel::CompositeView
collect_users	legion_runtime/region_tree.cc	/^    void MaterializedView::collect_users(const std::set<Event> &term_events)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
collect_users	legion_runtime/region_tree.cc	/^    void ReductionView::collect_users(const std::set<Event> &term_events)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
collectargs	lua_src/lua.c	/^static int collectargs (char **argv, int *args) {$/;"	f	file:
collections	legion_runtime/runtime.h	/^      std::map<LogicalView*,std::set<Event> > collections;$/;"	m	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
collectvalidlines	lua_src/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
color	arch/k1om/xeon_phi.c	/^  uint8_t color;$/;"	m	struct:__anon42	file:
color	legion_runtime/legion_logging.h	/^        Color color;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexPartition
color	legion_runtime/legion_logging.h	/^        Color color;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSubspace
color	legion_runtime/region_tree.h	/^      const Color color;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
color_map	legion_runtime/region_tree.h	/^      std::map<Color,IndexPartNode*> color_map;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
color_map	legion_runtime/region_tree.h	/^      std::map<Color,IndexSpaceNode*> color_map;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
color_map	legion_runtime/region_tree.h	/^      std::map<Color,PartitionNode*> color_map;$/;"	m	class:LegionRuntime::HighLevel::RegionNode
color_map	legion_runtime/region_tree.h	/^      std::map<Color,RegionNode*> color_map;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
color_space	legion_runtime/region_tree.h	/^      const Domain color_space;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
coloring	legion_runtime/legion.h	/^      Coloring coloring;$/;"	m	class:LegionRuntime::HighLevel::ColoringSerializer
coloring	legion_runtime/legion.h	/^      DomainColoring coloring;$/;"	m	class:LegionRuntime::HighLevel::DomainColoringSerializer
column	acpi/acpica/aclocal.h	/^	u32 column;$/;"	m	struct:acpi_parse_obj_asl
column_source	legion_runtime/region_tree.h	/^      FieldSpaceNode *const column_source;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
com_irq	dev/serial.c	/^static uint8_t com_irq;$/;"	v	file:
commit_mapping	legion_runtime/mapping_utilities.cc	/^      void MappingMemoizer::commit_mapping(Processor target, const Task *task)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
commit_operation	legion_runtime/legion_ops.cc	/^    void Operation::commit_operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
commit_received	legion_runtime/legion_tasks.h	/^      bool commit_received;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
commit_received	legion_runtime/legion_tasks.h	/^      bool commit_received;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
committed	legion_runtime/legion_ops.h	/^      bool committed;$/;"	m	class:LegionRuntime::HighLevel::Operation
committed_points	legion_runtime/legion_tasks.h	/^      unsigned committed_points;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
common	acpi/acpica/aclocal.h	/^	struct acpi_common_state common;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_common_state
common	acpi/acpica/aclocal.h	/^	struct acpi_parse_obj_common common;$/;"	m	union:acpi_parse_object	typeref:struct:acpi_parse_object::acpi_parse_obj_common
comp	legion_runtime/legion_utilities.h	/^      BITMASK comp[LOG2MAX];$/;"	m	class:LegionRuntime::HighLevel::BitPermutation
compile_flags	acpi/acpica/aclocal.h	/^	u32 compile_flags;$/;"	m	struct:acpi_parse_obj_asl
complete	legion_runtime/region_tree.h	/^        bool complete;$/;"	m	struct:LegionRuntime::HighLevel::CompositeNode::ChildInfo
complete	legion_runtime/region_tree.h	/^      bool has_complete, complete;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
complete	legion_runtime/shared_lowlevel.cc	/^		EventImpl *complete;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
complete	legion_runtime/shared_lowlevel.cc	/^          EventImpl *complete;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2	file:
complete_all_futures	legion_runtime/runtime.cc	/^    void FutureMap::Impl::complete_all_futures(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
complete_children	legion_runtime/legion_tasks.h	/^      LegionContainer<Operation*,COMPLETE_CHILD_ALLOC>::set complete_children;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
complete_event	legion_runtime/lowlevel_gpu.cc	/^      CUevent complete_event;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy	file:
complete_execution	legion_runtime/legion_ops.cc	/^    void Operation::complete_execution(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
complete_future	legion_runtime/runtime.cc	/^    void Future::Impl::complete_future(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
complete_gc_epoch	legion_runtime/runtime.cc	/^    void Runtime::complete_gc_epoch(GarbageCollectionEpoch *epoch)$/;"	f	class:LegionRuntime::HighLevel::Runtime
complete_mapping	legion_runtime/legion_ops.cc	/^    void Operation::complete_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
complete_operation	legion_runtime/legion_ops.cc	/^    void Operation::complete_operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
complete_points	legion_runtime/legion_tasks.h	/^      unsigned complete_points;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
complete_received	legion_runtime/legion_tasks.h	/^      bool complete_received;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
complete_received	legion_runtime/legion_tasks.h	/^      bool complete_received;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
completed	legion_runtime/legion_ops.h	/^      bool completed;$/;"	m	class:LegionRuntime::HighLevel::Operation
completion_event	legion_runtime/legion_ops.h	/^      UserEvent completion_event;$/;"	m	class:LegionRuntime::HighLevel::Operation
completion_events	legion_runtime/runtime.h	/^      std::set<Event> completion_events;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
component_domains	legion_runtime/region_tree.h	/^      std::set<Domain> component_domains;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
compress_left	legion_runtime/legion_utilities.h	/^    inline BITMASK BitPermutation<BITMASK,LOG2MAX>::compress_left($/;"	f	class:LegionRuntime::HighLevel::BitPermutation
compress_representation	legion_runtime/legion_utilities.h	/^    void BitPermutation<BITMASK,LOG2MAX>::compress_representation(void)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
compress_right	legion_runtime/legion_utilities.h	/^    inline BITMASK BitPermutation<BITMASK,LOG2MAX>::compress_right($/;"	f	class:LegionRuntime::HighLevel::BitPermutation
compress_strides	legion_runtime/lowlevel_dma.cc	/^    static unsigned compress_strides(const Rect<DIM> &r,$/;"	f	namespace:LegionRuntime::LowLevel
computeTIDOfMatrixRow	test/hpcg/geometry.h	/^computeTIDOfMatrixRow(const Geometry &geom,$/;"	f	namespace:lgncg
compute_copy_offsets	legion_runtime/region_tree.cc	/^    void InstanceManager::compute_copy_offsets($/;"	f	class:LegionRuntime::HighLevel::InstanceManager
compute_copy_offsets	legion_runtime/region_tree.cc	/^    void InstanceManager::compute_copy_offsets(const FieldMask &copy_mask,$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
compute_copy_offsets	legion_runtime/region_tree.cc	/^    void LayoutDescription::compute_copy_offsets($/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
compute_copy_offsets	legion_runtime/region_tree.cc	/^    void LayoutDescription::compute_copy_offsets(const FieldMask &copy_mask,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
compute_dominates	legion_runtime/region_tree.cc	/^    \/*static*\/ bool IndexTreeNode::compute_dominates($/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
compute_index_path	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::compute_index_path(IndexSpace parent, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
compute_intersection	legion_runtime/region_tree.cc	/^    \/*static*\/ bool IndexTreeNode::compute_intersection(const Domain &left,$/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
compute_intersections	legion_runtime/region_tree.cc	/^    \/*static*\/ bool IndexTreeNode::compute_intersections($/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
compute_layout_volume	legion_runtime/region_tree.cc	/^    \/*static*\/ size_t LayoutDescription::compute_layout_volume(const Domain &d)$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
compute_partition_path	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::compute_partition_path(IndexSpace parent, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
compute_point_region_requirements	legion_runtime/legion_tasks.cc	/^    void TaskOp::compute_point_region_requirements(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
compute_precondition_sets	legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionTreeNode::compute_precondition_sets($/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
compute_rebuild_rectangle	legion_runtime/rectangle_set.h	/^    \/*static*\/ inline void RectangleSet<T,DISCRETE>::compute_rebuild_rectangle($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
computesizes	lua_src/ltable.c	/^static int computesizes (int nums[], int *narray) {$/;"	f	file:
cond	legion_runtime/activemsg.cc	/^  gasnett_cond_t cond;$/;"	m	class:ActiveMessageEndpoint	file:
cond	legion_runtime/lowlevel.cc	/^      gasnett_cond_t cond;$/;"	m	class:LegionRuntime::LowLevel::PthreadCondWaiter	file:
cond	lua_src/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
cond_time	test/benchmark.c	/^} cond_time;$/;"	v	typeref:struct:cv	file:
condense_user_list	legion_runtime/region_tree.cc	/^    void MaterializedView::condense_user_list(std::list<PhysicalUser,ALLOC> $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
condjump	lua_src/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	file:
condvar	legion_runtime/activemsg.h	/^  gasnett_cond_t condvar;$/;"	m	struct:HandlerReplyFuture
condvar	legion_runtime/lowlevel.cc	/^	gasnett_cond_t condvar;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
condvar	legion_runtime/lowlevel.cc	/^      gasnett_cond_t condvar;$/;"	m	class:LegionRuntime::LowLevel::MultiNodeRollUp	file:
condvar	legion_runtime/lowlevel.cc	/^      gasnett_cond_t condvar;$/;"	m	class:LegionRuntime::LowLevel::ThreadImpl	file:
condvar	legion_runtime/lowlevel_impl.h	/^      gasnett_cond_t condvar;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
configure_MPI_interoperability	legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::configure_MPI_interoperability(int rank)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
configure_MPI_interoperability	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::configure_MPI_interoperability(int rank)$/;"	f	class:LegionRuntime::HighLevel::Runtime
const_pointer	legion_runtime/legion_allocation.h	/^      typedef const T*    const_pointer;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
const_reference	legion_runtime/legion_allocation.h	/^      typedef const T&  const_reference;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
const_value	legion_runtime/legion.h	/^      bool const_value;$/;"	m	class:LegionRuntime::HighLevel::Predicate
constfolding	lua_src/lcode.c	/^static int constfolding (OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
constituents	legion_runtime/shared_lowlevel.cc	/^        std::vector<ProcessorImpl*> constituents; \/\/ User impls of the utility processor$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
constraints	legion_runtime/legion_ops.h	/^      std::vector<Mapper::MappingConstraint> constraints;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
construct	legion_runtime/legion_allocation.h	/^      inline void construct(pointer p, const T &t) { new(p) T(t); }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
construct_ident_map	nautilus/paging.c	/^construct_ident_map (pml4e_t * pml, page_size_t ptype, ulong_t bytes)$/;"	f	file:
construct_mpi_rank_tables	legion_runtime/runtime.cc	/^    void Runtime::construct_mpi_rank_tables(Processor proc, int rank)$/;"	f	class:LegionRuntime::HighLevel::Runtime
constructed_nodes	legion_runtime/region_tree.h	/^      std::map<RegionTreeNode*,CompositeNode*> constructed_nodes;$/;"	m	struct:LegionRuntime::HighLevel::CompositeCloser
constructor	lua_src/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
container	test/benchmark.c	/^typedef struct container {$/;"	s	file:
container_t	test/benchmark.c	/^} container_t;$/;"	t	typeref:struct:container	file:
contains	legion_runtime/arrays.h	/^      bool contains(const Point<DIM> &point) const$/;"	f	class:LegionRuntime::Arrays::Rect
contains	legion_runtime/arrays.h	/^      bool contains(const Rect<DIM>& other) const$/;"	f	class:LegionRuntime::Arrays::Rect
contains	legion_runtime/lowlevel.h	/^      bool contains(DomainPoint point) const$/;"	f	class:LegionRuntime::LowLevel::Domain
contains_point	legion_runtime/runtime.cc	/^    bool PhysicalRegion::Impl::contains_point(const DomainPoint &dp) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
contains_ptr	legion_runtime/runtime.cc	/^    bool PhysicalRegion::Impl::contains_ptr(ptr_t ptr) const $/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
context	acpi/acpica/aclocal.h	/^	void *context;		\/* Context to be passed to handler *\/$/;"	m	struct:acpi_fixed_event_handler
context	acpi/acpica/aclocal.h	/^	void *context;		\/* Context to be passed to handler *\/$/;"	m	struct:acpi_gpe_handler_info
context	acpi/osl.c	/^	void *context;$/;"	m	struct:acpi_os_dpc	file:
context	legion_runtime/legion_logging.h	/^        UniqueID context;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
context	legion_runtime/legion_logging.h	/^        UniqueID context;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
context	legion_runtime/legion_logging.h	/^        UniqueID context;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
context	legion_runtime/legion_logging.h	/^        UniqueID context;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
context	legion_runtime/legion_tasks.h	/^      RegionTreeContext context; $/;"	m	class:LegionRuntime::HighLevel::SingleTask
context	legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
context	legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
context	legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
context	legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::LogicalView
context	legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::PhysicalManager
context	legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
context	legion_runtime/runtime.h	/^      SingleTask *const context;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
context	legion_runtime/runtime.h	/^      SingleTask *const context;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
context_barriers	legion_runtime/legion_tasks.h	/^      LegionContainer<Barrier,TASK_BARRIER_ALLOC>::deque context_barriers;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
context_bytes	legion_runtime/legion_utilities.h	/^      size_t context_bytes;$/;"	m	class:LegionRuntime::HighLevel::Deserializer
context_bytes	legion_runtime/legion_utilities.h	/^      size_t context_bytes;$/;"	m	class:LegionRuntime::HighLevel::Serializer
context_locks	legion_runtime/legion_tasks.h	/^      LegionContainer<Reservation,TASK_RESERVATION_ALLOC>::deque context_locks;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
context_states	legion_runtime/runtime.h	/^      std::vector<ContextState> context_states;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
control	acpi/acpica/aclocal.h	/^	struct acpi_control_state control;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_control_state
convergeephemerons	lua_src/lgc.c	/^static void convergeephemerons (global_State *g) {$/;"	f	file:
convert	legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert(void) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convert	legion_runtime/lowlevel.cc	/^    RegionAccessor<AccessorArray> RegionAccessor<AccessorGeneric>::convert<AccessorArray>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
convert	legion_runtime/lowlevel.cc	/^    RegionAccessor<AccessorArrayReductionFold> RegionAccessor<AccessorGeneric>::convert<AccessorArrayReductionFold>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
convert	legion_runtime/lowlevel.cc	/^    RegionAccessor<AccessorReductionList> RegionAccessor<AccessorGeneric>::convert<AccessorReductionList>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
convert	legion_runtime/lowlevel.h	/^      RegionInstanceAccessor<ET,AT2> convert(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
convert	legion_runtime/lowlevel_gpu.cc	/^    RegionAccessor<AccessorGPU> RegionAccessor<AccessorGeneric>::convert<AccessorGPU>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
convert	legion_runtime/lowlevel_gpu.cc	/^    RegionAccessor<AccessorGPUReductionFold> RegionAccessor<AccessorGeneric>::convert<AccessorGPUReductionFold>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
convert	legion_runtime/lowlevel_impl.h	/^      T convert(void) const { T thing_to_return = { value }; return thing_to_return; }$/;"	f	class:LegionRuntime::LowLevel::ID
convert2	legion_runtime/lowlevel.h	/^      RegionInstanceAccessor<ET,AT2> convert2(T2 arg) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
convert_helper	legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert_helper(AOS<STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convert_helper	legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert_helper(HybridSOA<STRIDE, BLOCK_SIZE, BLOCK_STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convert_helper	legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert_helper(ReductionFold<REDOP> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convert_helper	legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert_helper(ReductionList<REDOP> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convert_helper	legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert_helper(SOA<STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convex_hull	legion_runtime/arrays.h	/^      Rect<DIM> convex_hull(const Rect<DIM>& other)$/;"	f	class:LegionRuntime::Arrays::Rect
copies	legion_runtime/legion_profiling.h	/^        std::deque<OpInstance> copies;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
copies	legion_runtime/lowlevel_gpu.cc	/^      std::deque<GPUJob*> copies;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
copy	legion_runtime/lowlevel_dma.cc	/^    Event Domain::copy(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy	legion_runtime/lowlevel_dma.cc	/^    Event Domain::copy(const std::vector<CopySrcDstField>& srcs,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy	legion_runtime/shared_lowlevel.cc	/^    Event Domain::copy(RegionInstance src_inst, RegionInstance dst_inst, size_t elem_size,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy	legion_runtime/shared_lowlevel.cc	/^    Event Domain::copy(const std::vector<CopySrcDstField>& srcs,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy	legion_runtime/shared_lowlevel.cc	/^    Event IndexSpace::Impl::copy(RegionInstance src_inst, RegionInstance dst_inst, size_t elem_size,$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
copy	legion_runtime/shared_lowlevel.cc	/^    Event IndexSpace::Impl::copy(const std::vector<Domain::CopySrcDstField>& srcs,$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
copy_across	legion_runtime/region_tree.cc	/^    Event RegionTreeForest::copy_across(Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
copy_across	legion_runtime/region_tree.cc	/^    Event RegionTreeForest::copy_across(RegionTreeContext src_ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
copy_all_fields	legion_runtime/lowlevel_dma.cc	/^      virtual void copy_all_fields(int src_index, int dst_index, int count_per_line,$/;"	f	class:LegionRuntime::LowLevel::InstPairCopier
copy_all_fields	legion_runtime/lowlevel_dma.cc	/^      virtual void copy_all_fields(int src_index, int dst_index, int count_per_line,$/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
copy_all_fields	legion_runtime/lowlevel_dma.cc	/^      virtual void copy_all_fields(int src_index, int dst_index, int elem_count)$/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
copy_data	legion_runtime/activemsg.cc	/^void ContiguousPayload::copy_data(void *dest)$/;"	f	class:ContiguousPayload
copy_data	legion_runtime/activemsg.cc	/^void SpanPayload::copy_data(void *dest)$/;"	f	class:SpanPayload
copy_data	legion_runtime/activemsg.cc	/^void TwoDPayload::copy_data(void *dest)$/;"	f	class:TwoDPayload
copy_display_to_vc	nautilus/vc.c	/^static inline void copy_display_to_vc(struct nk_virtual_console *vc) $/;"	f	file:
copy_field	legion_runtime/lowlevel_dma.cc	/^      virtual void copy_field(int src_index, int dst_index, int elem_count,$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier
copy_field	legion_runtime/lowlevel_dma.cc	/^      virtual void copy_field(int src_index, int dst_index, int elem_count,$/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
copy_field	legion_runtime/region_tree.cc	/^    void MaterializedView::copy_field(FieldID fid,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
copy_from	legion_runtime/region_tree.cc	/^    void CompositeView::copy_from(const FieldMask &copy_mask, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
copy_from	legion_runtime/region_tree.cc	/^    void MaterializedView::copy_from(const FieldMask &copy_mask,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
copy_from_fb	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_from_fb(void *dst, off_t src_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_from_fb	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_from_fb(void *dst, off_t src_offset,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_from_fb_2d	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_from_fb_2d(void *dst, off_t src_offset,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_gather	legion_runtime/lowlevel_dma.cc	/^      void copy_gather(const PendingGather *g, Event trigger = Event::NO_EVENT)$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
copy_indirect	legion_runtime/lowlevel_dma.cc	/^    Event Domain::copy_indirect(const CopySrcDstField& idx,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy_indirect	legion_runtime/shared_lowlevel.cc	/^    Event Domain::copy_indirect(const CopySrcDstField &idx,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy_mask	legion_runtime/region_tree.h	/^      const FieldMask copy_mask;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
copy_op_lock	legion_runtime/runtime.h	/^      Reservation copy_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::BufferedMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::MemcpyMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::BufferedMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::MemcpyMemPairCopier
copy_span	legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
copy_to	legion_runtime/region_tree.cc	/^    void CompositeView::copy_to(const FieldMask &copy_mask, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
copy_to	legion_runtime/region_tree.cc	/^    void MaterializedView::copy_to(const FieldMask &copy_mask,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
copy_to	legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::Impl::copy_to(RegionInstance target, Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
copy_to	legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::Impl::copy_to(RegionInstance target, IndexSpace src_region, Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
copy_to	legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::Impl::copy_to(RegionInstance target, const ElementMask &mask, Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
copy_to_fb	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_to_fb(off_t dst_offset, const void *src, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_to_fb	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_to_fb(off_t dst_offset, const void *src,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_to_fb_2d	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_to_fb_2d(off_t dst_offset, const void *src, $/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_to_peer	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_to_peer(GPUProcessor *dst, off_t dst_offset,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_to_peer_2d	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_to_peer_2d(GPUProcessor *dst,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_to_untyped	legion_runtime/lowlevel.cc	/^    Event RegionInstance::copy_to_untyped(RegionInstance target, $/;"	f	class:LegionRuntime::LowLevel::RegionInstance
copy_to_untyped	legion_runtime/lowlevel.cc	/^    Event RegionInstance::copy_to_untyped(RegionInstance target,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
copy_to_untyped	legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::copy_to_untyped(RegionInstance target, Event wait_on) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
copy_to_untyped	legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::copy_to_untyped(RegionInstance target, IndexSpace region,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
copy_to_untyped	legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::copy_to_untyped(RegionInstance target, const ElementMask &mask,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
copy_vc_to_display	nautilus/vc.c	/^static inline void copy_vc_to_display(struct nk_virtual_console *vc) $/;"	f	file:
copy_within_fb	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_within_fb(off_t dst_offset, off_t src_offset,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_within_fb_2d	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_within_fb_2d(off_t dst_offset, off_t src_offset,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_without_mapping_info	legion_runtime/legion.cc	/^    void RegionRequirement::copy_without_mapping_info($/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
core_counters	test/benchmark.c	/^static volatile uint64_t core_counters[NUM_THREADS];$/;"	v	file:
core_counters	test/ipi.c	/^static volatile uint64_t core_counters[NUM_CORES];$/;"	v	file:
core_id	legion_runtime/lowlevel.cc	/^      int core_id;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
core_id	legion_runtime/lowlevel.cc	/^      int id, core_id;$/;"	m	class:LegionRuntime::LowLevel::ProcessorThread	file:
core_id	legion_runtime/lowlevel_impl.h	/^      int core_id;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
core_recvd	test/benchmark.c	/^static volatile uint64_t core_recvd[NUM_THREADS\/64 + NUM_THREADS%64];$/;"	v	file:
core_recvd	test/ipi.c	/^static volatile uint64_t core_recvd[4];$/;"	v	file:
cores_wait	test/benchmark.c	/^cores_wait(void)$/;"	f	file:
cores_wait	test/ipi.c	/^cores_wait(void)$/;"	f	file:
correctstack	lua_src/ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	file:
cos	nautilus/libccompat.c	/^double cos(double x)$/;"	f
cosh	nautilus/libccompat.c	/^double cosh(double x)$/;"	f
count	acpi/acpica/aclocal.h	/^	u16 count;$/;"	m	struct:acpi_gpe_walk_info
count	acpi/acpica/aclocal.h	/^	u32 *count;$/;"	m	struct:acpi_find_context
count	acpi/acpica/aclocal.h	/^	u8 count;$/;"	m	struct:acpi_package_info2
count	acpi/acpica/aclocal.h	/^	u8 count;$/;"	m	struct:acpi_package_info3
count	legion_runtime/interval_tree.h	/^    int IntervalTreeNode<T,DISCRETE>::count(void) const$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
count	legion_runtime/lowlevel_impl.h	/^      unsigned count; \/\/ number of locks held by local threads$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
count	legion_runtime/region_tree.h	/^        int count;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
count1	acpi/acpica/aclocal.h	/^	u8 count1;$/;"	m	struct:acpi_package_info
count2	acpi/acpica/aclocal.h	/^	u8 count2;$/;"	m	struct:acpi_package_info
count_left	legion_runtime/lowlevel.cc	/^      volatile int count_left;$/;"	m	class:LegionRuntime::LowLevel::MultiNodeRollUp	file:
count_needed	legion_runtime/lowlevel.cc	/^      unsigned count_needed;$/;"	m	class:LegionRuntime::LowLevel::EventMerger	file:
count_offset	legion_runtime/lowlevel.cc	/^      off_t count_offset;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceResp	file:
count_offset	legion_runtime/lowlevel_impl.h	/^	off_t count_offset;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
countint	lua_src/ltable.c	/^static int countint (const TValue *key, int *nums) {$/;"	f	file:
countlevels	lua_src/lauxlib.c	/^static int countlevels (lua_State *L) {$/;"	f	file:
covers	legion_runtime/rectangle_set.h	/^    inline bool RectangleSet<T,DISCRETE>::covers(T lower_x, T lower_y, $/;"	f	class:LegionRuntime::HighLevel::RectangleSet
cpu_base	legion_runtime/lowlevel_gpu.h	/^      char *cpu_base;$/;"	m	class:LegionRuntime::LowLevel::GPUZCMemory
cpu_base_impl	test/circuit_cpu.cc	/^void CalcNewCurrentsTask::cpu_base_impl(const CircuitPiece &p,$/;"	f	class:CalcNewCurrentsTask
cpu_base_impl	test/circuit_cpu.cc	/^void DistributeChargeTask::cpu_base_impl(const CircuitPiece &p,$/;"	f	class:DistributeChargeTask
cpu_base_impl	test/circuit_cpu.cc	/^void UpdateVoltagesTask::cpu_base_impl(const CircuitPiece &p,$/;"	f	class:UpdateVoltagesTask
cpu_impl	test/circuit_cpu.cc	/^bool CheckTask::cpu_impl(const Task *task,$/;"	f	class:CheckTask
cpu_info_ready	nautilus/smp.c	/^uint8_t cpu_info_ready = 0;$/;"	v
cpuid_get_family	nautilus/cpuid.c	/^cpuid_get_family (void)$/;"	f
cpuid_get_model	nautilus/cpuid.c	/^cpuid_get_model (void)$/;"	f
cpuid_get_step	nautilus/cpuid.c	/^cpuid_get_step (void)$/;"	f
cpuid_leaf_max	nautilus/cpuid.c	/^cpuid_leaf_max (void)$/;"	f
cr3_to_gva	arch/hrt/hrt.c	/^cr3_to_gva (uint64_t cr3)$/;"	f	file:
create	test/hpcg/sparsemat.h	/^    create(const Geometry &geom,$/;"	f	struct:lgncg::SparseMatrix
create	test/hpcg/vector.h	/^    create(int64_t len,$/;"	f	struct:lgncg::Vector
create_allocator	legion_runtime/lowlevel.cc	/^    IndexSpaceAllocator IndexSpace::create_allocator(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_allocator	legion_runtime/shared_lowlevel.cc	/^    IndexSpaceAllocator IndexSpace::Impl::create_allocator(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
create_allocator	legion_runtime/shared_lowlevel.cc	/^    IndexSpaceAllocator IndexSpace::create_allocator(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_argument_map	legion_runtime/legion.cc	/^    ArgumentMap HighLevelRuntime::create_argument_map(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_argument_map	legion_runtime/runtime.cc	/^    ArgumentMap Runtime::create_argument_map(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
create_barrier	legion_runtime/lowlevel.cc	/^    \/*static*\/ Barrier Barrier::create_barrier(unsigned expected_arrivals)$/;"	f	class:LegionRuntime::LowLevel::Barrier
create_barrier	legion_runtime/shared_lowlevel.cc	/^    Barrier Barrier::create_barrier(unsigned expected_arrivals)$/;"	f	class:LegionRuntime::LowLevel::Barrier
create_copier	legion_runtime/lowlevel_dma.cc	/^    MemPairCopier *MemPairCopier::create_copier(Memory src_mem, Memory dst_mem,$/;"	f	class:LegionRuntime::LowLevel::MemPairCopier
create_event	legion_runtime/lowlevel.cc	/^    \/*static*\/ Event Event::Impl::create_event(void)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
create_field_allocator	legion_runtime/legion.cc	/^    FieldAllocator HighLevelRuntime::create_field_allocator(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_field_allocator	legion_runtime/runtime.cc	/^    FieldAllocator Runtime::create_field_allocator(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_field_space	legion_runtime/legion.cc	/^    FieldSpace HighLevelRuntime::create_field_space(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_field_space	legion_runtime/region_tree.cc	/^    void RegionTreeForest::create_field_space(FieldSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_field_space	legion_runtime/runtime.cc	/^    FieldSpace Runtime::create_field_space(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
create_gpu_thread	legion_runtime/lowlevel_gpu.cc	/^      void create_gpu_thread(size_t stack_size)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
create_group	legion_runtime/lowlevel.cc	/^    \/*static*\/ Processor Processor::create_group(const std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::Processor
create_group	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ Processor Processor::create_group(const std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::Processor
create_handshake	legion_runtime/legion.cc	/^    \/*static*\/ MPILegionHandshake HighLevelRuntime::create_handshake($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_allocator	legion_runtime/legion.cc	/^    IndexAllocator HighLevelRuntime::create_index_allocator(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_allocator	legion_runtime/runtime.cc	/^    IndexAllocator Runtime::create_index_allocator(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_index_partition	legion_runtime/legion.cc	/^    IndexPartition HighLevelRuntime::create_index_partition($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_partition	legion_runtime/legion.h	/^    IndexPartition HighLevelRuntime::create_index_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_partition	legion_runtime/region_tree.cc	/^    void RegionTreeForest::create_index_partition(IndexPartition pid,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_index_partition	legion_runtime/runtime.cc	/^    IndexPartition Runtime::create_index_partition($/;"	f	class:LegionRuntime::HighLevel::Runtime
create_index_space	legion_runtime/legion.cc	/^    IndexSpace HighLevelRuntime::create_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_space	legion_runtime/legion.cc	/^    IndexSpace HighLevelRuntime::create_index_space(Context ctx, Domain domain)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_space	legion_runtime/legion.cc	/^    IndexSpace HighLevelRuntime::create_index_space(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_space	legion_runtime/lowlevel.cc	/^    \/*static*\/ IndexSpace IndexSpace::create_index_space(IndexSpace parent, const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_index_space	legion_runtime/lowlevel.cc	/^    \/*static*\/ IndexSpace IndexSpace::create_index_space(const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_index_space	legion_runtime/lowlevel.cc	/^    \/*static*\/ IndexSpace IndexSpace::create_index_space(size_t num_elmts)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_index_space	legion_runtime/region_tree.cc	/^    void RegionTreeForest::create_index_space(const Domain &domain) $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_index_space	legion_runtime/region_tree.cc	/^    void RegionTreeForest::create_index_space(const Domain &hull,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_index_space	legion_runtime/runtime.cc	/^    IndexSpace Runtime::create_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_index_space	legion_runtime/runtime.cc	/^    IndexSpace Runtime::create_index_space(Context ctx, Domain domain)$/;"	f	class:LegionRuntime::HighLevel::Runtime
create_index_space	legion_runtime/runtime.cc	/^    IndexSpace Runtime::create_index_space(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::Runtime
create_index_space	legion_runtime/shared_lowlevel.cc	/^    IndexSpace IndexSpace::create_index_space(IndexSpace parent, const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_index_space	legion_runtime/shared_lowlevel.cc	/^    IndexSpace IndexSpace::create_index_space(const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_index_space	legion_runtime/shared_lowlevel.cc	/^    IndexSpace IndexSpace::create_index_space(size_t num_elmts)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_instance	legion_runtime/lowlevel.cc	/^      virtual RegionInstance create_instance(IndexSpace r,$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
create_instance	legion_runtime/lowlevel.cc	/^      virtual RegionInstance create_instance(IndexSpace r,$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
create_instance	legion_runtime/lowlevel.cc	/^    RegionInstance Domain::create_instance(Memory memory,$/;"	f	class:LegionRuntime::LowLevel::Domain
create_instance	legion_runtime/lowlevel.cc	/^    RegionInstance GASNetMemory::create_instance(IndexSpace r,$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
create_instance	legion_runtime/lowlevel_gpu.h	/^      virtual RegionInstance create_instance(IndexSpace is,$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
create_instance	legion_runtime/lowlevel_gpu.h	/^      virtual RegionInstance create_instance(IndexSpace is,$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
create_instance	legion_runtime/region_tree.cc	/^    InstanceManager* FieldSpaceNode::create_instance(Memory location,$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
create_instance	legion_runtime/region_tree.cc	/^    MaterializedView* PartitionNode::create_instance(Memory target_mem,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
create_instance	legion_runtime/region_tree.cc	/^    MaterializedView* RegionNode::create_instance(Memory target_mem,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
create_instance	legion_runtime/shared_lowlevel.cc	/^    RegionInstance Domain::create_instance(Memory m, size_t elmt_size,$/;"	f	class:LegionRuntime::LowLevel::Domain
create_instance	legion_runtime/shared_lowlevel.cc	/^    RegionInstance Domain::create_instance(Memory memory,$/;"	f	class:LegionRuntime::LowLevel::Domain
create_instance	legion_runtime/shared_lowlevel.cc	/^    RegionInstance IndexSpace::Impl::create_instance(Memory m,$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
create_instance_local	legion_runtime/lowlevel.cc	/^    RegionInstance Memory::Impl::create_instance_local(IndexSpace r,$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
create_instance_remote	legion_runtime/lowlevel.cc	/^    RegionInstance Memory::Impl::create_instance_remote(IndexSpace r,$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
create_layout_description	legion_runtime/region_tree.cc	/^    LayoutDescription* FieldSpaceNode::create_layout_description($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
create_lock	legion_runtime/legion.cc	/^    Lock HighLevelRuntime::create_lock(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_lock	legion_runtime/runtime.cc	/^    Lock Runtime::create_lock(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
create_logical_region	legion_runtime/legion.cc	/^    LogicalRegion HighLevelRuntime::create_logical_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_logical_region	legion_runtime/region_tree.cc	/^    void RegionTreeForest::create_logical_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_logical_region	legion_runtime/runtime.cc	/^    LogicalRegion Runtime::create_logical_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_mappers	test/saxpy_array.cc	/^void create_mappers(Machine *machine, HighLevelRuntime *runtime,$/;"	f
create_node	legion_runtime/region_tree.cc	/^    FieldSpaceNode* RegionTreeForest::create_node(FieldSpace space)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_node	legion_runtime/region_tree.cc	/^    IndexPartNode* RegionTreeForest::create_node(IndexPartition p, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_node	legion_runtime/region_tree.cc	/^    IndexSpaceNode* RegionTreeForest::create_node(Domain d, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_node	legion_runtime/region_tree.cc	/^    PartitionNode* RegionTreeForest::create_node(LogicalPartition p,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_node	legion_runtime/region_tree.cc	/^    RegionNode* RegionTreeForest::create_node(LogicalRegion r, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_phase_barrier	legion_runtime/legion.cc	/^    PhaseBarrier HighLevelRuntime::create_phase_barrier(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_phase_barrier	legion_runtime/runtime.cc	/^    PhaseBarrier Runtime::create_phase_barrier(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_predicate	legion_runtime/legion.cc	/^    Predicate HighLevelRuntime::create_predicate(Context ctx, const Future &f)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_predicate	legion_runtime/runtime.cc	/^    Predicate Runtime::create_predicate(Context ctx, const Future &f) $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_reduction	legion_runtime/region_tree.cc	/^    ReductionManager* FieldSpaceNode::create_reduction(Memory location,$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
create_reduction	legion_runtime/region_tree.cc	/^    ReductionView* PartitionNode::create_reduction(Memory target_mem, $/;"	f	class:LegionRuntime::HighLevel::PartitionNode
create_reduction	legion_runtime/region_tree.cc	/^    ReductionView* RegionNode::create_reduction(Memory target_mem, FieldID fid,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
create_reduction_op	legion_runtime/lowlevel.h	/^    ReductionOpUntyped *ReductionOpUntyped::create_reduction_op(void)$/;"	f	class:LegionRuntime::LowLevel::ReductionOpUntyped
create_reservation	legion_runtime/lowlevel.cc	/^    \/*static*\/ Reservation Reservation::create_reservation(size_t _data_size \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::Reservation
create_reservation	legion_runtime/shared_lowlevel.cc	/^    Reservation Reservation::create_reservation(size_t data_size)$/;"	f	class:LegionRuntime::LowLevel::Reservation
create_top_view	legion_runtime/region_tree.cc	/^    MaterializedView* InstanceManager::create_top_view(unsigned depth)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
create_user_event	legion_runtime/lowlevel.cc	/^    \/*static*\/ UserEvent UserEvent::create_user_event(void)$/;"	f	class:LegionRuntime::LowLevel::UserEvent
create_user_event	legion_runtime/shared_lowlevel.cc	/^    UserEvent UserEvent::create_user_event(void)$/;"	f	class:LegionRuntime::LowLevel::UserEvent
create_view	legion_runtime/region_tree.cc	/^    ReductionView* ReductionManager::create_view(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
create_zone	nautilus/mm/kmem.c	/^create_zone (struct mem_region * region)$/;"	f	file:
created_field_spaces	legion_runtime/legion_tasks.h	/^      std::set<FieldSpace>                      created_field_spaces;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
created_fields	legion_runtime/legion_tasks.h	/^      std::set<std::pair<FieldSpace,FieldID> >  created_fields;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
created_index_spaces	legion_runtime/legion_tasks.h	/^      std::set<IndexSpace>                      created_index_spaces;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
created_regions	legion_runtime/legion_tasks.h	/^      std::set<LogicalRegion>                   created_regions;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
createmeta	lua_src/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	lua_src/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createsearcherstable	lua_src/loadlib.c	/^static void createsearcherstable (lua_State *L) {$/;"	f	file:
createstdfile	lua_src/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, const char *k,$/;"	f	file:
createstrobj	lua_src/lstring.c	/^static TString *createstrobj (lua_State *L, const char *str, size_t l,$/;"	f	file:
creation	legion_runtime/legion_profiling.h	/^        bool creation;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
creation_set	legion_runtime/region_tree.h	/^      NodeMask creation_set;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
creation_set	legion_runtime/region_tree.h	/^      NodeMask creation_set;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
creation_set	legion_runtime/region_tree.h	/^      NodeMask creation_set;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
ctx	legion_runtime/legion_trace.h	/^      SingleTask *const ctx;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
ctx	legion_runtime/region_tree.h	/^      ContextID ctx;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
ctx	legion_runtime/region_tree.h	/^      ContextID ctx;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::LogicalInitializer
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::LogicalInvalidator
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::LogicalPathRegistrar
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegistrar
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::PathReturner
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::PhysicalInitializer
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::PhysicalInvalidator
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::ReductionCloser
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::RestrictedTraverser
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::StateSender
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	struct:LegionRuntime::HighLevel::CompositeCloser
ctx	legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	struct:LegionRuntime::HighLevel::MappableInfo
ctx	legion_runtime/runtime.h	/^      int ctx;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeContext
cur_attr	nautilus/vc.c	/^  uint8_t cur_x, cur_y, cur_attr;$/;"	m	struct:nk_virtual_console	file:
cur_entry	legion_runtime/shared_lowlevel.cc	/^        size_t cur_entry; \/\/ for lists$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
cur_size	legion_runtime/lowlevel.h	/^      size_t *cur_size;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
cur_size	legion_runtime/utilities.h	/^	size_t max_size, cur_size;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
cur_thread	legion_runtime/lowlevel_impl.h	/^GASNETT_THREADKEY_DECLARE(cur_thread);$/;"	v
cur_vc	nautilus/vc.c	/^static struct nk_virtual_console *cur_vc = NULL;$/;"	v	typeref:struct:nk_virtual_console	file:
cur_write_count	legion_runtime/activemsg.cc	/^  int cur_write_lmb, cur_write_count;$/;"	m	class:ActiveMessageEndpoint	file:
cur_write_lmb	legion_runtime/activemsg.cc	/^  int cur_write_lmb, cur_write_count;$/;"	m	class:ActiveMessageEndpoint	file:
cur_write_offset	legion_runtime/activemsg.cc	/^  size_t cur_write_offset;$/;"	m	class:ActiveMessageEndpoint	file:
cur_x	nautilus/vc.c	/^  uint8_t cur_x, cur_y, cur_attr;$/;"	m	struct:nk_virtual_console	file:
cur_y	nautilus/vc.c	/^  uint8_t cur_x, cur_y, cur_attr;$/;"	m	struct:nk_virtual_console	file:
currIsNewline	lua_src/llex.c	32;"	d	file:
curr_epoch_users	legion_runtime/region_tree.h	/^      FieldTree<LogicalUser> *curr_epoch_users;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
curr_epoch_users	legion_runtime/region_tree.h	/^      FieldTree<PhysicalUser> *const curr_epoch_users;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
curr_epoch_users	legion_runtime/region_tree.h	/^      LegionContainer<LogicalUser,CURR_LOGICAL_ALLOC>::list curr_epoch_users;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
curr_epoch_users	legion_runtime/region_tree.h	/^      LegionContainer<PhysicalUser,CURR_PHYSICAL_ALLOC>::list curr_epoch_users;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
currency_symbol	nautilus/libccompat.c	/^    char *currency_symbol;    \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
current	legion_runtime/shared_lowlevel.cc	/^	Event current; $/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
current_arrival_count	legion_runtime/lowlevel_impl.h	/^      unsigned base_arrival_count, current_arrival_count;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
current_fence	legion_runtime/legion_tasks.h	/^      FenceOp *current_fence;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
current_gc_epoch	legion_runtime/runtime.h	/^      GarbageCollectionEpoch *current_gc_epoch;$/;"	m	class:LegionRuntime::HighLevel::Runtime
current_instances	legion_runtime/legion.h	/^      std::map<Memory,bool> current_instances;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
current_lock	legion_runtime/lowlevel_dma.cc	/^	Reservation current_lock;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest::Waiter	file:
current_pointer	legion_runtime/legion.h	/^      int current_pointer;$/;"	m	class:LegionRuntime::HighLevel::IndexIterator
current_proc	legion_runtime/legion.h	/^      Processor                           current_proc;$/;"	m	class:LegionRuntime::HighLevel::Task
current_state	legion_runtime/garbage_collection.h	/^      State current_state;$/;"	m	class:LegionRuntime::HighLevel::CollectableState
current_sync_level	acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON u8 current_sync_level;	\/* Mutex Sync (nested acquire) level *\/$/;"	m	struct:acpi_thread_state
current_table_count	acpi/acpica/aclocal.h	/^	u32 current_table_count;	\/* Tables currently in the array *\/$/;"	m	struct:acpi_table_list
current_trace	legion_runtime/legion_tasks.h	/^      LegionTrace *current_trace;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
current_versions	legion_runtime/region_tree.h	/^                     PHYSICAL_VERSION_ALLOC>::map current_versions;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
currentline	lua_src/ldebug.c	/^static int currentline (CallInfo *ci) {$/;"	f	file:
currentpc	lua_src/ldebug.c	/^static int currentpc (CallInfo *ci) {$/;"	f	file:
cv	test/benchmark.c	/^static struct cv {$/;"	s	file:
cvar	test/benchmark.c	/^	COND_T * cvar;$/;"	m	struct:container	file:
d	nautilus/libccompat.c	/^    double d;$/;"	m	union:ieee754dbl	file:
data	acpi/acpica/aclocal.h	/^	u8 *data;		\/* AML body or bytelist data *\/$/;"	m	struct:acpi_parse_obj_named
data	legion_runtime/lowlevel_impl.h	/^      CoherentData *data;$/;"	m	class:LegionRuntime::LowLevel::ExclusiveAccess
data	legion_runtime/lowlevel_impl.h	/^      CoherentData *data;$/;"	m	class:LegionRuntime::LowLevel::SharedAccess
data	legion_runtime/lowlevel_impl.h	/^      StaticData *data;$/;"	m	class:LegionRuntime::LowLevel::StaticAccess
data	legion_runtime/shared_lowlevel.cc	/^        void *data;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
data	lua_src/ldump.c	/^ void* data;$/;"	m	struct:__anon47	file:
data_ptr	legion_runtime/shared_lowlevel.cc	/^    void* Reservation::data_ptr(void) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
data_register_node	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *data_register_node;$/;"	m	struct:acpi_create_field_info	typeref:struct:acpi_create_field_info::acpi_namespace_node
data_size	legion_runtime/shared_lowlevel.cc	/^        size_t data_size;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
data_size	legion_runtime/shared_lowlevel.cc	/^    size_t Reservation::data_size(void) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
daxpy_task	test/custom_mapper.cc	/^void daxpy_task(const Task *task,$/;"	f
daxpy_task	test/partitioning.cc	/^void daxpy_task(const Task *task,$/;"	f
daxpy_task	test/privileges.cc	/^void daxpy_task(const Task *task,$/;"	f
db_debug	lua_src/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_gethook	lua_src/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	lua_src/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	lua_src/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	lua_src/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	lua_src/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	lua_src/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_getuservalue	lua_src/ldblib.c	/^static int db_getuservalue (lua_State *L) {$/;"	f	file:
db_sethook	lua_src/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	lua_src/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	lua_src/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	lua_src/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
db_setuservalue	lua_src/ldblib.c	/^static int db_setuservalue (lua_State *L) {$/;"	f	file:
db_traceback	lua_src/ldblib.c	/^static int db_traceback (lua_State *L) {$/;"	f	file:
db_upvalueid	lua_src/ldblib.c	/^static int db_upvalueid (lua_State *L) {$/;"	f	file:
db_upvaluejoin	lua_src/ldblib.c	/^static int db_upvaluejoin (lua_State *L) {$/;"	f	file:
dblib	lua_src/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
deactivate	legion_runtime/legion_ops.cc	/^    void AcquireOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
deactivate	legion_runtime/legion_ops.cc	/^    void AndPredOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
deactivate	legion_runtime/legion_ops.cc	/^    void CloseOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
deactivate	legion_runtime/legion_ops.cc	/^    void CopyOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
deactivate	legion_runtime/legion_ops.cc	/^    void DeletionOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
deactivate	legion_runtime/legion_ops.cc	/^    void FenceOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
deactivate	legion_runtime/legion_ops.cc	/^    void FuturePredOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
deactivate	legion_runtime/legion_ops.cc	/^    void MapOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
deactivate	legion_runtime/legion_ops.cc	/^    void MustEpochOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
deactivate	legion_runtime/legion_ops.cc	/^    void NotPredOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
deactivate	legion_runtime/legion_ops.cc	/^    void OrPredOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
deactivate	legion_runtime/legion_ops.cc	/^    void ReleaseOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
deactivate	legion_runtime/legion_tasks.cc	/^    void IndexTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
deactivate	legion_runtime/legion_tasks.cc	/^    void IndividualTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
deactivate	legion_runtime/legion_tasks.cc	/^    void InlineTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
deactivate	legion_runtime/legion_tasks.cc	/^    void PointTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
deactivate	legion_runtime/legion_tasks.cc	/^    void RemoteTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
deactivate	legion_runtime/legion_tasks.cc	/^    void SliceTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
deactivate	legion_runtime/legion_trace.cc	/^    void TraceCaptureOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
deactivate	legion_runtime/legion_trace.cc	/^    void TraceCompleteOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
deactivate	legion_runtime/shared_lowlevel.cc	/^    void IndexSpace::Impl::deactivate(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
deactivate	legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::deactivate(void)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
deactivate	legion_runtime/shared_lowlevel.cc	/^    void ReservationImpl::deactivate(void)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
deactivate_context	legion_runtime/runtime.cc	/^    void ProcessorManager::deactivate_context(SingleTask *context)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
deactivate_context	legion_runtime/runtime.cc	/^    void Runtime::deactivate_context(SingleTask *context)$/;"	f	class:LegionRuntime::HighLevel::Runtime
deactivate_multi	legion_runtime/legion_tasks.cc	/^    void MultiTask::deactivate_multi(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
deactivate_operation	legion_runtime/legion_ops.cc	/^    void Operation::deactivate_operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
deactivate_outstanding_task	legion_runtime/legion_tasks.cc	/^    void TaskOp::deactivate_outstanding_task(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
deactivate_predicate	legion_runtime/legion_ops.cc	/^    void Predicate::Impl::deactivate_predicate(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
deactivate_single	legion_runtime/legion_tasks.cc	/^    void SingleTask::deactivate_single(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
deactivate_speculative	legion_runtime/legion_ops.cc	/^    void SpeculativeOp::deactivate_speculative(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
deactivate_task	legion_runtime/legion_tasks.cc	/^    void TaskOp::deactivate_task(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
deactivate_wrapper	legion_runtime/legion_tasks.cc	/^    void WrapperTask::deactivate_wrapper(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
deallocate	legion_runtime/legion_allocation.h	/^      inline void deallocate(pointer p, size_type size) {$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
debug	legion_runtime/utilities.h	/^      inline void debug(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
debug_mutex	legion_runtime/shared_lowlevel.cc	/^NK_LOCK_T debug_mutex;$/;"	v
decimal_point	nautilus/libccompat.c	/^    char *decimal_point;      \/\/"."          LC_NUMERIC$/;"	m	struct:lconv	file:
decompose_index_space	legion_runtime/default_mapper.cc	/^    \/*static*\/ void DefaultMapper::decompose_index_space(const Domain &domain, $/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
decrement	legion_runtime/lowlevel_impl.h	/^      void decrement(void)$/;"	f	class:LegionRuntime::LowLevel::Atomic
decrement_active_contexts	legion_runtime/runtime.cc	/^    void ProcessorManager::decrement_active_contexts(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
decrement_outstanding	legion_runtime/legion_tasks.cc	/^    void SingleTask::decrement_outstanding(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
decrement_pending	legion_runtime/legion_tasks.cc	/^    void SingleTask::decrement_pending(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
decrement_utility	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::decrement_utility(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
default_init	arch/hrt/init.c	/^default_init (unsigned long mbd,$/;"	f
default_vc	nautilus/vc.c	/^static struct nk_virtual_console *default_vc = NULL;$/;"	v	typeref:struct:nk_virtual_console	file:
defer_collect_user	legion_runtime/region_tree.cc	/^    void LogicalView::defer_collect_user(Event term_event) $/;"	f	class:LegionRuntime::HighLevel::LogicalView
defer_collect_user	legion_runtime/runtime.cc	/^    void Runtime::defer_collect_user(LogicalView *view, Event term_event)$/;"	f	class:LegionRuntime::HighLevel::Runtime
defer_mapper_message	legion_runtime/runtime.cc	/^    void ProcessorManager::defer_mapper_message(Processor target, $/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
defer_mapping	legion_runtime/legion_tasks.cc	/^    bool IndexTask::defer_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
defer_mapping	legion_runtime/legion_tasks.cc	/^    bool IndividualTask::defer_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
defer_mapping	legion_runtime/legion_tasks.cc	/^    bool PointTask::defer_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
defer_mapping	legion_runtime/legion_tasks.cc	/^    bool SliceTask::defer_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
defer_mapping	legion_runtime/legion_tasks.cc	/^    bool WrapperTask::defer_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
defer_trigger	legion_runtime/shared_lowlevel.cc	/^    void EventImpl::defer_trigger(Event wait_for)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
deferred_complete	legion_runtime/legion_ops.cc	/^    void AcquireOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
deferred_complete	legion_runtime/legion_ops.cc	/^    void CloseOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
deferred_complete	legion_runtime/legion_ops.cc	/^    void CopyOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
deferred_complete	legion_runtime/legion_ops.cc	/^    void FenceOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
deferred_complete	legion_runtime/legion_ops.cc	/^    void Operation::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
deferred_complete	legion_runtime/legion_ops.cc	/^    void ReleaseOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
deferred_complete	legion_runtime/legion_ops.cc	/^    void SpeculativeOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
deferred_complete	legion_runtime/legion_tasks.h	/^      Event deferred_complete;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
deferred_events	legion_runtime/region_tree.h	/^      std::map<Event,FieldMask> &deferred_events;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
deferred_free	legion_runtime/activemsg.cc	/^void deferred_free(void *ptr)$/;"	f
deferred_free_mutex	legion_runtime/activemsg.cc	/^gasnet_hsl_t deferred_free_mutex;$/;"	v
deferred_free_pos	legion_runtime/activemsg.cc	/^int deferred_free_pos;$/;"	v
deferred_frees	legion_runtime/activemsg.cc	/^void *deferred_frees[DEFERRED_FREE_COUNT];$/;"	v
deferred_map	legion_runtime/legion_tasks.h	/^      Event deferred_map;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
deleted_field_spaces	legion_runtime/legion_tasks.h	/^      std::set<FieldSpace>                      deleted_field_spaces;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
deleted_fields	legion_runtime/legion_tasks.h	/^      std::set<std::pair<FieldSpace,FieldID> >  deleted_fields;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
deleted_index_spaces	legion_runtime/legion_tasks.h	/^      std::set<IndexSpace>                      deleted_index_spaces;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
deleted_regions	legion_runtime/legion_tasks.h	/^      std::set<LogicalRegion>                   deleted_regions;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
deletion_op_lock	legion_runtime/runtime.h	/^      Reservation deletion_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
delta	legion_runtime/lowlevel.cc	/^	int delta;$/;"	m	struct:LegionRuntime::LowLevel::BarrierAdjustMessage::RequestArgs	file:
delta	legion_runtime/lowlevel.cc	/^      int delta;$/;"	m	class:LegionRuntime::LowLevel::DeferredBarrierArrival	file:
denominator	legion_runtime/legion_tasks.h	/^      long long denominator;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
denominator	legion_runtime/legion_utilities.h	/^      T denominator;$/;"	m	class:LegionRuntime::HighLevel::Fraction
denseDotProd	test/hpcg/comp-dotprod.h	/^denseDotProd(const Rect<1> &subGridBounds,$/;"	f	namespace:__anon35
denseSPMV	test/hpcg/comp-spmv.h	/^denseSPMV($/;"	f	namespace:__anon31
denseWAXPBY	test/hpcg/comp-waxpby.h	/^denseWAXPBY(const Rect<1> &subgridBounds,$/;"	f	namespace:__anon36
dense_calc_new_currents	test/circuit_cpu.cc	/^bool CalcNewCurrentsTask::dense_calc_new_currents(const CircuitPiece &piece,$/;"	f	class:CalcNewCurrentsTask
dep_type	legion_runtime/legion_logging.h	/^        DependenceType dep_type;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
dependence_lock	legion_runtime/runtime.h	/^      Reservation dependence_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
dependence_preconditions	legion_runtime/runtime.h	/^      std::vector<Event> dependence_preconditions;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
dependences	legion_runtime/legion_ops.h	/^      std::vector<DependenceRecord> dependences;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
dependences	legion_runtime/legion_trace.h	/^      std::vector<std::vector<DependenceRecord> > dependences;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
dependent_children_mapped	legion_runtime/legion_ops.h	/^      std::set<Event> dependent_children_mapped;$/;"	m	class:LegionRuntime::HighLevel::Operation
depth	legion_runtime/legion.h	/^      unsigned                            depth;  $/;"	m	class:LegionRuntime::HighLevel::Task
depth	legion_runtime/legion_spy.h	/^      unsigned depth;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
depth	legion_runtime/region_tree.h	/^      const unsigned depth;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
depth	legion_runtime/region_tree.h	/^      const unsigned depth;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
depth	legion_runtime/region_tree.h	/^      const unsigned depth;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
depth	legion_runtime/region_tree.h	/^      unsigned depth;$/;"	m	class:LegionRuntime::HighLevel::PathTraverser
deque	legion_runtime/legion_allocation.h	/^      typedef std::deque<T, LegionAllocator<T, A> > deque;$/;"	t	struct:LegionRuntime::HighLevel::LegionContainer
dequeue_request	legion_runtime/lowlevel_dma.cc	/^    DmaRequest *DmaRequestQueue::dequeue_request(bool sleep \/*= true*\/)$/;"	f	class:LegionRuntime::LowLevel::DmaRequestQueue
dequeue_scancodes	dev/kbd.c	/^static void dequeue_scancodes()$/;"	f	file:
dequeue_thread_from_tlist	nautilus/thread.c	/^dequeue_thread_from_tlist (nk_thread_t * t)$/;"	f	file:
dequeue_thread_from_waitq	nautilus/thread.c	/^dequeue_thread_from_waitq (nk_thread_t * waiter, nk_thread_queue_t * waitq)$/;"	f	file:
derez	legion_runtime/legion_utilities.h	/^      Deserializer &derez;$/;"	m	class:LegionRuntime::HighLevel::DerezCheck
descriptor_type	acpi/acpica/aclocal.h	/^	u8 descriptor_type;	\/* Differentiate object descriptor types *\/$/;"	m	struct:acpi_namespace_node
deserialize	legion_runtime/arrays.h	/^      static Mapping<IDIM, ODIM> *deserialize(const int *data)$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
deserialize	legion_runtime/legion_utilities.h	/^    inline void AVXBitMask<MAX>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
deserialize	legion_runtime/legion_utilities.h	/^    inline void AVXTLBitMask<MAX>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
deserialize	legion_runtime/legion_utilities.h	/^    inline void BitMask<T,MAX,SHIFT,MASK>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::BitMask
deserialize	legion_runtime/legion_utilities.h	/^    inline void Deserializer::deserialize(T &element)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
deserialize	legion_runtime/legion_utilities.h	/^    inline void Deserializer::deserialize(void *dst, size_t bytes)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
deserialize	legion_runtime/legion_utilities.h	/^    inline void Deserializer::deserialize<FieldMask>(FieldMask &mask)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
deserialize	legion_runtime/legion_utilities.h	/^    inline void Deserializer::deserialize<bool>(bool &element)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
deserialize	legion_runtime/legion_utilities.h	/^    inline void SSEBitMask<MAX>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
deserialize	legion_runtime/legion_utilities.h	/^    inline void SSETLBitMask<MAX>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
deserialize	legion_runtime/legion_utilities.h	/^    inline void TLBitMask<T,MAX,SHIFT,MASK>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
deserialize	legion_runtime/lowlevel.h	/^      const IDType *deserialize(const IDType *data)$/;"	f	class:LegionRuntime::LowLevel::Domain
deserialize	legion_runtime/lowlevel.h	/^      void deserialize(const int *data)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
deserialize_mapping	legion_runtime/arrays.h	/^      static Mapping<IDIM, ODIM> *deserialize_mapping(const int *data)$/;"	f	class:LegionRuntime::Arrays::Mapping
dest	legion_runtime/lowlevel.cc	/^	gasnet_node_t dest;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
dest_object	acpi/acpica/aclocal.h	/^	union acpi_operand_object *dest_object;$/;"	m	struct:acpi_pkg_state	typeref:union:acpi_pkg_state::acpi_operand_object
destroy	legion_runtime/legion_allocation.h	/^      inline void destroy(pointer p) { p->~T(); }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
destroy	legion_runtime/lowlevel.cc	/^    void IndexSpace::destroy(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
destroy	legion_runtime/lowlevel.cc	/^    void IndexSpaceAllocator::destroy(void) $/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
destroy	legion_runtime/lowlevel.cc	/^    void RegionInstance::destroy(Event wait_on \/*= Event::NO_EVENT*\/) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
destroy	legion_runtime/shared_lowlevel.cc	/^    void IndexSpace::destroy(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
destroy	legion_runtime/shared_lowlevel.cc	/^    void IndexSpaceAllocator::destroy(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
destroy	legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::destroy(Event wait_on \/*= Event::NO_EVENT*\/) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
destroy	legion_runtime/utilities.h	/^    void destroy(void) { $/;"	f	class:LegionRuntime::ImmovableLock
destroy_barrier	legion_runtime/lowlevel.cc	/^    void Barrier::destroy_barrier(void)$/;"	f	class:LegionRuntime::LowLevel::Barrier
destroy_barrier	legion_runtime/shared_lowlevel.cc	/^    void Barrier::destroy_barrier(void)$/;"	f	class:LegionRuntime::LowLevel::Barrier
destroy_field_space	legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_field_space(Context ctx, FieldSpace handle)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_field_space	legion_runtime/region_tree.cc	/^    void RegionTreeForest::destroy_field_space(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
destroy_field_space	legion_runtime/runtime.cc	/^    void Runtime::destroy_field_space(Context ctx, FieldSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_index_partition	legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_index_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_index_partition	legion_runtime/region_tree.cc	/^    void RegionTreeForest::destroy_index_partition(IndexPartition handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
destroy_index_partition	legion_runtime/runtime.cc	/^    void Runtime::destroy_index_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_index_space	legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_index_space(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_index_space	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::destroy_index_space(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
destroy_index_space	legion_runtime/runtime.cc	/^    void Runtime::destroy_index_space(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_instance	legion_runtime/lowlevel.cc	/^      virtual void destroy_instance(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
destroy_instance	legion_runtime/lowlevel.cc	/^      virtual void destroy_instance(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
destroy_instance	legion_runtime/lowlevel.cc	/^    void GASNetMemory::destroy_instance(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
destroy_instance	legion_runtime/lowlevel_gpu.h	/^      virtual void destroy_instance(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
destroy_instance	legion_runtime/lowlevel_gpu.h	/^      virtual void destroy_instance(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
destroy_instance	legion_runtime/shared_lowlevel.cc	/^    void IndexSpace::Impl::destroy_instance(RegionInstance inst)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
destroy_instance_local	legion_runtime/lowlevel.cc	/^    void Memory::Impl::destroy_instance_local(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
destroy_instance_remote	legion_runtime/lowlevel.cc	/^    void Memory::Impl::destroy_instance_remote(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
destroy_lock	legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_lock(Context ctx, Lock l)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_lock	legion_runtime/runtime.cc	/^    void Runtime::destroy_lock(Context ctx, Lock l)$/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_logical_partition	legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_logical_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_logical_partition	legion_runtime/region_tree.cc	/^    void RegionTreeForest::destroy_logical_partition(LogicalPartition handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
destroy_logical_partition	legion_runtime/runtime.cc	/^    void Runtime::destroy_logical_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_logical_region	legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_logical_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_logical_region	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::destroy_logical_region(LogicalRegion handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
destroy_logical_region	legion_runtime/runtime.cc	/^    void Runtime::destroy_logical_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_node	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::destroy_node(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
destroy_node	legion_runtime/region_tree.cc	/^    void IndexPartNode::destroy_node(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
destroy_node	legion_runtime/region_tree.cc	/^    void IndexSpaceNode::destroy_node(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
destroy_node	legion_runtime/region_tree.cc	/^    void PartitionNode::destroy_node(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
destroy_node	legion_runtime/region_tree.cc	/^    void RegionNode::destroy_node(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
destroy_phase_barrier	legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_phase_barrier(Context ctx, PhaseBarrier pb)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_phase_barrier	legion_runtime/runtime.cc	/^    void Runtime::destroy_phase_barrier(Context ctx, PhaseBarrier pb)$/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_reservation	legion_runtime/lowlevel.cc	/^    void Reservation::destroy_reservation()$/;"	f	class:LegionRuntime::LowLevel::Reservation
destroy_reservation	legion_runtime/shared_lowlevel.cc	/^    void Reservation::destroy_reservation(void)$/;"	f	class:LegionRuntime::LowLevel::Reservation
destroy_user_barrier	legion_runtime/legion_tasks.cc	/^    void SingleTask::destroy_user_barrier(Barrier b)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
destroy_user_lock	legion_runtime/legion_tasks.cc	/^    void SingleTask::destroy_user_lock(Reservation r)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
destroyed	legion_runtime/region_tree.h	/^        bool destroyed;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
destruction_event	legion_runtime/garbage_collection.h	/^      UserEvent destruction_event;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
destruction_set	legion_runtime/region_tree.h	/^      NodeMask destruction_set;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
destruction_set	legion_runtime/region_tree.h	/^      NodeMask destruction_set;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
destruction_set	legion_runtime/region_tree.h	/^      NodeMask destruction_set;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
detect_cpu	nautilus/cpuid.c	/^detect_cpu (void)$/;"	f
detect_mem_map	nautilus/mm/boot_mm.c	/^detect_mem_map (unsigned long mbd)$/;"	f	file:
dev_list	dev/virtio_pci.c	/^static struct list_head dev_list;$/;"	v	typeref:struct:list_head	file:
device	acpi/acpica/aclocal.h	/^	struct acpi_gpe_notify_object device;   \/* List of _PRW devices for implicit notify *\/$/;"	m	union:acpi_gpe_dispatch_info	typeref:struct:acpi_gpe_dispatch_info::acpi_gpe_notify_object
device_device_copies	legion_runtime/lowlevel_gpu.cc	/^      std::deque<GPUJob*> device_device_copies;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
device_host_copies	legion_runtime/lowlevel_gpu.cc	/^      std::deque<GPUJob*> device_host_copies;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
device_to_device_stream	legion_runtime/lowlevel_gpu.cc	/^      CUstream device_to_device_stream;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
device_to_host_stream	legion_runtime/lowlevel_gpu.cc	/^      CUstream device_to_host_stream;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
df_handler	nautilus/idt.c	/^df_handler (excp_entry_t * excp,$/;"	f	file:
diag	test/hpcg/sparsemat.h	/^    Vector diag;$/;"	m	struct:lgncg::SparseMatrix
did	legion_runtime/garbage_collection.h	/^      const DistributedID did;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
did	legion_runtime/garbage_collection.h	/^      const DistributedID did;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
did	legion_runtime/runtime.h	/^        DistributedID did;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredRecycleArgs
diff	legion_runtime/utilities.h	/^    bool diff;$/;"	m	class:LegionRuntime::TimeStamp
diff_allocations	legion_runtime/runtime.h	/^        int       diff_allocations;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::AllocationTracker
diff_bytes	legion_runtime/runtime.h	/^        off_t           diff_bytes;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::AllocationTracker
difference_type	legion_runtime/legion_allocation.h	/^      typedef ptrdiff_t difference_type;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
diffs	test/ipi.c	/^static uint64_t diffs[TRIALS];$/;"	v	file:
difftime	nautilus/libccompat.c	/^double difftime(time_t time1, time_t time2)$/;"	f
digs	nautilus/doprnt.c	/^static char digs[] = "0123456789abcdef";$/;"	v	file:
dim	legion_runtime/lowlevel.h	/^	int dim;$/;"	m	class:LegionRuntime::LowLevel::DomainLinearization
dim	legion_runtime/lowlevel.h	/^      int dim;$/;"	m	class:LegionRuntime::LowLevel::Domain
dim	legion_runtime/lowlevel.h	/^      int dim;$/;"	m	class:LegionRuntime::LowLevel::DomainPoint
dim_size	legion_runtime/arrays.h	/^      int dim_size(int dim) const$/;"	f	class:LegionRuntime::Arrays::Rect
dir	legion_runtime/rectangle_set.h	/^      Direction dir;$/;"	m	class:LegionRuntime::HighLevel::Segment
dirty	legion_runtime/legion_utilities.h	/^      bool dirty;$/;"	m	class:LegionRuntime::HighLevel::BitPermutation
dirty_mask	legion_runtime/region_tree.h	/^      FieldMask dirty_mask;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
dirty_mask	legion_runtime/region_tree.h	/^      FieldMask dirty_mask;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
dirty_mask	legion_runtime/region_tree.h	/^      FieldMask dirty_mask;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
disable	legion_runtime/lowlevel.cc	/^    void ElementMask::disable(int start, int count \/*= 1*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
disable	legion_runtime/shared_lowlevel.cc	/^    void ElementMask::disable(int start, int count \/*= 1*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
disable_8259pic	nautilus/irq.c	/^disable_8259pic (void)$/;"	f
disable_all_events	nautilus/pmc.c	/^disable_all_events (void)$/;"	f
disable_blink	dev/vga.c	/^static void disable_blink()$/;"	f	file:
disable_idle_task	legion_runtime/lowlevel.cc	/^      virtual void disable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
disable_idle_task	legion_runtime/lowlevel.cc	/^    void Processor::disable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::Processor
disable_idle_task	legion_runtime/lowlevel.cc	/^    void UtilityProcessor::disable_idle_task(Processor::Impl *proc)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
disable_idle_task	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::disable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
disable_idle_task	legion_runtime/lowlevel_impl.h	/^      virtual void disable_idle_task(void) { assert(0); }$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
disable_idle_task	legion_runtime/shared_lowlevel.cc	/^    void Processor::disable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::Processor
disable_idle_task	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::disable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
disable_perf_event	nautilus/pmc.c	/^disable_perf_event (perf_event_t * event)$/;"	f
disable_profiling	legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::disable_profiling(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
disable_profiling	legion_runtime/legion_profiling.h	/^      static inline void disable_profiling(void)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
discharge2anyreg	lua_src/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	lua_src/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dischargejpc	lua_src/lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	file:
disjoint	legion_runtime/legion_logging.h	/^        bool disjoint;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexPartition
disjoint	legion_runtime/region_tree.h	/^      const bool disjoint;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
disjoint	legion_runtime/region_tree.h	/^      const bool disjoint;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
disjoint_subsets	legion_runtime/region_tree.h	/^      std::set<std::pair<Color,Color> > disjoint_subsets;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
disjoint_subspaces	legion_runtime/region_tree.h	/^      std::set<std::pair<Color,Color> > disjoint_subspaces;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
dispatch	acpi/acpica/aclocal.h	/^	union acpi_gpe_dispatch_info dispatch;	\/* Either Method or Handler *\/$/;"	m	struct:acpi_gpe_event_info	typeref:union:acpi_gpe_event_info::acpi_gpe_dispatch_info
dispatch	test/circuit_cpu.cc	/^bool CheckTask::dispatch(Context ctx, HighLevelRuntime *runtime, bool success)$/;"	f	class:CheckTask
dispatch_task	test/circuit.h	/^  void dispatch_task(T &launcher, Context ctx, HighLevelRuntime *runtime,$/;"	f	namespace:TaskHelper
dist_collectables	legion_runtime/runtime.h	/^                     RUNTIME_DIST_COLLECT_ALLOC>::map dist_collectables;$/;"	m	class:LegionRuntime::HighLevel::Runtime
distance_high	legion_runtime/rectangle_set.h	/^    inline T Segment<T>::distance_high(const Segment<T> &rhs) const$/;"	f	class:LegionRuntime::HighLevel::Segment
distance_low	legion_runtime/rectangle_set.h	/^    inline T Segment<T>::distance_low(const Segment<T> &rhs) const$/;"	f	class:LegionRuntime::HighLevel::Segment
distribute_task	legion_runtime/legion_tasks.cc	/^    bool IndexTask::distribute_task(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
distribute_task	legion_runtime/legion_tasks.cc	/^    bool IndividualTask::distribute_task(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
distribute_task	legion_runtime/legion_tasks.cc	/^    bool PointTask::distribute_task(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
distribute_task	legion_runtime/legion_tasks.cc	/^    bool SliceTask::distribute_task(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
distribute_task	legion_runtime/legion_tasks.cc	/^    bool WrapperTask::distribute_task(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
distribute_tasks	legion_runtime/legion_ops.cc	/^    void MustEpochDistributor::distribute_tasks(Runtime *runtime,$/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
distributed_collectable_lock	legion_runtime/runtime.h	/^      Reservation distributed_collectable_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
distributed_id_lock	legion_runtime/runtime.h	/^      Reservation distributed_id_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
distributed_lock	legion_runtime/region_tree.h	/^      Reservation distributed_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
divide	legion_runtime/legion_utilities.h	/^    void Fraction<T>::divide(T factor)$/;"	f	class:LegionRuntime::HighLevel::Fraction
divides	legion_runtime/rectangle_set.h	/^    inline bool Segment<T>::divides(const Segment<T> &other) const$/;"	f	class:LegionRuntime::HighLevel::Segment
dma_cond	legion_runtime/shared_lowlevel.cc	/^      nk_condvar_t       dma_cond;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
dma_lock	legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T      dma_lock;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
dma_queue	legion_runtime/lowlevel_dma.cc	/^    static DmaRequestQueue *dma_queue = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
dma_queue	legion_runtime/shared_lowlevel.cc	/^      static DMAQueue *dma_queue;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
dma_queue	legion_runtime/shared_lowlevel.cc	/^    DMAQueue *Runtime::dma_queue = NULL;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
dma_shutdown	legion_runtime/shared_lowlevel.cc	/^      bool dma_shutdown;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
dma_shutdown_requested	legion_runtime/lowlevel_gpu.cc	/^    static volatile bool dma_shutdown_requested = false;$/;"	m	namespace:LegionRuntime::LowLevel	file:
dma_threads	legion_runtime/lowlevel_gpu.cc	/^    static std::vector<pthread_t> dma_threads;$/;"	m	namespace:LegionRuntime::LowLevel	file:
dma_threads	legion_runtime/shared_lowlevel.cc	/^      std::vector<nk_thread_id_t> dma_threads;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
dma_worker_thread_loop	legion_runtime/lowlevel_dma.cc	/^    static void *dma_worker_thread_loop(void *arg)$/;"	f	namespace:LegionRuntime::LowLevel
doMG	test/hpcg/hpcg-problem.h	/^    bool doMG;$/;"	m	struct:Problem
doPreconditioning	test/hpcg/hpcg-main.cc	/^    bool doPreconditioning;$/;"	m	struct:__anon37::DriverParams	file:
do_domain	legion_runtime/shared_lowlevel.cc	/^        void do_domain(const Domain domain)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter
do_domain	legion_runtime/shared_lowlevel.cc	/^        void do_domain(const Domain domain)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply
do_domain	legion_runtime/shared_lowlevel.cc	/^        void do_domain(const Domain domain)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold
do_hash	nautilus/hashtable.c	/^do_hash (struct nk_hashtable * htable, addr_t key) $/;"	f	file:
do_putchar	nautilus/printk.c	48;"	d	file:
do_puts	nautilus/printk.c	49;"	d	file:
do_remote_apply_red_list	legion_runtime/lowlevel.cc	/^    void do_remote_apply_red_list(int node, Memory mem, off_t offset,$/;"	f	namespace:LegionRuntime::LowLevel
do_remote_fence	legion_runtime/lowlevel.cc	/^    void do_remote_fence(Memory mem, unsigned sequence_id, unsigned num_writes, Event event)$/;"	f	namespace:LegionRuntime::LowLevel
do_remote_reduce	legion_runtime/lowlevel.cc	/^    unsigned do_remote_reduce(Memory mem, off_t offset,$/;"	f	namespace:LegionRuntime::LowLevel
do_remote_write	legion_runtime/lowlevel.cc	/^    unsigned do_remote_write(Memory mem, off_t offset,$/;"	f	namespace:LegionRuntime::LowLevel
do_some_polling	legion_runtime/activemsg.cc	/^void do_some_polling(void)$/;"	f
do_span	legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet
do_span	legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut
do_span	legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut
do_span	legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce
do_span	legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
do_span	legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
do_span	legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet
do_span	legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut
do_span	legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched
do_span	legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut
do_span	legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched
do_span	legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutRedList
do_span	legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce
do_span	legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
do_span	legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
do_span	legion_runtime/lowlevel_gpu.cc	/^      void do_span(off_t pos, size_t len)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy1D
do_span	legion_runtime/shared_lowlevel.cc	/^        void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
do_span	legion_runtime/shared_lowlevel.cc	/^        void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply
do_span	legion_runtime/shared_lowlevel.cc	/^        void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RedopFold
do_span	legion_runtime/shared_lowlevel.cc	/^        void do_span(int start, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter
do_span	legion_runtime/shared_lowlevel.cc	/^        void do_span(int start, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply
do_span	legion_runtime/shared_lowlevel.cc	/^        void do_span(int start, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold
docall	lua_src/lua.c	/^static int docall (lua_State *L, int narg, int nres) {$/;"	f	file:
dofile	lua_src/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:
dofilecont	lua_src/lbaselib.c	/^static int dofilecont (lua_State *L) {$/;"	f	file:
dojump	lua_src/lvm.c	502;"	d	file:
dolibrary	lua_src/lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	file:
domain	legion_runtime/legion.h	/^        Domain domain;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::DomainSplit
domain	legion_runtime/lowlevel_dma.cc	/^      Domain domain;$/;"	m	class:LegionRuntime::LowLevel::CopyRequest	file:
domain	legion_runtime/lowlevel_dma.cc	/^      Domain domain;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
domain	legion_runtime/region_tree.h	/^      const Domain domain;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
domain	legion_runtime/runtime.h	/^        Domain domain;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureMapSetArgs
domain	legion_runtime/shared_lowlevel.cc	/^      Domain domain;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
dominates	legion_runtime/interval_tree.h	/^    bool IntervalTree<T,DISCRETE>::dominates(T left, T right) const$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
dominates	legion_runtime/interval_tree.h	/^    bool IntervalTreeNode<T,DISCRETE>::dominates(T left, T right) const$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
dominates	legion_runtime/region_tree.cc	/^    bool CompositeNode::dominates(RegionTreeNode *dst)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
dominates	legion_runtime/region_tree.cc	/^    bool IndexPartNode::dominates(IndexPartNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
dominates	legion_runtime/region_tree.cc	/^    bool IndexPartNode::dominates(IndexSpaceNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
dominates	legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::dominates(IndexPartNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
dominates	legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::dominates(IndexSpaceNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
dominates	legion_runtime/region_tree.cc	/^    bool PartitionNode::dominates(RegionTreeNode *other)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
dominates	legion_runtime/region_tree.cc	/^    bool RegionNode::dominates(RegionTreeNode *other)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
dominator_mask	legion_runtime/region_tree.h	/^      FieldMask dominator_mask;$/;"	m	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
dominators	legion_runtime/region_tree.h	/^      std::map<IndexTreeNode*,bool> dominators;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
done	test/benchmark.c	/^static volatile int done[2];$/;"	v	file:
done	test/ipi.c	/^    volatile uint64_t  done;$/;"	m	struct:time_struct	file:
done	test/ipi.c	/^static volatile int done = 0;$/;"	v	file:
done_event	legion_runtime/shared_lowlevel.cc	/^      EventImpl *done_event;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
done_sync	arch/hrt/hrt.c	/^static volatile int done_sync = 0;$/;"	v	file:
donextjump	lua_src/lvm.c	508;"	d	file:
dooptions	lua_src/loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	file:
dostring	lua_src/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:
dot	legion_runtime/arrays.h	/^      int dot(const Point<DIM> other) const { return dot(*this, other); }$/;"	f	class:LegionRuntime::Arrays::Point
dot	legion_runtime/arrays.h	/^      int dot(const Point<DIM> other) const$/;"	f	class:LegionRuntime::Arrays::Point
dot	legion_runtime/arrays.h	/^      static int dot(const Point<DIM> a, const Point<DIM> b)$/;"	f	class:LegionRuntime::Arrays::Point
dotProdTask	test/hpcg/comp-dotprod.h	/^dotProdTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
dothecall	lua_src/lgc.c	/^static void dothecall (lua_State *L, void *ud) {$/;"	f	file:
dotprod	test/hpcg/comp-dotprod.h	/^dotprod(Vector &x,$/;"	f	namespace:lgncg
dotty	lua_src/lua.c	/^static void dotty (lua_State *L) {$/;"	f	file:
down	legion_runtime/legion_logging.cc	/^    void TreeStateLogger::down(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
down	legion_runtime/legion_spy.cc	/^    void TreeStateLogger::down(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
drand48	nautilus/libccompat.c	/^drand48(void) $/;"	f
drill_page_tables	nautilus/paging.c	/^drill_page_tables (addr_t addr, addr_t map_addr, uint64_t flags)$/;"	f	file:
drill_pd	nautilus/paging.c	/^drill_pd (pde_t * pd, addr_t addr, addr_t map_addr, uint64_t flags)$/;"	f	file:
drill_pdpt	nautilus/paging.c	/^drill_pdpt (pdpte_t * pdpt, addr_t addr, addr_t map_addr, uint64_t flags)$/;"	f	file:
dsdt	arch/hrt/shutdown.c	/^    uint32_t  dsdt;$/;"	m	struct:shutdown_info	file:
dsdt	arch/x64/shutdown.c	/^    uint32_t  dsdt;$/;"	m	struct:shutdown_info	file:
dst	legion_runtime/lowlevel_dma.cc	/^      Domain::CopySrcDstField dst;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
dst	legion_runtime/lowlevel_dma.cc	/^      GPUProcessor *src, *dst;$/;"	m	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier	file:
dst	legion_runtime/lowlevel_gpu.cc	/^      void *dst;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy1D	file:
dst	legion_runtime/lowlevel_gpu.cc	/^      void *dst;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
dst_acc	legion_runtime/lowlevel_dma.cc	/^      RegionAccessor<AccessorType::Generic> dst_acc;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier	file:
dst_base	legion_runtime/lowlevel.cc	/^	char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
dst_base	legion_runtime/lowlevel_dma.cc	/^	char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
dst_base	legion_runtime/lowlevel_dma.cc	/^      char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier	file:
dst_base	legion_runtime/lowlevel_dma.cc	/^      char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier	file:
dst_base	legion_runtime/lowlevel_dma.cc	/^      char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::MemcpyMemPairCopier	file:
dst_base	legion_runtime/shared_lowlevel.cc	/^        char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
dst_base	legion_runtime/shared_lowlevel.cc	/^        char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply	file:
dst_base	legion_runtime/shared_lowlevel.cc	/^        char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopFold	file:
dst_buffer	legion_runtime/lowlevel_dma.cc	/^      char *dst_buffer;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
dst_inst	legion_runtime/lowlevel_dma.cc	/^      RegionInstance::Impl *dst_inst;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
dst_instance	legion_runtime/legion_logging.h	/^        PhysicalInstance dst_instance;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
dst_mapping_paths	legion_runtime/legion_ops.h	/^      std::vector<RegionTreePath> dst_mapping_paths;$/;"	m	class:LegionRuntime::HighLevel::CopyOp
dst_mask	legion_runtime/shared_lowlevel.cc	/^          const ElementMask &dst_mask;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2	file:
dst_mem	legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::BufferedMemPairCopier	file:
dst_mem	legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
dst_mem	legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
dst_offset	legion_runtime/lowlevel_dma.cc	/^      unsigned src_offset, dst_offset, size;$/;"	m	struct:LegionRuntime::LowLevel::OffsetsAndSize	file:
dst_privilege_paths	legion_runtime/legion_ops.h	/^      std::vector<RegionTreePath> dst_privilege_paths;$/;"	m	class:LegionRuntime::HighLevel::CopyOp
dst_requirements	legion_runtime/legion.h	/^      std::vector<RegionRequirement>    dst_requirements;$/;"	m	class:LegionRuntime::HighLevel::Copy
dst_requirements	legion_runtime/legion.h	/^      std::vector<RegionRequirement>  dst_requirements;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
dst_size	legion_runtime/lowlevel_dma.cc	/^	off_t dst_size;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteMemPairCopier::PendingGather	file:
dst_size	legion_runtime/lowlevel_dma.cc	/^      std::vector<int> dst_size;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
dst_start	legion_runtime/lowlevel_dma.cc	/^	off_t dst_start;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteMemPairCopier::PendingGather	file:
dst_start	legion_runtime/lowlevel_dma.cc	/^      std::vector<off_t> dst_start;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
dst_stride	legion_runtime/lowlevel_gpu.cc	/^      off_t dst_stride, src_stride;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
dstptr	legion_runtime/activemsg.cc	/^  void *dstptr;$/;"	m	struct:OutgoingMessage	file:
dsts	legion_runtime/lowlevel_dma.cc	/^	std::vector<void *> dsts;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
dsts	legion_runtime/shared_lowlevel.cc	/^	std::vector<Domain::CopySrcDstField> dsts;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter	file:
dsts	legion_runtime/shared_lowlevel.cc	/^        std::vector<Domain::CopySrcDstField> dsts;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply	file:
dsts	legion_runtime/shared_lowlevel.cc	/^        std::vector<Domain::CopySrcDstField> dsts;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold	file:
dsts	legion_runtime/shared_lowlevel.cc	/^      std::vector<Domain::CopySrcDstField> dsts;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
dt	test/circuit.h	/^  float         dt;$/;"	m	struct:CircuitPiece
dtype	legion_runtime/legion.h	/^        DependenceType dtype;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
dtype	legion_runtime/legion_ops.h	/^        DependenceType dtype;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
dtype	legion_runtime/legion_trace.h	/^        DependenceType dtype;$/;"	m	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
dummy	legion_runtime/lowlevel_impl.h	/^      uint64_t dummy;$/;"	m	struct:LegionRuntime::LowLevel::ElementMaskImpl
dummy	legion_runtime/shared_lowlevel.cc	/^      int dummy;$/;"	m	struct:LegionRuntime::LowLevel::ElementMaskImpl	file:
dummy	nautilus/nemo.c	/^dummy (void)$/;"	f	file:
dummy_int_handler	dev/apic.c	/^dummy_int_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
dummy_medium_handler	legion_runtime/activemsg.h	/^void dummy_medium_handler(MSGTYPE dummy, const void *data, size_t datalen) {}$/;"	f
dummy_medium_w_reply_handler	legion_runtime/activemsg.h	/^RPLTYPE dummy_medium_w_reply_handler(MSGTYPE dummy, const void *data, size_t datalen) { RPLTYPE dummyret; return dummyret; }$/;"	f
dummy_mono_clock	nautilus/libccompat.c	/^static uint64_t dummy_mono_clock = 0;$/;"	v	file:
dummy_short_handler	legion_runtime/activemsg.h	/^void dummy_short_handler(MSGTYPE dummy) {}$/;"	f
dummy_short_w_reply_handler	legion_runtime/activemsg.h	/^RPLTYPE dummy_short_w_reply_handler(MSGTYPE dummy) { RPLTYPE dummyret; return dummyret; }$/;"	f
dummynode	lua_src/ltable.c	68;"	d	file:
dummynode_	lua_src/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dump	test/hpcg/vector.h	/^    dump(std::string prefix,$/;"	f	struct:lgncg::Vector
dump_adj_list	nautilus/numa.c	/^dump_adj_list (struct numa_domain * d)$/;"	f	file:
dump_allocation_info	legion_runtime/runtime.cc	/^    void Runtime::dump_allocation_info(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
dump_logical_context	legion_runtime/region_tree.cc	/^    void PartitionNode::dump_logical_context(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
dump_logical_context	legion_runtime/region_tree.cc	/^    void RegionNode::dump_logical_context(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionNode
dump_logical_state	legion_runtime/region_tree.cc	/^    void RegionTreeForest::dump_logical_state(LogicalRegion region,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
dump_mem_regions	nautilus/numa.c	/^dump_mem_regions (struct numa_domain * d)$/;"	f	file:
dump_mwait_info	arch/hrt/mwait.c	/^dump_mwait_info (void)$/;"	f	file:
dump_mwait_info	arch/x64/mwait.c	/^dump_mwait_info (void)$/;"	f	file:
dump_numa_domains	nautilus/numa.c	/^dump_numa_domains (struct nk_locality_info * numa)$/;"	f	file:
dump_numa_matrix	nautilus/numa.c	/^dump_numa_matrix (struct nk_locality_info * numa)$/;"	f	file:
dump_physical_context	legion_runtime/region_tree.cc	/^    void PartitionNode::dump_physical_context(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
dump_physical_context	legion_runtime/region_tree.cc	/^    void RegionNode::dump_physical_context(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
dump_physical_state	legion_runtime/region_tree.cc	/^    void RegionTreeForest::dump_physical_state(LogicalRegion region,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
dump_pml4	arch/hrt/hrt.c	/^dump_pml4 (void *pt)$/;"	f	file:
dump_processor_states	legion_runtime/runtime.cc	/^    void Runtime::dump_processor_states(FILE *target)$/;"	f	class:LegionRuntime::HighLevel::Runtime
dump_profiling	legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::dump_profiling(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
dump_profiling	legion_runtime/legion_profiling.h	/^      static inline void dump_profiling(void)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
dump_state	legion_runtime/runtime.cc	/^    void ProcessorManager::dump_state(FILE *target)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
dump_trace	legion_runtime/lowlevel.cc	/^    \/*static*\/ void Tracer<ITEM>::dump_trace(const char *filename, bool append)$/;"	f	class:LegionRuntime::LowLevel::Tracer
dumped	legion_runtime/legion_profiling.h	/^        int dumped;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
dval	test/circuit.cc	/^union test_dbl { double dval; unsigned long long uval; };$/;"	m	union:test_dbl	file:
dyd	lua_src/ldo.c	/^  Dyndata dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:SParser	file:
dynamic_independence_tests	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::dynamic_independence_tests = true;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
dynamic_independence_tests	legion_runtime/runtime.h	/^      static bool dynamic_independence_tests;$/;"	m	class:LegionRuntime::HighLevel::Runtime
dynamic_lock	legion_runtime/region_tree.h	/^      Reservation dynamic_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
dynamic_part_tests	legion_runtime/region_tree.h	/^      std::deque<DynamicPartTest>  dynamic_part_tests;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
dynamic_space_tests	legion_runtime/region_tree.h	/^      std::deque<DynamicSpaceTest> dynamic_space_tests;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
early_acpi_os_unmap_memory	acpi/osl.c	/^void early_acpi_os_unmap_memory(void __iomem *virt, acpi_size size)$/;"	f
early_map	legion_runtime/legion.h	/^      bool early_map;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
early_map_regions	legion_runtime/legion_tasks.cc	/^    bool TaskOp::early_map_regions(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
early_mapped_regions	legion_runtime/legion_tasks.h	/^      std::map<unsigned\/*idx*\/,InstanceRef> early_mapped_regions;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
early_printk	nautilus/printk.c	/^early_printk (const char *fmt, va_list args)$/;"	f
echoBanner	test/hpcg/hpcg-main.cc	/^echoBanner(const DriverParams &params)$/;"	f	namespace:__anon37
efi_mem_types	nautilus/sfi.c	/^static char * efi_mem_types[] = {$/;"	v	file:
elem	legion_runtime/legion_utilities.h	/^    inline __m256d& AVXBitMask<MAX>::elem(const unsigned int &idx)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
elem	legion_runtime/legion_utilities.h	/^    inline __m256d& AVXTLBitMask<MAX>::elem(const unsigned &idx)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
elem	legion_runtime/legion_utilities.h	/^    inline const __m256d& AVXBitMask<MAX>::elem(const unsigned int &idx) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
elem	legion_runtime/legion_utilities.h	/^    inline const __m256d& AVXTLBitMask<MAX>::elem(const unsigned &idx) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
elem_ptr	legion_runtime/accessor.h	/^	  inline char *elem_ptr(ptr_t ptr) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
elem_ptr	legion_runtime/accessor.h	/^	  inline char *elem_ptr(ptr_t ptr) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
elem_ptr	legion_runtime/accessor.h	/^	  inline char *elem_ptr(ptr_t ptr) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
elem_ptr	legion_runtime/accessor.h	/^	  inline char *elem_ptr(ptr_t ptr) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
elem_ptr	legion_runtime/accessor.h	/^	  inline char *elem_ptr(ptr_t ptr) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
elem_size	legion_runtime/shared_lowlevel.cc	/^	size_t elem_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter	file:
element_size	legion_runtime/lowlevel.cc	/^      size_t element_size;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
elems	legion_runtime/lowlevel_impl.h	/^      ET elems[SIZE];$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNode
elmt_size	legion_runtime/lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
elmt_size	legion_runtime/lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
elmt_size	legion_runtime/lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
elmt_size	legion_runtime/lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
elmt_size	legion_runtime/lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
elmt_size	legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
elmt_size	legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
elmt_size	legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
elmt_size	legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
elmt_size	legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
elmt_size	legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
elmt_size	legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
elmt_size	legion_runtime/lowlevel_gpu.cc	/^      size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy1D	file:
elmt_size	legion_runtime/lowlevel_impl.h	/^	size_t block_size, elmt_size;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
elmt_size	legion_runtime/shared_lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
elmt_size	legion_runtime/shared_lowlevel.cc	/^        size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
elmt_size	legion_runtime/shared_lowlevel.cc	/^        size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply	file:
empty	legion_runtime/lowlevel_impl.h	/^    bool JobQueue<JOBTYPES>::empty(void) const$/;"	f	class:LegionRuntime::LowLevel::JobQueue
empty	legion_runtime/runtime.h	/^      volatile bool empty;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
enable	legion_runtime/lowlevel.cc	/^    void ElementMask::enable(int start, int count \/*= 1*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enable	legion_runtime/shared_lowlevel.cc	/^    void ElementMask::enable(int start, int count \/*= 1*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enable_WAR_optimization	legion_runtime/legion.h	/^      bool enable_WAR_optimization;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
enable_address	acpi/acpica/aclocal.h	/^	struct acpi_generic_address enable_address;	\/* Address of enable reg *\/$/;"	m	struct:acpi_gpe_register_info	typeref:struct:acpi_gpe_register_info::acpi_generic_address
enable_all_events	nautilus/pmc.c	/^enable_all_events (void)$/;"	f
enable_bit_mask	acpi/acpica/aclocal.h	/^	u16 enable_bit_mask;$/;"	m	struct:acpi_fixed_event_info
enable_for_run	acpi/acpica/aclocal.h	/^	u8 enable_for_run;	\/* GPEs to keep enabled when running *\/$/;"	m	struct:acpi_gpe_register_info
enable_for_wake	acpi/acpica/aclocal.h	/^	u8 enable_for_wake;	\/* GPEs to keep enabled when sleeping *\/$/;"	m	struct:acpi_gpe_register_info
enable_idle_task	legion_runtime/lowlevel.cc	/^      virtual void enable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
enable_idle_task	legion_runtime/lowlevel.cc	/^    void Processor::enable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::Processor
enable_idle_task	legion_runtime/lowlevel.cc	/^    void UtilityProcessor::enable_idle_task(Processor::Impl *proc)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
enable_idle_task	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::enable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
enable_idle_task	legion_runtime/lowlevel_impl.h	/^      virtual void enable_idle_task(void) { assert(0); }$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
enable_idle_task	legion_runtime/shared_lowlevel.cc	/^    void Processor::enable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::Processor
enable_idle_task	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::enable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
enable_imprecise_filter	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::enable_imprecise_filter = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
enable_imprecise_filter	legion_runtime/runtime.h	/^      static bool enable_imprecise_filter;$/;"	m	class:LegionRuntime::HighLevel::Runtime
enable_peer_access	legion_runtime/lowlevel_gpu.cc	/^      void enable_peer_access(GPUProcessor::Internal *neighbor)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
enable_peer_access	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::enable_peer_access(GPUProcessor *peer)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
enable_perf_event	nautilus/pmc.c	/^enable_perf_event (perf_event_t * event)$/;"	f
enable_profiling	legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::enable_profiling(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
enable_profiling	legion_runtime/legion_profiling.h	/^      static inline void enable_profiling(void)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
enable_register_id	acpi/acpica/aclocal.h	/^	u8 enable_register_id;$/;"	m	struct:acpi_fixed_event_info
enable_sse	nautilus/fpu.c	/^enable_sse (void)$/;"	f	file:
enable_x87	nautilus/fpu.c	/^enable_x87 (void)$/;"	f	file:
enclosing	legion_runtime/legion_tasks.h	/^      SingleTask *enclosing;$/;"	m	class:LegionRuntime::HighLevel::InlineTask
enclosing_physical_contexts	legion_runtime/legion_tasks.h	/^      std::deque<RegionTreeContext> enclosing_physical_contexts;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
end	acpi/acpica/aclocal.h	/^	u16 end;$/;"	m	struct:acpi_port_info
end	test/benchmark.c	/^    uint64_t end;$/;"	m	struct:cv	file:
end_capture	lua_src/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
end_context	legion_runtime/legion_utilities.h	/^    inline void Deserializer::end_context(void)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
end_context	legion_runtime/legion_utilities.h	/^    inline void Serializer::end_context(void)$/;"	f	class:LegionRuntime::HighLevel::Serializer
end_cycle	test/ipi.c	/^    uint64_t end_cycle;$/;"	m	struct:time_struct	file:
end_dependence_analysis	legion_runtime/legion_ops.cc	/^    void Operation::end_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
end_event	legion_runtime/legion_logging.h	/^        Event end_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationEvents
end_helper	legion_runtime/legion.h	/^      static inline void end_helper(HighLevelRuntime *rt, Context ctx,$/;"	f	class:LegionRuntime::HighLevel::LegionSerialization
end_line	acpi/acpica/aclocal.h	/^	u32 end_line;$/;"	m	struct:acpi_parse_obj_asl
end_logical_line	acpi/acpica/aclocal.h	/^	u32 end_logical_line;$/;"	m	struct:acpi_parse_obj_asl
end_node	legion_runtime/region_tree.cc	/^    void LogicalCloser::end_node(FieldTree<LogicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalCloser
end_node	legion_runtime/region_tree.cc	/^    void LogicalFilter::end_node(FieldTree<LogicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalFilter
end_node	legion_runtime/region_tree.cc	/^    void PhysicalDepAnalyzer<FILTER>::end_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
end_node	legion_runtime/region_tree.cc	/^    void PhysicalFilter::end_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalFilter
end_node	legion_runtime/region_tree.cc	/^    void PhysicalUnpacker::end_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalUnpacker
end_node	legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
end_node	legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalFieldInvalidator
end_node	legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalOpAnalyzer
end_node	legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
end_node	legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::PhysicalEventFilter
end_node	legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::WARAnalyzer
end_perf_trace	legion_runtime/region_tree.cc	/^    void RegionTreeForest::end_perf_trace(unsigned long long tolerance)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
end_premapping	legion_runtime/legion_tasks.cc	/^    void SingleTask::end_premapping(RegionTreeID tid, UserEvent term_premap)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
end_smp_boot	asm/smpboot.S	/^end_smp_boot:$/;"	l
end_task	legion_runtime/legion.cc	/^    void HighLevelRuntime::end_task(Context ctx, const void *result, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
end_task	legion_runtime/legion.h	/^        static inline void end_task(HighLevelRuntime *rt, $/;"	f	struct:LegionRuntime::HighLevel::LegionSerialization::StructHandler
end_task	legion_runtime/legion.h	/^        static inline void end_task(HighLevelRuntime *rt, Context ctx, $/;"	f	struct:LegionRuntime::HighLevel::LegionSerialization::NonPODSerializer
end_task	legion_runtime/legion.h	/^        static inline void end_task(HighLevelRuntime *rt, Context ctx, $/;"	f	struct:LegionRuntime::HighLevel::LegionSerialization::StructHandler
end_task	legion_runtime/legion.h	/^      static inline void end_task(HighLevelRuntime *rt, Context ctx, T *result)$/;"	f	class:LegionRuntime::HighLevel::LegionSerialization
end_task	legion_runtime/legion_tasks.cc	/^    void SingleTask::end_task(const void *res, size_t res_size, bool owned)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
end_task	legion_runtime/runtime.cc	/^    void Runtime::end_task(SingleTask *ctx, const void *result, $/;"	f	class:LegionRuntime::HighLevel::Runtime
end_trace	legion_runtime/legion.cc	/^    void HighLevelRuntime::end_trace(Context ctx, TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
end_trace	legion_runtime/legion_tasks.cc	/^    void SingleTask::end_trace(TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
end_trace	legion_runtime/runtime.cc	/^    void Runtime::end_trace(Context ctx, TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
end_trace_capture	legion_runtime/legion_trace.cc	/^    void LegionTrace::end_trace_capture(void)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
end_trace_execution	legion_runtime/legion_trace.cc	/^    void LegionTrace::end_trace_execution(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
endpoint_manager	legion_runtime/activemsg.cc	/^static EndpointManager *endpoint_manager;$/;"	v	file:
endpoints	legion_runtime/activemsg.cc	/^  ActiveMessageEndpoint **endpoints;$/;"	m	class:EndpointManager	file:
enqueue	legion_runtime/lowlevel.cc	/^      void enqueue(gasnet_node_t dest, gasnet_handler_t handler,$/;"	f	class:LegionRuntime::LowLevel::AMQueue
enqueue_copy	legion_runtime/lowlevel_gpu.cc	/^      void enqueue_copy(GPUJob *job)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
enqueue_dma	legion_runtime/shared_lowlevel.cc	/^    void DMAQueue::enqueue_dma(CopyOperation *copy)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
enqueue_message	legion_runtime/activemsg.cc	/^  void enqueue_message(OutgoingMessage *hdr, bool in_order)$/;"	f	class:ActiveMessageEndpoint
enqueue_message	legion_runtime/activemsg.cc	/^  void enqueue_message(gasnet_node_t target, OutgoingMessage *hdr, bool in_order)$/;"	f	class:EndpointManager
enqueue_message	legion_runtime/activemsg.cc	/^void enqueue_message(gasnet_node_t target, int msgid,$/;"	f
enqueue_request	legion_runtime/lowlevel_dma.cc	/^    void DmaRequestQueue::enqueue_request(DmaRequest *r)$/;"	f	class:LegionRuntime::LowLevel::DmaRequestQueue
enqueue_scancode_as_keycode	nautilus/vc.c	/^static int enqueue_scancode_as_keycode(struct nk_virtual_console *cur_vc, uint8_t scan)$/;"	f	file:
enqueue_task	legion_runtime/lowlevel.cc	/^      virtual void enqueue_task(Task *task)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
enqueue_task	legion_runtime/lowlevel.cc	/^      virtual void enqueue_task(Task *task)$/;"	f	class:LegionRuntime::LowLevel::RemoteProcessor
enqueue_task	legion_runtime/lowlevel.cc	/^    void ProcessorGroup::enqueue_task(Task *task)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
enqueue_task	legion_runtime/lowlevel.cc	/^    void UtilityProcessor::enqueue_task(Task *task)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
enqueue_task	legion_runtime/lowlevel_gpu.cc	/^      void enqueue_task(GPUTask *job)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
enqueue_task	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::enqueue_task(Task *task)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
enqueue_task	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::enqueue_task(TaskDesc *task)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
enqueue_thread_on_tlist	nautilus/thread.c	/^enqueue_thread_on_tlist (nk_thread_t * t)$/;"	f	file:
enqueue_thread_on_waitq	nautilus/thread.c	/^enqueue_thread_on_waitq (nk_thread_t * waiter, nk_thread_queue_t * waitq)$/;"	f	file:
enterblock	lua_src/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isloop) {$/;"	f	file:
enterlevel	lua_src/lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	file:
entersweep	lua_src/lgc.c	/^static int entersweep (lua_State *L) {$/;"	f	file:
entry_count	nautilus/hashtable.c	/^    uint_t entry_count;$/;"	m	struct:nk_hashtable	file:
entry_list	legion_runtime/lowlevel.h	/^      void *entry_list;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
entry_x	test/saxpy_array.cc	/^  ptr_t entry_x[BLOCK_SIZE], entry_y[BLOCK_SIZE], entry_z[BLOCK_SIZE];$/;"	m	struct:Block	file:
entry_y	test/saxpy_array.cc	/^  ptr_t entry_x[BLOCK_SIZE], entry_y[BLOCK_SIZE], entry_z[BLOCK_SIZE];$/;"	m	struct:Block	file:
entry_z	test/saxpy_array.cc	/^  ptr_t entry_x[BLOCK_SIZE], entry_y[BLOCK_SIZE], entry_z[BLOCK_SIZE];$/;"	m	struct:Block	file:
enumerate_disabled	legion_runtime/lowlevel.cc	/^    ElementMask::Enumerator *ElementMask::enumerate_disabled(int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enumerate_disabled	legion_runtime/shared_lowlevel.cc	/^    ElementMask::Enumerator *ElementMask::enumerate_disabled(int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enumerate_enabled	legion_runtime/lowlevel.cc	/^    ElementMask::Enumerator *ElementMask::enumerate_enabled(int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enumerate_enabled	legion_runtime/shared_lowlevel.cc	/^    ElementMask::Enumerator *ElementMask::enumerate_enabled(int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enumerate_points	legion_runtime/legion_tasks.cc	/^    void SliceTask::enumerate_points(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
enumerator	legion_runtime/legion.h	/^      Enumerator *const enumerator;$/;"	m	class:LegionRuntime::HighLevel::IndexIterator
epoch	legion_runtime/runtime.h	/^        GarbageCollectionEpoch *epoch;$/;"	m	struct:LegionRuntime::HighLevel::GarbageCollectionEpoch::GarbageCollectionArgs
epoch_op_lock	legion_runtime/runtime.h	/^      Reservation epoch_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
eq_fn	nautilus/hashtable.c	/^    int (*eq_fn) (addr_t key1, addr_t key2);$/;"	m	struct:nk_hashtable	file:
errfile	lua_src/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
errloop	asm/excp_early.S	/^errloop:$/;"	l
errno	lua_src/lauxlib.c	/^int errno = 0;$/;"	v
error	legion_runtime/utilities.h	/^      inline void error(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
error	lua_src/lundump.c	/^static l_noret error(LoadState* S, const char* why)$/;"	f	file:
error_expected	lua_src/lparser.c	/^static l_noret error_expected (LexState *ls, int token) {$/;"	f	file:
error_int_handler	dev/apic.c	/^error_int_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
errorlimit	lua_src/lparser.c	/^static l_noret errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
escerror	lua_src/llex.c	/^static void escerror (LexState *ls, int *c, int n, const char *msg) {$/;"	f	file:
event	legion_runtime/legion_logging.h	/^        Event event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventTiming
event	legion_runtime/lowlevel.cc	/^	  Event event;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry	file:
event	legion_runtime/lowlevel.cc	/^	Event event;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
event	legion_runtime/lowlevel.cc	/^	Event event;$/;"	m	struct:LegionRuntime::LowLevel::BarrierAdjustMessage::RequestArgs	file:
event	legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::EventSubscribeArgs	file:
event	legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::EventTriggerArgs	file:
event	legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::PartialWriteEntry	file:
event	legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
event	legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteArgs	file:
event	legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteFenceArgs	file:
event	legion_runtime/lowlevel_dma.cc	/^	Event event;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
event	legion_runtime/lowlevel_dma.cc	/^      Event event;$/;"	m	class:LegionRuntime::LowLevel::CopyCompletionLogger	file:
event	legion_runtime/shared_lowlevel.cc	/^		Event event;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
event_gen	legion_runtime/lowlevel_impl.h	/^      unsigned time_units, event_id, event_gen, action;$/;"	m	struct:LegionRuntime::LowLevel::EventTraceItem
event_id	legion_runtime/lowlevel_impl.h	/^      unsigned time_units, event_id, event_gen, action;$/;"	m	struct:LegionRuntime::LowLevel::EventTraceItem
event_info	acpi/acpica/aclocal.h	/^	struct acpi_gpe_event_info *event_info;	\/* One for each GPE *\/$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_gpe_event_info
event_is_valid	nautilus/nemo.c	/^event_is_valid (nemo_event_id_t id)$/;"	f	file:
event_lock	legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         event_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
event_props	nautilus/pmc.c	/^static event_prop_t event_props[256] = $/;"	v	file:
event_references	legion_runtime/region_tree.h	/^      LegionContainer<Event,EVENT_REFERENCE_ALLOC>::set event_references;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
event_references	legion_runtime/region_tree.h	/^      std::set<Event> event_references;$/;"	m	class:LegionRuntime::HighLevel::ReductionView
event_stack	legion_runtime/lowlevel.cc	/^	EventStackEntry *event_stack;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
event_trace_file	legion_runtime/lowlevel.cc	/^    static char *event_trace_file = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
event_triggered	legion_runtime/lowlevel.cc	/^	  virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry
event_triggered	legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredBarrierArrival
event_triggered	legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredEventTrigger
event_triggered	legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
event_triggered	legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredLockDestruction
event_triggered	legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredLockRequest
event_triggered	legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredTaskSpawn
event_triggered	legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredUnlockRequest
event_triggered	legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
event_triggered	legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::PthreadCondWaiter
event_triggered	legion_runtime/lowlevel_dma.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::CopyCompletionLogger
event_triggered	legion_runtime/lowlevel_dma.cc	/^    bool DmaRequest::Waiter::event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DmaRequest::Waiter
event_triggered	legion_runtime/lowlevel_gpu.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
event_triggered	legion_runtime/lowlevel_gpu.cc	/^    bool GPUTask::event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
events	legion_runtime/lowlevel_dma.cc	/^      std::set<Event> events;$/;"	m	class:LegionRuntime::LowLevel::DelayedMemPairCopier	file:
events	legion_runtime/lowlevel_impl.h	/^      DynamicTable<EventTableAllocator> events;$/;"	m	struct:Node
events	legion_runtime/shared_lowlevel.cc	/^      std::vector<EventImpl*> events;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
exclusive	legion_runtime/legion.h	/^      bool exclusive;$/;"	m	struct:LegionRuntime::HighLevel::LockRequest
exclusive	legion_runtime/lowlevel.cc	/^      bool exclusive;$/;"	m	class:LegionRuntime::LowLevel::DeferredLockRequest	file:
exclusive	legion_runtime/region_tree.h	/^      bool exclusive;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
exclusive	legion_runtime/runtime.h	/^        bool exclusive;$/;"	m	struct:LegionRuntime::HighLevel::Grant::Impl::ReservationRequest
exclusive	legion_runtime/shared_lowlevel.cc	/^		bool exclusive;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
exclusive	legion_runtime/shared_lowlevel.cc	/^	bool exclusive;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
excp_codes	nautilus/idt.c	/^const char * excp_codes[NUM_EXCEPTIONS][2] = {$/;"	v
excp_err	asm/excp_early.S	/^excp_err:$/;"	l
excp_err_str	asm/excp_early.S	/^excp_err_str:$/;"	l
execute	legion_runtime/lowlevel.cc	/^      void execute(Processor *proc)$/;"	f	class:LegionRuntime::LowLevel::Task
execute	legion_runtime/lowlevel.cc	/^    void MultiNodeRollUp::execute(void)$/;"	f	class:LegionRuntime::LowLevel::MultiNodeRollUp
execute	legion_runtime/lowlevel_gpu.cc	/^      virtual void execute(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy1D
execute	legion_runtime/lowlevel_gpu.cc	/^      virtual void execute(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy2D
execute	legion_runtime/lowlevel_gpu.cc	/^    void GPUTask::execute(void)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
execute_by_owner_id	acpi/acpica/aclocal.h	/^	u8 execute_by_owner_id;$/;"	m	struct:acpi_gpe_walk_info
execute_index_space	legion_runtime/legion.cc	/^    Future HighLevelRuntime::execute_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
execute_index_space	legion_runtime/legion.cc	/^    FutureMap HighLevelRuntime::execute_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
execute_index_space	legion_runtime/runtime.cc	/^    Future Runtime::execute_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
execute_index_space	legion_runtime/runtime.cc	/^    FutureMap Runtime::execute_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
execute_must_epoch	legion_runtime/legion.cc	/^    FutureMap HighLevelRuntime::execute_must_epoch(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
execute_must_epoch	legion_runtime/runtime.cc	/^    FutureMap Runtime::execute_must_epoch(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
execute_task	legion_runtime/legion.cc	/^    Future HighLevelRuntime::execute_task(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
execute_task	legion_runtime/runtime.cc	/^    Future Runtime::execute_task(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
execute_task	legion_runtime/shared_lowlevel.cc	/^    bool ProcessorImpl::execute_task(bool permit_shutdown, int flags)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
execute_task_launch	legion_runtime/runtime.cc	/^    void Runtime::execute_task_launch(Context ctx, TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
executed	legion_runtime/legion_ops.h	/^      bool executed;$/;"	m	class:LegionRuntime::HighLevel::Operation
executed_children	legion_runtime/legion_tasks.h	/^      LegionContainer<Operation*,EXECUTED_CHILD_ALLOC>::set executed_children;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
executing_children	legion_runtime/legion_tasks.h	/^      LegionContainer<Operation*,EXECUTING_CHILD_ALLOC>::set executing_children;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
executing_processor	legion_runtime/legion_tasks.h	/^      Processor executing_processor;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
execution_times	legion_runtime/mapping_utilities.h	/^          std::list<long long> execution_times;$/;"	m	struct:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler::VariantProfile
exists	legion_runtime/lowlevel.h	/^      bool exists(void) const { return (is_id != 0) || (dim > 0); }$/;"	f	class:LegionRuntime::LowLevel::Domain
exists	legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; } $/;"	f	class:LegionRuntime::LowLevel::IndexSpace
exists	legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; }$/;"	f	class:LegionRuntime::LowLevel::Event
exists	legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; }$/;"	f	class:LegionRuntime::LowLevel::Memory
exists	legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; }$/;"	f	class:LegionRuntime::LowLevel::Processor
exists	legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
exists	legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; }$/;"	f	class:LegionRuntime::LowLevel::Reservation
exists	legion_runtime/runtime.h	/^      inline bool exists(void) const { return (ctx >= 0); }$/;"	f	class:LegionRuntime::HighLevel::RegionTreeContext
exit	nautilus/libccompat.c	/^exit(int status)$/;"	f
exp	nautilus/libccompat.c	/^double exp(double x)$/;"	f
exp1	lua_src/lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	file:
exp2reg	lua_src/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
expected	legion_runtime/shared_lowlevel.cc	/^                int expected;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
expected_btypes	acpi/acpica/aclocal.h	/^	u8 expected_btypes;$/;"	m	struct:acpi_name_info
explicit_utility_procs	legion_runtime/lowlevel.h	/^      bool explicit_utility_procs;$/;"	m	class:LegionRuntime::LowLevel::Machine
explist	lua_src/lparser.c	/^static int explist (LexState *ls, expdesc *v) {$/;"	f	file:
exponent	nautilus/libccompat.c	/^        uint32_t exponent  : 11;$/;"	m	struct:ieee754dbl::__anon44	file:
expr	lua_src/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
exprstat	lua_src/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
external_name	acpi/acpica/aclocal.h	/^	char *external_name;$/;"	m	struct:acpi_parse_obj_asl
external_name	acpi/acpica/aclocal.h	/^	const char *external_name;$/;"	m	struct:acpi_namestring_info
external_wait	legion_runtime/lowlevel.cc	/^    void Event::Impl::external_wait(Event::gen_t gen_needed)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
external_wait	legion_runtime/lowlevel.cc	/^    void Event::external_wait(void) const$/;"	f	class:LegionRuntime::LowLevel::Event
external_wait	legion_runtime/shared_lowlevel.cc	/^    void Event::external_wait(void) const$/;"	f	class:LegionRuntime::LowLevel::Event
extra	acpi/acpica/aclocal.h	/^	u8 extra;$/;"	m	struct:acpi_parse_obj_asl
extra_value	acpi/acpica/aclocal.h	/^	u32 extra_value;$/;"	m	struct:acpi_parse_obj_asl
extract_accessor	legion_runtime/accessor.h	/^    inline RegionAccessor<AT,ET> extract_accessor(const RT &region) $/;"	f	namespace:LegionRuntime::Accessor
extract_mask	legion_runtime/legion_utilities.h	/^    \/*static*\/ inline uint64_t AVXTLBitMask<MAX>::extract_mask(__m256d value)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
extract_mask	legion_runtime/legion_utilities.h	/^    \/*static*\/ inline uint64_t AVXTLBitMask<MAX>::extract_mask(__m256i value)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
extract_mask	legion_runtime/legion_utilities.h	/^    \/*static*\/ inline uint64_t SSETLBitMask<MAX>::extract_mask(__m128i value)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
f	lua_src/lauxlib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:LoadF	file:
f2cOp	test/hpcg/mg-data.h	/^    Vector f2cOp;$/;"	m	struct:lgncg::MGData
fGeom	test/hpcg/hpcg-problem.cc	/^    lgncg::Geometry fGeom;$/;"	m	struct:__anon33::PF2CTaskArgs	file:
f_call	lua_src/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_flush	lua_src/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_gc	lua_src/liolib.c	/^static int f_gc (lua_State *L) {$/;"	f	file:
f_lines	lua_src/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	lua_src/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_parser	lua_src/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	lua_src/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_seek	lua_src/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	lua_src/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_tostring	lua_src/liolib.c	/^static int f_tostring (lua_State *L) {$/;"	f	file:
f_write	lua_src/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
fabs	nautilus/libccompat.c	/^double fabs(double __x){$/;"	f
failed_index_tasks	legion_runtime/legion_ops.h	/^      std::set<IndexTask*> failed_index_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochTriggerer
failed_individual_tasks	legion_runtime/legion_ops.h	/^      std::set<IndividualTask*> failed_individual_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochTriggerer
failed_mappings	legion_runtime/default_mapper.h	/^      std::map<UniqueID,unsigned> failed_mappings;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
failed_slices	legion_runtime/legion_tasks.h	/^      std::set<SliceTask*> failed_slices;$/;"	m	class:LegionRuntime::HighLevel::DeferredSlicer
failed_thiefs	legion_runtime/runtime.h	/^      std::multimap<MapperID,Processor> failed_thiefs;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
fb	arch/k1om/xeon_phi.c	/^  volatile uint16_t * fb;$/;"	m	struct:__anon42	file:
fbmem_gpu_base	legion_runtime/lowlevel_gpu.cc	/^      void *fbmem_gpu_base;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
fbmem_reserve	legion_runtime/lowlevel_gpu.cc	/^      const size_t zcmem_reserve, fbmem_reserve;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
fbmem_size	legion_runtime/lowlevel_gpu.cc	/^      const size_t zcmem_size, fbmem_size;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
fclose	nautilus/libccompat.c	/^fclose (FILE * f)$/;"	f
fdopen	nautilus/libccompat.c	/^fdopen (int fd, const char * mode)$/;"	f
fence_gen	legion_runtime/legion_tasks.h	/^      GenerationID fence_gen;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
fence_op_lock	legion_runtime/runtime.h	/^      Reservation fence_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
feof	nautilus/libccompat.c	/^int feof(FILE * x)$/;"	f
ferror	nautilus/libccompat.c	/^ferror (FILE * f)$/;"	f
fflush	nautilus/libccompat.c	/^int fflush (FILE * f)$/;"	f
fgets	nautilus/libccompat.c	/^char *fgets(char *str, int n, FILE *stream)$/;"	f
fibonacci_task	test/tasks_and_futures.cc	/^int fibonacci_task(const Task *task,$/;"	f
fid	legion_runtime/legion_logging.h	/^        FieldID fid;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldCreation
fid	legion_runtime/legion_tasks.h	/^        FieldID    fid;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
fid	test/hpcg/vector.h	/^    LegionRuntime::HighLevel::FieldID fid;$/;"	m	struct:lgncg::Vector
field	lua_src/lparser.c	/^static void field (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
fieldSpaceID	test/hpcg/vector.h	/^    LegionRuntime::HighLevel::FieldSpaceID fieldSpaceID;$/;"	m	struct:lgncg::Vector
field_bit_length	acpi/acpica/aclocal.h	/^	u32 field_bit_length;$/;"	m	struct:acpi_create_field_info
field_bit_position	acpi/acpica/aclocal.h	/^	u32 field_bit_position;$/;"	m	struct:acpi_create_field_info
field_component	legion_runtime/legion_logging.h	/^        unsigned field_component;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
field_flag	acpi/acpica/aclocal.h	/^	u8 field_flag;$/;"	m	struct:acpi_field_info
field_flags	acpi/acpica/aclocal.h	/^	u8 field_flags;$/;"	m	struct:acpi_create_field_info
field_handle	legion_runtime/legion_logging.h	/^        FieldSpace field_handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
field_handle	legion_runtime/legion_logging.h	/^        FieldSpace field_handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
field_indexes	legion_runtime/region_tree.h	/^      std::map<unsigned\/*index*\/,FieldID> field_indexes;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
field_infos	legion_runtime/legion_profiling.h	/^        std::map<unsigned,size_t> field_infos;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
field_infos	legion_runtime/region_tree.h	/^      std::map<FieldID,Domain::CopySrcDstField> field_infos;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
field_mask	legion_runtime/region_tree.h	/^      FieldMask field_mask;$/;"	m	struct:LegionRuntime::HighLevel::GenericUser
field_mask	legion_runtime/region_tree.h	/^      const FieldMask field_mask;$/;"	m	class:LegionRuntime::HighLevel::LogicalPathRegistrar
field_mask	legion_runtime/region_tree.h	/^      const FieldMask field_mask;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegistrar
field_node	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *field_node;$/;"	m	struct:acpi_create_field_info	typeref:struct:acpi_create_field_info::acpi_namespace_node
field_node	legion_runtime/region_tree.h	/^      FieldSpaceNode *const field_node;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
field_nodes	legion_runtime/region_tree.h	/^      std::map<FieldSpace,FieldSpaceNode*>     field_nodes;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
field_offset	legion_runtime/accessor.h	/^	  off_t field_offset;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
field_size	legion_runtime/legion_tasks.h	/^        size_t     field_size;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
field_size	legion_runtime/lowlevel.cc	/^      const size_t &field_size(int idx) const { return *((&num_fields)+idx+1); }$/;"	f	struct:LegionRuntime::LowLevel::CreateInstancePayload
field_size	legion_runtime/lowlevel.cc	/^      size_t &field_size(int idx) { return *((&num_fields)+idx+1); }$/;"	f	struct:LegionRuntime::LowLevel::CreateInstancePayload
field_size	legion_runtime/region_tree.h	/^        size_t field_size;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
field_sizes	legion_runtime/lowlevel_impl.h	/^	int field_sizes[MAX_FIELDS_PER_INST];$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
field_sizes	legion_runtime/shared_lowlevel.cc	/^        std::vector<size_t> field_sizes;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
field_space	legion_runtime/legion.h	/^      FieldSpace field_space;$/;"	m	class:LegionRuntime::HighLevel::FieldAllocator
field_space	legion_runtime/legion.h	/^      FieldSpace field_space;$/;"	m	class:LegionRuntime::HighLevel::LogicalPartition
field_space	legion_runtime/legion.h	/^      FieldSpace field_space;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegion
field_space	legion_runtime/legion_ops.h	/^      FieldSpace field_space;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
field_states	legion_runtime/region_tree.h	/^      LegionContainer<FieldState,LOGICAL_FIELD_STATE_ALLOC>::list field_states;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
field_type	acpi/acpica/aclocal.h	/^	u8 field_type;$/;"	m	struct:acpi_create_field_info
field_versions	legion_runtime/region_tree.h	/^                     LOGICAL_FIELD_VERSIONS_ALLOC>::map field_versions;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
field_width	nautilus/printk.c	/^	int			field_width;	\/* width of output field *\/$/;"	m	struct:printf_spec	file:
fieldargs	lua_src/lbitlib.c	/^static int fieldargs (lua_State *L, int farg, int *width) {$/;"	f	file:
fields	legion_runtime/legion.h	/^      std::set<FieldID>                 fields;$/;"	m	class:LegionRuntime::HighLevel::Acquire
fields	legion_runtime/legion.h	/^      std::set<FieldID>                 fields;$/;"	m	class:LegionRuntime::HighLevel::Release
fields	legion_runtime/legion.h	/^      std::set<FieldID>               fields;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
fields	legion_runtime/legion.h	/^      std::set<FieldID>               fields;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
fields	legion_runtime/legion_logging.h	/^        std::string fields;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
fields	legion_runtime/region_tree.h	/^      std::map<FieldID,FieldInfo> fields;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
fieldsel	lua_src/lparser.c	/^static void fieldsel (LexState *ls, expdesc *v) {$/;"	f	file:
filename	acpi/acpica/aclocal.h	/^	char *filename;$/;"	m	struct:acpi_parse_obj_asl
filter_close_operations	legion_runtime/region_tree.cc	/^    void RegionTreeNode::filter_close_operations(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
filter_curr_epoch_users	legion_runtime/region_tree.cc	/^    void RegionTreeNode::filter_curr_epoch_users(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
filter_degenerate	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::filter_degenerate(T lower, T upper,$/;"	f	class:LegionRuntime::HighLevel::Segment
filter_degenerate	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::filter_degenerate(std::set<Segment<T>*> &segments)$/;"	f	class:LegionRuntime::HighLevel::Segment
filter_list	legion_runtime/region_tree.cc	/^    \/*static*\/ void MaterializedView::filter_list($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
filter_local_users	legion_runtime/region_tree.cc	/^    void MaterializedView::filter_local_users($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
filter_local_users	legion_runtime/region_tree.cc	/^    void MaterializedView::filter_local_users(Event term_event) $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
filter_mask	legion_runtime/region_tree.h	/^      const FieldMask filter_mask;$/;"	m	class:LegionRuntime::HighLevel::LogicalFilter
filter_mask	legion_runtime/region_tree.h	/^      const FieldMask filter_mask;$/;"	m	class:LegionRuntime::HighLevel::PhysicalFilter
filter_memories	legion_runtime/mapping_utilities.cc	/^      \/*static*\/ void MachineQueryInterface::filter_memories(Machine *machine, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
filter_memories	legion_runtime/mapping_utilities.cc	/^      const std::set<Memory>& MachineQueryInterface::filter_memories($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
filter_prev_epoch_users	legion_runtime/region_tree.cc	/^    void RegionTreeNode::filter_prev_epoch_users(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
filter_processors	legion_runtime/mapping_utilities.cc	/^      \/*static*\/ void MachineQueryInterface::filter_processors(Machine *machine, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
filter_processors	legion_runtime/mapping_utilities.cc	/^      const std::set<Processor>& MachineQueryInterface::filter_processors($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
filtered_users	legion_runtime/region_tree.h	/^      std::deque<PhysicalUser> filtered_users;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
filterpc	lua_src/ldebug.c	/^static int filterpc (int pc, int jmptarget) {$/;"	f	file:
final_aml_length	acpi/acpica/aclocal.h	/^	u32 final_aml_length;$/;"	m	struct:acpi_parse_obj_asl
final_aml_offset	acpi/acpica/aclocal.h	/^	u32 final_aml_offset;$/;"	m	struct:acpi_parse_obj_asl
finalize	legion_runtime/lowlevel.cc	/^  \/*static*\/ void Logger::finalize(void)$/;"	f	class:LegionRuntime::Logger
finalize	legion_runtime/shared_lowlevel.cc	/^  \/*static*\/ void Logger::finalize(void)$/;"	f	class:LegionRuntime::Logger
finalize	test/hpcg/cg.h	/^finalize(void) { }$/;"	f	namespace:lgncg::cg
finalize	test/hpcg/lgncg.cc	/^finalize(void) { }$/;"	f	namespace:lgncg
finalize_field_destroy	legion_runtime/runtime.cc	/^    void Runtime::finalize_field_destroy(FieldSpace handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_field_destroy	legion_runtime/runtime.cc	/^    void Runtime::finalize_field_destroy(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_field_space_destroy	legion_runtime/runtime.cc	/^    void Runtime::finalize_field_space_destroy(FieldSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_index_partition_destroy	legion_runtime/runtime.cc	/^    void Runtime::finalize_index_partition_destroy(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_index_space_destroy	legion_runtime/runtime.cc	/^    bool Runtime::finalize_index_space_destroy(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_legion_logging	legion_runtime/legion_logging.h	/^      static void finalize_legion_logging(const std::set<Processor> &processors)$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
finalize_logical_partition_destroy	legion_runtime/runtime.cc	/^    void Runtime::finalize_logical_partition_destroy($/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_logical_region_destroy	legion_runtime/runtime.cc	/^    bool Runtime::finalize_logical_region_destroy(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_processor	legion_runtime/legion_profiling.h	/^      static inline void finalize_processor(Processor proc)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
finalreport	lua_src/lua.c	/^static void finalreport (lua_State *L, int status) {$/;"	f	file:
find_address_space	legion_runtime/runtime.cc	/^    AddressSpaceID Runtime::find_address_space(Processor target) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_adjoining	legion_runtime/rectangle_set.h	/^    inline Segment<T>* Segment<T>::find_adjoining(Segment<T> *par, $/;"	f	class:LegionRuntime::HighLevel::Segment
find_avail_timer_event	dev/timer.c	/^find_avail_timer_event (void)$/;"	f	file:
find_bounding_roots	legion_runtime/region_tree.cc	/^    void CompositeNode::find_bounding_roots(CompositeView *target,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
find_buddy	nautilus/mm/buddy.c	/^find_buddy (struct buddy_mempool *mp, struct block *block, ulong_t order)$/;"	f	file:
find_conflicted_regions	legion_runtime/legion_ops.cc	/^    void MustEpochOp::find_conflicted_regions($/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
find_conflicting_regions	legion_runtime/legion_tasks.cc	/^    void SingleTask::find_conflicting_regions(AcquireOp *acquire,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_conflicting_regions	legion_runtime/legion_tasks.cc	/^    void SingleTask::find_conflicting_regions(CopyOp *copy,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_conflicting_regions	legion_runtime/legion_tasks.cc	/^    void SingleTask::find_conflicting_regions(ReleaseOp *release,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_conflicting_regions	legion_runtime/legion_tasks.cc	/^    void SingleTask::find_conflicting_regions(TaskOp *task,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_copy_across_instances	legion_runtime/region_tree.cc	/^    void RegionTreeNode::find_copy_across_instances(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
find_copy_preconditions	legion_runtime/region_tree.cc	/^    void CompositeView::find_copy_preconditions(ReductionOpID redop, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
find_copy_preconditions	legion_runtime/region_tree.cc	/^    void MaterializedView::find_copy_preconditions(ReductionOpID redop, $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
find_copy_preconditions	legion_runtime/region_tree.cc	/^    void ReductionView::find_copy_preconditions(ReductionOpID redop,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
find_copy_preconditions_above	legion_runtime/region_tree.cc	/^    void MaterializedView::find_copy_preconditions_above(Color child_color,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
find_disabled	legion_runtime/lowlevel.cc	/^    int ElementMask::find_disabled(int count \/*= 1 *\/, int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
find_disabled	legion_runtime/shared_lowlevel.cc	/^    int ElementMask::find_disabled(int count \/*= 1 *\/, int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
find_distributed_collectable	legion_runtime/runtime.cc	/^    DistributedCollectable* Runtime::find_distributed_collectable($/;"	f	class:LegionRuntime::HighLevel::Runtime
find_distributed_id	legion_runtime/garbage_collection.cc	/^    DistributedID HierarchicalCollectable::find_distributed_id($/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
find_enabled	legion_runtime/lowlevel.cc	/^    int ElementMask::find_enabled(int count \/*= 1 *\/, int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
find_enabled	legion_runtime/shared_lowlevel.cc	/^    int ElementMask::find_enabled(int count \/*= 1 *\/, int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
find_enclosing_local_fields	legion_runtime/legion_tasks.cc	/^    void IndividualTask::find_enclosing_local_fields($/;"	f	class:LegionRuntime::HighLevel::IndividualTask
find_enclosing_local_fields	legion_runtime/legion_tasks.cc	/^    void InlineTask::find_enclosing_local_fields($/;"	f	class:LegionRuntime::HighLevel::InlineTask
find_enclosing_local_fields	legion_runtime/legion_tasks.cc	/^    void PointTask::find_enclosing_local_fields($/;"	f	class:LegionRuntime::HighLevel::PointTask
find_enclosing_local_fields	legion_runtime/legion_tasks.cc	/^    void RemoteTask::find_enclosing_local_fields($/;"	f	class:LegionRuntime::HighLevel::RemoteTask
find_enclosing_physical_context	legion_runtime/legion_tasks.cc	/^    RegionTreeContext IndividualTask::find_enclosing_physical_context($/;"	f	class:LegionRuntime::HighLevel::IndividualTask
find_enclosing_physical_context	legion_runtime/legion_tasks.cc	/^    RegionTreeContext InlineTask::find_enclosing_physical_context($/;"	f	class:LegionRuntime::HighLevel::InlineTask
find_enclosing_physical_context	legion_runtime/legion_tasks.cc	/^    RegionTreeContext PointTask::find_enclosing_physical_context($/;"	f	class:LegionRuntime::HighLevel::PointTask
find_enclosing_physical_context	legion_runtime/legion_tasks.cc	/^    RegionTreeContext RemoteTask::find_enclosing_physical_context($/;"	f	class:LegionRuntime::HighLevel::RemoteTask
find_field	legion_runtime/shared_lowlevel.cc	/^    static size_t find_field(const std::vector<size_t>& field_sizes,$/;"	f	namespace:LegionRuntime::LowLevel
find_field_info	legion_runtime/region_tree.cc	/^    const Domain::CopySrcDstField& LayoutDescription::find_field_info($/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
find_field_offsets	legion_runtime/region_tree.cc	/^    void FoldReductionManager::find_field_offsets(const FieldMask &reduce_mask,$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
find_field_offsets	legion_runtime/region_tree.cc	/^    void ListReductionManager::find_field_offsets(const FieldMask &reduce_mask,$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
find_field_start	legion_runtime/lowlevel.cc	/^    static void find_field_start(const int *field_sizes, off_t byte_offset, size_t size, off_t& field_start, int& field_size)$/;"	f	namespace:LegionRuntime::LowLevel
find_field_start	legion_runtime/lowlevel_dma.cc	/^    static void find_field_start(const int *field_sizes, off_t byte_offset, size_t size, off_t& field_start, int& field_size)$/;"	f	namespace:LegionRuntime::LowLevel
find_first_set	legion_runtime/legion_utilities.h	/^    inline int AVXBitMask<MAX>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
find_first_set	legion_runtime/legion_utilities.h	/^    inline int AVXTLBitMask<MAX>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
find_first_set	legion_runtime/legion_utilities.h	/^    inline int BitMask<T,MAX,SHIFT,MASK>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
find_first_set	legion_runtime/legion_utilities.h	/^    inline int SSEBitMask<MAX>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
find_first_set	legion_runtime/legion_utilities.h	/^    inline int SSETLBitMask<MAX>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
find_first_set	legion_runtime/legion_utilities.h	/^    inline int TLBitMask<T,MAX,SHIFT,MASK>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
find_forward_MPI_mapping	legion_runtime/legion.cc	/^                                HighLevelRuntime::find_forward_MPI_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
find_forward_MPI_mapping	legion_runtime/runtime.cc	/^    const std::map<int,AddressSpace>& Runtime::find_forward_MPI_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_future	legion_runtime/runtime.cc	/^    Future::Impl* Runtime::find_future(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_global_memory	legion_runtime/mapping_utilities.cc	/^      Memory MachineQueryInterface::find_global_memory(void)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_global_memory	legion_runtime/mapping_utilities.cc	/^      \/*static*\/ Memory MachineQueryInterface::find_global_memory($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_hierarchical_collectable	legion_runtime/runtime.cc	/^    HierarchicalCollectable* Runtime::find_hierarchical_collectable($/;"	f	class:LegionRuntime::HighLevel::Runtime
find_high	legion_runtime/rectangle_set.h	/^    \/*static*\/ Segment<T>* RectangleSet<T,DISCRETE>::find_high($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
find_inline_function	legion_runtime/runtime.cc	/^    \/*static*\/ InlineFnptr Runtime::find_inline_function($/;"	f	class:LegionRuntime::HighLevel::Runtime
find_intersection_domains	legion_runtime/region_tree.cc	/^    const std::set<Domain>& CompositeNode::find_intersection_domains($/;"	f	class:LegionRuntime::HighLevel::CompositeNode
find_layout_description	legion_runtime/region_tree.cc	/^    LayoutDescription* FieldSpaceNode::find_layout_description($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
find_local_copy_preconditions	legion_runtime/region_tree.cc	/^    void MaterializedView::find_local_copy_preconditions(int local_color,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
find_location	test/circuit.cc	/^PointerLocation find_location(ptr_t ptr, const std::set<ptr_t> &private_nodes,$/;"	f
find_low	legion_runtime/rectangle_set.h	/^    \/*static*\/ Segment<T>* RectangleSet<T,DISCRETE>::find_low($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
find_manager	legion_runtime/region_tree.cc	/^    PhysicalManager* RegionTreeForest::find_manager(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
find_mapper	legion_runtime/runtime.cc	/^    Mapper* ProcessorManager::find_mapper(MapperID mid) const$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
find_memory	legion_runtime/runtime.cc	/^    MemoryManager* Runtime::find_memory(Memory mem)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_memory_kind	legion_runtime/mapping_utilities.cc	/^      Memory MachineQueryInterface::find_memory_kind(Memory mem, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_memory_kind	legion_runtime/mapping_utilities.cc	/^      Memory MachineQueryInterface::find_memory_kind(Processor proc, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_memory_kind	legion_runtime/mapping_utilities.cc	/^      \/*static*\/ Memory MachineQueryInterface::find_memory_kind($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_memory_stack	legion_runtime/mapping_utilities.cc	/^      \/*static*\/ void MachineQueryInterface::find_memory_stack(Machine *machine, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_memory_stack	legion_runtime/mapping_utilities.cc	/^      void MachineQueryInterface::find_memory_stack(Memory mem,$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_memory_stack	legion_runtime/mapping_utilities.cc	/^      void MachineQueryInterface::find_memory_stack(Processor proc,$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_messenger	legion_runtime/runtime.cc	/^    MessageManager* Runtime::find_messenger(AddressSpaceID sid) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_messenger	legion_runtime/runtime.cc	/^    MessageManager* Runtime::find_messenger(Processor target) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_mp_pointer	arch/x64/smp.c	/^find_mp_pointer (void)$/;"	f	file:
find_one_adjacent	legion_runtime/rectangle_set.h	/^    inline Segment<T>* Segment<T>::find_one_adjacent(T value) const$/;"	f	class:LegionRuntime::HighLevel::Segment
find_operation_index	legion_runtime/legion_ops.cc	/^    int MustEpochOp::find_operation_index(Operation *op, GenerationID op_gen)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
find_or_create_future	legion_runtime/runtime.cc	/^    Future::Impl* Runtime::find_or_create_future(DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_or_init_remote_context	legion_runtime/runtime.cc	/^    RemoteTask* Runtime::find_or_init_remote_context(UniqueID uid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_outermost_physical_context	legion_runtime/legion_tasks.cc	/^    RemoteTask* IndividualTask::find_outermost_physical_context(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
find_outermost_physical_context	legion_runtime/legion_tasks.cc	/^    RemoteTask* InlineTask::find_outermost_physical_context(void)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
find_outermost_physical_context	legion_runtime/legion_tasks.cc	/^    RemoteTask* PointTask::find_outermost_physical_context(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
find_outermost_physical_context	legion_runtime/legion_tasks.cc	/^    RemoteTask* RemoteTask::find_outermost_physical_context(void)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
find_parent_index_region	legion_runtime/legion_tasks.cc	/^    unsigned SingleTask::find_parent_index_region(unsigned index, TaskOp *child)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_parent_region	legion_runtime/legion_tasks.cc	/^    unsigned SingleTask::find_parent_region(unsigned index, TaskOp *child)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_partition_projection_function	legion_runtime/runtime.cc	/^                            find_partition_projection_function(ProjectionID pid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_pending_updates	legion_runtime/region_tree.cc	/^    void RegionTreeNode::find_pending_updates(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
find_physical_instance	legion_runtime/runtime.cc	/^    PhysicalInstance MemoryManager::find_physical_instance($/;"	f	class:LegionRuntime::HighLevel::MemoryManager
find_physical_instance	legion_runtime/runtime.cc	/^    PhysicalInstance MemoryManager::find_physical_instance(size_t field_size,$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
find_physical_instance	legion_runtime/runtime.cc	/^    PhysicalInstance Runtime::find_physical_instance(Memory mem, $/;"	f	class:LegionRuntime::HighLevel::Runtime
find_physical_instance	legion_runtime/runtime.cc	/^    PhysicalInstance Runtime::find_physical_instance(Memory mem,$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_premapped_region	legion_runtime/legion_tasks.cc	/^    InstanceRef TaskOp::find_premapped_region(unsigned idx)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
find_privilege_task_name	legion_runtime/runtime.cc	/^      const char* find_privilege_task_name(void *impl)$/;"	f	namespace:LegionRuntime::Accessor::AccessorType
find_privilege_task_name	legion_runtime/runtime.cc	/^    \/*static*\/ const char* Runtime::find_privilege_task_name(void *impl)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_processor_group	legion_runtime/runtime.cc	/^    Processor Runtime::find_processor_group(const std::set<Processor> &procs)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_processor_kind	legion_runtime/mapping_utilities.cc	/^      Processor MachineQueryInterface::find_processor_kind(Memory mem, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_processor_kind	legion_runtime/mapping_utilities.cc	/^      \/*static*\/ Processor MachineQueryInterface::find_processor_kind($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_region_projection_function	legion_runtime/runtime.cc	/^    \/*static*\/ RegionProjectionFnptr Runtime::find_region_projection_function($/;"	f	class:LegionRuntime::HighLevel::Runtime
find_reverse_MPI_mapping	legion_runtime/legion.cc	/^                                HighLevelRuntime::find_reverse_MPI_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
find_reverse_MPI_mapping	legion_runtime/runtime.cc	/^    const std::map<AddressSpace,int>& Runtime::find_reverse_MPI_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_runtime	legion_runtime/runtime.cc	/^    \/*static*\/ Runtime* LegionAllocation::find_runtime(void)$/;"	f	class:LegionRuntime::HighLevel::LegionAllocation
find_task_by_index	legion_runtime/legion_ops.cc	/^    TaskOp* MustEpochOp::find_task_by_index(int index)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
find_user_data	legion_runtime/legion.cc	/^    \/*static*\/ const void* HighLevelRuntime::find_user_data(TaskID tid,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
find_user_data	legion_runtime/runtime.cc	/^    \/*static*\/ const void* Runtime::find_user_data(TaskID tid, VariantID vid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_utility_group	legion_runtime/runtime.h	/^      inline Processor find_utility_group(void) { return utility_group; }$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_valid_instance_views	legion_runtime/region_tree.cc	/^    void RegionTreeNode::find_valid_instance_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
find_valid_reduction_views	legion_runtime/region_tree.cc	/^    void RegionTreeNode::find_valid_reduction_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
find_view	legion_runtime/region_tree.cc	/^    LogicalView* RegionTreeForest::find_view(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
findfield	lua_src/lauxlib.c	/^static int findfield (lua_State *L, int objidx, int level) {$/;"	f	file:
findfile	lua_src/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findgotos	lua_src/lparser.c	/^static void findgotos (LexState *ls, Labeldesc *lb) {$/;"	f	file:
findindex	lua_src/ltable.c	/^static int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	file:
findlabel	lua_src/lparser.c	/^static int findlabel (LexState *ls, int g) {$/;"	f	file:
findloader	lua_src/loadlib.c	/^static void findloader (lua_State *L, const char *name) {$/;"	f	file:
findlocal	lua_src/ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n,$/;"	f	file:
findpcall	lua_src/ldo.c	/^static CallInfo *findpcall (lua_State *L) {$/;"	f	file:
findsetreg	lua_src/ldebug.c	/^static int findsetreg (Proto *p, int lastpc, int reg) {$/;"	f	file:
findvararg	lua_src/ldebug.c	/^static const char *findvararg (CallInfo *ci, int n, StkId *pos) {$/;"	f	file:
finish	legion_runtime/lowlevel.cc	/^	Event finish(void)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
finish	legion_runtime/lowlevel_dma.cc	/^	Event finish(void)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
finish	legion_runtime/lowlevel_dma.cc	/^	void finish(void)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched
finish	legion_runtime/lowlevel_dma.cc	/^	void finish(void)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched
finishCcall	lua_src/ldo.c	/^static void finishCcall (lua_State *L) {$/;"	f	file:
finish_arrivals	legion_runtime/shared_lowlevel.cc	/^                int finish_arrivals;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
finish_block	legion_runtime/legion_logging.cc	/^    void TreeStateLogger::finish_block(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
finish_block	legion_runtime/legion_spy.cc	/^    void TreeStateLogger::finish_block(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
finish_count	legion_runtime/lowlevel_impl.h	/^      int run_count, finish_count;$/;"	m	class:LegionRuntime::LowLevel::Task
finish_event	legion_runtime/lowlevel.cc	/^      Event finish_event;$/;"	m	class:LegionRuntime::LowLevel::EventMerger	file:
finish_event	legion_runtime/lowlevel.cc	/^      Event finish_event;$/;"	m	struct:LegionRuntime::LowLevel::SpawnTaskArgs	file:
finish_event	legion_runtime/lowlevel_gpu.cc	/^      Event finish_event;$/;"	m	class:LegionRuntime::LowLevel::GPUJob	file:
finish_event	legion_runtime/lowlevel_impl.h	/^      Event finish_event;$/;"	m	class:LegionRuntime::LowLevel::Task
finish_job	legion_runtime/lowlevel_gpu.cc	/^      virtual void finish_job(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
finish_job	legion_runtime/lowlevel_gpu.cc	/^    void GPUTask::finish_job(void)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
finished	legion_runtime/legion.h	/^      bool finished;$/;"	m	class:LegionRuntime::HighLevel::IndexIterator
finished	legion_runtime/lowlevel_impl.h	/^      void finished(void)$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
finishpcall	lua_src/lbaselib.c	/^static int finishpcall (lua_State *L, int status) {$/;"	f	file:
first_element	legion_runtime/lowlevel.h	/^      int first_element;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
first_elmt	legion_runtime/lowlevel.h	/^      size_t first_elmt;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
first_elmt	legion_runtime/lowlevel_impl.h	/^        size_t first_elmt, last_elmt;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
first_enabled	legion_runtime/lowlevel.h	/^      int first_enabled(void) const { return first_enabled_elmt; }$/;"	f	class:LegionRuntime::LowLevel::ElementMask
first_enabled_elmt	legion_runtime/lowlevel.h	/^      int first_enabled_elmt, last_enabled_elmt;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
first_free	legion_runtime/lowlevel.cc	/^    \/*static*\/ Reservation::Impl *Reservation::Impl::first_free = 0;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl	file:
first_free	legion_runtime/lowlevel_impl.h	/^      ET * volatile first_free;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableFreeList
first_free	legion_runtime/lowlevel_impl.h	/^      static Reservation::Impl *first_free;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
first_index	legion_runtime/lowlevel_impl.h	/^      IT first_index, last_index;$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNodeBase
first_node	test/circuit.h	/^  ptr_t         first_node;$/;"	m	struct:CircuitPiece
first_wire	test/circuit.h	/^  ptr_t         first_wire;$/;"	m	struct:CircuitPiece
firstgoto	lua_src/lparser.c	/^  short firstgoto;  \/* index of first pending goto in this block *\/$/;"	m	struct:BlockCnt	file:
firstlabel	lua_src/lparser.c	/^  short firstlabel;  \/* index of first label in this block *\/$/;"	m	struct:BlockCnt	file:
fix_trace	legion_runtime/legion_trace.cc	/^    void LegionTrace::fix_trace(void)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
fixed	legion_runtime/legion_trace.h	/^      bool fixed;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
fixjump	lua_src/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
flags	acpi/acpica/aclocal.h	/^	u16 flags;		\/* Misc flags *\/$/;"	m	struct:acpi_opcode_info
flags	acpi/acpica/aclocal.h	/^	u32 flags;$/;"	m	struct:acpi_db_method_info
flags	acpi/acpica/aclocal.h	/^	u32 flags;$/;"	m	struct:acpi_predefined_data
flags	acpi/acpica/aclocal.h	/^	u8 flags;		\/* Misc info about this GPE *\/$/;"	m	struct:acpi_gpe_event_info
flags	acpi/acpica/aclocal.h	/^	u8 flags;		\/* Miscellaneous flags *\/$/;"	m	struct:acpi_namespace_node
flags	acpi/acpica/aclocal.h	/^	u8 flags;$/;"	m	struct:acpi_interface_info
flags	acpi/acpica/aclocal.h	/^	u8 flags;$/;"	m	struct:acpi_table_list
flags	dev/kbd.c	/^static nk_keycode_t flags = 0;$/;"	v	file:
flags	legion_runtime/legion.h	/^      RegionFlags flags; \/**< optional flags set for region requirements*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
flags	nautilus/fmtout.c	/^enum flags {$/;"	g	file:
flags	nautilus/printk.c	/^	int			flags;		\/* flags to number() *\/$/;"	m	struct:printf_spec	file:
flib	lua_src/liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	file:
floor	nautilus/libccompat.c	/^double floor(double x)$/;"	f
flush	legion_runtime/lowlevel.cc	/^      void flush(void)$/;"	f	class:LegionRuntime::LowLevel::AMQueue
flush	legion_runtime/lowlevel.cc	/^    void RegionAccessor<AccessorReductionList>::flush(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
flush	legion_runtime/lowlevel_dma.cc	/^      virtual void flush(Event after_copy)$/;"	f	class:LegionRuntime::LowLevel::DelayedMemPairCopier
flush	legion_runtime/lowlevel_dma.cc	/^      virtual void flush(Event after_copy)$/;"	f	class:LegionRuntime::LowLevel::MemPairCopier
flush	legion_runtime/lowlevel_dma.cc	/^      virtual void flush(Event after_copy)$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
flush	legion_runtime/lowlevel_dma.cc	/^      virtual void flush(void) {}$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier
flush	legion_runtime/lowlevel_dma.cc	/^      virtual void flush(void) {}$/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
flush	nautilus/printk.c	/^flush (struct printk_state *state)$/;"	f	file:
flush_reductions	legion_runtime/region_tree.cc	/^    void CompositeView::flush_reductions(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
flush_reductions	legion_runtime/region_tree.cc	/^    void RegionTreeNode::flush_reductions(const FieldMask &valid_mask,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
flush_scancodes	dev/kbd.c	/^static void flush_scancodes()$/;"	f	file:
flush_tlb	arch/hrt/hrt.c	/^flush_tlb (void)$/;"	f	file:
fmod	nautilus/libccompat.c	/^double fmod(double y, double x){$/;"	f
fns_to_ids	legion_runtime/arrays.h	/^      std::map<MappingDeserializerFn, int> fns_to_ids;$/;"	m	class:LegionRuntime::Arrays::MappingRegistry
fold	legion_runtime/legion_logging.h	/^        bool fold;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
fold	legion_runtime/lowlevel.h	/^      virtual void fold(void *rhs1_ptr, const void *rhs2_ptr, size_t count,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
fold	legion_runtime/lowlevel_dma.cc	/^      bool fold;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
fold	legion_runtime/lowlevel_dma.cc	/^      bool fold;$/;"	m	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier	file:
fold	test/circuit_cpu.cc	/^void AccumulateCharge::fold<false>(RHS &rhs1, RHS rhs2)$/;"	f	class:AccumulateCharge
fold	test/circuit_cpu.cc	/^void AccumulateCharge::fold<true>(RHS &rhs1, RHS rhs2) $/;"	f	class:AccumulateCharge
fold	test/hpcg/dotprod-accumulate.h	/^DotProdAccumulate::fold<false>(RHS &rhs1, RHS rhs2) {$/;"	f	class:lgncg::DotProdAccumulate
fold	test/hpcg/dotprod-accumulate.h	/^DotProdAccumulate::fold<true>(RHS &rhs1, RHS rhs2) {$/;"	f	class:lgncg::DotProdAccumulate
fold	test/saxpy_array.cc	/^  template <bool EXCL> static void fold(float& rhs1, float rhs2) { rhs1 += rhs2; }$/;"	f	struct:Add
fold_list_entry	legion_runtime/lowlevel.h	/^      virtual void fold_list_entry(void *rhs_ptr, const void *entry_ptr, size_t count,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
fold_reduction_future	legion_runtime/legion_tasks.cc	/^    void MultiTask::fold_reduction_future(const void *result, $/;"	f	class:LegionRuntime::HighLevel::MultiTask
fold_strided	legion_runtime/lowlevel.h	/^      virtual void fold_strided(void *lhs_ptr, const void *rhs_ptr,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
foo	test/global_vars.cc	/^void foo(void)$/;"	f
fopen	nautilus/libccompat.c	/^fopen (const char * path, FILE * f)$/;"	f
fopen64	nautilus/libccompat.c	/^fopen64 (const char * path, FILE * f)$/;"	f
forall_ranges	legion_runtime/lowlevel.h	/^    \/*static*\/ int ElementMask::forall_ranges(T &executor,$/;"	f	class:LegionRuntime::LowLevel::ElementMask
forbody	lua_src/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	file:
force	legion_runtime/region_tree.h	/^      const bool force;$/;"	m	class:LegionRuntime::HighLevel::PhysicalInvalidator
force_long_messages	legion_runtime/activemsg.cc	/^static bool force_long_messages = true;$/;"	v	file:
forest	legion_runtime/region_tree.h	/^      RegionTreeForest *forest;$/;"	m	class:LegionRuntime::HighLevel::PerfTracer
forest	legion_runtime/runtime.h	/^      RegionTreeForest *const forest;$/;"	m	class:LegionRuntime::HighLevel::Runtime
forest_lock	legion_runtime/region_tree.h	/^      Reservation forest_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
forlist	lua_src/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
format_decode	nautilus/printk.c	/^static int format_decode(const char *fmt, struct printf_spec *spec)$/;"	f	file:
format_int	nautilus/fmtout.c	/^format_int(struct Output_Sink *q, uintmax_t val, enum flags flags,$/;"	f	file:
format_type	nautilus/printk.c	/^enum format_type {$/;"	g	file:
fornum	lua_src/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forstat	lua_src/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
forward_mpi_mapping	legion_runtime/runtime.h	/^      std::map<int,AddressSpace> forward_mpi_mapping;$/;"	m	class:LegionRuntime::HighLevel::Runtime
fprintf	nautilus/libccompat.c	/^fprintf (FILE * f, const char * s, ...)$/;"	f
fptr	legion_runtime/activemsg.h	/^  HandlerReplyFuture<RPLTYPE> *fptr;$/;"	m	struct:ArgsWithReplyInfo
fpu_init	nautilus/fpu.c	/^fpu_init (struct naut_info * naut)$/;"	f
fpu_init_common	nautilus/fpu.c	/^fpu_init_common (struct naut_info * naut)$/;"	f	file:
fputc	nautilus/libccompat.c	/^int fputc (int c, FILE * f) $/;"	f
fputs	nautilus/libccompat.c	/^int fputs (const char *s, FILE *stream)$/;"	f
frac_digits	nautilus/libccompat.c	/^    char frac_digits;         \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
fread	nautilus/libccompat.c	/^size_t fread (void *ptr, size_t size, size_t count, FILE *stream)$/;"	f
free	legion_runtime/legion.h	/^    inline void IndexAllocator::free(ptr_t ptr, unsigned num_elements \/*= 1*\/)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
free	legion_runtime/lowlevel.cc	/^    void IndexSpaceAllocator::free(unsigned ptr, unsigned count \/*= 1  *\/) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
free	legion_runtime/shared_lowlevel.cc	/^    void IndexSpaceAllocator::free(unsigned ptr, unsigned count \/*= 1 *\/) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
free	nautilus/mm/kmem.c	/^free (void * addr)$/;"	f
free	test/hpcg/cg-data.h	/^    free(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:lgncg::CGData
free	test/hpcg/hpcg-problem.h	/^    free(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:Problem
free	test/hpcg/mg-data.h	/^    free(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:lgncg::MGData
free	test/hpcg/sparsemat.h	/^    free(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:lgncg::SparseMatrix
free	test/hpcg/vector.h	/^    free(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:lgncg::Vector
free_acquire_op	legion_runtime/runtime.cc	/^    void Runtime::free_acquire_op(AcquireOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_alloc_lock	legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T       free_alloc_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_and_predicate_op	legion_runtime/runtime.cc	/^    void Runtime::free_and_predicate_op(AndPredOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_blocks	legion_runtime/lowlevel_impl.h	/^      std::map<off_t, off_t> free_blocks;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
free_bytes	legion_runtime/lowlevel.cc	/^      virtual void free_bytes(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
free_bytes	legion_runtime/lowlevel.cc	/^      virtual void free_bytes(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
free_bytes	legion_runtime/lowlevel.cc	/^    void GASNetMemory::free_bytes(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
free_bytes	legion_runtime/lowlevel_gpu.h	/^      virtual void free_bytes(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
free_bytes	legion_runtime/lowlevel_gpu.h	/^      virtual void free_bytes(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
free_bytes_local	legion_runtime/lowlevel.cc	/^    void Memory::Impl::free_bytes_local(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
free_bytes_remote	legion_runtime/lowlevel.cc	/^    void Memory::Impl::free_bytes_remote(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
free_capture_op	legion_runtime/runtime.cc	/^    void Runtime::free_capture_op(TraceCaptureOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_close_op	legion_runtime/runtime.cc	/^    void Runtime::free_close_op(CloseOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_context	legion_runtime/runtime.cc	/^    void Runtime::free_context(SingleTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_copy_op	legion_runtime/runtime.cc	/^    void Runtime::free_copy_op(CopyOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_deletion_op	legion_runtime/runtime.cc	/^    void Runtime::free_deletion_op(DeletionOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_distributed_id	legion_runtime/garbage_collection.h	/^      bool free_distributed_id;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
free_distributed_id	legion_runtime/runtime.cc	/^    void Runtime::free_distributed_id(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_elements	legion_runtime/lowlevel.cc	/^    void IndexSpaceAllocator::Impl::free_elements(unsigned ptr, unsigned count \/*= 1*\/)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
free_elmt	legion_runtime/shared_lowlevel.cc	/^    void IndexSpaceAllocator::Impl::free_elmt(unsigned ptr, unsigned count)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
free_entry	legion_runtime/lowlevel_impl.h	/^    void DynamicTableFreeList<ALLOCATOR>::free_entry(ET *entry)$/;"	f	class:LegionRuntime::LowLevel::DynamicTableFreeList
free_epoch_op	legion_runtime/runtime.cc	/^    void Runtime::free_epoch_op(MustEpochOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_event	legion_runtime/shared_lowlevel.cc	/^    void Runtime::free_event(EventImpl *e)$/;"	f	class:LegionRuntime::LowLevel::Runtime
free_event_lock	legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T       free_event_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_events	legion_runtime/shared_lowlevel.cc	/^      std::deque<EventImpl*> free_events; $/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_fence_op	legion_runtime/runtime.cc	/^    void Runtime::free_fence_op(FenceOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_field	legion_runtime/legion.cc	/^    void HighLevelRuntime::free_field(Context ctx, FieldSpace sp, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
free_field	legion_runtime/legion.h	/^    inline void FieldAllocator::free_field(FieldID id)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
free_field	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::free_field(FieldID fid, AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
free_field	legion_runtime/region_tree.cc	/^    void RegionTreeForest::free_field(FieldSpace handle, FieldID fid, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
free_field	legion_runtime/runtime.cc	/^    void Runtime::free_field(Context ctx, FieldSpace space, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_fields	legion_runtime/legion.cc	/^    void HighLevelRuntime::free_fields(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
free_fields	legion_runtime/legion.h	/^    inline void FieldAllocator::free_fields(const std::set<FieldID> &to_free)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
free_fields	legion_runtime/legion_ops.h	/^      std::set<FieldID> free_fields;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
free_fields	legion_runtime/region_tree.cc	/^    void RegionTreeForest::free_fields(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
free_fields	legion_runtime/runtime.cc	/^    void Runtime::free_fields(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_future_predicate_op	legion_runtime/runtime.cc	/^    void Runtime::free_future_predicate_op(FuturePredOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_generation	legion_runtime/lowlevel_impl.h	/^      Event::gen_t generation, gen_subscribed, free_generation;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
free_generation	legion_runtime/shared_lowlevel.cc	/^        EventGeneration free_generation;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
free_index	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::free_index(unsigned index)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
free_index_task	legion_runtime/runtime.cc	/^    void Runtime::free_index_task(IndexTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_individual_task	legion_runtime/runtime.cc	/^    void Runtime::free_individual_task(IndividualTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_inline_task	legion_runtime/runtime.cc	/^    void Runtime::free_inline_task(InlineTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_inst_lock	legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T       free_inst_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_instance	legion_runtime/shared_lowlevel.cc	/^    void Runtime::free_instance(RegionInstance::Impl *impl)$/;"	f	class:LegionRuntime::LowLevel::Runtime
free_instances	legion_runtime/shared_lowlevel.cc	/^      std::deque<RegionInstance::Impl*> free_instances;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_list	legion_runtime/activemsg.cc	/^  std::map<char *, size_t> free_list;$/;"	m	class:SrcDataPool	file:
free_map_op	legion_runtime/runtime.cc	/^    void Runtime::free_map_op(MapOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_metadata	legion_runtime/shared_lowlevel.cc	/^    void Runtime::free_metadata(IndexSpace::Impl *impl)$/;"	f	class:LegionRuntime::LowLevel::Runtime
free_metas	legion_runtime/shared_lowlevel.cc	/^      std::deque<IndexSpace::Impl*> free_metas;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_metas_lock	legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T       free_metas_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_not_predicate_op	legion_runtime/runtime.cc	/^    void Runtime::free_not_predicate_op(NotPredOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_or_predicate_op	legion_runtime/runtime.cc	/^    void Runtime::free_or_predicate_op(OrPredOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_physical_instance	legion_runtime/runtime.cc	/^    void MemoryManager::free_physical_instance(PhysicalManager *manager)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
free_physical_instance	legion_runtime/runtime.cc	/^    void Runtime::free_physical_instance(PhysicalManager *instance)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_point_task	legion_runtime/runtime.cc	/^    void Runtime::free_point_task(PointTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_release_op	legion_runtime/runtime.cc	/^    void Runtime::free_release_op(ReleaseOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_remote_task	legion_runtime/runtime.cc	/^    void Runtime::free_remote_task(RemoteTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_reservation	legion_runtime/shared_lowlevel.cc	/^    void Runtime::free_reservation(ReservationImpl *r)$/;"	f	class:LegionRuntime::LowLevel::Runtime
free_reservation_lock	legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T       free_reservation_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_reservations	legion_runtime/shared_lowlevel.cc	/^      std::deque<ReservationImpl*> free_reservations;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_slice_task	legion_runtime/runtime.cc	/^    void Runtime::free_slice_task(SliceTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_space	legion_runtime/shared_lowlevel.cc	/^    void IndexSpace::Impl::free_space(unsigned ptr, unsigned count)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
free_space	legion_runtime/shared_lowlevel.cc	/^    void MemoryImpl::free_space(void *ptr, size_t size)$/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
free_trace_op	legion_runtime/runtime.cc	/^    void Runtime::free_trace_op(TraceCompleteOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_usable_ram	nautilus/mm/boot_mm.c	/^free_usable_ram (boot_mem_info_t * mem)$/;"	f	file:
freeexp	lua_src/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freekey	nautilus/hashtable.c	160;"	d	file:
freelist	lua_src/lauxlib.c	525;"	d	file:
freelist_mutex	legion_runtime/lowlevel.cc	/^    \/*static*\/ gasnet_hsl_t Reservation::Impl::freelist_mutex = GASNET_HSL_INITIALIZER;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl	file:
freelist_mutex	legion_runtime/lowlevel_impl.h	/^      static gasnet_hsl_t freelist_mutex;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
freeobj	lua_src/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	lua_src/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freestack	lua_src/lstate.c	/^static void freestack (lua_State *L) {$/;"	f	file:
freeze	legion_runtime/runtime.cc	/^    ArgumentMap::Impl* ArgumentMap::Impl::freeze(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
freopen	nautilus/libccompat.c	/^FILE *freopen(const char *fname, const char *mode,FILE *stream)$/;"	f
frexp	nautilus/libccompat.c	/^double frexp(double x, int *e){$/;"	f
from_index_space	legion_runtime/lowlevel.h	/^      static DomainLinearization from_index_space(int first_elmt)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
from_mapping	legion_runtime/lowlevel.h	/^      static DomainLinearization from_mapping(typename Arrays::Mapping<DIM, 1> *mapping)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
from_point	legion_runtime/lowlevel.h	/^      static Domain from_point(typename Arrays::Point<DIM> p)$/;"	f	class:LegionRuntime::LowLevel::Domain
from_point	legion_runtime/lowlevel.h	/^      static DomainPoint from_point(typename Arrays::Point<DIM> p)$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
from_rect	legion_runtime/lowlevel.h	/^      static Domain from_rect(typename Arrays::Rect<DIM> r)$/;"	f	class:LegionRuntime::LowLevel::Domain
fromstate	lua_src/lstate.c	77;"	d	file:
frozen	legion_runtime/lowlevel_impl.h	/^	bool frozen;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
frozen	legion_runtime/runtime.h	/^      bool frozen;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap::Impl
fs	test/hpcg/vector.h	/^    LegionRuntime::HighLevel::FieldSpace fs;$/;"	m	struct:lgncg::Vector
fscanf	nautilus/libccompat.c	/^int fscanf(FILE *restrict stream, const char *restrict format, ... )$/;"	f
fseek	nautilus/libccompat.c	/^int fseek(FILE *stream, long offset, int whence)$/;"	f
fseeko64	nautilus/libccompat.c	/^int fseeko64 (FILE *fp, uint64_t offset, int whence)$/;"	f
fspace	legion_runtime/legion_logging.h	/^        FieldSpace fspace;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopRegion
fspace	test/saxpy_array.cc	/^  FieldSpace fspace;$/;"	m	struct:MainArgs	file:
ftell	nautilus/libccompat.c	/^long ftell(FILE *x)$/;"	f
ftello64	nautilus/libccompat.c	/^uint64_t ftello64 (FILE *stream)$/;"	f
fully_qualified	acpi/acpica/aclocal.h	/^	u8 fully_qualified;$/;"	m	struct:acpi_namestring_info
func	legion_runtime/lowlevel.cc	/^      FuncPtr func;$/;"	m	class:LegionRuntime::LowLevel::Task	file:
func	lua_src/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
func_data	nautilus/instrument.c	/^struct func_data {$/;"	s	file:
func_id	legion_runtime/lowlevel.cc	/^      Processor::TaskFuncID func_id;$/;"	m	struct:LegionRuntime::LowLevel::SpawnTaskArgs	file:
func_id	legion_runtime/lowlevel_gpu.cc	/^      Processor::TaskFuncID func_id;$/;"	m	class:LegionRuntime::LowLevel::GPUTask	file:
func_id	legion_runtime/lowlevel_impl.h	/^      Processor::TaskFuncID func_id;$/;"	m	class:LegionRuntime::LowLevel::Task
func_id	legion_runtime/shared_lowlevel.cc	/^		Processor::TaskFuncID func_id;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
funcargs	lua_src/lparser.c	/^static void funcargs (LexState *ls, expdesc *f, int line) {$/;"	f	file:
funcinfo	lua_src/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcname	lua_src/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcstat	lua_src/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
function	acpi/osl.c	/^	acpi_osd_exec_callback function;$/;"	m	struct:acpi_os_dpc	file:
future	legion_runtime/legion_ops.h	/^      Future future;$/;"	m	class:LegionRuntime::HighLevel::FuturePredOp
future_lock	legion_runtime/runtime.h	/^      Reservation future_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
future_map	legion_runtime/legion_tasks.h	/^      FutureMap future_map;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
future_map	legion_runtime/runtime.h	/^        FutureMap::Impl *future_map;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureMapSetArgs
future_pred_op	legion_runtime/legion_ops.h	/^        FuturePredOp *future_pred_op;$/;"	m	struct:LegionRuntime::HighLevel::FuturePredOp::ResolveFuturePredArgs
future_pred_op_lock	legion_runtime/runtime.h	/^      Reservation future_pred_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
future_size	legion_runtime/legion_tasks.h	/^      size_t future_size;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
future_store	legion_runtime/legion_tasks.h	/^      void *future_store;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
futures	legion_runtime/legion.h	/^      std::vector<Future>                 futures;$/;"	m	class:LegionRuntime::HighLevel::Task
futures	legion_runtime/legion.h	/^      std::vector<Future>                futures;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
futures	legion_runtime/legion.h	/^      std::vector<Future>                futures;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
futures	legion_runtime/runtime.h	/^      std::map<DomainPoint,Future,DomainPoint::STLComparator> futures;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
fwrite	nautilus/libccompat.c	/^size_t fwrite (const void *ptr, size_t size, size_t nmemb, FILE *stream)$/;"	f
g	lua_src/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
g2g	test/hpcg/sparsemat.h	/^    Vector g2g;$/;"	m	struct:lgncg::SparseMatrix
g_iofile	lua_src/liolib.c	/^static int g_iofile (lua_State *L, const char *f, const char *mode) {$/;"	f	file:
g_read	lua_src/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_write	lua_src/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
garbage_collect	legion_runtime/region_tree.cc	/^    void CompositeView::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
garbage_collect	legion_runtime/region_tree.cc	/^    void InstanceManager::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
garbage_collect	legion_runtime/region_tree.cc	/^    void MaterializedView::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
garbage_collect	legion_runtime/region_tree.cc	/^    void ReductionManager::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
garbage_collect	legion_runtime/region_tree.cc	/^    void ReductionView::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
garbage_collect	legion_runtime/runtime.cc	/^    void Future::Impl::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
gasnet_barrier	legion_runtime/lowlevel.cc	/^    static void gasnet_barrier(void)$/;"	f	namespace:LegionRuntime::LowLevel
gasnet_poll_thread_loop	legion_runtime/activemsg.cc	/^static void *gasnet_poll_thread_loop(void *data)$/;"	f	file:
gather_time	legion_runtime/lowlevel_dma.cc	/^      unsigned long long gather_time;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
gathers	legion_runtime/lowlevel_dma.cc	/^      std::map<off_t, PendingGather *> gathers;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
gc_epoch_counter	legion_runtime/runtime.h	/^      unsigned gc_epoch_counter;$/;"	m	class:LegionRuntime::HighLevel::Runtime
gc_epoch_lock	legion_runtime/runtime.h	/^      Reservation gc_epoch_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
gc_epoch_size	legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::gc_epoch_size = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
gc_epoch_size	legion_runtime/runtime.h	/^      static unsigned gc_epoch_size;$/;"	m	class:LegionRuntime::HighLevel::Runtime
gc_lock	legion_runtime/garbage_collection.h	/^      Reservation gc_lock;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
gc_lock	legion_runtime/garbage_collection.h	/^      Reservation gc_lock;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
gc_proc	legion_runtime/runtime.h	/^      const Processor gc_proc;$/;"	m	class:LegionRuntime::HighLevel::Runtime
gc_references	legion_runtime/garbage_collection.h	/^      unsigned gc_references;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
gc_references	legion_runtime/garbage_collection.h	/^      unsigned gc_references;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
gctm	lua_src/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
gdt32	arch/k1om/asm/boot.S	/^gdt32:$/;"	l
gdt32	arch/x64/asm/boot.S	/^gdt32:$/;"	l
gdt64	arch/hrt/asm/boot.S	/^gdt64:$/;"	l
gdt64	arch/k1om/asm/boot.S	/^gdt64:$/;"	l
gdt64	arch/x64/asm/boot.S	/^gdt64:$/;"	l
gdtr32	arch/k1om/asm/boot.S	/^gdtr32:$/;"	l
gdtr32	arch/x64/asm/boot.S	/^gdtr32:$/;"	l
gen	legion_runtime/legion_ops.h	/^      GenerationID gen;$/;"	m	class:LegionRuntime::HighLevel::Operation
gen	legion_runtime/lowlevel.h	/^      gen_t gen;$/;"	m	class:LegionRuntime::LowLevel::Event
gen	legion_runtime/region_tree.h	/^      GenerationID gen;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
genCoarseProbGeom	test/hpcg/hpcg-problem.cc	/^Problem::genCoarseProbGeom(lgncg::SparseMatrix &Af,$/;"	f	class:Problem
genProbTID	test/hpcg/hpcg-problem.cc	/^int Problem::genProbTID       = -1;$/;"	m	class:Problem	file:
genProbTID	test/hpcg/hpcg-problem.h	/^    static int genProbTID;$/;"	m	struct:Problem
gen_subscribed	legion_runtime/lowlevel_impl.h	/^      Event::gen_t generation, gen_subscribed, free_generation;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
gen_t	legion_runtime/lowlevel.h	/^      typedef unsigned gen_t;$/;"	t	class:LegionRuntime::LowLevel::Event
generate_color	legion_runtime/region_tree.cc	/^    Color IndexSpaceNode::generate_color(void)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
generate_permutation	legion_runtime/legion_utilities.h	/^    inline BITMASK BitPermutation<BITMASK,LOG2MAX>::generate_permutation($/;"	f	class:LegionRuntime::HighLevel::BitPermutation
generate_unique_color	legion_runtime/region_tree.cc	/^    Color RegionTreeForest::generate_unique_color($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
generation	legion_runtime/lowlevel_impl.h	/^      Event::gen_t generation, gen_subscribed, free_generation;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
generation	legion_runtime/shared_lowlevel.cc	/^	EventGeneration generation;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
generationalcollection	lua_src/lgc.c	/^static void generationalcollection (lua_State *L) {$/;"	f	file:
generic_reader	lua_src/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
geom	test/hpcg/hpcg-problem.cc	/^    lgncg::Geometry geom;$/;"	m	struct:__anon33::HPCGTaskArgs	file:
geom	test/hpcg/sparsemat.h	/^    Geometry geom;$/;"	m	struct:lgncg::SparseMatrix
get	legion_runtime/activemsg.h	/^  T get(void) const { return value; }$/;"	f	struct:HandlerReplyFuture
get	legion_runtime/lowlevel_impl.h	/^      T get(void) const { return (*((volatile T*)(&value))); }$/;"	f	class:LegionRuntime::LowLevel::Atomic
getF	lua_src/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getParamsFromArgs	test/hpcg/hpcg-main.cc	/^getParamsFromArgs(DriverParams &params)$/;"	f	namespace:__anon37
getS	lua_src/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getTaskID	test/hpcg/utils.h	/^getTaskID(const LegionRuntime::HighLevel::Task *task)$/;"	f	namespace:lgncg
get_accessor	legion_runtime/legion.cc	/^      PhysicalRegion::get_accessor(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
get_accessor	legion_runtime/lowlevel.cc	/^    RegionAccessor<AccessorType::Generic> RegionInstance::get_accessor(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
get_accessor	legion_runtime/region_tree.cc	/^      FoldReductionManager::get_accessor(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
get_accessor	legion_runtime/region_tree.cc	/^      InstanceManager::get_accessor(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
get_accessor	legion_runtime/region_tree.cc	/^      InstanceRef::get_accessor(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_accessor	legion_runtime/region_tree.cc	/^      ListReductionManager::get_accessor(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
get_accessor	legion_runtime/runtime.cc	/^      PhysicalRegion::Impl::get_accessor(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_accessor	legion_runtime/shared_lowlevel.cc	/^    RegionAccessor<AccessorType::Generic> RegionInstance::get_accessor(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
get_accessor_privilege	legion_runtime/legion.cc	/^    AccessorPrivilege RegionRequirement::get_accessor_privilege(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
get_address	legion_runtime/shared_lowlevel.cc	/^    void* RegionInstance::Impl::get_address(int index, size_t field_start, size_t field_size,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_address_space_count	legion_runtime/lowlevel.cc	/^    size_t Machine::get_address_space_count(void) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_address_space_count	legion_runtime/shared_lowlevel.cc	/^    size_t Machine::get_address_space_count(void) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_all_fields	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::get_all_fields(std::set<FieldID> &to_set)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_all_fields	legion_runtime/region_tree.cc	/^    void RegionTreeForest::get_all_fields(FieldSpace handle, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_all_memories	legion_runtime/lowlevel.h	/^      const std::set<Memory>&    get_all_memories(void) const { return memories; }$/;"	f	class:LegionRuntime::LowLevel::Machine
get_all_processors	legion_runtime/lowlevel.h	/^      const std::set<Processor>& get_all_processors(void) const { return procs; }$/;"	f	class:LegionRuntime::LowLevel::Machine
get_all_regions	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::get_all_regions(std::set<LogicalRegion> &regions)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_all_regions	legion_runtime/region_tree.cc	/^    void RegionTreeForest::get_all_regions(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_all_variants	legion_runtime/legion.h	/^      const std::map<VariantID,Variant>& get_all_variants(void) const { return variants; }$/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
get_allocation	legion_runtime/runtime.h	/^      inline void* get_allocation(void) const { return allocation; }$/;"	f	class:LegionRuntime::HighLevel::AllocManager
get_allocation_name	legion_runtime/runtime.cc	/^    \/*static*\/ const char* Runtime::get_allocation_name(AllocationType type)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_allocation_size	legion_runtime/runtime.h	/^      inline size_t get_allocation_size(void) const$/;"	f	class:LegionRuntime::HighLevel::AllocManager
get_allocator	legion_runtime/region_tree.cc	/^    IndexSpaceAllocator* IndexSpaceNode::get_allocator(void)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_aos_parameters	legion_runtime/lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_aos_parameters(void *&base, size_t &stride) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_aos_parameters	legion_runtime/shared_lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_aos_parameters(void *& base, size_t& stride) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_available_acquire_op	legion_runtime/runtime.cc	/^    AcquireOp* Runtime::get_available_acquire_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_and_pred_op	legion_runtime/runtime.cc	/^    AndPredOp* Runtime::get_available_and_pred_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_capture_op	legion_runtime/runtime.cc	/^    TraceCaptureOp* Runtime::get_available_capture_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_close_op	legion_runtime/runtime.cc	/^    CloseOp* Runtime::get_available_close_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_copy_op	legion_runtime/runtime.cc	/^    CopyOp* Runtime::get_available_copy_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_deletion_op	legion_runtime/runtime.cc	/^    DeletionOp* Runtime::get_available_deletion_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_distributed_id	legion_runtime/runtime.cc	/^    DistributedID Runtime::get_available_distributed_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_epoch_op	legion_runtime/runtime.cc	/^    MustEpochOp* Runtime::get_available_epoch_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_fence_op	legion_runtime/runtime.cc	/^    FenceOp* Runtime::get_available_fence_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_future_pred_op	legion_runtime/runtime.cc	/^    FuturePredOp* Runtime::get_available_future_pred_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_index_task	legion_runtime/runtime.cc	/^    IndexTask* Runtime::get_available_index_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_individual_task	legion_runtime/runtime.cc	/^    IndividualTask* Runtime::get_available_individual_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_inline_task	legion_runtime/runtime.cc	/^    InlineTask* Runtime::get_available_inline_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_map_op	legion_runtime/runtime.cc	/^    MapOp* Runtime::get_available_map_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_not_pred_op	legion_runtime/runtime.cc	/^    NotPredOp* Runtime::get_available_not_pred_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_or_pred_op	legion_runtime/runtime.cc	/^    OrPredOp* Runtime::get_available_or_pred_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_point_task	legion_runtime/runtime.cc	/^    PointTask* Runtime::get_available_point_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_release_op	legion_runtime/runtime.cc	/^    ReleaseOp* Runtime::get_available_release_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_remote_task	legion_runtime/runtime.cc	/^    RemoteTask* Runtime::get_available_remote_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_slice_task	legion_runtime/runtime.cc	/^    SliceTask* Runtime::get_available_slice_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_trace_op	legion_runtime/runtime.cc	/^    TraceCompleteOp* Runtime::get_available_trace_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_barrier	legion_runtime/legion.h	/^      Barrier get_barrier(void) const { return phase_barrier; }$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
get_barrier	legion_runtime/shared_lowlevel.cc	/^    Barrier EventImpl::get_barrier(unsigned expected_arrivals)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
get_base_ptr	legion_runtime/shared_lowlevel.cc	/^        void* get_base_ptr(void) const { return base_ptr; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_batch	legion_runtime/lowlevel.cc	/^    void GASNetMemory::get_batch(size_t batch_size,$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
get_block_size	legion_runtime/shared_lowlevel.cc	/^        size_t get_block_size(void) const { return block_size; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_blocking_factor	legion_runtime/region_tree.cc	/^    size_t MaterializedView::get_blocking_factor(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_boolean_value	legion_runtime/runtime.cc	/^    bool Future::Impl::get_boolean_value(bool &valid)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
get_buffer	legion_runtime/legion_utilities.h	/^      inline const void* get_buffer(void) const { return buffer; }$/;"	f	class:LegionRuntime::HighLevel::Serializer
get_buffer_size	legion_runtime/legion_utilities.h	/^      inline size_t get_buffer_size(void) const { return total_bytes; }$/;"	f	class:LegionRuntime::HighLevel::Serializer
get_bytes	legion_runtime/lowlevel.cc	/^      virtual void get_bytes(off_t offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
get_bytes	legion_runtime/lowlevel.cc	/^      virtual void get_bytes(off_t offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
get_bytes	legion_runtime/lowlevel.cc	/^    void GASNetMemory::get_bytes(off_t offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
get_bytes	legion_runtime/lowlevel.cc	/^    void RegionInstance::Impl::get_bytes(int index, off_t byte_offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_bytes	legion_runtime/lowlevel_gpu.cc	/^    void GPUFBMemory::get_bytes(off_t offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
get_bytes	legion_runtime/lowlevel_gpu.h	/^      virtual void get_bytes(off_t offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
get_categories_by_id	legion_runtime/utilities.h	/^    static std::vector<std::string>& get_categories_by_id(void)$/;"	f	class:LegionRuntime::Logger
get_categories_by_name	legion_runtime/utilities.h	/^    static std::map<std::string,int>& get_categories_by_name(void)$/;"	f	class:LegionRuntime::Logger
get_child	legion_runtime/region_tree.cc	/^    Color RegionTreePath::get_child(unsigned depth) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
get_child	legion_runtime/region_tree.cc	/^    IndexPartNode* IndexSpaceNode::get_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_child	legion_runtime/region_tree.cc	/^    IndexSpaceNode* IndexPartNode::get_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
get_child	legion_runtime/region_tree.cc	/^    PartitionNode* RegionNode::get_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_child	legion_runtime/region_tree.cc	/^    RegionNode* PartitionNode::get_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_child	legion_runtime/region_tree.h	/^      inline int get_child(void) const { return close_handle.get_child(); }$/;"	f	struct:LegionRuntime::HighLevel::CloseInfo
get_child	legion_runtime/region_tree.h	/^      inline int get_child(void) const { return impl->target_child; }$/;"	f	class:LegionRuntime::HighLevel::TreeClose
get_children_mapped	legion_runtime/legion_ops.h	/^      inline Event get_children_mapped(void) const { return children_mapped; }$/;"	f	class:LegionRuntime::HighLevel::Operation
get_cleanup_proc	legion_runtime/runtime.cc	/^    Processor Runtime::get_cleanup_proc(Processor p) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_close_operations	legion_runtime/region_tree.cc	/^    void RegionTreePath::get_close_operations(unsigned depth,$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
get_coherence_mask	legion_runtime/region_tree.cc	/^    const FieldMask& RestrictedTraverser::get_coherence_mask(void) const$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
get_collection_table	legion_runtime/runtime.cc	/^                                      Runtime::get_collection_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_color	legion_runtime/region_tree.cc	/^    unsigned PartitionNode::get_color(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_color	legion_runtime/region_tree.cc	/^    unsigned RegionNode::get_color(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_color_modulus	legion_runtime/runtime.h	/^      inline unsigned get_color_modulus(void) const { return runtime_stride; }$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_colors	legion_runtime/region_tree.cc	/^    void IndexSpaceNode::get_colors(std::set<Color> &colors)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_column_source	legion_runtime/region_tree.h	/^      inline FieldSpaceNode* get_column_source(void) const $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
get_completion_event	legion_runtime/legion_ops.h	/^      inline Event get_completion_event(void) const { return completion_event; }$/;"	f	class:LegionRuntime::HighLevel::Operation
get_component_domains	legion_runtime/region_tree.cc	/^    const std::set<Domain>& IndexSpaceNode::get_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_component_domains	legion_runtime/region_tree.cc	/^    const std::set<Domain>& PartitionNode::get_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_component_domains	legion_runtime/region_tree.cc	/^    const std::set<Domain>& RegionNode::get_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_composite_node	legion_runtime/region_tree.cc	/^    CompositeNode* CompositeCloser::get_composite_node(RegionTreeNode *node,$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
get_context	legion_runtime/legion_tasks.cc	/^    RegionTreeContext InlineTask::get_context(void) const$/;"	f	class:LegionRuntime::HighLevel::InlineTask
get_context	legion_runtime/legion_tasks.cc	/^    RegionTreeContext SingleTask::get_context(void) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_context_count	legion_runtime/runtime.h	/^      inline unsigned get_context_count(void) { return total_contexts; }$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_context_id	legion_runtime/legion_tasks.cc	/^    ContextID InlineTask::get_context_id(void) const$/;"	f	class:LegionRuntime::HighLevel::InlineTask
get_context_id	legion_runtime/legion_tasks.cc	/^    ContextID SingleTask::get_context_id(void) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_contig_pointer	legion_runtime/activemsg.cc	/^  virtual void *get_contig_pointer(void) { return 0; }$/;"	f	class:PayloadSource
get_contig_pointer	legion_runtime/activemsg.cc	/^  virtual void *get_contig_pointer(void) { return srcptr; }$/;"	f	class:ContiguousPayload
get_cur_entry	legion_runtime/shared_lowlevel.cc	/^        size_t* get_cur_entry(void) { return &cur_entry; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_current_pointer	legion_runtime/legion_utilities.h	/^    inline const void* Deserializer::get_current_pointer(void) const$/;"	f	class:LegionRuntime::HighLevel::Deserializer
get_current_time_in_micros	legion_runtime/utilities.h	/^    static inline unsigned long long get_current_time_in_micros(void)$/;"	f	class:LegionRuntime::TimeStamp
get_current_time_in_nanos	legion_runtime/utilities.h	/^    static inline unsigned long long get_current_time_in_nanos(void)$/;"	f	class:LegionRuntime::TimeStamp
get_data_ptr	legion_runtime/shared_lowlevel.cc	/^    void* ReservationImpl::get_data_ptr(void) const$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
get_data_size	legion_runtime/shared_lowlevel.cc	/^    size_t ReservationImpl::get_data_size(void) const$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
get_denom	legion_runtime/legion_utilities.h	/^      inline T get_denom(void) const { return denominator; }$/;"	f	class:LegionRuntime::HighLevel::Fraction
get_depth	legion_runtime/legion.cc	/^    unsigned Acquire::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Acquire
get_depth	legion_runtime/legion.cc	/^    unsigned Copy::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Copy
get_depth	legion_runtime/legion.cc	/^    unsigned Inline::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Inline
get_depth	legion_runtime/legion.cc	/^    unsigned Release::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Release
get_depth	legion_runtime/legion.cc	/^    unsigned Task::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Task
get_depth	legion_runtime/legion_spy.h	/^      unsigned get_depth(void) const { return depth; }$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
get_depth	legion_runtime/region_tree.cc	/^    unsigned PartitionNode::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_depth	legion_runtime/region_tree.cc	/^    unsigned RegionNode::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_diff_us	legion_runtime/utilities.h	/^    double get_diff_us(mach_timespec_t &start, mach_timespec_t &stop)$/;"	f	class:LegionRuntime::TimeStamp
get_diff_us	legion_runtime/utilities.h	/^    double get_diff_us(struct timespec &start, struct timespec &stop)$/;"	f	class:LegionRuntime::TimeStamp
get_dim	legion_runtime/lowlevel.h	/^      int get_dim(void) const { return dim; }$/;"	f	class:LegionRuntime::LowLevel::Domain
get_dim	legion_runtime/lowlevel.h	/^      int get_dim(void) const { return dim; }$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
get_dim	legion_runtime/lowlevel.h	/^      int get_dim(void) const { return dim; }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
get_direct_ptr	legion_runtime/lowlevel.cc	/^      virtual void *get_direct_ptr(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
get_direct_ptr	legion_runtime/lowlevel.cc	/^      virtual void *get_direct_ptr(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
get_direct_ptr	legion_runtime/lowlevel.cc	/^    void *GASNetMemory::get_direct_ptr(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
get_direct_ptr	legion_runtime/lowlevel_gpu.h	/^      virtual void *get_direct_ptr(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
get_direct_ptr	legion_runtime/lowlevel_gpu.h	/^      virtual void *get_direct_ptr(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
get_dirty_mask	legion_runtime/region_tree.cc	/^    const FieldMask& PhysicalCloser::get_dirty_mask(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
get_dma_queue	legion_runtime/shared_lowlevel.cc	/^      static DMAQueue *get_dma_queue(void) { return dma_queue; }$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_domain	legion_runtime/region_tree.cc	/^    Domain PartitionNode::get_domain(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_domain	legion_runtime/region_tree.cc	/^    Domain RegionNode::get_domain(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_domain_volume	legion_runtime/region_tree.cc	/^    size_t RegionTreeForest::get_domain_volume(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_domain_volume	legion_runtime/region_tree.cc	/^    size_t RegionTreeForest::get_domain_volume(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_dominator_mask	legion_runtime/region_tree.cc	/^    FieldMask LogicalDepAnalyzer::get_dominator_mask(void) const$/;"	f	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
get_dst	legion_runtime/legion_utilities.h	/^    inline unsigned BitPermutation<BITMASK,LOG2MAX>::get_dst(unsigned src)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
get_element_mask	legion_runtime/shared_lowlevel.cc	/^    const ElementMask& IndexSpace::Impl::get_element_mask(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
get_elmt_size	legion_runtime/shared_lowlevel.cc	/^        size_t get_elmt_size(void) const { return elmt_size; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_enclosing_physical_context	legion_runtime/legion_tasks.cc	/^    RegionTreeContext TaskOp::get_enclosing_physical_context(unsigned idx)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
get_equalTM	lua_src/lvm.c	/^static const TValue *get_equalTM (lua_State *L, Table *mt1, Table *mt2,$/;"	f	file:
get_event	legion_runtime/shared_lowlevel.cc	/^    Event EventImpl::get_event() $/;"	f	class:LegionRuntime::LowLevel::EventImpl
get_event_impl	legion_runtime/lowlevel.cc	/^    Event::Impl *Runtime::get_event_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_event_impl	legion_runtime/shared_lowlevel.cc	/^    EventImpl* Runtime::get_event_impl(Event e)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_executing_processor	legion_runtime/legion.cc	/^    Processor HighLevelRuntime::get_executing_processor(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_executing_processor	legion_runtime/legion_tasks.h	/^      inline Processor get_executing_processor(void) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_executing_processor	legion_runtime/lowlevel.cc	/^    \/*static*\/ Processor Machine::get_executing_processor(void) $/;"	f	class:LegionRuntime::LowLevel::Machine
get_executing_processor	legion_runtime/runtime.cc	/^    Processor Runtime::get_executing_processor(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_executing_processor	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ Processor Machine::get_executing_processor(void)$/;"	f	class:LegionRuntime::LowLevel::Machine
get_fbmem_gpu_base	legion_runtime/lowlevel_gpu.cc	/^    void *GPUProcessor::get_fbmem_gpu_base(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
get_field_accessor	legion_runtime/accessor.h	/^	RegionAccessor<Generic, FT, PT> get_field_accessor(FT T::* ptr) { $/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::StructSpecific
get_field_accessor	legion_runtime/legion.cc	/^      PhysicalRegion::get_field_accessor(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
get_field_accessor	legion_runtime/region_tree.cc	/^      FoldReductionManager::get_field_accessor(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
get_field_accessor	legion_runtime/region_tree.cc	/^      InstanceManager::get_field_accessor(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
get_field_accessor	legion_runtime/region_tree.cc	/^      InstanceRef::get_field_accessor(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_field_accessor	legion_runtime/region_tree.cc	/^      ListReductionManager::get_field_accessor(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
get_field_accessor	legion_runtime/runtime.cc	/^      PhysicalRegion::Impl::get_field_accessor(FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_field_index	legion_runtime/region_tree.cc	/^    unsigned FieldSpaceNode::get_field_index(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_field_indexes	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::get_field_indexes(const std::set<FieldID> &needed,$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_field_mask	legion_runtime/region_tree.cc	/^    FieldMask FieldSpaceNode::get_field_mask($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_field_size	legion_runtime/legion.cc	/^    size_t HighLevelRuntime::get_field_size(Context ctx, FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_field_size	legion_runtime/legion.cc	/^    size_t Mapper::get_field_size(FieldSpace handle, FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_field_size	legion_runtime/region_tree.cc	/^    size_t FieldSpaceNode::get_field_size(FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_field_size	legion_runtime/region_tree.cc	/^    size_t RegionTreeForest::get_field_size(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_field_size	legion_runtime/runtime.cc	/^    size_t Runtime::get_field_size(Context ctx, FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_field_size	legion_runtime/runtime.cc	/^    size_t Runtime::get_field_size(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_field_sizes	legion_runtime/shared_lowlevel.cc	/^        const std::vector<size_t>& get_field_sizes(void) const { return field_sizes; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_field_space	legion_runtime/legion.h	/^      inline FieldSpace get_field_space(void) const { return field_space; }$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
get_field_space	legion_runtime/legion.h	/^      inline FieldSpace get_field_space(void) const { return field_space; }$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
get_field_space	legion_runtime/legion.h	/^      inline FieldSpace get_field_space(void) const { return field_space; }$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
get_first_block	legion_runtime/utilities.h	/^      static TraceBlock*& get_first_block(void)$/;"	f	class:LegionRuntime::LowLevel::Tracer
get_fnptr	legion_runtime/arrays.h	/^      MappingDeserializerFn get_fnptr(int id) const$/;"	f	class:LegionRuntime::Arrays::MappingRegistry
get_free_event	legion_runtime/shared_lowlevel.cc	/^    EventImpl* Runtime::get_free_event()$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_instance	legion_runtime/shared_lowlevel.cc	/^    RegionInstance::Impl* Runtime::get_free_instance(IndexSpace r, Memory m, $/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_metadata	legion_runtime/shared_lowlevel.cc	/^    IndexSpace::Impl* Runtime::get_free_metadata(IndexSpace::Impl *parent, const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_metadata	legion_runtime/shared_lowlevel.cc	/^    IndexSpace::Impl* Runtime::get_free_metadata(const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_metadata	legion_runtime/shared_lowlevel.cc	/^    IndexSpace::Impl* Runtime::get_free_metadata(size_t num_elmts)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_proc_group	legion_runtime/shared_lowlevel.cc	/^    ProcessorGroup *Runtime::get_free_proc_group(const std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_reservation	legion_runtime/shared_lowlevel.cc	/^    ReservationImpl* Runtime::get_free_reservation(size_t data_size\/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_future	legion_runtime/legion.cc	/^    Future FutureMap::get_future(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_future	legion_runtime/legion.h	/^    inline Future FutureMap::get_future(const PT point[DIM])$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_future	legion_runtime/runtime.cc	/^    Future FutureMap::Impl::get_future(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
get_gc_proc	legion_runtime/runtime.cc	/^    Processor Runtime::get_gc_proc(Processor p) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_generation	legion_runtime/legion_ops.h	/^      inline GenerationID get_generation(void) const { return gen; }$/;"	f	class:LegionRuntime::HighLevel::Operation
get_gpu_valid_mask	legion_runtime/lowlevel_gpu.cc	/^    static unsigned *get_gpu_valid_mask(RegionMetaDataUntyped region)$/;"	f	namespace:LegionRuntime::LowLevel
get_group_members	legion_runtime/lowlevel.cc	/^    void Processor::get_group_members(std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::Processor
get_group_members	legion_runtime/lowlevel.cc	/^    void ProcessorGroup::get_group_members(std::vector<Processor>& member_list)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
get_group_members	legion_runtime/shared_lowlevel.cc	/^    void Processor::get_group_members(std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::Processor
get_group_members	legion_runtime/shared_lowlevel.cc	/^    void ProcessorGroup::get_group_members(std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
get_group_members	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::get_group_members(std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
get_handle	legion_runtime/region_tree.h	/^      const ViewHandle& get_handle(void) const { return handle; }$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_hash_key	legion_runtime/legion_utilities.h	/^    inline T BitMask<T,MAX,SHIFT,MASK>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
get_hash_key	legion_runtime/legion_utilities.h	/^    inline T TLBitMask<T,MAX,SHIFT,MASK>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
get_hash_key	legion_runtime/legion_utilities.h	/^    inline uint64_t AVXBitMask<MAX>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
get_hash_key	legion_runtime/legion_utilities.h	/^    inline uint64_t AVXTLBitMask<MAX>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
get_hash_key	legion_runtime/legion_utilities.h	/^    inline uint64_t SSEBitMask<MAX>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
get_hash_key	legion_runtime/legion_utilities.h	/^    inline uint64_t SSETLBitMask<MAX>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
get_home_node	legion_runtime/lowlevel.cc	/^      virtual int get_home_node(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
get_home_node	legion_runtime/lowlevel.cc	/^      virtual int get_home_node(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
get_home_node	legion_runtime/lowlevel.cc	/^    int GASNetMemory::get_home_node(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
get_home_node	legion_runtime/lowlevel_gpu.h	/^      virtual int get_home_node(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
get_home_node	legion_runtime/lowlevel_gpu.h	/^      virtual int get_home_node(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
get_hybrid_soa_parameters	legion_runtime/lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_hybrid_soa_parameters(void *&base, size_t &stride, $/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_hybrid_soa_parameters	legion_runtime/shared_lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_hybrid_soa_parameters(void *& base, size_t& stride,$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_id	legion_runtime/arrays.h	/^      int get_id(void) const {$/;"	f	class:LegionRuntime::Arrays::MappingRegistry
get_id	legion_runtime/legion.h	/^      inline FieldSpaceID get_id(void) const { return id; }$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
get_id	legion_runtime/runtime.h	/^      inline ContextID get_id(void) const $/;"	f	class:LegionRuntime::HighLevel::RegionTreeContext
get_id	legion_runtime/shared_lowlevel.cc	/^        Processor get_id(void) const { return proc; }$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
get_image	legion_runtime/lowlevel.h	/^      int get_image(const DomainPoint& p) const$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
get_index	legion_runtime/legion_utilities.h	/^      inline off_t get_index(void) const { return index; }$/;"	f	class:LegionRuntime::HighLevel::Serializer
get_index	legion_runtime/lowlevel.h	/^      int get_index(void) const$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
get_index_partition	legion_runtime/legion.cc	/^    IndexPartition HighLevelRuntime::get_index_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_partition	legion_runtime/legion.cc	/^    IndexPartition Mapper::get_index_partition(IndexSpace parent, $/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_partition	legion_runtime/legion.h	/^      inline IndexPartition get_index_partition(void) const $/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
get_index_partition	legion_runtime/region_tree.cc	/^    IndexPartition RegionTreeForest::get_index_partition(IndexSpace parent,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_partition	legion_runtime/runtime.cc	/^    IndexPartition Runtime::get_index_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_partition	legion_runtime/runtime.cc	/^    IndexPartition Runtime::get_index_partition(IndexSpace parent, Color color)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_partition_color	legion_runtime/legion.cc	/^    Color HighLevelRuntime::get_index_partition_color(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_partition_color	legion_runtime/legion.cc	/^    Color Mapper::get_index_partition_color(IndexPartition handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_partition_color	legion_runtime/region_tree.cc	/^    Color RegionTreeForest::get_index_partition_color(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_partition_color	legion_runtime/runtime.cc	/^    Color Runtime::get_index_partition_color(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_partition_color	legion_runtime/runtime.cc	/^    Color Runtime::get_index_partition_color(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_partition_color_space	legion_runtime/legion.cc	/^    Domain HighLevelRuntime::get_index_partition_color_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_partition_color_space	legion_runtime/legion.cc	/^    Domain Mapper::get_index_partition_color_space(IndexPartition p) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_partition_color_space	legion_runtime/region_tree.cc	/^    Domain RegionTreeForest::get_index_partition_color_space(IndexPartition p)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_partition_color_space	legion_runtime/runtime.cc	/^    Domain Runtime::get_index_partition_color_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_partition_color_space	legion_runtime/runtime.cc	/^    Domain Runtime::get_index_partition_color_space(IndexPartition p)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space	legion_runtime/legion.h	/^      inline IndexSpace get_index_space(void) const { return index_space; }$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
get_index_space	legion_runtime/legion.h	/^      inline IndexSpace get_index_space(void) const { return index_space; }$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
get_index_space	legion_runtime/lowlevel.h	/^      LegionRuntime::LowLevel::IndexSpace get_index_space(bool create_if_needed = false)$/;"	f	class:LegionRuntime::LowLevel::Domain
get_index_space	legion_runtime/lowlevel.h	/^      LegionRuntime::LowLevel::IndexSpace get_index_space(void) const$/;"	f	class:LegionRuntime::LowLevel::Domain
get_index_space_allocator	legion_runtime/region_tree.cc	/^    IndexSpaceAllocator* RegionTreeForest::get_index_space_allocator($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_space_color	legion_runtime/legion.cc	/^    Color HighLevelRuntime::get_index_space_color(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_space_color	legion_runtime/legion.cc	/^    Color Mapper::get_index_space_color(IndexSpace handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_space_color	legion_runtime/region_tree.cc	/^    Color RegionTreeForest::get_index_space_color(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_space_color	legion_runtime/runtime.cc	/^    Color Runtime::get_index_space_color(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_color	legion_runtime/runtime.cc	/^    Color Runtime::get_index_space_color(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_domain	legion_runtime/legion.cc	/^    Domain HighLevelRuntime::get_index_space_domain(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_space_domain	legion_runtime/legion.cc	/^    Domain Mapper::get_index_space_domain(IndexSpace handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_space_domain	legion_runtime/region_tree.cc	/^    Domain RegionTreeForest::get_index_space_domain(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_space_domain	legion_runtime/runtime.cc	/^    Domain Runtime::get_index_space_domain(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_domain	legion_runtime/runtime.cc	/^    Domain Runtime::get_index_space_domain(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_domains	legion_runtime/legion.cc	/^    void HighLevelRuntime::get_index_space_domains(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_space_domains	legion_runtime/legion.cc	/^    void Mapper::get_index_space_domains(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_space_domains	legion_runtime/region_tree.cc	/^    void RegionTreeForest::get_index_space_domains(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_space_domains	legion_runtime/runtime.cc	/^    void Runtime::get_index_space_domains(Context ctx, IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_domains	legion_runtime/runtime.cc	/^    void Runtime::get_index_space_domains(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_impl	legion_runtime/lowlevel.cc	/^    IndexSpace::Impl *Runtime::get_index_space_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_index_space_partition_colors	legion_runtime/legion.cc	/^    void HighLevelRuntime::get_index_space_partition_colors(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_space_partition_colors	legion_runtime/legion.cc	/^    void Mapper::get_index_space_partition_colors(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_space_partition_colors	legion_runtime/region_tree.cc	/^    void RegionTreeForest::get_index_space_partition_colors(IndexSpace sp,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_space_partition_colors	legion_runtime/runtime.cc	/^    void Runtime::get_index_space_partition_colors(Context ctx, IndexSpace sp,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_partition_colors	legion_runtime/runtime.cc	/^    void Runtime::get_index_space_partition_colors(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_subspace	legion_runtime/legion.cc	/^    IndexSpace HighLevelRuntime::get_index_subspace(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_subspace	legion_runtime/legion.cc	/^    IndexSpace Mapper::get_index_subspace(IndexPartition p, Color c) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_subspace	legion_runtime/legion.h	/^    IndexSpace HighLevelRuntime::get_index_subspace(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_subspace	legion_runtime/legion.h	/^    IndexSpace Mapper::get_index_subspace(IndexPartition p,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_subspace	legion_runtime/region_tree.cc	/^    IndexSpace RegionTreeForest::get_index_subspace(IndexPartition parent,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_subspace	legion_runtime/runtime.cc	/^    IndexSpace Runtime::get_index_subspace(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_subspace	legion_runtime/runtime.cc	/^    IndexSpace Runtime::get_index_subspace(IndexPartition p, Color c)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_inline_table	legion_runtime/runtime.cc	/^                                          Runtime::get_inline_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_input_args	legion_runtime/legion.cc	/^    \/*static*\/ const InputArgs& HighLevelRuntime::get_input_args(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_input_args	legion_runtime/runtime.cc	/^    \/*static*\/ InputArgs& Runtime::get_input_args(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_instance	legion_runtime/legion_tasks.cc	/^    PhysicalManager* SingleTask::get_instance(unsigned idx)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_instance	legion_runtime/lowlevel.cc	/^    RegionInstance::Impl *Memory::Impl::get_instance(RegionInstance i)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
get_instance	legion_runtime/region_tree.h	/^      inline PhysicalInstance get_instance(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
get_instance	legion_runtime/shared_lowlevel.cc	/^    RegionInstance RegionInstance::Impl::get_instance(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_instance_impl	legion_runtime/lowlevel.cc	/^    RegionInstance::Impl *Runtime::get_instance_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_instance_impl	legion_runtime/shared_lowlevel.cc	/^    RegionInstance::Impl* Runtime::get_instance_impl(RegionInstance i)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_instance_ref	legion_runtime/region_tree.cc	/^    const MappingRef& MappingTraverser::get_instance_ref(void) const$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
get_instance_size	legion_runtime/region_tree.cc	/^    size_t FoldReductionManager::get_instance_size(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
get_instance_size	legion_runtime/region_tree.cc	/^    size_t InstanceManager::get_instance_size(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
get_instance_size	legion_runtime/region_tree.cc	/^    size_t ListReductionManager::get_instance_size(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
get_intersection_domains	legion_runtime/region_tree.cc	/^    const std::set<Domain>& IndexPartNode::get_intersection_domains($/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
get_intersection_domains	legion_runtime/region_tree.cc	/^    const std::set<Domain>& IndexSpaceNode::get_intersection_domains($/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_intersection_domains	legion_runtime/region_tree.cc	/^    const std::set<Domain>& PartitionNode::get_intersection_domains($/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_intersection_domains	legion_runtime/region_tree.cc	/^    const std::set<Domain>& RegionNode::get_intersection_domains($/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_kind	legion_runtime/lowlevel.cc	/^    Memory::Kind Memory::Impl::get_kind(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
get_kind	legion_runtime/shared_lowlevel.cc	/^    Memory::Kind MemoryImpl::get_kind(void) const$/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
get_last_block	legion_runtime/utilities.h	/^      static TraceBlock*& get_last_block(void)$/;"	f	class:LegionRuntime::LowLevel::Tracer
get_layout_size	legion_runtime/region_tree.cc	/^    size_t LayoutDescription::get_layout_size(void) const$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
get_leave_open	legion_runtime/region_tree.h	/^      inline bool get_leave_open(void) const $/;"	f	struct:LegionRuntime::HighLevel::CloseInfo
get_leave_open	legion_runtime/region_tree.h	/^      inline bool get_leave_open(void) const { return impl->leave_open; }$/;"	f	class:LegionRuntime::HighLevel::TreeClose
get_linearization	legion_runtime/shared_lowlevel.cc	/^        const DomainLinearization& get_linearization(void) const { return linearization; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_list_pointers	legion_runtime/lowlevel.h	/^      virtual void get_list_pointers(unsigned *ptrs, const void *entry_ptr, size_t count) const$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
get_lmb_size	legion_runtime/activemsg.cc	/^size_t get_lmb_size(int target_node)$/;"	f
get_local_args	legion_runtime/legion.cc	/^    const void* HighLevelRuntime::get_local_args(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_local_args	legion_runtime/runtime.cc	/^    const void* Runtime::get_local_args(SingleTask *ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_local_processors	legion_runtime/lowlevel.cc	/^    const std::set<Processor>& Machine::get_local_processors(Processor p) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_local_processors	legion_runtime/shared_lowlevel.cc	/^    const std::set<Processor>& Machine::get_local_processors(Processor p) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_location	legion_runtime/region_tree.cc	/^    Memory MaterializedView::get_location(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_location	legion_runtime/region_tree.cc	/^    Memory ReductionView::get_location(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
get_lock_impl	legion_runtime/lowlevel.cc	/^    Reservation::Impl *Runtime::get_lock_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_log_cats_enabled	legion_runtime/utilities.h	/^    static std::vector<bool>& get_log_cats_enabled(void)$/;"	f	class:LegionRuntime::Logger
get_log_file	legion_runtime/lowlevel.cc	/^  \/*static*\/ FILE* Logger::get_log_file(void)$/;"	f	class:LegionRuntime::Logger
get_log_file	legion_runtime/utilities.h	/^    static inline int get_log_file(void)$/;"	f	class:LegionRuntime::Logger
get_log_level	legion_runtime/utilities.h	/^    static LogLevel& get_log_level(void)$/;"	f	class:LegionRuntime::Logger
get_logging_buffer	legion_runtime/utilities.h	/^    static inline char* get_logging_buffer(void)$/;"	f	class:LegionRuntime::Logger
get_logging_location	legion_runtime/utilities.h	/^    static long long* get_logging_location(void)$/;"	f	class:LegionRuntime::Logger
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* AcquireOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* AndPredOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* CloseOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* CopyOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* DeletionOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* FenceOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* FuturePredOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* MapOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* MustEpochOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* NotPredOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* OrPredOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
get_logging_name	legion_runtime/legion_ops.cc	/^    const char* ReleaseOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
get_logging_name	legion_runtime/legion_tasks.cc	/^    const char* TaskOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
get_logging_name	legion_runtime/legion_trace.cc	/^    const char* TraceCaptureOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
get_logging_name	legion_runtime/legion_trace.cc	/^    const char* TraceCompleteOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
get_logical_mask	legion_runtime/region_tree.h	/^      inline FieldMask& get_logical_mask(void) const $/;"	f	class:LegionRuntime::HighLevel::TreeClose
get_logical_partition	legion_runtime/legion.cc	/^    LogicalPartition HighLevelRuntime::get_logical_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_partition	legion_runtime/legion.cc	/^    LogicalPartition Mapper::get_logical_partition(LogicalRegion parent,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_partition	legion_runtime/region_tree.cc	/^    LogicalPartition RegionTreeForest::get_logical_partition($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_partition	legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition	legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition(LogicalRegion parent,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_by_color	legion_runtime/legion.cc	/^    LogicalPartition HighLevelRuntime::get_logical_partition_by_color($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_partition_by_color	legion_runtime/legion.cc	/^    LogicalPartition Mapper::get_logical_partition_by_color(LogicalRegion par,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_partition_by_color	legion_runtime/region_tree.cc	/^    LogicalPartition RegionTreeForest::get_logical_partition_by_color($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_partition_by_color	legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition_by_color($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_by_color	legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition_by_color(LogicalRegion par,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_by_tree	legion_runtime/legion.cc	/^    LogicalPartition HighLevelRuntime::get_logical_partition_by_tree($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_partition_by_tree	legion_runtime/legion.cc	/^    LogicalPartition Mapper::get_logical_partition_by_tree(IndexPartition part,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_partition_by_tree	legion_runtime/region_tree.cc	/^    LogicalPartition RegionTreeForest::get_logical_partition_by_tree($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_partition_by_tree	legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition_by_tree($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_by_tree	legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition_by_tree(IndexPartition part,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_color	legion_runtime/legion.cc	/^    Color HighLevelRuntime::get_logical_partition_color(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_partition_color	legion_runtime/legion.cc	/^    Color Mapper::get_logical_partition_color(LogicalPartition handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_partition_color	legion_runtime/region_tree.cc	/^    Color RegionTreeForest::get_logical_partition_color(LogicalPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_partition_color	legion_runtime/runtime.cc	/^    Color Runtime::get_logical_partition_color(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_color	legion_runtime/runtime.cc	/^    Color Runtime::get_logical_partition_color(LogicalPartition handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_region	legion_runtime/legion.cc	/^    LogicalRegion PhysicalRegion::get_logical_region(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
get_logical_region	legion_runtime/runtime.cc	/^    LogicalRegion PhysicalRegion::Impl::get_logical_region(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_logical_region_color	legion_runtime/legion.cc	/^    Color HighLevelRuntime::get_logical_region_color(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_region_color	legion_runtime/legion.cc	/^    Color Mapper::get_logical_region_color(LogicalRegion handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_region_color	legion_runtime/region_tree.cc	/^    Color RegionTreeForest::get_logical_region_color(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_region_color	legion_runtime/runtime.cc	/^    Color Runtime::get_logical_region_color(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_region_color	legion_runtime/runtime.cc	/^    Color Runtime::get_logical_region_color(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_state	legion_runtime/region_tree.cc	/^    LogicalState& RegionTreeNode::get_logical_state(ContextID ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
get_logical_subregion	legion_runtime/legion.cc	/^    LogicalRegion HighLevelRuntime::get_logical_subregion(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_subregion	legion_runtime/legion.cc	/^    LogicalRegion Mapper::get_logical_subregion(LogicalPartition parent,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_subregion	legion_runtime/region_tree.cc	/^    LogicalRegion RegionTreeForest::get_logical_subregion($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_subregion	legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_subregion	legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion(LogicalPartition parent,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_subregion_by_color	legion_runtime/legion.cc	/^    LogicalRegion HighLevelRuntime::get_logical_subregion_by_color(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_subregion_by_color	legion_runtime/legion.cc	/^    LogicalRegion Mapper::get_logical_subregion_by_color(LogicalPartition par,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_subregion_by_color	legion_runtime/region_tree.cc	/^    LogicalRegion RegionTreeForest::get_logical_subregion_by_color($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_subregion_by_color	legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion_by_color(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_subregion_by_color	legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion_by_color(LogicalPartition par,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_subregion_by_tree	legion_runtime/legion.cc	/^    LogicalRegion HighLevelRuntime::get_logical_subregion_by_tree(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_subregion_by_tree	legion_runtime/legion.cc	/^    LogicalRegion Mapper::get_logical_subregion_by_tree(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_subregion_by_tree	legion_runtime/region_tree.cc	/^    LogicalRegion RegionTreeForest::get_logical_subregion_by_tree($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_subregion_by_tree	legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion_by_tree(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_subregion_by_tree	legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion_by_tree(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_lower_targets	legion_runtime/region_tree.cc	/^                                                  get_lower_targets(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
get_machine	legion_runtime/lowlevel.cc	/^    \/*static*\/ Machine *Machine::get_machine(void) { return the_machine; }$/;"	f	class:LegionRuntime::LowLevel::Machine
get_machine	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ Machine* Machine::get_machine(void)$/;"	f	class:LegionRuntime::LowLevel::Machine
get_manager	legion_runtime/region_tree.cc	/^    PhysicalManager* CompositeView::get_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
get_manager	legion_runtime/region_tree.cc	/^    PhysicalManager* MaterializedView::get_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_manager	legion_runtime/region_tree.cc	/^    PhysicalManager* ReductionView::get_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
get_manager	legion_runtime/region_tree.h	/^      inline PhysicalManager* get_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
get_mappable_kind	legion_runtime/legion_ops.cc	/^    Mappable::MappableKind AcquireOp::get_mappable_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
get_mappable_kind	legion_runtime/legion_ops.cc	/^    Mappable::MappableKind CopyOp::get_mappable_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
get_mappable_kind	legion_runtime/legion_ops.cc	/^    Mappable::MappableKind MapOp::get_mappable_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
get_mappable_kind	legion_runtime/legion_ops.cc	/^    Mappable::MappableKind ReleaseOp::get_mappable_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
get_mappable_kind	legion_runtime/legion_tasks.cc	/^    Mappable::MappableKind TaskOp::get_mappable_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
get_mapper	legion_runtime/legion.cc	/^    Mapper* HighLevelRuntime::get_mapper(Context ctx, MapperID id,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_mapper	legion_runtime/runtime.cc	/^    Mapper* Runtime::get_mapper(Context ctx, MapperID id, Processor target)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_mapping	legion_runtime/lowlevel.h	/^      Arrays::Mapping<DIM, 1> *get_mapping(void) const$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
get_mask	legion_runtime/region_tree.h	/^      inline const FieldMask& get_mask(void) const { return needed_fields; }$/;"	f	class:LegionRuntime::HighLevel::MappingRef
get_materialized_parent_view	legion_runtime/region_tree.cc	/^    MaterializedView* MaterializedView::get_materialized_parent_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_materialized_subview	legion_runtime/region_tree.cc	/^    MaterializedView* MaterializedView::get_materialized_subview(Color c)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_max_id_per_pkg	nautilus/numa.c	/^get_max_id_per_pkg (void)$/;"	f	file:
get_mem_mem_affinity	legion_runtime/lowlevel.cc	/^    int Machine::get_mem_mem_affinity(std::vector<Machine::MemoryMemoryAffinity>& result,$/;"	f	class:LegionRuntime::LowLevel::Machine
get_mem_mem_affinity	legion_runtime/shared_lowlevel.cc	/^    int Machine::get_mem_mem_affinity(std::vector<MemoryMemoryAffinity> &result,$/;"	f	class:LegionRuntime::LowLevel::Machine
get_memory	legion_runtime/region_tree.cc	/^    Memory InstanceRef::get_memory(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_memory_impl	legion_runtime/lowlevel.cc	/^    Memory::Impl *Runtime::get_memory_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_memory_impl	legion_runtime/shared_lowlevel.cc	/^    MemoryImpl* Runtime::get_memory_impl(Memory m)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_memory_kind	legion_runtime/lowlevel.cc	/^    Memory::Kind Machine::get_memory_kind(Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_memory_kind	legion_runtime/shared_lowlevel.cc	/^    Memory::Kind Machine::get_memory_kind(Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_memory_size	legion_runtime/lowlevel.cc	/^    size_t Machine::get_memory_size(const Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_memory_size	legion_runtime/shared_lowlevel.cc	/^    size_t Machine::get_memory_size(const Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_message_proc	legion_runtime/runtime.cc	/^    Processor Runtime::get_message_proc(Processor p) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_metadata	legion_runtime/shared_lowlevel.cc	/^    IndexSpace IndexSpace::Impl::get_metadata(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
get_metadata_impl	legion_runtime/shared_lowlevel.cc	/^    IndexSpace::Impl* Runtime::get_metadata_impl(IndexSpace m)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_my_apicid	nautilus/sfi.c	/^get_my_apicid (void)$/;"	f	file:
get_my_cr3	arch/hrt/hrt.c	/^get_my_cr3 (void)$/;"	f	file:
get_next	legion_runtime/accessor.h	/^	  inline ptr_t get_next(void) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
get_next	legion_runtime/lowlevel.cc	/^    bool ElementMask::Enumerator::get_next(int &position, int &length)$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
get_next	legion_runtime/shared_lowlevel.cc	/^    bool ElementMask::Enumerator::get_next(int &position, int &length)$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
get_next_available_id	legion_runtime/runtime.cc	/^    \/*static*\/ Processor::TaskFuncID Runtime::get_next_available_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_node	legion_runtime/region_tree.cc	/^    FieldSpaceNode* RegionTreeForest::get_node(FieldSpace space)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_node	legion_runtime/region_tree.cc	/^    IndexPartNode* RegionTreeForest::get_node(IndexPartition part)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_node	legion_runtime/region_tree.cc	/^    IndexSpaceNode* RegionTreeForest::get_node(IndexSpace space)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_node	legion_runtime/region_tree.cc	/^    PartitionNode* RegionTreeForest::get_node(LogicalPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_node	legion_runtime/region_tree.cc	/^    RegionNode* RegionTreeForest::get_node(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_node_voltage	test/circuit_cpu.cc	/^static inline float get_node_voltage(const RegionAccessor<AT,float> &priv,$/;"	f	file:
get_non_dominated_mask	legion_runtime/region_tree.cc	/^    const FieldMask& PhysicalDepAnalyzer<FILTER>::get_non_dominated_mask(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
get_non_dominated_mask	legion_runtime/region_tree.h	/^      inline const FieldMask& get_non_dominated_mask(void) const $/;"	f	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
get_num	legion_runtime/legion_utilities.h	/^      inline T get_num(void) const { return numerator; }$/;"	f	class:LegionRuntime::HighLevel::Fraction
get_num_children	legion_runtime/region_tree.cc	/^    size_t IndexPartNode::get_num_children(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
get_num_children	legion_runtime/region_tree.cc	/^    size_t IndexSpaceNode::get_num_children(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_num_children	legion_runtime/region_tree.cc	/^    size_t PartitionNode::get_num_children(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_num_children	legion_runtime/region_tree.cc	/^    size_t RegionNode::get_num_children(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_num_elmts	legion_runtime/lowlevel.h	/^      int get_num_elmts(void) const { return num_elements; }$/;"	f	class:LegionRuntime::LowLevel::ElementMask
get_num_elmts	legion_runtime/shared_lowlevel.cc	/^        size_t get_num_elmts(void) const { return num_elmts; }$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
get_num_elmts	legion_runtime/shared_lowlevel.cc	/^        size_t get_num_elmts(void) const { return num_elmts; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_observed_mask	legion_runtime/region_tree.cc	/^    const FieldMask& PhysicalDepAnalyzer<FILTER>::get_observed_mask(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
get_operation_depth	legion_runtime/legion_ops.cc	/^    unsigned Operation::get_operation_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Operation
get_parent	legion_runtime/legion_ops.h	/^      inline SingleTask* get_parent(void) const { return parent_ctx; }$/;"	f	class:LegionRuntime::HighLevel::Operation
get_parent	legion_runtime/region_tree.cc	/^    IndexTreeNode* IndexPartNode::get_parent(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
get_parent	legion_runtime/region_tree.cc	/^    IndexTreeNode* IndexSpaceNode::get_parent(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_parent	legion_runtime/region_tree.cc	/^    RegionTreeNode* PartitionNode::get_parent(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_parent	legion_runtime/region_tree.cc	/^    RegionTreeNode* RegionNode::get_parent(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_parent_index_partition	legion_runtime/legion.cc	/^    IndexPartition HighLevelRuntime::get_parent_index_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_parent_index_partition	legion_runtime/legion.cc	/^    IndexPartition Mapper::get_parent_index_partition(IndexSpace handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_parent_index_partition	legion_runtime/region_tree.cc	/^    IndexPartition RegionTreeForest::get_parent_index_partition($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_parent_index_partition	legion_runtime/runtime.cc	/^    IndexPartition Runtime::get_parent_index_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_index_partition	legion_runtime/runtime.cc	/^    IndexPartition Runtime::get_parent_index_partition(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_index_space	legion_runtime/legion.cc	/^    IndexSpace HighLevelRuntime::get_parent_index_space(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_parent_index_space	legion_runtime/legion.cc	/^    IndexSpace Mapper::get_parent_index_space(IndexPartition handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_parent_index_space	legion_runtime/region_tree.cc	/^    IndexSpace RegionTreeForest::get_parent_index_space(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_parent_index_space	legion_runtime/runtime.cc	/^    IndexSpace Runtime::get_parent_index_space(Context ctx,   $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_index_space	legion_runtime/runtime.cc	/^    IndexSpace Runtime::get_parent_index_space(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_logical_partition	legion_runtime/legion.cc	/^    LogicalPartition HighLevelRuntime::get_parent_logical_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_parent_logical_partition	legion_runtime/legion.cc	/^    LogicalPartition Mapper::get_parent_logical_partition(LogicalRegion r) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_parent_logical_partition	legion_runtime/region_tree.cc	/^    LogicalPartition RegionTreeForest::get_parent_logical_partition($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_parent_logical_partition	legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_parent_logical_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_logical_partition	legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_parent_logical_partition(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_logical_region	legion_runtime/legion.cc	/^    LogicalRegion HighLevelRuntime::get_parent_logical_region(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_parent_logical_region	legion_runtime/legion.cc	/^    LogicalRegion Mapper::get_parent_logical_region(LogicalPartition part) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_parent_logical_region	legion_runtime/region_tree.cc	/^    LogicalRegion RegionTreeForest::get_parent_logical_region($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_parent_logical_region	legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_parent_logical_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_logical_region	legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_parent_logical_region(LogicalPartition handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_view	legion_runtime/region_tree.cc	/^    InstanceView* CompositeView::get_parent_view(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
get_parent_view	legion_runtime/region_tree.cc	/^    InstanceView* MaterializedView::get_parent_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_part	legion_runtime/legion_utilities.h	/^    Fraction<T> Fraction<T>::get_part(T ways)$/;"	f	class:LegionRuntime::HighLevel::Fraction
get_partition_projection_table	legion_runtime/runtime.cc	/^                                          get_partition_projection_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_path_length	legion_runtime/region_tree.cc	/^    unsigned RegionTreePath::get_path_length(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
get_physical_mask	legion_runtime/region_tree.cc	/^    const FieldMask& MaterializedView::get_physical_mask(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_physical_region	legion_runtime/legion_tasks.cc	/^    PhysicalRegion SingleTask::get_physical_region(unsigned idx)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_physical_regions	legion_runtime/legion_tasks.cc	/^    const std::vector<PhysicalRegion>& SingleTask::get_physical_regions() const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_point	legion_runtime/legion.cc	/^    TaskArgument ArgumentMap::get_point(const DomainPoint &point) const$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
get_point	legion_runtime/lowlevel.h	/^      Arrays::Point<DIM> get_point(void) const { assert(dim == DIM); return Arrays::Point<DIM>(point_data); }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
get_point	legion_runtime/runtime.cc	/^    TaskArgument ArgumentMap::Impl::get_point(const DomainPoint &point) const$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
get_pointer_space	legion_runtime/region_tree.cc	/^    Domain FoldReductionManager::get_pointer_space(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
get_pointer_space	legion_runtime/region_tree.cc	/^    Domain ListReductionManager::get_pointer_space(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
get_predicate_value	legion_runtime/legion_ops.cc	/^    bool SpeculativeOp::get_predicate_value(Processor proc)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
get_previous_phase	legion_runtime/lowlevel.cc	/^    Event Barrier::get_previous_phase(void) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
get_previous_phase	legion_runtime/shared_lowlevel.cc	/^    Event Barrier::get_previous_phase(void) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
get_privilege_string	legion_runtime/accessor.h	/^      static inline const char* get_privilege_string(AccessorPrivilege priv)$/;"	f	namespace:LegionRuntime::Accessor::AccessorType
get_proc_kind	legion_runtime/shared_lowlevel.cc	/^        Processor::Kind get_proc_kind(void) const { return proc_kind; }$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
get_proc_mem_affinity	legion_runtime/lowlevel.cc	/^    int Machine::get_proc_mem_affinity(std::vector<Machine::ProcessorMemoryAffinity>& result,$/;"	f	class:LegionRuntime::LowLevel::Machine
get_proc_mem_affinity	legion_runtime/shared_lowlevel.cc	/^    int Machine::get_proc_mem_affinity(std::vector<ProcessorMemoryAffinity> &result,$/;"	f	class:LegionRuntime::LowLevel::Machine
get_processor	legion_runtime/lowlevel.cc	/^        virtual Processor get_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
get_processor	legion_runtime/lowlevel.cc	/^      virtual Processor get_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
get_processor	legion_runtime/lowlevel_gpu.cc	/^      Processor get_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
get_processor	legion_runtime/lowlevel_gpu.cc	/^    \/*static*\/ Processor GPUProcessor::get_processor(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
get_processor_impl	legion_runtime/lowlevel.cc	/^    Processor::Impl *Runtime::get_processor_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_processor_impl	legion_runtime/shared_lowlevel.cc	/^    ProcessorImpl* Runtime::get_processor_impl(Processor p)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_processor_kind	legion_runtime/lowlevel.cc	/^    Processor::Kind Machine::get_processor_kind(Processor p) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_processor_kind	legion_runtime/shared_lowlevel.cc	/^    Processor::Kind Machine::get_processor_kind(Processor p) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_procgroup_impl	legion_runtime/lowlevel.cc	/^    ProcessorGroup *Runtime::get_procgroup_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_profiler	legion_runtime/legion_logging.h	/^      static inline ProcessorProfiler& get_profiler()$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
get_profiler	legion_runtime/legion_profiling.h	/^      static inline ProcessorProfiler& get_profiler(Processor proc)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
get_prompt	lua_src/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:
get_ptr	legion_runtime/legion.h	/^      inline void*  get_ptr(void) const { return args; }$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
get_rand_byte	nautilus/random.c	/^get_rand_byte (void) $/;"	f	file:
get_rand_float	test/saxpy_array.cc	/^float get_rand_float() {$/;"	f
get_raw	legion_runtime/lowlevel.cc	/^    const void *ElementMask::get_raw(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
get_raw	legion_runtime/shared_lowlevel.cc	/^    const void *ElementMask::get_raw(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
get_ready_event	legion_runtime/region_tree.h	/^      inline Event get_ready_event(void) const { return ready_event; }$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_ready_event	legion_runtime/runtime.cc	/^    Event PhysicalRegion::Impl::get_ready_event(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_ready_event	legion_runtime/runtime.h	/^      Event get_ready_event(void) const { return ready_event; }$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
get_rect	legion_runtime/lowlevel.h	/^      Arrays::Rect<DIM> get_rect(void) const { assert(dim == DIM); return Arrays::Rect<DIM>(rect_data); }$/;"	f	class:LegionRuntime::LowLevel::Domain
get_recycle_event	legion_runtime/region_tree.cc	/^    Event InstanceManager::get_recycle_event(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
get_redfold_parameters	legion_runtime/lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_redfold_parameters(void *&base) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_redfold_parameters	legion_runtime/shared_lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_redfold_parameters(void *& base) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_redlist_parameters	legion_runtime/lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_redlist_parameters(void *&base, ptr_t *&next_ptr) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_redlist_parameters	legion_runtime/shared_lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_redlist_parameters(void *& base, ptr_t *& next_ptr) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_redop	legion_runtime/region_tree.cc	/^    ReductionOpID ReductionView::get_redop(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
get_reduction_op	legion_runtime/legion.cc	/^    \/*static*\/ const ReductionOp* HighLevelRuntime::get_reduction_op($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_reduction_op	legion_runtime/runtime.cc	/^    \/*static*\/ const ReductionOp* Runtime::get_reduction_op($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_reduction_op	legion_runtime/shared_lowlevel.cc	/^    const ReductionOpUntyped* Runtime::get_reduction_op(ReductionOpID redop)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_reduction_table	legion_runtime/legion.cc	/^                                                      get_reduction_table(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_reduction_table	legion_runtime/runtime.cc	/^                                                      get_reduction_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_reference	legion_runtime/legion.h	/^    inline const T& Future::get_reference(void)$/;"	f	class:LegionRuntime::HighLevel::Future
get_reference	legion_runtime/runtime.cc	/^    const InstanceRef& PhysicalRegion::Impl::get_reference(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_region_projection_table	legion_runtime/runtime.cc	/^                                              get_region_projection_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_remaining_bytes	legion_runtime/legion_utilities.h	/^    inline size_t Deserializer::get_remaining_bytes(void) const$/;"	f	class:LegionRuntime::HighLevel::Deserializer
get_required_lock	legion_runtime/region_tree.h	/^      Reservation get_required_lock(void) const { return needed_lock; }$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_requirement	legion_runtime/legion_ops.cc	/^    const RegionRequirement& AcquireOp::get_requirement(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
get_requirement	legion_runtime/legion_ops.cc	/^    const RegionRequirement& ReleaseOp::get_requirement(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
get_requirement	legion_runtime/runtime.cc	/^    const RegionRequirement& PhysicalRegion::Impl::get_requirement(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_reservation	legion_runtime/shared_lowlevel.cc	/^    Reservation IndexSpace::Impl::get_reservation(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
get_reservation	legion_runtime/shared_lowlevel.cc	/^    Reservation RegionInstance::Impl::get_reservation(void)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_reservation	legion_runtime/shared_lowlevel.cc	/^    Reservation ReservationImpl::get_reservation(void) const$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
get_reservation_impl	legion_runtime/shared_lowlevel.cc	/^    ReservationImpl* Runtime::get_reservation_impl(Reservation r)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_result	legion_runtime/legion.h	/^    inline RT FutureMap::get_result(const PT point[DIM])$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_result	legion_runtime/legion.h	/^    inline T Future::get_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future
get_result	legion_runtime/legion.h	/^    inline T FutureMap::get_result(const DomainPoint &dp)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_runnable_thread	nautilus/thread.c	/^get_runnable_thread (uint32_t cpu)$/;"	f	file:
get_runnable_thread_myq	nautilus/thread.c	/^get_runnable_thread_myq (void) $/;"	f	file:
get_runtime	legion_runtime/legion.cc	/^    \/*static*\/ HighLevelRuntime* HighLevelRuntime::get_runtime(Processor p)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_runtime	legion_runtime/lowlevel_impl.h	/^      static Runtime *get_runtime(void) { return runtime; }$/;"	f	class:Runtime
get_runtime	legion_runtime/runtime.cc	/^    \/*static*\/ Runtime* Runtime::get_runtime(Processor p)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_runtime	legion_runtime/shared_lowlevel.cc	/^      static Runtime* get_runtime(void) { return runtime; } $/;"	f	class:LegionRuntime::LowLevel::Runtime
get_s5	arch/hrt/shutdown.c	/^get_s5 (struct shutdown_info * s)$/;"	f	file:
get_s5	arch/x64/shutdown.c	/^get_s5 (struct shutdown_info * s)$/;"	f	file:
get_shared_processors	legion_runtime/lowlevel.h	/^      const std::set<Processor>& get_shared_processors(Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_size	legion_runtime/legion.h	/^      inline size_t get_size(void) const { return arglen; }$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
get_soa_parameters	legion_runtime/lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_soa_parameters(void *&base, size_t &stride) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_soa_parameters	legion_runtime/shared_lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_soa_parameters(void *& base, size_t& stride) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_src	legion_runtime/legion_utilities.h	/^    inline unsigned BitPermutation<BITMASK,LOG2MAX>::get_src(unsigned dst)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
get_start_color	legion_runtime/runtime.h	/^      inline unsigned get_start_color(void) const { return address_space; }$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_start_event	legion_runtime/legion_tasks.h	/^      inline Event get_start_event(void) { return legion_spy_start; }$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_strided_parameters	legion_runtime/lowlevel.cc	/^    bool RegionInstance::Impl::get_strided_parameters(void *&base, size_t &stride,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_subspace_domains	legion_runtime/region_tree.cc	/^    void IndexPartNode::get_subspace_domains(std::set<Domain> &subspaces)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
get_subview	legion_runtime/region_tree.cc	/^    InstanceView* CompositeView::get_subview(Color c)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
get_subview	legion_runtime/region_tree.cc	/^    InstanceView* MaterializedView::get_subview(Color c)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_task_completion	legion_runtime/legion_tasks.cc	/^    Event IndexTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexTask
get_task_completion	legion_runtime/legion_tasks.cc	/^    Event IndividualTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
get_task_completion	legion_runtime/legion_tasks.cc	/^    Event InlineTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::InlineTask
get_task_completion	legion_runtime/legion_tasks.cc	/^    Event PointTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::PointTask
get_task_completion	legion_runtime/legion_tasks.cc	/^    Event RemoteTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
get_task_completion	legion_runtime/legion_tasks.cc	/^    Event SliceTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::SliceTask
get_task_kind	legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind IndexTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexTask
get_task_kind	legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind IndividualTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
get_task_kind	legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind InlineTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::InlineTask
get_task_kind	legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind PointTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::PointTask
get_task_kind	legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind RemoteTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
get_task_kind	legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind SliceTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::SliceTask
get_task_name	legion_runtime/runtime.cc	/^    const char* PhysicalRegion::Impl::get_task_name(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_task_table	legion_runtime/runtime.cc	/^    \/*static*\/ Processor::TaskIDTable& Runtime::get_task_table($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_top_regions	legion_runtime/legion_tasks.cc	/^    void SingleTask::get_top_regions(std::vector<LogicalRegion> &top_regions)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_topo_params	nautilus/numa.c	/^get_topo_params (struct nk_topo_params * tp)$/;"	f	file:
get_topo_secondary	nautilus/numa.c	/^get_topo_secondary (struct nk_topo_params * tp)$/;"	f	file:
get_tree	legion_runtime/region_tree.cc	/^    RegionNode* RegionTreeForest::get_tree(RegionTreeID tid)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_tree_child	legion_runtime/region_tree.cc	/^    RegionTreeNode* PartitionNode::get_tree_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_tree_child	legion_runtime/region_tree.cc	/^    RegionTreeNode* RegionNode::get_tree_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_tree_id	legion_runtime/legion.h	/^      inline RegionTreeID get_tree_id(void) const { return tree_id; }$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
get_tree_id	legion_runtime/legion.h	/^      inline RegionTreeID get_tree_id(void) const { return tree_id; }$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
get_tree_state_logger	legion_runtime/runtime.h	/^      TreeStateLogger *get_tree_state_logger(void) { return tree_state_logger; }$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_tunable_value	legion_runtime/default_mapper.cc	/^    int DefaultMapper::get_tunable_value(const Task *task, TunableID tid,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
get_tunable_value	legion_runtime/legion.cc	/^    int HighLevelRuntime::get_tunable_value(Context ctx, TunableID tid,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_tunable_value	legion_runtime/runtime.cc	/^    int Runtime::get_tunable_value(Context ctx, TunableID tid,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_tunable_value	test/custom_mapper.cc	/^int PartitioningMapper::get_tunable_value(const Task *task,$/;"	f	class:PartitioningMapper
get_tunable_value	test/hpcg/cg-mapper.h	/^CGMapper::get_tunable_value(const LegionRuntime::HighLevel::Task *task,$/;"	f	class:CGMapper
get_unique_acquire_id	legion_runtime/legion.h	/^    inline UniqueID Acquire::get_unique_acquire_id(void) const$/;"	f	class:LegionRuntime::HighLevel::Acquire
get_unique_copy_id	legion_runtime/legion.h	/^    inline UniqueID Copy::get_unique_copy_id(void) const$/;"	f	class:LegionRuntime::HighLevel::Copy
get_unique_field_id	legion_runtime/runtime.cc	/^    FieldID Runtime::get_unique_field_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_unique_field_space_id	legion_runtime/runtime.cc	/^    FieldSpaceID Runtime::get_unique_field_space_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_unique_inline_id	legion_runtime/legion.h	/^    inline UniqueID Inline::get_unique_inline_id(void) const$/;"	f	class:LegionRuntime::HighLevel::Inline
get_unique_mappable_id	legion_runtime/legion_ops.cc	/^    UniqueID AcquireOp::get_unique_mappable_id(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
get_unique_mappable_id	legion_runtime/legion_ops.cc	/^    UniqueID CopyOp::get_unique_mappable_id(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
get_unique_mappable_id	legion_runtime/legion_ops.cc	/^    UniqueID MapOp::get_unique_mappable_id(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
get_unique_mappable_id	legion_runtime/legion_ops.cc	/^    UniqueID ReleaseOp::get_unique_mappable_id(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
get_unique_mappable_id	legion_runtime/legion_tasks.cc	/^    UniqueID TaskOp::get_unique_mappable_id(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
get_unique_op_id	legion_runtime/legion_ops.h	/^      inline UniqueID get_unique_op_id(void) const { return unique_op_id; } $/;"	f	class:LegionRuntime::HighLevel::Operation
get_unique_operation_id	legion_runtime/runtime.cc	/^    UniqueID Runtime::get_unique_operation_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_unique_partition_id	legion_runtime/runtime.cc	/^    IndexPartition Runtime::get_unique_partition_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_unique_release_id	legion_runtime/legion.h	/^    inline UniqueID Release::get_unique_release_id(void) const$/;"	f	class:LegionRuntime::HighLevel::Release
get_unique_task_id	legion_runtime/legion.h	/^    inline UniqueID Task::get_unique_task_id(void) const$/;"	f	class:LegionRuntime::HighLevel::Task
get_unique_tree_id	legion_runtime/runtime.cc	/^    RegionTreeID Runtime::get_unique_tree_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_untyped_field_accessor	legion_runtime/accessor.h	/^	  RegionAccessor<Generic, void, void> get_untyped_field_accessor(off_t _field_offset, size_t _field_size)$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_untyped_pointer	legion_runtime/legion.h	/^    inline const void* Future::get_untyped_pointer(void)$/;"	f	class:LegionRuntime::HighLevel::Future
get_untyped_result	legion_runtime/legion.cc	/^    void* Future::get_untyped_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future
get_untyped_result	legion_runtime/runtime.cc	/^    void* Future::Impl::get_untyped_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
get_untyped_size	legion_runtime/runtime.cc	/^    size_t Future::Impl::get_untyped_size(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
get_upper_targets	legion_runtime/region_tree.cc	/^                                                  get_upper_targets(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
get_use_event	legion_runtime/region_tree.h	/^      inline Event get_use_event(void) const { return use_event; }$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
get_used_bytes	legion_runtime/legion_utilities.h	/^      inline size_t get_used_bytes(void) const { return index; }$/;"	f	class:LegionRuntime::HighLevel::Serializer
get_user_data_table	legion_runtime/runtime.cc	/^                                      Runtime::get_user_data_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_user_event	legion_runtime/shared_lowlevel.cc	/^    UserEvent EventImpl::get_user_event()$/;"	f	class:LegionRuntime::LowLevel::EventImpl
get_utility_processor	legion_runtime/lowlevel.cc	/^    Processor Processor::get_utility_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
get_utility_processor	legion_runtime/shared_lowlevel.cc	/^    Processor Processor::get_utility_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
get_utility_processor	legion_runtime/shared_lowlevel.cc	/^    Processor ProcessorImpl::get_utility_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
get_utility_processor_mapping	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::get_utility_processor_mapping($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_utility_users	legion_runtime/shared_lowlevel.cc	/^    const std::set<Processor>& ProcessorImpl::get_utility_users(void) const$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
get_valid_mask	legion_runtime/lowlevel.cc	/^    const ElementMask &IndexSpace::get_valid_mask(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
get_valid_mask	legion_runtime/shared_lowlevel.cc	/^    const ElementMask &IndexSpace::get_valid_mask(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
get_variant	legion_runtime/legion.cc	/^    VariantID TaskVariantCollection::get_variant(Processor::Kind kind, $/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
get_variant	legion_runtime/legion.cc	/^    const TaskVariantCollection::Variant& TaskVariantCollection::get_variant($/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
get_variant_collection	legion_runtime/runtime.cc	/^    \/*static*\/ TaskVariantCollection* Runtime::get_variant_collection($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_vec_node_voltage	test/circuit_cpu.cc	/^static inline __m128 get_vec_node_voltage(ptr_t current_wire,$/;"	f	file:
get_vendor_string	nautilus/cpu.c	/^get_vendor_string (char name[13])$/;"	f	file:
get_view	legion_runtime/region_tree.h	/^      inline LogicalView* get_view(void) const { return view; } $/;"	f	class:LegionRuntime::HighLevel::MappingRef
get_view	legion_runtime/region_tree.h	/^      inline LogicalView* get_view(void) const { return view; }$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
get_visible_memories	legion_runtime/lowlevel.h	/^      const std::set<Memory>&    get_visible_memories(Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_visible_memories	legion_runtime/lowlevel.h	/^      const std::set<Memory>&    get_visible_memories(Processor p) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_void_result	legion_runtime/legion.cc	/^    void Future::get_void_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future
get_void_result	legion_runtime/legion.cc	/^    void FutureMap::get_void_result(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_void_result	legion_runtime/legion.h	/^    inline void FutureMap::get_void_result(const PT point[DIM])$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_void_result	legion_runtime/runtime.cc	/^    void Future::Impl::get_void_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
get_void_result	legion_runtime/runtime.cc	/^    void FutureMap::Impl::get_void_result(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
get_volume	legion_runtime/lowlevel.h	/^      int get_volume(void) const$/;"	f	class:LegionRuntime::LowLevel::Domain
get_written_location	legion_runtime/utilities.h	/^    static int* get_written_location(void)$/;"	f	class:LegionRuntime::Logger
get_xsave_features	nautilus/fpu.c	/^get_xsave_features (void)$/;"	f	file:
get_zcmem_cpu_base	legion_runtime/lowlevel_gpu.cc	/^    void *GPUProcessor::get_zcmem_cpu_base(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
getargs	lua_src/lua.c	/^static int getargs (lua_State *L, char **argv, int n) {$/;"	f	file:
getbinopr	lua_src/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getboolfield	lua_src/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getc	nautilus/libccompat.c	/^int getc(FILE* arg)$/;"	f
getcached	lua_src/lvm.c	/^static Closure *getcached (Proto *p, UpVal **encup, StkId base) {$/;"	f	file:
getenv	nautilus/libccompat.c	/^char *getenv(const char *name)$/;"	f
getfield	lua_src/loslib.c	/^static int getfield (lua_State *L, const char *key, int d) {$/;"	f	file:
getfreepos	lua_src/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfuncname	lua_src/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
gethooktable	lua_src/ldblib.c	267;"	d	file:
getiofile	lua_src/liolib.c	/^static FILE *getiofile (lua_State *L, const char *findex) {$/;"	f	file:
getjump	lua_src/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	lua_src/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getlocaledecpoint	lua_src/llex.c	208;"	d	file:
getlocvar	lua_src/lparser.c	/^static LocVar *getlocvar (FuncState *fs, int i) {$/;"	f	file:
getobjname	lua_src/ldebug.c	/^static const char *getobjname (Proto *p, int lastpc, int reg,$/;"	f	file:
gettext	nautilus/libccompat.c	/^char *gettext (const char * msgid)$/;"	f
getthread	lua_src/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
getunopr	lua_src/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
getupvalname	lua_src/ldebug.c	/^static const char *getupvalname (CallInfo *ci, const TValue *o,$/;"	f	file:
getupvalref	lua_src/lapi.c	/^static UpVal **getupvalref (lua_State *L, int fidx, int n, LClosure **pf) {$/;"	f	file:
getwc	nautilus/libccompat.c	/^int getwc (FILE *stream)$/;"	f
ghost_nodes	test/circuit.h	/^  LogicalPartition pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:Partitions
ghost_nodes	test/circuit.h	/^  LogicalRegion pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:CircuitPiece
gig_pages_supported	nautilus/paging.c	/^gig_pages_supported (void)$/;"	f	file:
glob_sched_state	nautilus/thread.c	/^static struct nk_sched_state * glob_sched_state;$/;"	v	typeref:struct:nk_sched_state	file:
glob_zone_list	nautilus/mm/kmem.c	/^static struct list_head glob_zone_list;$/;"	v	typeref:struct:list_head	file:
globalL	lua_src/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
global_arg	legion_runtime/legion.h	/^      TaskArgument                       global_arg;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
global_constant	test/global_vars.cc	/^const int global_constant = 4;$/;"	v
global_memory	legion_runtime/lowlevel_impl.h	/^      Memory::Impl *global_memory;$/;"	m	class:Runtime
global_memory	legion_runtime/mapping_utilities.h	/^        Memory global_memory;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
global_timer_mutex	legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T global_timer_mutex;$/;"	m	namespace:LegionRuntime::LowLevel	file:
global_var	test/global_vars.cc	/^int global_var = 0;$/;"	v
gmatch	lua_src/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	lua_src/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
gmtime	nautilus/libccompat.c	/^struct tm *gmtime(const time_t *timer)$/;"	f
gnodelast	lua_src/lgc.c	94;"	d	file:
go	test/benchmark.c	/^static volatile int go;$/;"	v	file:
go_circuit	test/circuit.cc	/^int go_circuit(int argc, char **argv) $/;"	f
go_circuit_c	test/circuit.cc	/^extern "C" void go_circuit_c(int argc, char ** argv) {$/;"	f
go_custom	test/custom_mapper.cc	/^int go_custom(int argc, char **argv)$/;"	f
go_custom_c	test/custom_mapper.cc	/^extern "C" void go_custom_c (int argc, char ** argv) {$/;"	f
go_global_vars	test/global_vars.cc	/^int go_global_vars(int argc, char **argv)$/;"	f
go_global_vars_c	test/global_vars.cc	/^extern "C" void go_global_vars_c (int argc, char ** argv) {$/;"	f
go_hello	test/hello_world.cc	/^int go_hello(int argc, char **argv)$/;"	f
go_hello_c	test/hello_world.cc	/^extern "C" void go_hello_c (int argc, char ** argv) {$/;"	f
go_hpcg	test/hpcg/hpcg-main.cc	/^int go_hpcg (int argc, const char ** argv)$/;"	f
go_hpcg_c	test/hpcg/hpcg-main.cc	/^extern "C" void go_hpcg_c (int argc, char ** argv) {$/;"	f
go_index_task	test/index_tasks.cc	/^int go_index_task(int argc, char **argv)$/;"	f
go_index_task_c	test/index_tasks.cc	/^extern "C" void go_index_task_c (int argc, char ** argv) {$/;"	f
go_log_regs	test/logical_regions.cc	/^int go_log_regs(int argc, char **argv)$/;"	f
go_log_regs_c	test/logical_regions.cc	/^extern "C" void go_log_regs_c(int argc, char ** argv) {$/;"	f
go_multi	test/multiple_partitions.cc	/^int go_multi(int argc, char **argv)$/;"	f
go_multi_c	test/multiple_partitions.cc	/^extern "C" void go_multi_c (int argc, char ** argv) {$/;"	f
go_partit	test/partitioning.cc	/^int go_partit(int argc, char **argv)$/;"	f
go_partit_c	test/partitioning.cc	/^extern "C" void go_partit_c(int argc, char ** argv) {$/;"	f
go_phys_regs	test/physical_regions.cc	/^int go_phys_regs(int argc, char **argv)$/;"	f
go_phys_regs_c	test/physical_regions.cc	/^extern "C" void go_phys_regs_c(int argc, char ** argv) {$/;"	f
go_privileges	test/privileges.cc	/^int go_privileges(int argc, char **argv)$/;"	f
go_privileges_c	test/privileges.cc	/^extern "C" void go_privileges_c(int argc, char **argv) {$/;"	f
go_saxpy	test/saxpy_array.cc	/^int go_saxpy(int argc, char **argv) {$/;"	f
go_saxpy_c	test/saxpy_array.cc	/^extern "C" void go_saxpy_c(int argc, char ** argv)$/;"	f
go_taf	test/tasks_and_futures.cc	/^int go_taf(int argc, char **argv)$/;"	f
go_taf_c	test/tasks_and_futures.cc	/^extern "C" void go_taf_c (int argc, char ** argv) {$/;"	f
gotostat	lua_src/lparser.c	/^static void gotostat (LexState *ls, int pc) {$/;"	f	file:
gpe_block	acpi/acpica/aclocal.h	/^	struct acpi_gpe_block_info *gpe_block;$/;"	m	struct:acpi_gpe_walk_info	typeref:struct:acpi_gpe_walk_info::acpi_gpe_block_info
gpe_block_list_head	acpi/acpica/aclocal.h	/^	struct acpi_gpe_block_info *gpe_block_list_head;	\/* List of GPE blocks for this xrupt *\/$/;"	m	struct:acpi_gpe_xrupt_info	typeref:struct:acpi_gpe_xrupt_info::acpi_gpe_block_info
gpe_count	acpi/acpica/aclocal.h	/^	u16 gpe_count;		\/* Number of individual GPEs in block *\/$/;"	m	struct:acpi_gpe_block_info
gpe_device	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *gpe_device;$/;"	m	struct:acpi_gpe_device_info	typeref:struct:acpi_gpe_device_info::acpi_namespace_node
gpe_device	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *gpe_device;$/;"	m	struct:acpi_gpe_walk_info	typeref:struct:acpi_gpe_walk_info::acpi_namespace_node
gpe_number	acpi/acpica/aclocal.h	/^	u8 gpe_number;		\/* This GPE *\/$/;"	m	struct:acpi_gpe_event_info
gpu	legion_runtime/lowlevel_dma.cc	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier	file:
gpu	legion_runtime/lowlevel_dma.cc	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier	file:
gpu	legion_runtime/lowlevel_dma.cc	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier	file:
gpu	legion_runtime/lowlevel_gpu.cc	/^      GPUProcessor *const gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
gpu	legion_runtime/lowlevel_gpu.cc	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUJob	file:
gpu	legion_runtime/lowlevel_gpu.h	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUFBMemory
gpu	legion_runtime/lowlevel_gpu.h	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUZCMemory
gpu_dma_args	legion_runtime/lowlevel_gpu.cc	/^    struct gpu_dma_args {$/;"	s	namespace:LegionRuntime::LowLevel	file:
gpu_dma_thread	legion_runtime/lowlevel_gpu.cc	/^      const bool gpu_dma_thread;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
gpu_dma_worker_loop	legion_runtime/lowlevel_gpu.cc	/^    void* GPUProcessor::gpu_dma_worker_loop(void *args)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
gpu_index	legion_runtime/lowlevel_gpu.cc	/^      const int gpu_index;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
gpu_ptr	legion_runtime/lowlevel.h	/^      T *gpu_ptr(ptr_t ptr) const {$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
gpu_thread	legion_runtime/lowlevel.cc	/^GASNETT_THREADKEY_DEFINE(gpu_thread);$/;"	v
gpu_thread	legion_runtime/lowlevel_gpu.cc	/^      pthread_t gpu_thread;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
gpu_thread	legion_runtime/lowlevel_gpu.h	/^GASNETT_THREADKEY_DECLARE(gpu_thread);$/;"	v
grant_event	legion_runtime/runtime.h	/^      Event grant_event;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
grant_lock	legion_runtime/runtime.h	/^      Reservation grant_lock;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
grants	legion_runtime/legion.h	/^      std::vector<Grant>                  grants;$/;"	m	class:LegionRuntime::HighLevel::Task
grants	legion_runtime/legion.h	/^      std::vector<Grant>                 grants;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
grants	legion_runtime/legion.h	/^      std::vector<Grant>                 grants;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
grants	legion_runtime/legion.h	/^      std::vector<Grant>                grants;$/;"	m	class:LegionRuntime::HighLevel::Acquire
grants	legion_runtime/legion.h	/^      std::vector<Grant>                grants;$/;"	m	class:LegionRuntime::HighLevel::Copy
grants	legion_runtime/legion.h	/^      std::vector<Grant>                grants;$/;"	m	class:LegionRuntime::HighLevel::Release
grants	legion_runtime/legion.h	/^      std::vector<Grant>              grants;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
grants	legion_runtime/legion.h	/^      std::vector<Grant>              grants;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
grants	legion_runtime/legion.h	/^      std::vector<Grant>              grants;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
group_lock	legion_runtime/runtime.h	/^      Reservation group_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
grouping	nautilus/libccompat.c	/^    char *grouping;           \/\/""           LC_NUMERIC$/;"	m	struct:lconv	file:
groups	legion_runtime/shared_lowlevel.cc	/^        std::vector<ProcessorGroup *> groups;  \/\/ groups this proc is a member of$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
growstack	lua_src/lapi.c	/^static void growstack (lua_State *L, void *ud) {$/;"	f	file:
handle	legion_runtime/legion.h	/^      FieldSpace   handle;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceRequirement
handle	legion_runtime/legion.h	/^      IndexSpace    handle;$/;"	m	struct:LegionRuntime::HighLevel::IndexSpaceRequirement
handle	legion_runtime/legion_logging.h	/^        FieldSpace handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldCreation
handle	legion_runtime/legion_logging.h	/^        FieldSpace handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldSpace
handle	legion_runtime/legion_logging.h	/^        IndexPartition handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexPartition
handle	legion_runtime/legion_logging.h	/^        IndexSpace handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSubspace
handle	legion_runtime/legion_logging.h	/^        IndexSpace handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceRequirement
handle	legion_runtime/legion_tasks.h	/^        FieldSpace handle;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
handle	legion_runtime/region_tree.h	/^      ViewHandle handle;$/;"	m	class:LegionRuntime::HighLevel::InstanceRef
handle	legion_runtime/region_tree.h	/^      const FieldSpace handle;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
handle	legion_runtime/region_tree.h	/^      const IndexPartition handle;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
handle	legion_runtime/region_tree.h	/^      const IndexSpace handle;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
handle	legion_runtime/region_tree.h	/^      const LogicalPartition handle;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
handle	legion_runtime/region_tree.h	/^      const LogicalRegion handle;$/;"	m	class:LegionRuntime::HighLevel::RegionNode
handle	legion_runtime/region_tree.h	/^      const LogicalRegion handle;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
handle	legion_runtime/shared_lowlevel.cc	/^            TriggerHandle handle;$/;"	m	struct:LegionRuntime::LowLevel::EventImpl::TriggerableInfo	file:
handle_adjustment	legion_runtime/lowlevel.cc	/^      int handle_adjustment(Barrier::timestamp_t ts, int delta)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates
handle_advertisement	legion_runtime/runtime.cc	/^    void Runtime::handle_advertisement(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_clear_timer_request	legion_runtime/lowlevel.cc	/^    void handle_clear_timer_request(ClearTimerRequestArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_cmd	nautilus/shell.c	/^static int handle_cmd(char *buf, int n)$/;"	f	file:
handle_collection	legion_runtime/runtime.cc	/^    bool GarbageCollectionEpoch::handle_collection($/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
handle_copies	legion_runtime/lowlevel_gpu.cc	/^      void handle_copies(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
handle_copies	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::handle_copies(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
handle_create_instance	legion_runtime/lowlevel.cc	/^    CreateInstanceResp handle_create_instance(CreateInstanceArgs args, const void *msgdata, size_t msglen)$/;"	f	namespace:LegionRuntime::LowLevel
handle_data	legion_runtime/lowlevel.cc	/^    void MultiNodeRollUp::handle_data(const void *data, size_t datalen)$/;"	f	class:LegionRuntime::LowLevel::MultiNodeRollUp
handle_deferred_collect	legion_runtime/region_tree.cc	/^    \/*static*\/ void LogicalView::handle_deferred_collect(LogicalView *view,$/;"	f	class:LegionRuntime::HighLevel::LogicalView
handle_degenerate	legion_runtime/rectangle_set.h	/^    \/*static*\/ inline bool RectangleSet<T,DISCRETE>::handle_degenerate($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
handle_destroy_instance	legion_runtime/lowlevel.cc	/^    void handle_destroy_instance(DestroyInstanceArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_destroy_lock	legion_runtime/lowlevel.cc	/^    void handle_destroy_lock(Reservation lock)$/;"	f	namespace:LegionRuntime::LowLevel
handle_distribute_task	legion_runtime/legion_ops.cc	/^    \/*static*\/ void MustEpochDistributor::handle_distribute_task($/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
handle_distributed_add_remote	legion_runtime/runtime.cc	/^    void Runtime::handle_distributed_add_remote(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_distributed_remove_remote	legion_runtime/runtime.cc	/^    void Runtime::handle_distributed_remove_remote(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_distributed_remove_resource	legion_runtime/runtime.cc	/^    void Runtime::handle_distributed_remove_resource(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_event_subscribe	legion_runtime/lowlevel.cc	/^    void handle_event_subscribe(EventSubscribeArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_event_trigger	legion_runtime/lowlevel.cc	/^    void handle_event_trigger(EventTriggerArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_field_allocation	legion_runtime/runtime.cc	/^    void Runtime::handle_field_allocation(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_field_destruction	legion_runtime/runtime.cc	/^    void Runtime::handle_field_destruction(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_field_space_destruction	legion_runtime/runtime.cc	/^    void Runtime::handle_field_space_destruction(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_field_space_node	legion_runtime/runtime.cc	/^    void Runtime::handle_field_space_node(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_flip_ack	legion_runtime/activemsg.cc	/^  void handle_flip_ack(gasnet_node_t src, int ack_buffer)$/;"	f	class:EndpointManager
handle_flip_ack	legion_runtime/activemsg.cc	/^  void handle_flip_ack(int buffer)$/;"	f	class:ActiveMessageEndpoint
handle_flip_ack	legion_runtime/activemsg.cc	/^static void handle_flip_ack(gasnet_token_t token,$/;"	f	file:
handle_flip_req	legion_runtime/activemsg.cc	/^static void handle_flip_req(gasnet_token_t token,$/;"	f	file:
handle_flip_request	legion_runtime/activemsg.cc	/^  bool handle_flip_request(int buffer, int count)$/;"	f	class:ActiveMessageEndpoint
handle_flip_request	legion_runtime/activemsg.cc	/^  void handle_flip_request(gasnet_node_t src, int flip_buffer, int flip_count)$/;"	f	class:EndpointManager
handle_future	legion_runtime/legion_tasks.cc	/^    void IndexTask::handle_future(const DomainPoint &point, const void *result,$/;"	f	class:LegionRuntime::HighLevel::IndexTask
handle_future	legion_runtime/legion_tasks.cc	/^    void IndividualTask::handle_future(const void *res, size_t res_size,$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
handle_future	legion_runtime/legion_tasks.cc	/^    void PointTask::handle_future(const void *res, size_t res_size, bool owner)$/;"	f	class:LegionRuntime::HighLevel::PointTask
handle_future	legion_runtime/legion_tasks.cc	/^    void SliceTask::handle_future(const DomainPoint &point, const void *result,$/;"	f	class:LegionRuntime::HighLevel::SliceTask
handle_future	legion_runtime/legion_tasks.cc	/^    void WrapperTask::handle_future(const void *res, size_t res_size, bool owned)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
handle_future_result	legion_runtime/runtime.cc	/^    \/*static*\/ void Future::Impl::handle_future_result(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
handle_future_result	legion_runtime/runtime.cc	/^    void Runtime::handle_future_result(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_future_send	legion_runtime/runtime.cc	/^    \/*static*\/ void Future::Impl::handle_future_send(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
handle_future_send	legion_runtime/runtime.cc	/^    void Runtime::handle_future_send(Deserializer &derez, AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_future_subscription	legion_runtime/runtime.cc	/^    \/*static*\/ void Future::Impl::handle_future_subscription($/;"	f	class:LegionRuntime::HighLevel::Future::Impl
handle_future_subscription	legion_runtime/runtime.cc	/^    void Runtime::handle_future_subscription(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_hierarchical_remove_remote	legion_runtime/runtime.cc	/^    void Runtime::handle_hierarchical_remove_remote(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_hierarchical_remove_resource	legion_runtime/runtime.cc	/^    void Runtime::handle_hierarchical_remove_resource(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_index	legion_runtime/legion_ops.cc	/^    \/*static*\/ void MustEpochTriggerer::handle_index(const void *args)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
handle_index_partition_destruction	legion_runtime/runtime.cc	/^    void Runtime::handle_index_partition_destruction(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_index_partition_node	legion_runtime/runtime.cc	/^    void Runtime::handle_index_partition_node(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_index_space_destruction	legion_runtime/runtime.cc	/^    void Runtime::handle_index_space_destruction(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_index_space_node	legion_runtime/runtime.cc	/^    void Runtime::handle_index_space_node(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_individual	legion_runtime/legion_ops.cc	/^    \/*static*\/ void MustEpochTriggerer::handle_individual(const void *args)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
handle_individual_remote_commit	legion_runtime/runtime.cc	/^    void Runtime::handle_individual_remote_commit(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_individual_remote_complete	legion_runtime/runtime.cc	/^    void Runtime::handle_individual_remote_complete(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_individual_remote_mapped	legion_runtime/runtime.cc	/^    void Runtime::handle_individual_remote_mapped(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_individual_request	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndividualTask::handle_individual_request(Runtime *runtime,$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
handle_individual_request	legion_runtime/runtime.cc	/^    void Runtime::handle_individual_request(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_individual_return	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndividualTask::handle_individual_return(Runtime *runtime,$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
handle_individual_return	legion_runtime/runtime.cc	/^    void Runtime::handle_individual_return(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_launch_task	legion_runtime/legion_ops.cc	/^    \/*static*\/ void MustEpochDistributor::handle_launch_task(const void *args)$/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
handle_lock_grant	legion_runtime/lowlevel.cc	/^    void handle_lock_grant(LockGrantArgs args, const void *data, size_t datalen)$/;"	f	namespace:LegionRuntime::LowLevel
handle_lock_release	legion_runtime/lowlevel.cc	/^    \/*static*\/ void \/*Reservation::Impl::*\/handle_lock_release(LockReleaseArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_lock_request	legion_runtime/lowlevel.cc	/^    \/*static*\/ void \/*Reservation::Impl::*\/handle_lock_request(LockRequestArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_logical_partition_destruction	legion_runtime/runtime.cc	/^    void Runtime::handle_logical_partition_destruction(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_logical_region_destruction	legion_runtime/runtime.cc	/^    void Runtime::handle_logical_region_destruction(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_logical_region_node	legion_runtime/runtime.cc	/^    void Runtime::handle_logical_region_node(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_long_msgptr	legion_runtime/activemsg.cc	/^  bool handle_long_msgptr(void *ptr)$/;"	f	class:ActiveMessageEndpoint
handle_long_msgptr	legion_runtime/activemsg.cc	/^  void handle_long_msgptr(gasnet_node_t source, void *ptr)$/;"	f	class:EndpointManager
handle_long_msgptr	legion_runtime/activemsg.cc	/^void handle_long_msgptr(gasnet_node_t source, void *ptr)$/;"	f
handle_luainit	lua_src/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:
handle_machine_shutdown_request	legion_runtime/lowlevel.cc	/^    void handle_machine_shutdown_request(MachineShutdownRequestArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_make_persistent	legion_runtime/region_tree.cc	/^    \/*static*\/ void InstanceManager::handle_make_persistent(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
handle_make_persistent	legion_runtime/runtime.cc	/^    void Runtime::handle_make_persistent(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_map_task	legion_runtime/legion_ops.cc	/^    \/*static*\/ void MustEpochMapper::handle_map_task(const void *args)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
handle_mapper_message	legion_runtime/runtime.cc	/^    void Runtime::handle_mapper_message(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_mapper_send_message	legion_runtime/runtime.cc	/^    void Runtime::handle_mapper_send_message(Mapper *mapper, Processor target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_message	legion_runtime/default_mapper.cc	/^    void DefaultMapper::handle_message(Processor source,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
handle_messages	legion_runtime/runtime.cc	/^    void MessageManager::handle_messages(unsigned num_messages,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
handle_node_creation	legion_runtime/region_tree.cc	/^    \/*static*\/ void FieldSpaceNode::handle_node_creation($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
handle_node_creation	legion_runtime/region_tree.cc	/^    \/*static*\/ void IndexPartNode::handle_node_creation($/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
handle_node_creation	legion_runtime/region_tree.cc	/^    \/*static*\/ void IndexSpaceNode::handle_node_creation($/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
handle_node_creation	legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionNode::handle_node_creation(RegionTreeForest *context,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
handle_peer_access	legion_runtime/lowlevel_gpu.cc	/^      void handle_peer_access(CUcontext peer_ctx)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
handle_remote_copy	legion_runtime/lowlevel_dma.cc	/^    void handle_remote_copy(RemoteCopyArgs args, const void *data, size_t msglen)$/;"	f	namespace:LegionRuntime::LowLevel
handle_remote_mem_alloc	legion_runtime/lowlevel.cc	/^    off_t handle_remote_mem_alloc(RemoteMemAllocArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_remote_redlist	legion_runtime/lowlevel.cc	/^    void handle_remote_redlist(RemoteRedListArgs args,$/;"	f	namespace:LegionRuntime::LowLevel
handle_remote_reduce	legion_runtime/lowlevel.cc	/^    void handle_remote_reduce(RemoteReduceArgs args,$/;"	f	namespace:LegionRuntime::LowLevel
handle_remote_references	legion_runtime/region_tree.cc	/^    void RegionTreeForest::handle_remote_references(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
handle_remote_write	legion_runtime/lowlevel.cc	/^    void handle_remote_write(RemoteWriteArgs args,$/;"	f	namespace:LegionRuntime::LowLevel
handle_remote_write_fence	legion_runtime/lowlevel.cc	/^    void handle_remote_write_fence(RemoteWriteFenceArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_request	legion_runtime/lowlevel.cc	/^      static void handle_request(RequestArgs args)$/;"	f	struct:LegionRuntime::LowLevel::BarrierAdjustMessage
handle_roll_up_data	legion_runtime/lowlevel.cc	/^    void handle_roll_up_data(RollUpDataArgs args, const void *data, size_t datalen)$/;"	f	namespace:LegionRuntime::LowLevel
handle_roll_up_request	legion_runtime/lowlevel.cc	/^    void handle_roll_up_request(RollUpRequestArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_script	lua_src/lua.c	/^static int handle_script (lua_State *L, char **argv, int n) {$/;"	f	file:
handle_send_back_composite_view	legion_runtime/region_tree.cc	/^    \/*static*\/ void CompositeView::handle_send_back_composite_view($/;"	f	class:LegionRuntime::HighLevel::CompositeView
handle_send_back_composite_view	legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_composite_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_back_materialized_view	legion_runtime/region_tree.cc	/^    \/*static*\/ void MaterializedView::handle_send_back_materialized_view($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
handle_send_back_materialized_view	legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_materialized_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_back_partition_state	legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_partition_state(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_back_reduction_view	legion_runtime/region_tree.cc	/^    \/*static*\/ void ReductionView::handle_send_back_reduction_view($/;"	f	class:LegionRuntime::HighLevel::ReductionView
handle_send_back_reduction_view	legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_reduction_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_back_region_state	legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_region_state(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_back_state	legion_runtime/region_tree.cc	/^    \/*static*\/ void PartitionNode::handle_send_back_state($/;"	f	class:LegionRuntime::HighLevel::PartitionNode
handle_send_back_state	legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionNode::handle_send_back_state($/;"	f	class:LegionRuntime::HighLevel::RegionNode
handle_send_back_user	legion_runtime/region_tree.cc	/^    \/*static*\/ void LogicalView::handle_send_back_user(RegionTreeForest *ctx,$/;"	f	class:LegionRuntime::HighLevel::LogicalView
handle_send_back_user	legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_user(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_composite_update	legion_runtime/region_tree.cc	/^    \/*static*\/ void CompositeView::handle_send_composite_update($/;"	f	class:LegionRuntime::HighLevel::CompositeView
handle_send_composite_update	legion_runtime/runtime.cc	/^    void Runtime::handle_send_composite_update(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_composite_view	legion_runtime/region_tree.cc	/^    \/*static*\/ void CompositeView::handle_send_composite_view($/;"	f	class:LegionRuntime::HighLevel::CompositeView
handle_send_composite_view	legion_runtime/runtime.cc	/^    void Runtime::handle_send_composite_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_instance_manager	legion_runtime/runtime.cc	/^    void Runtime::handle_send_instance_manager(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_manager	legion_runtime/region_tree.cc	/^    \/*static*\/ void InstanceManager::handle_send_manager($/;"	f	class:LegionRuntime::HighLevel::InstanceManager
handle_send_manager	legion_runtime/region_tree.cc	/^    \/*static*\/ void ReductionManager::handle_send_manager($/;"	f	class:LegionRuntime::HighLevel::ReductionManager
handle_send_materialized_update	legion_runtime/runtime.cc	/^    void Runtime::handle_send_materialized_update(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_materialized_view	legion_runtime/region_tree.cc	/^    \/*static*\/ void MaterializedView::handle_send_materialized_view($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
handle_send_materialized_view	legion_runtime/runtime.cc	/^    void Runtime::handle_send_materialized_view(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_partition_state	legion_runtime/runtime.cc	/^    void Runtime::handle_send_partition_state(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_reduction_manager	legion_runtime/runtime.cc	/^    void Runtime::handle_send_reduction_manager(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_reduction_update	legion_runtime/runtime.cc	/^    void Runtime::handle_send_reduction_update(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_reduction_view	legion_runtime/region_tree.cc	/^    \/*static*\/ void ReductionView::handle_send_reduction_view($/;"	f	class:LegionRuntime::HighLevel::ReductionView
handle_send_reduction_view	legion_runtime/runtime.cc	/^    void Runtime::handle_send_reduction_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_region_state	legion_runtime/runtime.cc	/^    void Runtime::handle_send_region_state(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_remote_references	legion_runtime/runtime.cc	/^    void Runtime::handle_send_remote_references(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_state	legion_runtime/region_tree.cc	/^    \/*static*\/ void PartitionNode::handle_send_state(RegionTreeForest *context,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
handle_send_state	legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionNode::handle_send_state(RegionTreeForest *context,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
handle_send_subscriber	legion_runtime/region_tree.cc	/^    \/*static*\/ void InstanceView::handle_send_subscriber($/;"	f	class:LegionRuntime::HighLevel::InstanceView
handle_send_subscriber	legion_runtime/runtime.cc	/^    void Runtime::handle_send_subscriber(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_update	legion_runtime/region_tree.cc	/^    \/*static*\/ void ReductionView::handle_send_update(RegionTreeForest *context,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
handle_send_updates	legion_runtime/region_tree.cc	/^    \/*static*\/ void MaterializedView::handle_send_updates($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
handle_slice	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void DeferredSlicer::handle_slice(const void *args)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
handle_slice_remote_commit	legion_runtime/runtime.cc	/^    void Runtime::handle_slice_remote_commit(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_slice_remote_complete	legion_runtime/runtime.cc	/^    void Runtime::handle_slice_remote_complete(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_slice_remote_mapped	legion_runtime/runtime.cc	/^    void Runtime::handle_slice_remote_mapped(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_slice_request	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndexTask::handle_slice_request(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::IndexTask
handle_slice_request	legion_runtime/runtime.cc	/^    void Runtime::handle_slice_request(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_slice_return	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void SliceTask::handle_slice_return(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::SliceTask
handle_slice_return	legion_runtime/runtime.cc	/^    void Runtime::handle_slice_return(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_spawn_task_message	legion_runtime/lowlevel.cc	/^    void handle_spawn_task_message(SpawnTaskArgs args,$/;"	f	namespace:LegionRuntime::LowLevel
handle_steal	legion_runtime/runtime.cc	/^    void Runtime::handle_steal(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_task	legion_runtime/runtime.cc	/^    void Runtime::handle_task(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_type	legion_runtime/legion.h	/^      HandleType handle_type; \/**< region or partition requirement*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
handle_unpack_layout_description	legion_runtime/region_tree.cc	/^      handle_unpack_layout_description(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
handle_valid_mask_data	legion_runtime/lowlevel.cc	/^    void handle_valid_mask_data(ValidMaskDataArgs args, const void *data, size_t datalen)$/;"	f	namespace:LegionRuntime::LowLevel
handle_valid_mask_request	legion_runtime/lowlevel.cc	/^    void handle_valid_mask_request(ValidMaskRequestArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handled	legion_runtime/shared_lowlevel.cc	/^		bool handled;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
handler	acpi/acpica/aclocal.h	/^	acpi_event_handler handler;	\/* Address of handler. *\/$/;"	m	struct:acpi_fixed_event_handler
handler	acpi/acpica/aclocal.h	/^	struct acpi_gpe_handler_info *handler;  \/* Installed GPE handler *\/$/;"	m	union:acpi_gpe_dispatch_info	typeref:struct:acpi_gpe_dispatch_info::acpi_gpe_handler_info
handler	legion_runtime/lowlevel.cc	/^	gasnet_handler_t handler;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
handler_obj	acpi/acpica/aclocal.h	/^	union acpi_operand_object *handler_obj;$/;"	m	struct:acpi_notify_info	typeref:union:acpi_notify_info::acpi_operand_object
handler_safe	legion_runtime/lowlevel_dma.cc	/^      virtual bool handler_safe(void) { return(false); }$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
handler_safe	legion_runtime/lowlevel_dma.cc	/^      virtual bool handler_safe(void) { return(false); }$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
harden_operation	legion_runtime/legion_ops.cc	/^    void Operation::harden_operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
hardened	legion_runtime/legion_ops.h	/^      bool hardened;$/;"	m	class:LegionRuntime::HighLevel::Operation
has_E	lua_src/lua.c	363;"	d	file:
has_adjacent	legion_runtime/rectangle_set.h	/^    inline bool Segment<T>::has_adjacent(Segment<T> *seg) const$/;"	f	class:LegionRuntime::HighLevel::Segment
has_avx	nautilus/fpu.c	/^has_avx (void)$/;"	f	file:
has_child	legion_runtime/region_tree.cc	/^    bool IndexPartNode::has_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
has_child	legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::has_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
has_child	legion_runtime/region_tree.cc	/^    bool PartitionNode::has_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
has_child	legion_runtime/region_tree.cc	/^    bool RegionNode::has_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
has_child	legion_runtime/region_tree.cc	/^    bool RegionTreePath::has_child(unsigned depth) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
has_child	legion_runtime/region_tree.h	/^      bool has_child;$/;"	m	class:LegionRuntime::HighLevel::PathTraverser
has_clflush	nautilus/fpu.c	/^has_clflush (void)$/;"	f	file:
has_complete	legion_runtime/region_tree.h	/^      bool has_complete, complete;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
has_component_domains	legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::has_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
has_component_domains	legion_runtime/region_tree.cc	/^    bool PartitionNode::has_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
has_component_domains	legion_runtime/region_tree.cc	/^    bool RegionNode::has_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
has_conflicting_regions	legion_runtime/legion_tasks.cc	/^    int SingleTask::has_conflicting_regions(MapOp *op, bool &parent_conflict,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_created_field	legion_runtime/legion_tasks.cc	/^    bool SingleTask::has_created_field(FieldSpace handle, FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_created_index_space	legion_runtime/legion_tasks.cc	/^    bool TaskOp::has_created_index_space(IndexSpace space) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
has_created_region	legion_runtime/legion_tasks.cc	/^    bool SingleTask::has_created_region(LogicalRegion handle) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_cvt16	nautilus/fpu.c	/^has_cvt16 (void)$/;"	f	file:
has_cx16	nautilus/fpu.c	/^has_cx16 (void)$/;"	f	file:
has_divisor	legion_runtime/rectangle_set.h	/^    \/*static*\/ bool RectangleSet<T,DISCRETE>::has_divisor($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
has_e	lua_src/lua.c	362;"	d	file:
has_entry	legion_runtime/lowlevel_impl.h	/^    bool DynamicTable<ALLOCATOR>::has_entry(IT index) const$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
has_executed_operation	legion_runtime/legion_tasks.cc	/^    bool SingleTask::has_executed_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_executing_operation	legion_runtime/legion_tasks.cc	/^    bool SingleTask::has_executing_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_explicit_utility_processors	legion_runtime/lowlevel.h	/^      bool has_explicit_utility_processors(void) const { return explicit_utility_procs; }$/;"	f	class:LegionRuntime::LowLevel::Machine
has_field	legion_runtime/region_tree.cc	/^    bool FieldSpaceNode::has_field(FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
has_field	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_field(FieldSpace space, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_field_privilege	legion_runtime/legion.cc	/^    bool RegionRequirement::has_field_privilege(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
has_fma4	nautilus/fpu.c	/^has_fma4 (void)$/;"	f	file:
has_future	legion_runtime/runtime.cc	/^    bool Runtime::has_future(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_fxsr	nautilus/fpu.c	/^has_fxsr (void)$/;"	f	file:
has_htt	nautilus/numa.c	/^has_htt (void)$/;"	f	file:
has_i	lua_src/lua.c	360;"	d	file:
has_identity	legion_runtime/lowlevel.h	/^      bool has_identity;$/;"	m	class:LegionRuntime::LowLevel::ReductionOpUntyped
has_instance	legion_runtime/region_tree.cc	/^    bool FieldSpaceNode::has_instance(RegionTreeID tid)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
has_instance	legion_runtime/region_tree.cc	/^    bool IndexPartNode::has_instance(RegionTreeID tid)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
has_instance	legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::has_instance(RegionTreeID tid)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
has_intersects	legion_runtime/region_tree.h	/^        bool has_intersects;$/;"	m	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
has_leafb	nautilus/numa.c	/^has_leafb (void)$/;"	f	file:
has_manager	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_manager(DistributedID did) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_mapping	legion_runtime/mapping_utilities.cc	/^      bool MappingMemoizer::has_mapping(Processor target, const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
has_mmx	nautilus/fpu.c	/^has_mmx (void)$/;"	f	file:
has_multiple_domains	legion_runtime/legion.cc	/^    bool HighLevelRuntime::has_multiple_domains(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
has_multiple_domains	legion_runtime/legion.cc	/^    bool Mapper::has_multiple_domains(IndexSpace handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
has_multiple_domains	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_multiple_domains(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_multiple_domains	legion_runtime/runtime.cc	/^    bool Runtime::has_multiple_domains(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_multiple_domains	legion_runtime/runtime.cc	/^    bool Runtime::has_multiple_domains(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_mwait	arch/hrt/mwait.c	/^has_mwait (void) $/;"	f	file:
has_mwait	arch/x64/mwait.c	/^has_mwait (void) $/;"	f	file:
has_next	legion_runtime/legion.h	/^    inline bool IndexIterator::has_next(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
has_node	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_node(FieldSpace space) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_node	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_node(IndexPartition part) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_node	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_node(IndexSpace space) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_node	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_node(LogicalPartition handle) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_node	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_node(LogicalRegion handle) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_overlap	legion_runtime/rectangle_set.h	/^    \/*static*\/ bool RectangleSet<T,DISCRETE>::has_overlap(Segment<T> *segment,$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
has_parent_index_partition	legion_runtime/legion.cc	/^    bool HighLevelRuntime::has_parent_index_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
has_parent_index_partition	legion_runtime/legion.cc	/^    bool Mapper::has_parent_index_partition(IndexSpace handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
has_parent_index_partition	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_parent_index_partition(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_parent_index_partition	legion_runtime/runtime.cc	/^    bool Runtime::has_parent_index_partition(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_parent_index_partition	legion_runtime/runtime.cc	/^    bool Runtime::has_parent_index_partition(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_parent_logical_partition	legion_runtime/legion.cc	/^    bool HighLevelRuntime::has_parent_logical_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
has_parent_logical_partition	legion_runtime/legion.cc	/^    bool Mapper::has_parent_logical_partition(LogicalRegion handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
has_parent_logical_partition	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_parent_logical_partition(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_parent_logical_partition	legion_runtime/runtime.cc	/^    bool Runtime::has_parent_logical_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
has_parent_logical_partition	legion_runtime/runtime.cc	/^    bool Runtime::has_parent_logical_partition(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_parent_view	legion_runtime/region_tree.cc	/^    bool CompositeView::has_parent_view(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
has_parent_view	legion_runtime/region_tree.cc	/^    bool MaterializedView::has_parent_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
has_point	legion_runtime/legion.cc	/^    bool ArgumentMap::has_point(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
has_point	legion_runtime/runtime.cc	/^    bool ArgumentMap::Impl::has_point(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
has_ref	legion_runtime/region_tree.h	/^      inline bool has_ref(void) const { return (view != NULL); }$/;"	f	class:LegionRuntime::HighLevel::MappingRef
has_ref	legion_runtime/region_tree.h	/^      inline bool has_ref(void) const { return handle.has_view(); }$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
has_required_lock	legion_runtime/region_tree.h	/^      inline bool has_required_lock(void) const { return needed_lock.exists(); }$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
has_scheduler	legion_runtime/shared_lowlevel.cc	/^        const bool has_scheduler;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
has_simultaneous	legion_runtime/legion_tasks.h	/^      bool simultaneous_checked, has_simultaneous;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
has_simultaneous_coherence	legion_runtime/legion_tasks.cc	/^    bool SingleTask::has_simultaneous_coherence(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_sse	nautilus/fpu.c	/^has_sse (void) $/;"	f	file:
has_sse2	nautilus/fpu.c	/^has_sse2 (void)$/;"	f	file:
has_sse3	nautilus/fpu.c	/^has_sse3 (void)$/;"	f	file:
has_sse4d1	nautilus/fpu.c	/^has_sse4d1 (void)$/;"	f	file:
has_sse4d2	nautilus/fpu.c	/^has_sse4d2 (void)$/;"	f	file:
has_ssse3	nautilus/fpu.c	/^has_ssse3 (void)$/;"	f	file:
has_tree	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_tree(RegionTreeID tid) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_triggered	legion_runtime/lowlevel.cc	/^    bool Event::Impl::has_triggered(Event::gen_t needed_gen) volatile$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
has_triggered	legion_runtime/lowlevel.cc	/^    bool Event::has_triggered(void) const$/;"	f	class:LegionRuntime::LowLevel::Event
has_triggered	legion_runtime/shared_lowlevel.cc	/^    bool Event::has_triggered(void) const$/;"	f	class:LegionRuntime::LowLevel::Event
has_triggered	legion_runtime/shared_lowlevel.cc	/^    bool EventImpl::has_triggered(EventGeneration needed_gen)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
has_v	lua_src/lua.c	361;"	d	file:
has_variant	legion_runtime/legion.cc	/^    bool TaskVariantCollection::has_variant(Processor::Kind kind, $/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
has_variant	legion_runtime/legion.cc	/^    bool TaskVariantCollection::has_variant(VariantID vid)$/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
has_view	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_view(DistributedID did) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_view	legion_runtime/region_tree.h	/^      inline bool has_view(void) const { return (view != NULL); }$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
has_war	legion_runtime/region_tree.h	/^      bool has_war;$/;"	m	class:LegionRuntime::HighLevel::WARAnalyzer
has_war_dependence	legion_runtime/region_tree.cc	/^    bool CompositeView::has_war_dependence(const RegionUsage &usage, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
has_war_dependence	legion_runtime/region_tree.cc	/^    bool MaterializedView::has_war_dependence(const RegionUsage &usage,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
has_war_dependence	legion_runtime/region_tree.h	/^      inline bool has_war_dependence(void) const { return has_war; }$/;"	f	class:LegionRuntime::HighLevel::WARAnalyzer
has_war_dependence_above	legion_runtime/region_tree.cc	/^    bool MaterializedView::has_war_dependence_above(const RegionUsage &usage,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
has_x87	nautilus/fpu.c	/^has_x87 (void)$/;"	f	file:
has_xsave	nautilus/fpu.c	/^has_xsave (void)$/;"	f	file:
hash	nautilus/hashtable.c	/^    uint_t hash;$/;"	m	struct:nk_hash_entry	file:
hash_fn	nautilus/hashtable.c	/^    uint_t (*hash_fn) (addr_t key);$/;"	m	struct:nk_hashtable	file:
hashboolean	lua_src/ltable.c	55;"	d	file:
hashmod	lua_src/ltable.c	62;"	d	file:
hashnum	lua_src/ltable.c	/^static Node *hashnum (const Table *t, lua_Number n) {$/;"	f	file:
hashpointer	lua_src/ltable.c	65;"	d	file:
hashpow2	lua_src/ltable.c	52;"	d	file:
hashstr	lua_src/ltable.c	54;"	d	file:
hashtable_expand	nautilus/hashtable.c	/^hashtable_expand (struct nk_hashtable * htable) $/;"	f	file:
hasjumps	lua_src/lcode.c	29;"	d	file:
hasmultret	lua_src/lparser.c	35;"	d	file:
hdr_end	arch/hrt/asm/boot.S	/^hdr_end:$/;"	l
hdr_end	arch/k1om/asm/boot.S	/^hdr_end:$/;"	l
hdr_end	arch/x64/asm/boot.S	/^hdr_end:$/;"	l
head	nautilus/vc.c	/^  uint16_t head, tail;$/;"	m	struct:nk_virtual_console	file:
header	legion_runtime/runtime.h	/^      MessageHeader header;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
held	legion_runtime/lowlevel_impl.h	/^      bool held;$/;"	m	class:LegionRuntime::LowLevel::AutoHSLLock
held_remote_references	legion_runtime/garbage_collection.h	/^      unsigned held_remote_references;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
held_remote_references	legion_runtime/garbage_collection.h	/^      unsigned held_remote_references;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
hello_world_task	test/hello_world.cc	/^void hello_world_task(const Task *task, $/;"	f
help_complete_future	legion_runtime/runtime.cc	/^    void Runtime::help_complete_future(const Future &f)$/;"	f	class:LegionRuntime::HighLevel::Runtime
help_create_future	legion_runtime/runtime.cc	/^    Future Runtime::help_create_future(TaskOp *task \/*= NULL*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
help_reset_future	legion_runtime/runtime.cc	/^    bool Runtime::help_reset_future(const Future &f)$/;"	f	class:LegionRuntime::HighLevel::Runtime
hex_asc	nautilus/printk.c	/^const char hex_asc[] = "0123456789abcdef";$/;"	v
hex_asc_hi	nautilus/printk.c	157;"	d	file:
hex_asc_lo	nautilus/printk.c	156;"	d	file:
hi	legion_runtime/arrays.h	/^      Point<DIM> lo, hi;$/;"	m	class:LegionRuntime::Arrays::Rect
hier_collectables	legion_runtime/runtime.h	/^                     RUNTIME_HIER_COLLECT_ALLOC>::map hier_collectables;$/;"	m	class:LegionRuntime::HighLevel::Runtime
hierarchical_collectable_lock	legion_runtime/runtime.h	/^      Reservation hierarchical_collectable_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
high_level	legion_runtime/runtime.h	/^      HighLevelRuntime *const high_level;$/;"	m	class:LegionRuntime::HighLevel::Runtime
high_level_index_task_wrapper	legion_runtime/legion.h	/^    void LegionTaskWrapper::high_level_index_task_wrapper(const void *args, $/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
high_level_inline_index_task_wrapper	legion_runtime/legion.h	/^    void LegionTaskWrapper::high_level_inline_index_task_wrapper($/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
high_level_inline_task_wrapper	legion_runtime/legion.h	/^    void LegionTaskWrapper::high_level_inline_task_wrapper(const Task *task,$/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
high_level_runtime_task	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::high_level_runtime_task($/;"	f	class:LegionRuntime::HighLevel::Runtime
high_level_task_wrapper	legion_runtime/legion.h	/^    void LegionTaskWrapper::high_level_task_wrapper(const void *args, $/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
higher	legion_runtime/rectangle_set.h	/^      Segment<T> *lower, *higher;$/;"	m	struct:LegionRuntime::HighLevel::SplitSegment
higher_x	legion_runtime/rectangle_set.h	/^      T lower_x, lower_y, higher_x, higher_y;$/;"	m	struct:LegionRuntime::HighLevel::RebuildRect
higher_y	legion_runtime/rectangle_set.h	/^      T lower_x, lower_y, higher_x, higher_y;$/;"	m	struct:LegionRuntime::HighLevel::RebuildRect
highlevel_end_event	legion_runtime/legion_logging.h	/^        Event highlevel_end_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyAssoc
hlr_id	legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::FuturePredOp::ResolveFuturePredArgs
hlr_id	legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochDistributor::MustEpochDistributorArgs
hlr_id	legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochDistributor::MustEpochLauncherArgs
hlr_id	legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochMapper::MustEpochMapArgs
hlr_id	legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndexArgs
hlr_id	legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndivArgs
hlr_id	legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredCompleteArgs
hlr_id	legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredMappingArgs
hlr_id	legion_runtime/legion_tasks.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::DeferredSlicer::DeferredSliceArgs
hlr_id	legion_runtime/legion_tasks.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::PostEndArgs
hlr_id	legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::GarbageCollectionEpoch::GarbageCollectionArgs
hlr_id	legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::DeferredTriggerArgs
hlr_id	legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::SchedulerArgs
hlr_id	legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerOpArgs
hlr_id	legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerTaskArgs
hlr_id	legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureMapSetArgs
hlr_id	legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureSetArgs
hlr_id	legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredRecycleArgs
hlr_id	legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::MPIRankArgs
holders	legion_runtime/shared_lowlevel.cc	/^	unsigned holders;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
hookf	lua_src/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
host_device_copies	legion_runtime/lowlevel_gpu.cc	/^      std::deque<GPUJob*> host_device_copies;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
host_to_device_stream	legion_runtime/lowlevel_gpu.cc	/^      CUstream host_to_device_stream;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
hpet_cmp_run	dev/hpet.c	/^hpet_cmp_run (struct hpet_comparator * cmp)$/;"	f	file:
hpet_cmp_stop	dev/hpet.c	/^hpet_cmp_stop (struct hpet_comparator * cmp)$/;"	f	file:
hpet_cntr_halt	dev/hpet.c	/^hpet_cntr_halt (struct hpet_dev * hpet)$/;"	f	file:
hpet_cntr_run	dev/hpet.c	/^hpet_cntr_run (struct hpet_dev * hpet)$/;"	f	file:
hpet_get_cmp_stat	dev/hpet.c	/^hpet_get_cmp_stat (struct hpet_comparator * cmp)$/;"	f	file:
hpet_get_cntr_stat	dev/hpet.c	/^hpet_get_cntr_stat (struct hpet_dev * hpet)$/;"	f	file:
hpet_get_free_timer	dev/hpet.c	/^hpet_get_free_timer (struct hpet_dev * hpet)$/;"	f	file:
hpet_init_comparator	dev/hpet.c	/^hpet_init_comparator (struct hpet_dev * hpet,$/;"	f	file:
hpet_request_irq	dev/hpet.c	/^hpet_request_irq (struct hpet_comparator * cmp, uint32_t mask)$/;"	f	file:
hpet_set_oneshot	dev/hpet.c	/^hpet_set_oneshot (uint64_t ticks)$/;"	f
hpet_write_cmp_val	dev/hpet.c	/^hpet_write_cmp_val (struct hpet_comparator * cmp, uint64_t val)$/;"	f	file:
hrt_ap_init	arch/hrt/init.c	/^hrt_ap_init (unsigned long mbd, $/;"	f
hrt_bsp_init	arch/hrt/init.c	/^hrt_bsp_init (unsigned long mbd, $/;"	f
hrt_core_sync	arch/hrt/init.c	/^static int hrt_core_sync = 0;$/;"	v	file:
hrt_init_cpus	arch/hrt/hrt.c	/^hrt_init_cpus (struct sys_info * sys)$/;"	f
hrt_init_ioapics	arch/hrt/hrt.c	/^hrt_init_ioapics (struct sys_info * sys)$/;"	f
hrt_print	arch/hrt/hrt.c	/^hrt_print (const char * s) $/;"	f
hrt_putchar	arch/hrt/hrt.c	/^hrt_putchar (char c)$/;"	f
hrt_puts	arch/hrt/hrt.c	/^hrt_puts (const char *s)$/;"	f
hvm_hrt_init	arch/hrt/hrt.c	/^hvm_hrt_init (void)$/;"	f
i	legion_runtime/lowlevel.cc	/^      RegionInstance i;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceResp	file:
i	legion_runtime/lowlevel.cc	/^      RegionInstance i;$/;"	m	struct:LegionRuntime::LowLevel::DestroyInstanceArgs	file:
i8254_calib_tsc	dev/i8254.c	/^i8254_calib_tsc (void)$/;"	f
i8254_disable	dev/i8254.c	/^i8254_disable (void)$/;"	f	file:
i8254_init	dev/i8254.c	/^i8254_init (struct naut_info * naut)$/;"	f
id	legion_runtime/legion.h	/^      FieldSpaceID id;$/;"	m	class:LegionRuntime::HighLevel::FieldSpace
id	legion_runtime/legion_logging.h	/^        unsigned id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyChannel
id	legion_runtime/lowlevel.cc	/^      int id, core_id;$/;"	m	class:LegionRuntime::LowLevel::ProcessorThread	file:
id	legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::Event
id	legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace
id	legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::Memory
id	legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::Processor
id	legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance
id	legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::Reservation
id	legion_runtime/lowlevel_impl.h	/^      IDType id(void) const { return value; }$/;"	f	class:LegionRuntime::LowLevel::ID
id	legion_runtime/shared_lowlevel.cc	/^                TriggerHandle id; \/\/ If it's not ready this is the trigger handle$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
id	legion_runtime/shared_lowlevel.cc	/^          TriggerHandle id;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2	file:
id	test/benchmark.c	/^	unsigned char id; \/* 0 or 1 *\/$/;"	m	struct:switch_cont	file:
id	test/saxpy_array.cc	/^  unsigned id;$/;"	m	struct:Block	file:
id_of_thread_str	acpi/acpica/aclocal.h	/^	char id_of_thread_str[11];$/;"	m	struct:acpi_db_method_info
id_t	legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::Event
id_t	legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::IndexSpace
id_t	legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::Memory
id_t	legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::Processor
id_t	legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::RegionInstance
id_t	legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::Reservation
idempotent	legion_runtime/legion.h	/^      bool idempotent;$/;"	m	struct:LegionRuntime::HighLevel::TaskConfigOptions
idempotent	legion_runtime/legion.h	/^      const bool idempotent;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection
idempotent	legion_runtime/legion_logging.h	/^        bool idempotent;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskCollection
identity	legion_runtime/legion_utilities.h	/^      bool identity;$/;"	m	class:LegionRuntime::HighLevel::BitPermutation
identity	legion_runtime/lowlevel.h	/^      static const RHS identity;$/;"	m	class:LegionRuntime::LowLevel::MyReductionOp
identity	test/circuit.h	/^  static const float identity;$/;"	m	class:AccumulateCharge
identity	test/circuit_cpu.cc	/^const float AccumulateCharge::identity = 0.0f;$/;"	m	class:AccumulateCharge	file:
identity	test/hpcg/dotprod-accumulate.h	/^    static const double identity;$/;"	m	class:lgncg::DotProdAccumulate
identity	test/hpcg/dotprod-accumulate.h	/^const double DotProdAccumulate::identity = 0.0;$/;"	m	class:lgncg::DotProdAccumulate
identity	test/saxpy_array.cc	/^  static const float identity = 0.0f;$/;"	m	struct:Add	file:
idle	nautilus/idle.c	/^idle (void * in, void ** out)$/;"	f
idle_delay	nautilus/idle.c	/^idle_delay (unsigned long long n)$/;"	f	file:
idle_procs	legion_runtime/lowlevel_impl.h	/^      std::set<Processor::Impl *> idle_procs;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
idle_task	legion_runtime/lowlevel.cc	/^      Task *idle_task;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
idle_task	legion_runtime/lowlevel_impl.h	/^      Task *idle_task;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
idle_task_enabled	legion_runtime/lowlevel.cc	/^      bool idle_task_enabled;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
idle_task_enabled	legion_runtime/lowlevel_gpu.cc	/^      bool idle_task_enabled;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
idle_task_enabled	legion_runtime/shared_lowlevel.cc	/^        bool idle_task_enabled;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
ids_to_fns	legion_runtime/arrays.h	/^      std::vector<MappingDeserializerFn> ids_to_fns;$/;"	m	class:LegionRuntime::Arrays::MappingRegistry
idt_assign_entry	nautilus/idt.c	/^idt_assign_entry (ulong_t entry, ulong_t handler_addr)$/;"	f
idt_descriptor	nautilus/idt.c	/^struct idt_desc idt_descriptor =$/;"	v	typeref:struct:idt_desc
idx	legion_runtime/region_tree.h	/^        unsigned idx;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
idx	legion_runtime/region_tree.h	/^      unsigned idx;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
idx1	legion_runtime/legion.h	/^        unsigned idx1;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
idx2	legion_runtime/legion.h	/^        unsigned idx2;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
ieee754dbl	nautilus/libccompat.c	/^union ieee754dbl {$/;"	u	file:
ifstat	lua_src/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
image	legion_runtime/arrays.h	/^      Point<1> image(const Point<IDIM> p) const$/;"	f	class:LegionRuntime::Arrays::Linearization
image	legion_runtime/arrays.h	/^      Point<DIM> image(const Point<DIM> p) const$/;"	f	class:LegionRuntime::Arrays::Blockify
image	legion_runtime/arrays.h	/^      Point<ODIM> image(const Point<IDIM> p) const$/;"	f	class:LegionRuntime::Arrays::Translation
image	legion_runtime/arrays.h	/^      Rect<T::ODIM> image;$/;"	m	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
image	legion_runtime/arrays.h	/^      virtual Point<ODIM> image(const Point<IDIM> p) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
image_convex	legion_runtime/arrays.h	/^      Rect<1> image_convex(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::Linearization
image_convex	legion_runtime/arrays.h	/^      Rect<DIM> image_convex(const Rect<DIM> r) const$/;"	f	class:LegionRuntime::Arrays::Blockify
image_convex	legion_runtime/arrays.h	/^      Rect<ODIM> image_convex(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::Translation
image_convex	legion_runtime/arrays.h	/^      virtual Rect<ODIM> image_convex(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
image_dense_subrect	legion_runtime/arrays.h	/^      Rect<DIM> image_dense_subrect(const Rect<DIM> r, Rect<DIM>& subrect) const$/;"	f	class:LegionRuntime::Arrays::Blockify
image_dense_subrect	legion_runtime/arrays.h	/^      Rect<ODIM> image_dense_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect) const$/;"	f	class:LegionRuntime::Arrays::Linearization
image_dense_subrect	legion_runtime/arrays.h	/^      Rect<ODIM> image_dense_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect) const$/;"	f	class:LegionRuntime::Arrays::Translation
image_dense_subrect	legion_runtime/arrays.h	/^      virtual Rect<ODIM> image_dense_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
image_is_dense	legion_runtime/arrays.h	/^      bool image_is_dense(const Rect<DIM> r) const$/;"	f	class:LegionRuntime::Arrays::Blockify
image_is_dense	legion_runtime/arrays.h	/^      bool image_is_dense(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::Linearization
image_is_dense	legion_runtime/arrays.h	/^      bool image_is_dense(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::Translation
image_is_dense	legion_runtime/arrays.h	/^      virtual bool image_is_dense(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
image_linear_subrect	legion_runtime/arrays.h	/^      Point<DIM> image_linear_subrect(const Rect<DIM> r, Rect<DIM>& subrect, Point<DIM> strides[DIM]) const$/;"	f	class:LegionRuntime::Arrays::Blockify
image_linear_subrect	legion_runtime/arrays.h	/^      Point<ODIM> image_linear_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect, Point<ODIM> strides[IDIM]) const$/;"	f	class:LegionRuntime::Arrays::Linearization
image_linear_subrect	legion_runtime/arrays.h	/^      Point<ODIM> image_linear_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect, Point<ODIM> strides[IDIM]) const$/;"	f	class:LegionRuntime::Arrays::Translation
image_linear_subrect	legion_runtime/arrays.h	/^      virtual Point<ODIM> image_linear_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect, Point<ODIM> strides[IDIM]) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
image_lo	legion_runtime/arrays.h	/^      Point<T::ODIM> image_lo;$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
imax	legion_runtime/arrays.h	/^static inline int imax(int a, int b) { return (a > b) ? a : b; }$/;"	f
imcr_begin_sym_io	nautilus/irq.c	/^imcr_begin_sym_io (void)$/;"	f
imin	legion_runtime/arrays.h	/^static inline int imin(int a, int b) { return (a < b) ? a : b; }$/;"	f
immov_lock	legion_runtime/legion_utilities.h	/^      ImmovableLock immov_lock;$/;"	m	class:LegionRuntime::HighLevel::AutoLock
impl	legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap
impl	legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::Future
impl	legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::FutureMap
impl	legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::Grant
impl	legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake
impl	legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion
impl	legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::Predicate
impl	legion_runtime/lowlevel.cc	/^      Event::Impl *impl;$/;"	m	class:LegionRuntime::LowLevel::PthreadCondWaiter	file:
impl	legion_runtime/lowlevel.cc	/^      RegionInstance::Impl *impl;$/;"	m	class:LegionRuntime::LowLevel::DeferredInstDestroy	file:
impl	legion_runtime/lowlevel.cc	/^    Event::Impl *Event::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::Event
impl	legion_runtime/lowlevel.cc	/^    IndexSpace::Impl *IndexSpace::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
impl	legion_runtime/lowlevel.cc	/^    Memory::Impl *Memory::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory
impl	legion_runtime/lowlevel.cc	/^    Processor::Impl *Processor::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
impl	legion_runtime/lowlevel.cc	/^    RegionInstance::Impl *RegionInstance::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
impl	legion_runtime/lowlevel.cc	/^    Reservation::Impl *Reservation::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
impl	legion_runtime/lowlevel.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::LowLevel::IndexSpaceAllocator
impl	legion_runtime/region_tree.h	/^      TreeCloseImpl *impl;$/;"	m	class:LegionRuntime::HighLevel::TreeClose
impl	legion_runtime/shared_lowlevel.cc	/^      RegionInstance::Impl *impl;$/;"	m	class:LegionRuntime::LowLevel::DeferredInstDestroy	file:
impl_ptr	legion_runtime/lowlevel.h	/^      void *impl_ptr;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
imprecise_users	legion_runtime/field_tree.h	/^      std::list<UT> imprecise_users;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
in_handler	legion_runtime/activemsg.h	/^GASNETT_THREADKEY_DECLARE(in_handler);$/;"	v
in_handler	legion_runtime/lowlevel_impl.h	/^GASNETT_THREADKEY_DEFINE(in_handler);$/;"	v
in_idle_task	legion_runtime/lowlevel.cc	/^      bool in_idle_task;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
in_use	legion_runtime/activemsg.cc	/^  std::map<char *, size_t> in_use;$/;"	m	class:SrcDataPool	file:
in_use	legion_runtime/lowlevel_impl.h	/^      bool in_use;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
in_use	legion_runtime/shared_lowlevel.cc	/^	bool in_use;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
inclinenumber	lua_src/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
incoming	legion_runtime/legion_ops.h	/^      std::map<Operation*,GenerationID> incoming;$/;"	m	class:LegionRuntime::HighLevel::Operation
incomplete	lua_src/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:
increment_active_contexts	legion_runtime/runtime.cc	/^    void ProcessorManager::increment_active_contexts(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
increment_outstanding	legion_runtime/legion_tasks.cc	/^    void SingleTask::increment_outstanding(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
increment_pending	legion_runtime/legion_tasks.cc	/^    void SingleTask::increment_pending(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
increment_utility	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::increment_utility(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
incstep	lua_src/lgc.c	/^static void incstep (lua_State *L) {$/;"	f	file:
index	acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON u16 index;$/;"	m	struct:acpi_pkg_state
index	acpi/acpica/aclocal.h	/^	u32 index;$/;"	m	struct:acpi_gpe_device_info
index	legion_runtime/legion_logging.h	/^        unsigned index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
index	legion_runtime/legion_logging.h	/^        unsigned index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalUser
index	legion_runtime/legion_logging.h	/^        unsigned index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgRequirementFields
index	legion_runtime/legion_logging.h	/^        unsigned index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceRequirement
index	legion_runtime/legion_utilities.h	/^      off_t index;$/;"	m	class:LegionRuntime::HighLevel::Deserializer
index	legion_runtime/legion_utilities.h	/^      off_t index;$/;"	m	class:LegionRuntime::HighLevel::Serializer
index	legion_runtime/lowlevel_impl.h	/^      IDType index(void) const { return (value & ((((IDType)1) << INDEX_BITS) - 1)); }$/;"	f	class:LegionRuntime::LowLevel::ID
index	legion_runtime/region_tree.h	/^      const unsigned index;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
index	legion_runtime/shared_lowlevel.cc	/^	const EventIndex index;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
index	legion_runtime/shared_lowlevel.cc	/^	const int index;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
index	legion_runtime/shared_lowlevel.cc	/^	const int index;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
index	legion_runtime/shared_lowlevel.cc	/^	int index;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
index	legion_runtime/utilities.h	/^      int index;$/;"	m	class:LegionRuntime::Logger::Category
index	nautilus/printk.c	/^	unsigned int index;$/;"	m	struct:printk_state	file:
index2addr	lua_src/lapi.c	/^static TValue *index2addr (lua_State *L, int idx) {$/;"	f	file:
indexFor	nautilus/hashtable.c	/^indexFor (uint_t table_length, uint_t hash_value) $/;"	f	file:
indexSpaceID	test/hpcg/vector.h	/^    id_t indexSpaceID;$/;"	m	struct:lgncg::Vector
index_complete	legion_runtime/legion_tasks.h	/^      Event index_complete;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
index_component	legion_runtime/legion_logging.h	/^        unsigned index_component;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
index_deleted	legion_runtime/legion_tasks.h	/^      std::vector<bool> index_deleted;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
index_domain	legion_runtime/legion.h	/^      Domain                              index_domain;$/;"	m	class:LegionRuntime::HighLevel::Task
index_h	legion_runtime/lowlevel_impl.h	/^      IDType index_h(void) const { return ((value >> INDEX_L_BITS) & ((((IDType)1) << INDEX_H_BITS)-1)); }$/;"	f	class:LegionRuntime::LowLevel::ID
index_handle	legion_runtime/legion_logging.h	/^        IndexSpace index_handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
index_handle	legion_runtime/legion_logging.h	/^        IndexSpace index_handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
index_id	legion_runtime/legion_logging.h	/^        UniqueID index_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSlice
index_l	legion_runtime/lowlevel_impl.h	/^      IDType index_l(void) const { return (value & ((((IDType)1) << INDEX_L_BITS) - 1)); }$/;"	f	class:LegionRuntime::LowLevel::ID
index_nodes	legion_runtime/region_tree.h	/^      std::map<IndexSpace,IndexSpaceNode*>     index_nodes;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
index_of_thread_str	acpi/acpica/aclocal.h	/^	char index_of_thread_str[11];$/;"	m	struct:acpi_db_method_info
index_owner	legion_runtime/legion_tasks.h	/^      IndexTask *index_owner;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
index_part	legion_runtime/legion_ops.h	/^      IndexPartition index_part;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
index_partition	legion_runtime/legion.h	/^      IndexPartition index_partition;$/;"	m	class:LegionRuntime::HighLevel::LogicalPartition
index_parts	legion_runtime/region_tree.h	/^      std::map<IndexPartition,IndexPartNode*>  index_parts;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
index_point	legion_runtime/legion.h	/^      DomainPoint                         index_point;$/;"	m	class:LegionRuntime::HighLevel::Task
index_requirements	legion_runtime/legion.h	/^      std::vector<IndexSpaceRequirement> index_requirements;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
index_requirements	legion_runtime/legion.h	/^      std::vector<IndexSpaceRequirement> index_requirements;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
index_space	legion_runtime/legion.h	/^        bool index_space; \/**< supports index tasks*\/$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
index_space	legion_runtime/legion.h	/^      IndexSpace index_space;$/;"	m	class:LegionRuntime::HighLevel::IndexAllocator
index_space	legion_runtime/legion.h	/^      IndexSpace index_space;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegion
index_space	legion_runtime/legion_ops.h	/^      IndexSpace index_space;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
index_space_task	test/index_tasks.cc	/^int index_space_task(const Task *task,$/;"	f
index_spaces	legion_runtime/lowlevel_impl.h	/^      DynamicTable<IndexSpaceTableAllocator> index_spaces;$/;"	m	struct:Node
index_task	legion_runtime/legion_logging.h	/^        bool index_task;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
index_task_lock	legion_runtime/runtime.h	/^      Reservation index_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
index_tasks	legion_runtime/legion.h	/^      std::vector<IndexLauncher> index_tasks;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochLauncher
index_tasks	legion_runtime/legion_ops.h	/^      std::vector<IndexTask*>             index_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
index_triggered	legion_runtime/legion_ops.h	/^      std::vector<bool>                   index_triggered;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
indexes	legion_runtime/legion.h	/^      std::vector<IndexSpaceRequirement>  indexes;$/;"	m	class:LegionRuntime::HighLevel::Task
indirect_domain	legion_runtime/legion_logging.h	/^        Domain indirect_domain;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
indiv_tasks	legion_runtime/legion_ops.h	/^      std::vector<IndividualTask*>        indiv_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
indiv_triggered	legion_runtime/legion_ops.h	/^      std::vector<bool>                   indiv_triggered;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
individual_task_lock	legion_runtime/runtime.h	/^      Reservation individual_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
info	acpi/acpica/aclocal.h	/^	struct acpi_name_info info;$/;"	m	union:acpi_predefined_info	typeref:struct:acpi_predefined_info::acpi_name_info
info	legion_runtime/region_tree.h	/^      MappableInfo *const info;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
info	legion_runtime/region_tree.h	/^      MappableInfo *const info;$/;"	m	class:LegionRuntime::HighLevel::PremapTraverser
info	legion_runtime/region_tree.h	/^      MappableInfo *const info;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
info	legion_runtime/utilities.h	/^      inline void info(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
init	arch/k1om/init.c	/^init (unsigned long mbd, unsigned long magic) $/;"	f
init	arch/x64/init.c	/^init (unsigned long mbd,$/;"	f
init	legion_runtime/lowlevel.cc	/^    void ElementMask::init(int _first_element, int _num_elements, Memory _memory, off_t _offset)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
init	legion_runtime/lowlevel.cc	/^    void Event::Impl::init(Event _me, unsigned _init_owner)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
init	legion_runtime/lowlevel.cc	/^    void IndexSpace::Impl::init(IndexSpace _me, IndexSpace _parent,$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
init	legion_runtime/lowlevel.cc	/^    void IndexSpace::Impl::init(IndexSpace _me, unsigned _init_owner)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
init	legion_runtime/lowlevel.cc	/^    void ProcessorGroup::init(Processor _me, int _owner)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
init	legion_runtime/lowlevel.cc	/^    void Reservation::Impl::init(Reservation _me, unsigned _init_owner,$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
init	legion_runtime/lowlevel.h	/^      virtual void init(void *ptr, size_t count) const$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
init	legion_runtime/utilities.h	/^    static void init(int argc, const char *argv[])$/;"	f	class:LegionRuntime::Logger
init	legion_runtime/utilities.h	/^    void init(void) {$/;"	f	class:LegionRuntime::ImmovableLock
init	lua_src/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon48	file:
init	test/hpcg/cg.h	/^init(void)$/;"	f	namespace:lgncg::cg
init	test/hpcg/hpcg-main.cc	/^init(void)$/;"	f	namespace:__anon37
init	test/hpcg/hpcg-problem.cc	/^Problem::init(void)$/;"	f	class:Problem
init	test/hpcg/lgncg.cc	/^init(void)$/;"	f	namespace:lgncg
init_ap_area	nautilus/smp.c	/^init_ap_area (struct ap_init_area * ap_area, $/;"	f	file:
init_args	acpi/acpica/aclocal.h	/^	char init_args;$/;"	m	struct:acpi_db_method_info
init_bar	legion_runtime/shared_lowlevel.cc	/^        nk_barrier_t *init_bar;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
init_deferred_frees	legion_runtime/activemsg.cc	/^void init_deferred_frees(void)$/;"	f
init_done	legion_runtime/lowlevel.cc	/^      bool init_done, shutdown_requested;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
init_endpoints	legion_runtime/activemsg.cc	/^void init_endpoints(gasnet_handlerentry_t *handlers, int hcount,$/;"	f
init_exp	lua_src/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
init_field_task	test/custom_mapper.cc	/^void init_field_task(const Task *task,$/;"	f
init_field_task	test/multiple_partitions.cc	/^void init_field_task(const Task *task,$/;"	f
init_field_task	test/partitioning.cc	/^void init_field_task(const Task *task,$/;"	f
init_field_task	test/privileges.cc	/^void init_field_task(const Task *task,$/;"	f
init_registry	lua_src/lstate.c	/^static void init_registry (lua_State *L, global_State *g) {$/;"	f	file:
init_time	legion_runtime/legion.cc	/^      unsigned long long init_time;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
init_time	legion_runtime/legion_profiling.h	/^        unsigned long long init_time;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
init_time	legion_runtime/runtime.cc	/^    \/*static*\/ const long long Runtime::init_time = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
init_time	legion_runtime/runtime.h	/^      static const long long init_time;$/;"	m	class:LegionRuntime::HighLevel::Runtime
init_trace	legion_runtime/utilities.h	/^      static void init_trace(size_t block_size, double exp_arrv_rate)$/;"	f	class:LegionRuntime::LowLevel::Tracer
init_vectors_all_task	test/saxpy_array.cc	/^void init_vectors_all_task(const void *args, size_t arglen,$/;"	f
init_vectors_task	test/saxpy_array.cc	/^void init_vectors_task(const void *global_args, size_t global_arglen,$/;"	f
init_xcall	nautilus/smp.c	/^init_xcall (struct nk_xcall * x, void * arg, nk_xcall_func_t fun)$/;"	f	file:
initial_tables	acpi/tables.c	/^static struct acpi_table_desc initial_tables[ACPI_MAX_TABLES];$/;"	v	typeref:struct:acpi_table_desc	file:
initialize	legion_runtime/legion_ops.cc	/^    FutureMap MustEpochOp::initialize(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
initialize	legion_runtime/legion_ops.cc	/^    PhysicalRegion MapOp::initialize(SingleTask *ctx, $/;"	f	class:LegionRuntime::HighLevel::MapOp
initialize	legion_runtime/legion_ops.cc	/^    PhysicalRegion MapOp::initialize(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::MapOp
initialize	legion_runtime/legion_ops.cc	/^    void AcquireOp::initialize(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::AcquireOp
initialize	legion_runtime/legion_ops.cc	/^    void AndPredOp::initialize(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
initialize	legion_runtime/legion_ops.cc	/^    void CloseOp::initialize(SingleTask *ctx, unsigned idx, $/;"	f	class:LegionRuntime::HighLevel::CloseOp
initialize	legion_runtime/legion_ops.cc	/^    void CopyOp::initialize(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::CopyOp
initialize	legion_runtime/legion_ops.cc	/^    void FenceOp::initialize(SingleTask *ctx, bool mapping)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
initialize	legion_runtime/legion_ops.cc	/^    void FuturePredOp::initialize(SingleTask *ctx, Future f)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
initialize	legion_runtime/legion_ops.cc	/^    void MapOp::initialize(SingleTask *ctx, const PhysicalRegion &reg)$/;"	f	class:LegionRuntime::HighLevel::MapOp
initialize	legion_runtime/legion_ops.cc	/^    void NotPredOp::initialize(SingleTask *ctx, const Predicate &p)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
initialize	legion_runtime/legion_ops.cc	/^    void OrPredOp::initialize(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
initialize	legion_runtime/legion_ops.cc	/^    void ReleaseOp::initialize(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
initialize	legion_runtime/region_tree.cc	/^    void RegionTreePath::initialize(unsigned min, unsigned max)$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
initialize_base_task	legion_runtime/legion_tasks.cc	/^    void TaskOp::initialize_base_task(SingleTask *ctx, bool track, $/;"	f	class:LegionRuntime::HighLevel::TaskOp
initialize_capture	legion_runtime/legion_trace.cc	/^    void TraceCaptureOp::initialize_capture(SingleTask *ctx)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
initialize_complete	legion_runtime/legion_trace.cc	/^    void TraceCompleteOp::initialize_complete(SingleTask *ctx)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
initialize_field_deletion	legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_field_deletion(SingleTask *ctx, $/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_field_deletions	legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_field_deletions(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_field_space_deletion	legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_field_space_deletion(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_index_part_deletion	legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_index_part_deletion(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_index_space_deletion	legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_index_space_deletion(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_inline_task	legion_runtime/legion_tasks.cc	/^    void InlineTask::initialize_inline_task(SingleTask *enc, TaskOp *clone)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
initialize_legion_logging	legion_runtime/legion_logging.h	/^      static void initialize_legion_logging(AddressSpaceID sid,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
initialize_logical_context	legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_logical_context(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_logical_partition_deletion	legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_logical_partition_deletion(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_logical_region_deletion	legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_logical_region_deletion(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_logical_state	legion_runtime/region_tree.cc	/^    void RegionTreeNode::initialize_logical_state(ContextID ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
initialize_mapping_fields	legion_runtime/legion.cc	/^    void RegionRequirement::initialize_mapping_fields(void)$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
initialize_mapping_path	legion_runtime/legion_ops.cc	/^    void Operation::initialize_mapping_path(RegionTreePath &path,$/;"	f	class:LegionRuntime::HighLevel::Operation
initialize_mapping_paths	legion_runtime/legion_tasks.cc	/^    void SingleTask::initialize_mapping_paths(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
initialize_memory	legion_runtime/legion_profiling.h	/^      static inline void initialize_memory(Memory mem, Memory::Kind kind)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
initialize_operation	legion_runtime/legion_ops.cc	/^    void Operation::initialize_operation(SingleTask *ctx, bool track, $/;"	f	class:LegionRuntime::HighLevel::Operation
initialize_path	legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_path(IndexPartition child, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_path	legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_path(IndexPartition child,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_path	legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_path(IndexSpace child, IndexSpace parent,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_path	legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_path(IndexSpace child,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_path	legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_path(IndexTreeNode *child,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_paths	legion_runtime/legion_tasks.cc	/^    void IndexTask::initialize_paths(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
initialize_paths	legion_runtime/legion_tasks.cc	/^    void IndividualTask::initialize_paths(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
initialize_physical_context	legion_runtime/region_tree.cc	/^    InstanceRef RegionTreeForest::initialize_physical_context($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_physical_contexts	legion_runtime/legion_tasks.cc	/^    void TaskOp::initialize_physical_contexts(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
initialize_physical_state	legion_runtime/region_tree.cc	/^    void RegionTreeNode::initialize_physical_state(ContextID ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
initialize_point	legion_runtime/legion_tasks.cc	/^    void PointTask::initialize_point(SliceTask *owner)$/;"	f	class:LegionRuntime::HighLevel::PointTask
initialize_predicate	legion_runtime/legion_tasks.cc	/^    void IndexTask::initialize_predicate(const Future &pred_future,$/;"	f	class:LegionRuntime::HighLevel::IndexTask
initialize_privilege_path	legion_runtime/legion_ops.cc	/^    void Operation::initialize_privilege_path(RegionTreePath &path,$/;"	f	class:LegionRuntime::HighLevel::Operation
initialize_processor	legion_runtime/legion_profiling.h	/^      static inline void initialize_processor(Processor proc, $/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
initialize_reduction_state	legion_runtime/legion_tasks.cc	/^    void MultiTask::initialize_reduction_state(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
initialize_region_tree_contexts	legion_runtime/legion_tasks.cc	/^    void SingleTask::initialize_region_tree_contexts($/;"	f	class:LegionRuntime::HighLevel::SingleTask
initialize_remote	legion_runtime/legion_tasks.cc	/^    void RemoteTask::initialize_remote(UniqueID uid)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
initialize_runtime	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::initialize_runtime($/;"	f	class:LegionRuntime::HighLevel::Runtime
initialize_speculation	legion_runtime/legion_ops.cc	/^    void SpeculativeOp::initialize_speculation(SingleTask *ctx, bool track,$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
initialize_state	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::initialize_state(size_t stacksize)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
initialize_task	legion_runtime/legion_tasks.cc	/^    Future IndexTask::initialize_task(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::IndexTask
initialize_task	legion_runtime/legion_tasks.cc	/^    Future IndividualTask::initialize_task(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
initialize_task	legion_runtime/legion_tasks.cc	/^    FutureMap IndexTask::initialize_task(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::IndexTask
initialized	acpi/acpica/aclocal.h	/^	u8 initialized;         \/* TRUE if this block is initialized *\/$/;"	m	struct:acpi_gpe_block_info
initialized	legion_runtime/lowlevel_gpu.cc	/^      bool initialized;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
initiate_runtime_shutdown	legion_runtime/runtime.cc	/^    void Runtime::initiate_runtime_shutdown(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
initiating_node	legion_runtime/lowlevel.cc	/^      int initiating_node;$/;"	m	struct:LegionRuntime::LowLevel::MachineShutdownRequestArgs	file:
inline_child_task	legion_runtime/legion_tasks.cc	/^    void SingleTask::inline_child_task(TaskOp *child)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
inline_regions	legion_runtime/legion_tasks.h	/^                                                   inline_regions;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
inline_task	legion_runtime/legion.h	/^      bool                                inline_task;$/;"	m	class:LegionRuntime::HighLevel::Task
inline_task_lock	legion_runtime/runtime.h	/^      Reservation inline_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
inline_task_wrapper	legion_runtime/legion.h	/^    void LegionTaskWrapper::inline_task_wrapper(const Task *task, $/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
inline_task_wrapper	legion_runtime/legion.h	/^    void LegionTaskWrapper::inline_task_wrapper(const Task *task,$/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
inline_tasks	legion_runtime/legion_tasks.h	/^      LegionContainer<InlineTask*,TASK_INLINE_ALLOC>::deque inline_tasks;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
inline_udt_task_wrapper	legion_runtime/legion.h	/^    void LegionTaskWrapper::inline_udt_task_wrapper(const Task *task,$/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
inner	legion_runtime/legion.h	/^        bool inner;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
inner	legion_runtime/legion.h	/^      bool inner;$/;"	m	struct:LegionRuntime::HighLevel::TaskConfigOptions
inner_cond	legion_runtime/utilities.h	/^      pthread_cond_t inner_cond;$/;"	m	class:LegionRuntime::LowLevel::UtilityBarrier
inner_lock	legion_runtime/utilities.h	/^      pthread_mutex_t inner_lock;$/;"	m	class:LegionRuntime::LowLevel::UtilityBarrier
insert	legion_runtime/field_tree.h	/^    void FieldTree<UT>::insert(const UT &user, bool recurse\/*=true*\/)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
insert	legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>* IntervalTreeNode<T,DISCRETE>::insert($/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
insert	legion_runtime/interval_tree.h	/^    void IntervalTree<T,DISCRETE>::insert(T left, T right)$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
insert	legion_runtime/lowlevel_impl.h	/^    void JobQueue<JOBTYPE>::insert(JOBTYPE *job, int priority)$/;"	f	class:LegionRuntime::LowLevel::JobQueue
insert_filtered_users	legion_runtime/region_tree.cc	/^    void PhysicalDepAnalyzer<FILTER>::insert_filtered_users($/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
insert_local	legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>* IntervalTreeNode<T,DISCRETE>::insert_local($/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
insert_recurse	legion_runtime/field_tree.h	/^    void FieldTree<UT>::insert_recurse(const UT &user)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
insert_single	legion_runtime/field_tree.h	/^    void FieldTree<UT>::insert_single(unsigned index, const UT &user)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
inside	legion_runtime/rectangle_set.h	/^    \/*static*\/ inline bool RectangleSet<T,DISCRETE>::inside($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
inside_mapper_call	legion_runtime/runtime.h	/^      std::vector<bool> inside_mapper_call;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
inspectstat	lua_src/lauxlib.c	240;"	d	file:
inspectstat	lua_src/lauxlib.c	246;"	d	file:
inst	legion_runtime/lowlevel.h	/^	RegionInstance inst;$/;"	m	struct:LegionRuntime::LowLevel::Domain::CopySrcDstField
inst_id	legion_runtime/legion_profiling.h	/^        unsigned inst_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
inst_lock	legion_runtime/region_tree.h	/^      Reservation inst_lock;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
inst_lock_event	legion_runtime/lowlevel_dma.cc	/^      Event inst_lock_event;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
inst_lock_needed	legion_runtime/lowlevel_dma.cc	/^      bool inst_lock_needed;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
inst_offset	legion_runtime/lowlevel.cc	/^      off_t inst_offset;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceResp	file:
inst_pair	legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::BufferedMemPairCopier
inst_pair	legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier
inst_pair	legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier
inst_pair	legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier
inst_pair	legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier
inst_pair	legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier
inst_pair	legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier
inst_pair	legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::MemcpyMemPairCopier
inst_pair	legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
instance	legion_runtime/legion_logging.h	/^        PhysicalInstance instance;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
instance	legion_runtime/legion_logging.h	/^        PhysicalInstance instance;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalUser
instance	legion_runtime/region_tree.h	/^      PhysicalInstance instance;$/;"	m	class:LegionRuntime::HighLevel::PhysicalManager
instance_fields	legion_runtime/legion.h	/^      std::vector<FieldID> instance_fields; \/**< physical instance fields*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
instance_lock	legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         instance_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
instances	legion_runtime/lowlevel_impl.h	/^      std::vector<RegionInstance::Impl *> instances;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
instances	legion_runtime/shared_lowlevel.cc	/^	std::set<RegionInstance> instances;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
instances	legion_runtime/shared_lowlevel.cc	/^      std::vector<RegionInstance::Impl*> instances;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
instr_active	nautilus/instrument.c	/^static uint8_t instr_active = 0;$/;"	v	file:
instr_calibrate	nautilus/instrument.c	/^instr_calibrate (void)$/;"	f	file:
instr_end_count	nautilus/instrument.c	/^static uint64_t instr_end_count = 0;$/;"	v	file:
instr_eq_fn	nautilus/instrument.c	/^instr_eq_fn (addr_t key1, addr_t key2) {$/;"	f	file:
instr_hash_fn	nautilus/instrument.c	/^instr_hash_fn(addr_t key) {$/;"	f	file:
instr_start_count	nautilus/instrument.c	/^static uint64_t instr_start_count = 0;$/;"	v	file:
int80_end	test/benchmark.c	/^static uint64_t int80_end = 0;$/;"	v	file:
int80_handler	test/benchmark.c	/^int80_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
int_curr_symbol	nautilus/libccompat.c	/^    char *int_curr_symbol;$/;"	m	struct:lconv	file:
int_frac_digits	nautilus/libccompat.c	/^    char int_frac_digits;$/;"	m	struct:lconv	file:
int_n_cs_precedes	nautilus/libccompat.c	/^    char int_n_cs_precedes;$/;"	m	struct:lconv	file:
int_n_sep_by_space	nautilus/libccompat.c	/^    char int_n_sep_by_space;$/;"	m	struct:lconv	file:
int_n_sign_posn	nautilus/libccompat.c	/^    char int_n_sign_posn;$/;"	m	struct:lconv	file:
int_p_cs_precedes	nautilus/libccompat.c	/^    char int_p_cs_precedes;$/;"	m	struct:lconv	file:
int_p_sep_by_space	nautilus/libccompat.c	/^    char int_p_sep_by_space;$/;"	m	struct:lconv	file:
int_p_sign_posn	nautilus/libccompat.c	/^    char int_p_sign_posn;$/;"	m	struct:lconv	file:
integer	acpi/acpica/aclocal.h	/^	u64 integer;		\/* Integer constant (Up to 64 bits) *\/$/;"	m	union:acpi_parse_value
intel_fpu_init	nautilus/fpu.c	/^intel_fpu_init (struct naut_info * naut)$/;"	f	file:
intel_get_topo_secondary	nautilus/numa.c	/^intel_get_topo_secondary (struct nk_topo_params * tp)$/;"	f	file:
intel_probe_with_leafb	nautilus/numa.c	/^intel_probe_with_leafb (struct nk_topo_params *tp)$/;"	f	file:
intel_probe_with_leaves14	nautilus/numa.c	/^intel_probe_with_leaves14 (struct nk_topo_params * tp)$/;"	f	file:
internal	legion_runtime/accessor.h	/^	  void *internal;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
internal	legion_runtime/lowlevel_gpu.h	/^      GPUProcessor::Internal *internal;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor
internal_data	legion_runtime/lowlevel.h	/^      void *internal_data;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
internal_name	acpi/acpica/aclocal.h	/^	char *internal_name;$/;"	m	struct:acpi_namestring_info
internshrstr	lua_src/lstring.c	/^static TString *internshrstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
interrupt_number	acpi/acpica/aclocal.h	/^	u32 interrupt_number;	\/* System interrupt number *\/$/;"	m	struct:acpi_gpe_xrupt_info
intersection	legion_runtime/arrays.h	/^      Rect<DIM> intersection(const Rect<DIM>& other)$/;"	f	class:LegionRuntime::Arrays::Rect
intersections	legion_runtime/region_tree.h	/^        std::set<Domain> intersections;$/;"	m	struct:LegionRuntime::HighLevel::CompositeView::ReduceInfo
intersections	legion_runtime/region_tree.h	/^        std::set<Domain> intersections;$/;"	m	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
intersections	legion_runtime/region_tree.h	/^      std::map<IndexTreeNode*,IntersectInfo> intersections;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
intersects	legion_runtime/interval_tree.h	/^    bool IntervalTree<T,DISCRETE>::intersects(T left, T right) const$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
intersects	legion_runtime/interval_tree.h	/^    bool IntervalTreeNode<T,DISCRETE>::intersects(T left, T right) const$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
intersects	legion_runtime/rectangle_set.h	/^    inline bool Segment<T>::intersects(const Segment<T> &other) const$/;"	f	class:LegionRuntime::HighLevel::Segment
intersects_with	legion_runtime/region_tree.cc	/^    bool CompositeNode::intersects_with(RegionTreeNode *dst)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
intersects_with	legion_runtime/region_tree.cc	/^    bool IndexPartNode::intersects_with(IndexPartNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
intersects_with	legion_runtime/region_tree.cc	/^    bool IndexPartNode::intersects_with(IndexSpaceNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
intersects_with	legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::intersects_with(IndexPartNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
intersects_with	legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::intersects_with(IndexSpaceNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
intersects_with	legion_runtime/region_tree.cc	/^    bool PartitionNode::intersects_with(RegionTreeNode *other)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
intersects_with	legion_runtime/region_tree.cc	/^    bool RegionNode::intersects_with(RegionTreeNode *other)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
intmax_t	nautilus/fmtout.c	/^typedef long intmax_t;$/;"	t	file:
ints_as_breaks	arch/hrt/mwait.c	/^    uint8_t ints_as_breaks;$/;"	m	struct:mwait_info	file:
ints_as_breaks	arch/x64/mwait.c	/^    uint8_t ints_as_breaks;$/;"	m	struct:mwait_info	file:
invalid_mask	legion_runtime/region_tree.h	/^      const FieldMask invalid_mask;$/;"	m	class:LegionRuntime::HighLevel::PhysicalInvalidator
invalidate	legion_runtime/region_tree.h	/^      const bool invalidate;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
invalidate	legion_runtime/region_tree.h	/^      const bool invalidate;$/;"	m	class:LegionRuntime::HighLevel::StateSender
invalidate_instance_views	legion_runtime/region_tree.cc	/^    void RegionTreeNode::invalidate_instance_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
invalidate_logical_context	legion_runtime/region_tree.cc	/^    void RegionTreeForest::invalidate_logical_context(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
invalidate_logical_state	legion_runtime/region_tree.cc	/^    void RegionTreeNode::invalidate_logical_state(ContextID ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
invalidate_physical_context	legion_runtime/region_tree.cc	/^    void RegionTreeForest::invalidate_physical_context(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
invalidate_physical_state	legion_runtime/region_tree.cc	/^    void RegionTreeNode::invalidate_physical_state(ContextID ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
invalidate_physical_state	legion_runtime/region_tree.cc	/^    void RegionTreeNode::invalidate_physical_state(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
invalidate_reduction_views	legion_runtime/region_tree.cc	/^    void RegionTreeNode::invalidate_reduction_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
invalidate_region_tree_contexts	legion_runtime/legion_tasks.cc	/^    void SingleTask::invalidate_region_tree_contexts(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
invertjump	lua_src/lcode.c	/^static void invertjump (FuncState *fs, expdesc *e) {$/;"	f	file:
invoke_mapper_failed_mapping	legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_failed_mapping(Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_failed_mapping	legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_failed_mapping(Processor proc,$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_get_tunable_value	legion_runtime/runtime.cc	/^    int ProcessorManager::invoke_mapper_get_tunable_value(TaskOp *task,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_handle_message	legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_handle_message(MapperID map_id,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_handle_message	legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_handle_message(Processor target,MapperID map_id,$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_map_copy	legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_map_copy(Copy *op)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_map_copy	legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_map_copy(Processor proc, Copy *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_map_inline	legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_map_inline(Inline *op)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_map_inline	legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_map_inline(Processor proc, Inline *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_map_must_epoch	legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_map_must_epoch($/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_map_must_epoch	legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_map_must_epoch(Processor proc,$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_map_task	legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_map_task(TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_map_task	legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_map_task(Processor proc, SingleTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_notify_profiling	legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_notify_profiling(TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_notify_profiling	legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_notify_profiling(Processor proc, TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_notify_result	legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_notify_result(Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_notify_result	legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_notify_result(Processor proc,$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_pre_map_task	legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_pre_map_task(TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_pre_map_task	legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_pre_map_task(Processor proc, TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_rank_copy_sources	legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_rank_copy_sources(Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_rank_copy_sources	legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_rank_copy_sources(Processor proc, $/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_rank_copy_targets	legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_rank_copy_targets(Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_rank_copy_targets	legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_rank_copy_targets(Processor proc,$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_select_variant	legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_select_variant(TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_select_variant	legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_select_variant(Processor proc, TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_set_task_options	legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_set_task_options(TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_slice_domain	legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_slice_domain(TaskOp *task,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_slice_domain	legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_slice_domain(Processor proc, $/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_speculate	legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_speculate(Mappable *op, bool &value)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_speculate	legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_speculate(Processor proc, $/;"	f	class:LegionRuntime::HighLevel::Runtime
io_close	lua_src/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_fclose	lua_src/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	lua_src/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_input	lua_src/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_lines	lua_src/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_noclose	lua_src/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	lua_src/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	lua_src/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	lua_src/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_popen	lua_src/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_read	lua_src/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	lua_src/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_tmpfile	lua_src/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_type	lua_src/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	lua_src/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
ioapic_assign_irq	dev/ioapic.c	/^ioapic_assign_irq (struct ioapic * ioapic,$/;"	f	file:
ioapic_dump	dev/ioapic.c	/^ioapic_dump (struct ioapic * ioapic)$/;"	f	file:
ioapic_get_id	dev/ioapic.c	/^ioapic_get_id (struct ioapic * ioapic)$/;"	f	file:
ioapic_get_max_entry	dev/ioapic.c	/^ioapic_get_max_entry (struct ioapic * ioapic)$/;"	f	file:
ioapic_get_version	dev/ioapic.c	/^ioapic_get_version (struct ioapic * ioapic)$/;"	f	file:
ioapic_init	dev/ioapic.c	/^ioapic_init (struct sys_info * sys)$/;"	f
ioapic_mask_irq	dev/ioapic.c	/^ioapic_mask_irq (struct ioapic * ioapic, uint8_t irq)$/;"	f
ioapic_read_irq_entry	dev/ioapic.c	/^ioapic_read_irq_entry (struct ioapic * ioapic, uint8_t irq)$/;"	f	file:
ioapic_unmask_irq	dev/ioapic.c	/^ioapic_unmask_irq (struct ioapic * ioapic, uint8_t irq)$/;"	f
ioapic_write_irq_entry	dev/ioapic.c	/^ioapic_write_irq_entry (struct ioapic * ioapic, uint8_t irq, uint64_t val)$/;"	f	file:
ioctl	nautilus/libccompat.c	/^int ioctl (int d, unsigned long request, ...)$/;"	f
iolib	lua_src/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
ip4_addr_string	nautilus/printk.c	/^static char *ip4_addr_string(char *buf, char *end, const uint8_t *addr,$/;"	f	file:
ip4_string	nautilus/printk.c	/^static char *ip4_string(char *p, const uint8_t *addr, bool_t leading_zeros)$/;"	f	file:
ip6_addr_string	nautilus/printk.c	/^static char *ip6_addr_string(char *buf, char *end, const uint8_t *addr,$/;"	f	file:
ip6_string	nautilus/printk.c	/^static char *ip6_string(char *p, const char *addr, const char *fmt)$/;"	f	file:
ipairsaux	lua_src/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
ipart	test/saxpy_array.cc	/^  IndexPartition ipart;$/;"	m	struct:MainArgs	file:
ipi_bcast_test	test/ipi.c	/^ipi_bcast_test (void)$/;"	f
ipi_begin_test	test/ipi.c	/^ipi_begin_test (cpu_id_t cpu)$/;"	f
ipi_oneway_end	test/ipi.c	/^static uint64_t ipi_oneway_end = 0;$/;"	v	file:
ipi_oneway_test	test/ipi.c	/^ipi_oneway_test (cpu_id_t cpu)$/;"	f
ipi_test_setup	test/ipi.c	/^ipi_test_setup (void)$/;"	f
ipx	test/hpcg/geometry.h	/^    int64_t ipx;$/;"	m	struct:lgncg::Geometry
ipy	test/hpcg/geometry.h	/^    int64_t ipy;$/;"	m	struct:lgncg::Geometry
ipz	test/hpcg/geometry.h	/^    int64_t ipz;$/;"	m	struct:lgncg::Geometry
irq_err	asm/excp_early.S	/^irq_err:$/;"	l
irq_err_str	asm/excp_early.S	/^irq_err_str:$/;"	l
irq_to_vec	nautilus/irq.c	/^irq_to_vec (uint8_t irq)$/;"	f
irqmap_set_ioapic	nautilus/irq.c	/^irqmap_set_ioapic (uint8_t irq, struct ioapic * ioapic)$/;"	f
irqs_enabled	nautilus/irq.c	/^irqs_enabled (void)$/;"	f
is	legion_runtime/lowlevel.cc	/^      IndexSpace is;$/;"	m	struct:LegionRuntime::LowLevel::ValidMaskDataArgs	file:
is	legion_runtime/lowlevel.cc	/^      IndexSpace is;$/;"	m	struct:LegionRuntime::LowLevel::ValidMaskRequestArgs	file:
is	legion_runtime/lowlevel_impl.h	/^	IndexSpace is;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
is	test/hpcg/vector.h	/^    LegionRuntime::HighLevel::IndexSpace is;$/;"	m	struct:lgncg::Vector
isIndividual	legion_runtime/legion_logging.h	/^        bool isIndividual;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
is_available	nautilus/mm/buddy.c	/^is_available (struct buddy_mempool *mp, struct block *block)$/;"	f	file:
is_complete	legion_runtime/region_tree.cc	/^    bool IndexPartNode::is_complete(void)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
is_complete	legion_runtime/region_tree.cc	/^    bool PartitionNode::is_complete(void)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
is_complete	legion_runtime/region_tree.cc	/^    bool RegionNode::is_complete(void)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
is_composite_view	legion_runtime/region_tree.cc	/^    bool CompositeView::is_composite_view(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
is_composite_view	legion_runtime/region_tree.cc	/^    bool MaterializedView::is_composite_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
is_disjoint	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::is_disjoint(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
is_disjoint	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::is_disjoint(LogicalPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
is_dominated	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::is_dominated(IndexSpace src, IndexSpace dst)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
is_empty	legion_runtime/legion.cc	/^    bool Future::is_empty(bool block \/*= true*\/)$/;"	f	class:LegionRuntime::HighLevel::Future
is_empty	legion_runtime/legion_utilities.h	/^    bool Fraction<T>::is_empty(void) const$/;"	f	class:LegionRuntime::HighLevel::Fraction
is_empty	legion_runtime/runtime.cc	/^    bool Future::Impl::is_empty(bool block)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
is_finished	legion_runtime/lowlevel_gpu.cc	/^      virtual bool is_finished(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
is_finished	legion_runtime/lowlevel_gpu.cc	/^    bool GPUTask::is_finished(void)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
is_fixed	legion_runtime/legion_trace.h	/^      inline bool is_fixed(void) const { return fixed; }$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
is_foldable	legion_runtime/lowlevel.h	/^      bool is_foldable;$/;"	m	class:LegionRuntime::LowLevel::ReductionOpUntyped
is_foldable	legion_runtime/region_tree.cc	/^    bool FoldReductionManager::is_foldable(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
is_foldable	legion_runtime/region_tree.cc	/^    bool ListReductionManager::is_foldable(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
is_id	legion_runtime/lowlevel.h	/^      IDType is_id;$/;"	m	class:LegionRuntime::LowLevel::Domain
is_identity	legion_runtime/legion_utilities.h	/^    inline bool BitPermutation<BITMASK,LOG2MAX>::is_identity(bool retest)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
is_idle_task_enabled	legion_runtime/lowlevel.cc	/^      virtual bool is_idle_task_enabled(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
is_idle_task_enabled	legion_runtime/lowlevel_impl.h	/^      virtual bool is_idle_task_enabled(void) { return(false); }$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
is_impl	legion_runtime/lowlevel.cc	/^      IndexSpace::Impl *is_impl;$/;"	m	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl	file:
is_impl	legion_runtime/shared_lowlevel.cc	/^      IndexSpace::Impl *is_impl;$/;"	m	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl	file:
is_index_partition_disjoint	legion_runtime/legion.cc	/^    bool HighLevelRuntime::is_index_partition_disjoint(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
is_index_partition_disjoint	legion_runtime/legion.cc	/^    bool Mapper::is_index_partition_disjoint(IndexPartition p) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
is_index_partition_disjoint	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::is_index_partition_disjoint(IndexPartition p)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
is_index_partition_disjoint	legion_runtime/runtime.cc	/^    bool Runtime::is_index_partition_disjoint(Context ctx, IndexPartition p)$/;"	f	class:LegionRuntime::HighLevel::Runtime
is_index_partition_disjoint	legion_runtime/runtime.cc	/^    bool Runtime::is_index_partition_disjoint(IndexPartition p)$/;"	f	class:LegionRuntime::HighLevel::Runtime
is_index_space	legion_runtime/legion.h	/^      bool                                is_index_space;$/;"	m	class:LegionRuntime::HighLevel::Task
is_inner	legion_runtime/legion_tasks.cc	/^    bool SingleTask::is_inner(void) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
is_leaf	legion_runtime/legion_tasks.cc	/^    bool SingleTask::is_leaf(void) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
is_list_manager	legion_runtime/region_tree.cc	/^    bool FoldReductionManager::is_list_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
is_list_manager	legion_runtime/region_tree.cc	/^    bool ListReductionManager::is_list_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
is_list_reduction	legion_runtime/shared_lowlevel.cc	/^        bool is_list_reduction(void) const { return list; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
is_local	legion_runtime/runtime.cc	/^    bool Runtime::is_local(Processor proc) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
is_locally_mapped	legion_runtime/legion_tasks.h	/^      inline bool is_locally_mapped(void) const { return map_locally; }$/;"	f	class:LegionRuntime::HighLevel::TaskOp
is_locked	legion_runtime/lowlevel.cc	/^    bool Reservation::Impl::is_locked(unsigned check_mode, bool excl_ok)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
is_low	legion_runtime/legion_utilities.h	/^      const bool is_low;$/;"	m	class:LegionRuntime::HighLevel::AutoLock
is_mapped	legion_runtime/legion.h	/^    inline bool PhysicalRegion::is_mapped(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
is_mapped	legion_runtime/runtime.cc	/^    bool PhysicalRegion::Impl::is_mapped(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
is_null	legion_runtime/common.h	/^  inline bool is_null(void) const { return (value == ((unsigned)-1)); }$/;"	f	struct:ptr_t
is_null	legion_runtime/lowlevel.h	/^      bool is_null(void) const { return (dim > -1); }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
is_operation_committed	legion_runtime/legion_ops.cc	/^    bool Operation::is_operation_committed(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
is_parent_of	legion_runtime/lowlevel.cc	/^    bool IndexSpace::Impl::is_parent_of(IndexSpace other)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
is_persistent	legion_runtime/region_tree.cc	/^    bool CompositeView::is_persistent(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
is_persistent	legion_runtime/region_tree.cc	/^    bool InstanceManager::is_persistent(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
is_persistent	legion_runtime/region_tree.cc	/^    bool MaterializedView::is_persistent(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
is_predicated	legion_runtime/legion_ops.cc	/^    bool SpeculativeOp::is_predicated(void) const$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
is_premapped	legion_runtime/legion_tasks.h	/^      inline bool is_premapped(void) const { return premapped; }$/;"	f	class:LegionRuntime::HighLevel::TaskOp
is_queue_empty	nautilus/vc.c	/^static inline int is_queue_empty(struct nk_virtual_console *vc) $/;"	f	file:
is_queue_full	nautilus/vc.c	/^static inline int is_queue_full(struct nk_virtual_console *vc) $/;"	f	file:
is_reduction	legion_runtime/shared_lowlevel.cc	/^        bool is_reduction(void) const { return reduction; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
is_reduction_manager	legion_runtime/region_tree.cc	/^    bool InstanceManager::is_reduction_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
is_reduction_manager	legion_runtime/region_tree.cc	/^    bool ReductionManager::is_reduction_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
is_reduction_view	legion_runtime/region_tree.cc	/^    bool InstanceView::is_reduction_view(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceView
is_reduction_view	legion_runtime/region_tree.cc	/^    bool ReductionView::is_reduction_view(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
is_reduction_view	legion_runtime/region_tree.h	/^      inline bool is_reduction_view(void) const$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
is_region	legion_runtime/region_tree.cc	/^    bool PartitionNode::is_region(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
is_region	legion_runtime/region_tree.cc	/^    bool RegionNode::is_region(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
is_region_mapped	legion_runtime/legion_tasks.cc	/^    bool SingleTask::is_region_mapped(unsigned idx)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
is_registered	legion_runtime/activemsg.cc	/^static bool is_registered(void *ptr)$/;"	f	file:
is_remote	legion_runtime/legion_tasks.h	/^      inline bool is_remote(void) const { return !runtime->is_local(orig_proc);}$/;"	f	class:LegionRuntime::HighLevel::TaskOp
is_set	legion_runtime/activemsg.h	/^  bool is_set(void) const { return valid; }$/;"	f	struct:HandlerReplyFuture
is_set	legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
is_set	legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
is_set	legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
is_set	legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
is_set	legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
is_set	legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
is_set	legion_runtime/lowlevel.cc	/^    bool ElementMask::is_set(int ptr) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
is_set	legion_runtime/shared_lowlevel.cc	/^    bool ElementMask::is_set(int ptr) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
is_sliced	legion_runtime/legion_tasks.cc	/^    bool MultiTask::is_sliced(void) const$/;"	f	class:LegionRuntime::HighLevel::MultiTask
is_stealable	legion_runtime/legion_tasks.cc	/^    bool IndexTask::is_stealable(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexTask
is_stealable	legion_runtime/legion_tasks.cc	/^    bool IndividualTask::is_stealable(void) const$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
is_stealable	legion_runtime/legion_tasks.cc	/^    bool PointTask::is_stealable(void) const$/;"	f	class:LegionRuntime::HighLevel::PointTask
is_stealable	legion_runtime/legion_tasks.cc	/^    bool SliceTask::is_stealable(void) const$/;"	f	class:LegionRuntime::HighLevel::SliceTask
is_stealable	legion_runtime/legion_tasks.cc	/^    bool WrapperTask::is_stealable(void) const$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
is_stolen	legion_runtime/legion_tasks.h	/^      inline bool is_stolen(void) const { return (steal_count > 0); }$/;"	f	class:LegionRuntime::HighLevel::TaskOp
is_tracing	legion_runtime/legion_ops.h	/^      inline bool is_tracing(void) const { return tracing; }$/;"	f	class:LegionRuntime::HighLevel::Operation
is_utility_proc	legion_runtime/shared_lowlevel.cc	/^        const bool is_utility_proc;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
is_valid	legion_runtime/legion.cc	/^    bool PhysicalRegion::is_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
is_valid	legion_runtime/runtime.cc	/^    bool PhysicalRegion::Impl::is_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
is_whole	legion_runtime/legion_utilities.h	/^    bool Fraction<T>::is_whole(void) const$/;"	f	class:LegionRuntime::HighLevel::Fraction
ischar	nautilus/libccompat.c	/^int ischar(unsigned char *str)$/;"	f
iscleared	lua_src/lgc.c	/^static int iscleared (global_State *g, const TValue *o) {$/;"	f	file:
isclosed	lua_src/liolib.c	130;"	d	file:
isdummy	lua_src/ltable.c	70;"	d	file:
isfinalized	lua_src/lgc.c	66;"	d	file:
isinstack	lua_src/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:
isloop	lua_src/lparser.c	/^  lu_byte isloop;  \/* true if `block' is a loop *\/$/;"	m	struct:BlockCnt	file:
isnan	test/circuit_cpu.cc	/^isnan (float x)$/;"	f	file:
isneg	lua_src/lobject.c	/^static int isneg (const char **s) {$/;"	f	file:
isnumeral	lua_src/lcode.c	/^static int isnumeral(expdesc *e) {$/;"	f	file:
ispace	legion_runtime/legion_logging.h	/^        IndexSpace ispace;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopRegion
ispace	test/saxpy_array.cc	/^  IndexSpace ispace;$/;"	m	struct:MainArgs	file:
ispseudo	lua_src/lapi.c	44;"	d	file:
isstackindex	lua_src/lapi.c	47;"	d	file:
issue_acquire	legion_runtime/legion.cc	/^    void HighLevelRuntime::issue_acquire(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
issue_acquire	legion_runtime/runtime.cc	/^    void Runtime::issue_acquire(Context ctx, const AcquireLauncher &launcher)$/;"	f	class:LegionRuntime::HighLevel::Runtime
issue_across_copies	legion_runtime/region_tree.cc	/^    void CompositeNode::issue_across_copies(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
issue_advertisements	legion_runtime/runtime.cc	/^    void ProcessorManager::issue_advertisements(MapperID map_id)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
issue_composite_copies	legion_runtime/region_tree.cc	/^    void CompositeView::issue_composite_copies(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
issue_composite_copies_across	legion_runtime/region_tree.cc	/^    void CompositeView::issue_composite_copies_across(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
issue_copy_operation	legion_runtime/legion.cc	/^    void HighLevelRuntime::issue_copy_operation(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
issue_copy_operation	legion_runtime/runtime.cc	/^    void Runtime::issue_copy_operation(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
issue_execution_fence	legion_runtime/legion.cc	/^    void HighLevelRuntime::issue_execution_fence(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
issue_execution_fence	legion_runtime/runtime.cc	/^    void Runtime::issue_execution_fence(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
issue_grouped_copies	legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionTreeNode::issue_grouped_copies(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
issue_mapping_fence	legion_runtime/legion.cc	/^    void HighLevelRuntime::issue_mapping_fence(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
issue_mapping_fence	legion_runtime/runtime.cc	/^    void Runtime::issue_mapping_fence(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
issue_reduction	legion_runtime/region_tree.cc	/^    Event FoldReductionManager::issue_reduction($/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
issue_reduction	legion_runtime/region_tree.cc	/^    Event ListReductionManager::issue_reduction($/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
issue_release	legion_runtime/legion.cc	/^    void HighLevelRuntime::issue_release(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
issue_release	legion_runtime/runtime.cc	/^    void Runtime::issue_release(Context ctx, const ReleaseLauncher &launcher)$/;"	f	class:LegionRuntime::HighLevel::Runtime
issue_update_copies	legion_runtime/region_tree.cc	/^    void CompositeNode::issue_update_copies(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
issue_update_copies	legion_runtime/region_tree.cc	/^    void RegionTreeNode::issue_update_copies(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
issue_update_reductions	legion_runtime/region_tree.cc	/^    void RegionTreeNode::issue_update_reductions(LogicalView *target,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
isvalid	lua_src/lapi.c	41;"	d	file:
items	legion_runtime/utilities.h	/^	ITEM *items;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
iterator	legion_runtime/lowlevel.h	/^	void *iterator;$/;"	m	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
jmp_buf	include/nautilus/setjmp.h	/^typedef struct __jmp_buf_tag jmp_buf[1];$/;"	t	typeref:struct:__jmp_buf_tag
jumponcond	lua_src/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
k_queue	nautilus/vc.c	/^    nk_keycode_t k_queue[Keycode_QUEUE_SIZE];$/;"	m	union:nk_virtual_console::queue	file:
kbd_deinit	dev/kbd.c	/^int kbd_deinit()$/;"	f
kbd_handler	dev/kbd.c	/^kbd_handler (excp_entry_t * excp, excp_vec_t vec)$/;"	f	file:
kbd_init	dev/kbd.c	/^kbd_init (struct naut_info * naut)$/;"	f
kbd_reset	dev/kbd.c	/^int kbd_reset()$/;"	f
kbd_translate	dev/kbd.c	/^nk_keycode_t kbd_translate(nk_scancode_t scan)$/;"	f
kern_ident_map	nautilus/paging.c	/^kern_ident_map (struct nk_mem_info * mem, ulong_t mbd)$/;"	f	file:
key	nautilus/hashtable.c	/^    addr_t key;$/;"	m	struct:nk_hash_entry	file:
keyboard_queue	nautilus/vc.c	/^  } keyboard_queue;$/;"	m	struct:nk_virtual_console	typeref:union:nk_virtual_console::queue	file:
kind	legion_runtime/legion_logging.h	/^        LogMsgOperationKind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
kind	legion_runtime/legion_logging.h	/^        Memory::Kind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemory
kind	legion_runtime/legion_logging.h	/^        TimingKind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventTiming
kind	legion_runtime/legion_logging.h	/^        TimingKind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationTiming
kind	legion_runtime/legion_logging.h	/^        WaitKind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
kind	legion_runtime/legion_logging.h	/^        WaitKind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
kind	legion_runtime/legion_ops.h	/^      DeletionKind kind;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
kind	legion_runtime/legion_profiling.h	/^        Processor::Kind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
kind	legion_runtime/legion_profiling.h	/^        unsigned kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProfilingEvent
kind	legion_runtime/lowlevel_gpu.cc	/^      cudaMemcpyKind kind;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy	file:
kind	legion_runtime/lowlevel_impl.h	/^      MemoryKind kind;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
kind	legion_runtime/lowlevel_impl.h	/^      Processor::Kind kind;$/;"	m	class:LegionRuntime::LowLevel::Processor::Impl
kind	legion_runtime/region_tree.h	/^        int kind;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
kind	legion_runtime/region_tree.h	/^        int kind;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
kind	legion_runtime/region_tree.h	/^      int kind;$/;"	m	class:LegionRuntime::HighLevel::PerfTracer
kind	legion_runtime/shared_lowlevel.cc	/^        const Memory::Kind kind;$/;"	m	class:LegionRuntime::LowLevel::MemoryImpl	file:
kmem_add_memory	nautilus/mm/kmem.c	/^kmem_add_memory (struct mem_region * mem, $/;"	f
kmem_block_hdr	nautilus/mm/kmem.c	/^struct kmem_block_hdr {$/;"	s	file:
kmem_bytes_allocated	nautilus/mm/kmem.c	/^static unsigned long kmem_bytes_allocated = 0;$/;"	v	file:
kmem_bytes_managed	nautilus/mm/kmem.c	/^static unsigned long kmem_bytes_managed;$/;"	v	file:
kmem_get_base_zone	nautilus/mm/kmem.c	/^kmem_get_base_zone (void)$/;"	f
kmem_get_region_by_addr	nautilus/mm/kmem.c	/^kmem_get_region_by_addr (ulong_t addr)$/;"	f
kname	lua_src/ldebug.c	/^static void kname (Proto *p, int pc, int c, const char **name) {$/;"	f	file:
known_nodes	legion_runtime/region_tree.h	/^      NodeMask known_nodes;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
l	lua_src/lstate.c	/^  LX l;$/;"	m	struct:LG	file:
l	lua_src/lstate.c	/^  lua_State l;$/;"	m	struct:LX	file:
l0	asm/smpboot.S	/^    l0:$/;"	l
l2gTab	test/hpcg/hpcg-problem-generator.h	/^    int64_t *l2gTab;$/;"	m	struct:ProblemGenerator
lDom	test/hpcg/vector.h	/^    LegionRuntime::HighLevel::Domain lDom;$/;"	m	struct:lgncg::PVecItem
lDom	test/hpcg/vector.h	/^    lDom(size_t index = 0) const$/;"	f	struct:lgncg::Vector
lPart	test/hpcg/vector.h	/^    LegionRuntime::HighLevel::LogicalPartition lPart;$/;"	m	struct:lgncg::PVecItem
l_alloc	lua_src/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_fseek	lua_src/liolib.c	102;"	d	file:
l_fseek	lua_src/liolib.c	112;"	d	file:
l_fseek	lua_src/liolib.c	94;"	d	file:
l_ftell	lua_src/liolib.c	103;"	d	file:
l_ftell	lua_src/liolib.c	113;"	d	file:
l_ftell	lua_src/liolib.c	95;"	d	file:
l_gmtime	lua_src/loslib.c	72;"	d	file:
l_gmtime	lua_src/loslib.c	77;"	d	file:
l_localtime	lua_src/loslib.c	73;"	d	file:
l_localtime	lua_src/loslib.c	78;"	d	file:
l_message	lua_src/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:
l_seeknum	lua_src/liolib.c	104;"	d	file:
l_seeknum	lua_src/liolib.c	114;"	d	file:
l_seeknum	lua_src/liolib.c	96;"	d	file:
l_strcmp	lua_src/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
labelstat	lua_src/lparser.c	/^static void labelstat (LexState *ls, TString *label, int line) {$/;"	f	file:
laction	lua_src/lua.c	/^static void laction (int i) {$/;"	f	file:
lapi_c	lua_src/lapi.c	11;"	d	file:
largest_page_size	nautilus/paging.c	/^largest_page_size (void)$/;"	f	file:
last_elmt	legion_runtime/lowlevel.h	/^      size_t last_elmt;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
last_elmt	legion_runtime/lowlevel_impl.h	/^        size_t first_elmt, last_elmt;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
last_enabled	legion_runtime/lowlevel.h	/^      int last_enabled(void) const { return last_enabled_elmt; }$/;"	f	class:LegionRuntime::LowLevel::ElementMask
last_enabled_elmt	legion_runtime/lowlevel.h	/^      int first_enabled_elmt, last_enabled_elmt;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
last_index	legion_runtime/lowlevel_impl.h	/^      IT first_index, last_index;$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNodeBase
last_message_event	legion_runtime/runtime.h	/^      Event last_message_event;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
last_ts	legion_runtime/lowlevel.cc	/^        Barrier::timestamp_t last_ts;$/;"	m	struct:LegionRuntime::LowLevel::Event::Impl::PendingUpdates::PerNodeUpdates	file:
lastlistfield	lua_src/lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
latency	legion_runtime/legion_logging.h	/^        size_t latency;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemMemAffinity
latency	legion_runtime/legion_logging.h	/^        size_t latency;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcMemAffinity
latency	legion_runtime/lowlevel.h	/^	unsigned latency;$/;"	m	struct:LegionRuntime::LowLevel::Machine::MemoryMemoryAffinity
latency	legion_runtime/lowlevel.h	/^	unsigned latency;$/;"	m	struct:LegionRuntime::LowLevel::Machine::ProcessorMemoryAffinity
launch	legion_runtime/runtime.cc	/^    void GarbageCollectionEpoch::launch(Processor utility, int priority)$/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
launch_check_fields	test/circuit_cpu.cc	/^bool CalcNewCurrentsTask::launch_check_fields(Context ctx, HighLevelRuntime *runtime)$/;"	f	class:CalcNewCurrentsTask
launch_check_fields	test/circuit_cpu.cc	/^bool DistributeChargeTask::launch_check_fields(Context ctx, HighLevelRuntime *runtime)$/;"	f	class:DistributeChargeTask
launch_check_fields	test/circuit_cpu.cc	/^bool UpdateVoltagesTask::launch_check_fields(Context ctx, HighLevelRuntime *runtime)$/;"	f	class:UpdateVoltagesTask
launch_domain	legion_runtime/legion.h	/^      Domain                             launch_domain;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
launch_task	legion_runtime/legion_tasks.cc	/^    void IndexTask::launch_task(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
launch_task	legion_runtime/legion_tasks.cc	/^    void SingleTask::launch_task(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
launch_task	legion_runtime/legion_tasks.cc	/^    void SliceTask::launch_task(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
launch_task_scheduler	legion_runtime/runtime.cc	/^    void ProcessorManager::launch_task_scheduler(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
launch_top_level_task	legion_runtime/runtime.cc	/^    void Runtime::launch_top_level_task(Processor proc)$/;"	f	class:LegionRuntime::HighLevel::Runtime
launch_vmm_environment	arch/x64/init.c	/^static int launch_vmm_environment()$/;"	f	file:
lauxlib_c	lua_src/lauxlib.c	26;"	d	file:
layout	legion_runtime/region_tree.h	/^      LayoutDescription *const layout;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
layouts	legion_runtime/region_tree.h	/^                          LAYOUT_DESCRIPTION_ALLOC>::deque> layouts;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
lbaselib_c	lua_src/lbaselib.c	14;"	d	file:
lbitlib_c	lua_src/lbitlib.c	7;"	d	file:
lcode_c	lua_src/lcode.c	10;"	d	file:
lconv	nautilus/libccompat.c	/^struct lconv {$/;"	s	file:
lcorolib_c	lua_src/lcorolib.c	11;"	d	file:
lctype_c	lua_src/lctype.c	7;"	d	file:
ldblib_c	lua_src/ldblib.c	13;"	d	file:
ldebug_c	lua_src/ldebug.c	13;"	d	file:
ldexp	nautilus/libccompat.c	/^double ldexp(double x, int exp){$/;"	f
ldo_c	lua_src/ldo.c	12;"	d	file:
ldump_c	lua_src/ldump.c	9;"	d	file:
leaf	legion_runtime/legion.h	/^        bool leaf;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
leaf	legion_runtime/legion.h	/^      bool leaf;$/;"	m	struct:LegionRuntime::HighLevel::TaskConfigOptions
leaf	legion_runtime/legion_logging.h	/^        bool leaf;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskCollection
leaf_region	legion_runtime/runtime.h	/^      const bool leaf_region;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
leaq	asm/thread_lowlevel.S	/^leaq 8(%rsp), %rsp ;                            \/\/ This instruction must not affect CCs$/;"	l
leave_open	legion_runtime/region_tree.h	/^      const bool leave_open;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
leaveblock	lua_src/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	lua_src/lparser.c	340;"	d	file:
left	legion_runtime/legion_ops.h	/^      PredicateOp *left;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
left	legion_runtime/legion_ops.h	/^      PredicateOp *left;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
left	legion_runtime/region_tree.h	/^        IndexPartNode *left, *right;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
left	legion_runtime/region_tree.h	/^        IndexSpaceNode *left, *right;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicSpaceTest
left	lua_src/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon50	file:
left_bound	legion_runtime/interval_tree.h	/^      T left_bound, right_bound;$/;"	m	class:LegionRuntime::HighLevel::IntervalTreeNode
left_node	legion_runtime/interval_tree.h	/^      IntervalTreeNode<T, DISCRETE> *left_node, *right_node;$/;"	m	class:LegionRuntime::HighLevel::IntervalTreeNode
left_spaces	legion_runtime/region_tree.h	/^        std::vector<IndexSpaceNode*> left_spaces, right_spaces;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
left_valid	legion_runtime/legion_ops.h	/^      bool left_valid;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
left_valid	legion_runtime/legion_ops.h	/^      bool left_valid;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
left_value	legion_runtime/legion_ops.h	/^      bool left_value;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
left_value	legion_runtime/legion_ops.h	/^      bool left_value;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
leftover_procs	legion_runtime/lowlevel_impl.h	/^      cpu_set_t leftover_procs;$/;"	m	class:LegionRuntime::LowLevel::ProcessorAssignment
legion_backtrace	legion_runtime/shared_lowlevel.cc	/^    static void legion_backtrace(int signal)$/;"	f	namespace:LegionRuntime::LowLevel
legion_buffer_size	legion_runtime/legion.cc	/^    size_t ColoringSerializer::legion_buffer_size(void) const$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
legion_buffer_size	legion_runtime/legion.cc	/^    size_t DomainColoringSerializer::legion_buffer_size(void) const$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
legion_count	legion_runtime/runtime.h	/^      int mpi_count, legion_count;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
legion_delete	legion_runtime/legion_allocation.h	/^    inline void legion_delete(T *to_free)$/;"	f	namespace:LegionRuntime::HighLevel
legion_deserialize	legion_runtime/legion.cc	/^    size_t ColoringSerializer::legion_deserialize(const void *buffer)$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
legion_deserialize	legion_runtime/legion.cc	/^    size_t DomainColoringSerializer::legion_deserialize(const void *buffer)$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
legion_free	legion_runtime/legion_allocation.h	/^    inline void legion_free(AllocationType a, void *ptr, size_t size)$/;"	f	namespace:LegionRuntime::HighLevel
legion_handoff_to_mpi	legion_runtime/legion.cc	/^    void MPILegionHandshake::legion_handoff_to_mpi(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
legion_handoff_to_mpi	legion_runtime/runtime.cc	/^    void MPILegionHandshake::Impl::legion_handoff_to_mpi(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
legion_main_id	legion_runtime/runtime.cc	/^    \/*static*\/ Processor::TaskFuncID Runtime::legion_main_id = 0;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
legion_main_id	legion_runtime/runtime.h	/^      static Processor::TaskFuncID legion_main_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
legion_malloc	legion_runtime/legion_allocation.h	/^    inline void* legion_malloc(AllocationType a, size_t size)$/;"	f	namespace:LegionRuntime::HighLevel
legion_new	legion_runtime/legion_allocation.h	/^    inline T* legion_new(const T1 &arg1)$/;"	f	namespace:LegionRuntime::HighLevel
legion_new	legion_runtime/legion_allocation.h	/^    inline T* legion_new(const T1 &arg1, const T2 &arg2)$/;"	f	namespace:LegionRuntime::HighLevel
legion_new	legion_runtime/legion_allocation.h	/^    inline T* legion_new(const T1 &arg1, const T2 &arg2, const T3 &arg3)$/;"	f	namespace:LegionRuntime::HighLevel
legion_new	legion_runtime/legion_allocation.h	/^    inline T* legion_new(const T1 &arg1, const T2 &arg2,$/;"	f	namespace:LegionRuntime::HighLevel
legion_new	legion_runtime/legion_allocation.h	/^    inline T* legion_new(void)$/;"	f	namespace:LegionRuntime::HighLevel
legion_participants	legion_runtime/runtime.h	/^      const int legion_participants;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
legion_prof_table	legion_runtime/legion.cc	/^      ProcessorProfiler *legion_prof_table = $/;"	m	namespace:LegionRuntime::HighLevel::LegionProf	file:
legion_ready	legion_runtime/runtime.h	/^      UserEvent mpi_ready, legion_ready;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
legion_realloc	legion_runtime/legion_allocation.h	/^    inline void* legion_realloc(AllocationType a, void *ptr, $/;"	f	namespace:LegionRuntime::HighLevel
legion_serialize	legion_runtime/legion.cc	/^    size_t ColoringSerializer::legion_serialize(void *buffer) const$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
legion_serialize	legion_runtime/legion.cc	/^    size_t DomainColoringSerializer::legion_serialize(void *buffer) const$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
legion_spy_start	legion_runtime/legion_tasks.h	/^      Event legion_spy_start;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
legion_task_wrapper	legion_runtime/legion.h	/^    void LegionTaskWrapper::legion_task_wrapper(const void *args, $/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
legion_test_thread_func	test/test_legion.c	/^legion_test_thread_func (void * in, void ** out)$/;"	f	file:
legion_udt_task_wrapper	legion_runtime/legion.h	/^    void LegionTaskWrapper::legion_udt_task_wrapper(const void *args,$/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
legion_wait_on_mpi	legion_runtime/legion.cc	/^    void MPILegionHandshake::legion_wait_on_mpi(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
legion_wait_on_mpi	legion_runtime/runtime.cc	/^    void MPILegionHandshake::Impl::legion_wait_on_mpi(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
len	lua_src/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon48	file:
len	test/hpcg/vector.h	/^    int64_t len;$/;"	m	struct:lgncg::Vector
length	acpi/acpica/aclocal.h	/^	u32 length;		\/* AML length *\/$/;"	m	struct:acpi_parse_obj_named
length	acpi/acpica/aclocal.h	/^	u32 length;$/;"	m	struct:acpi_namespace_node
length	acpi/acpica/aclocal.h	/^	u32 length;$/;"	m	struct:acpi_namestring_info
length	legion_runtime/runtime.h	/^        size_t length;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::MapperMessage
lev_lapic_pref_order	legion_runtime/shared_lowlevel.cc	/^static uint8_t lev_lapic_pref_order[64] = {$/;"	v	file:
level	legion_runtime/lowlevel_impl.h	/^      int level;$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNodeBase
level	lua_src/lstrlib.c	/^  int level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
lexerror	lua_src/llex.c	/^static l_noret lexerror (LexState *ls, const char *msg, int token) {$/;"	f	file:
lfunc_c	lua_src/lfunc.c	10;"	d	file:
lgc_c	lua_src/lgc.c	9;"	d	file:
lgncg	test/hpcg/cg-data.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/cg.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/comp-dotprod.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/comp-mg.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/comp-prolongation.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/comp-restriction.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/comp-spmv.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/comp-symgs.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/comp-waxpby.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/dotprod-accumulate.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/geometry.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/lgncg.cc	/^namespace lgncg {$/;"	n	file:
lgncg	test/hpcg/lgncg.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/mg-data.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/setup-halo.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/sparsemat.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/tids.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/utils.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/vec-zero.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/veccp.h	/^namespace lgncg {$/;"	n
lgncg	test/hpcg/vector.h	/^namespace lgncg {$/;"	n
libsize	lua_src/lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	file:
line_count	legion_runtime/activemsg.cc	/^  size_t line_size, line_count;$/;"	m	class:TwoDPayload	file:
line_number	acpi/acpica/aclocal.h	/^	u32 line_number;$/;"	m	struct:acpi_parse_obj_asl
line_size	legion_runtime/activemsg.cc	/^  size_t line_size, line_count;$/;"	m	class:TwoDPayload	file:
line_stride	legion_runtime/activemsg.cc	/^  ptrdiff_t line_stride;$/;"	m	class:TwoDPayload	file:
linearization	legion_runtime/lowlevel_impl.h	/^      DomainLinearization linearization;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
linearization	legion_runtime/shared_lowlevel.cc	/^        DomainLinearization linearization;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
linearization_bits	legion_runtime/lowlevel.cc	/^      int linearization_bits[RegionInstance::Impl::MAX_LINEARIZATION_LEN];$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
linearization_bits	legion_runtime/lowlevel_impl.h	/^	int linearization_bits[MAX_LINEARIZATION_LEN];$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
lines	legion_runtime/lowlevel_gpu.cc	/^      size_t bytes, lines;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
linit_c	lua_src/linit.c	16;"	d	file:
link	nautilus/mm/buddy.c	/^    struct list_head link;$/;"	m	struct:block	typeref:struct:block::list_head	file:
linktable	lua_src/lgc.c	100;"	d	file:
liolib_c	lua_src/liolib.c	25;"	d	file:
list	acpi/acpica/aclocal.h	/^	acpi_handle *list;$/;"	m	struct:acpi_find_context
list	legion_runtime/legion_allocation.h	/^      typedef std::list<T, LegionAllocator<T, A> > list;$/;"	t	struct:LegionRuntime::HighLevel::LegionContainer
list	legion_runtime/shared_lowlevel.cc	/^        bool list; \/\/ reduction list$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
list	nautilus/vc.c	/^static void list(void *in, void **out)$/;"	f	file:
list_size	legion_runtime/lowlevel.cc	/^      off_t list_size;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
list_tid	nautilus/vc.c	/^static nk_thread_id_t list_tid;$/;"	v	file:
list_vc	nautilus/vc.c	/^static struct nk_virtual_console *list_vc = NULL; $/;"	v	typeref:struct:nk_virtual_console	file:
listfield	lua_src/lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
ll_addtoclib	lua_src/loadlib.c	/^static void ll_addtoclib (lua_State *L, const char *path, void *plib) {$/;"	f	file:
ll_checkclib	lua_src/loadlib.c	/^static void *ll_checkclib (lua_State *L, const char *path) {$/;"	f	file:
ll_funcs	lua_src/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_load	lua_src/loadlib.c	/^static void *ll_load (lua_State *L, const char *path, int seeglb) {$/;"	f	file:
ll_loadfunc	lua_src/loadlib.c	/^static int ll_loadfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
ll_loadlib	lua_src/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_module	lua_src/loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	file:
ll_require	lua_src/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_searchpath	lua_src/loadlib.c	/^static int ll_searchpath (lua_State *L) {$/;"	f	file:
ll_seeall	lua_src/loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	file:
ll_sym	lua_src/loadlib.c	/^static lua_CFunction ll_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
ll_unloadlib	lua_src/loadlib.c	/^static void ll_unloadlib (void *lib) {$/;"	f	file:
llex	lua_src/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	lua_src/llex.c	11;"	d	file:
lmathlib_c	lua_src/lmathlib.c	17;"	d	file:
lmb_r_bases	legion_runtime/activemsg.cc	/^  char **lmb_r_bases; \/\/ [num_lmbs]$/;"	m	class:ActiveMessageEndpoint	file:
lmb_r_counts	legion_runtime/activemsg.cc	/^  int *lmb_r_counts; \/\/ [num_lmbs]$/;"	m	class:ActiveMessageEndpoint	file:
lmb_size	legion_runtime/activemsg.cc	/^static size_t lmb_size = 1 << 20; \/\/ 1 MB$/;"	v	file:
lmb_w_avail	legion_runtime/activemsg.cc	/^  bool *lmb_w_avail; \/\/ [num_lmbs]$/;"	m	class:ActiveMessageEndpoint	file:
lmb_w_bases	legion_runtime/activemsg.cc	/^  char **lmb_w_bases; \/\/ [num_lmbs]$/;"	m	class:ActiveMessageEndpoint	file:
lmem_c	lua_src/lmem.c	10;"	d	file:
lmemfind	lua_src/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
lo	legion_runtime/arrays.h	/^      Point<DIM> lo, hi;$/;"	m	class:LegionRuntime::Arrays::Rect
load_aux	lua_src/lbaselib.c	/^static int load_aux (lua_State *L, int status, int envidx) {$/;"	f	file:
load_circuit	test/circuit.cc	/^Partitions load_circuit(Circuit &ckt, std::vector<CircuitPiece> &pieces, Context ctx,$/;"	f
load_factors	nautilus/hashtable.c	/^static const uint_t load_factors[] = $/;"	v	file:
load_limit	nautilus/hashtable.c	/^    uint_t load_limit;$/;"	m	struct:nk_hashtable	file:
loadedlibs	lua_src/linit.c	/^static const luaL_Reg loadedlibs[] = {$/;"	v	file:
loadfunc	lua_src/loadlib.c	/^static int loadfunc (lua_State *L, const char *filename, const char *modname) {$/;"	f	file:
loadlib_c	lua_src/loadlib.c	24;"	d	file:
loadline	lua_src/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:
lobject_c	lua_src/lobject.c	12;"	d	file:
local	legion_runtime/legion_logging.h	/^        bool local;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldCreation
local	legion_runtime/region_tree.h	/^        bool local;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
localSysMem	test/hpcg/cg-mapper.h	/^    LegionRuntime::HighLevel::Memory localSysMem;$/;"	m	class:CGMapper
local_address_space	legion_runtime/runtime.h	/^      const AddressSpaceID local_address_space;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
local_arglen	legion_runtime/legion.h	/^      size_t                              local_arglen;$/;"	m	class:LegionRuntime::HighLevel::Task
local_args	legion_runtime/legion.h	/^      void                               *local_args;$/;"	m	class:LegionRuntime::HighLevel::Task
local_closing_mask	legion_runtime/region_tree.h	/^      FieldMask local_closing_mask;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
local_color	legion_runtime/region_tree.h	/^      const int local_color;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
local_color	legion_runtime/region_tree.h	/^      const int local_color;$/;"	m	class:LegionRuntime::HighLevel::WARAnalyzer
local_cpus	legion_runtime/lowlevel.cc	/^    static std::vector<LocalProcessor *> local_cpus;$/;"	m	namespace:LegionRuntime::LowLevel	file:
local_data	legion_runtime/lowlevel_impl.h	/^      void *local_data;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
local_data_size	legion_runtime/lowlevel_impl.h	/^      size_t local_data_size;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
local_event_free_list	legion_runtime/lowlevel_impl.h	/^      EventTableAllocator::FreeList *local_event_free_list;$/;"	m	class:Runtime
local_fields	legion_runtime/legion_tasks.h	/^                                                                 local_fields;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
local_futures	legion_runtime/runtime.h	/^                     RUNTIME_FUTURE_ALLOC>::map local_futures;$/;"	m	class:LegionRuntime::HighLevel::Runtime
local_gpus	legion_runtime/lowlevel.cc	/^    static std::vector<GPUProcessor *> local_gpus;$/;"	m	namespace:LegionRuntime::LowLevel	file:
local_id	legion_runtime/lowlevel.cc	/^    IDType Memory::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory
local_id	legion_runtime/lowlevel.cc	/^    IDType Processor::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
local_id	legion_runtime/lowlevel.cc	/^    IDType RegionInstance::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
local_id	legion_runtime/shared_lowlevel.cc	/^    IDType Memory::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory
local_id	legion_runtime/shared_lowlevel.cc	/^    IDType Processor::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
local_id	legion_runtime/shared_lowlevel.cc	/^    IDType RegionInstance::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
local_index_space_free_list	legion_runtime/lowlevel_impl.h	/^      IndexSpaceTableAllocator::FreeList *local_index_space_free_list;$/;"	m	class:Runtime
local_instances	legion_runtime/legion_tasks.h	/^                                                    local_instances;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
local_kind	legion_runtime/default_mapper.h	/^      const Processor::Kind local_kind;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
local_mask	legion_runtime/field_tree.h	/^      FieldMask local_mask;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
local_proc	legion_runtime/default_mapper.h	/^      const Processor local_proc;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
local_proc	legion_runtime/region_tree.h	/^      const Processor local_proc;$/;"	m	class:LegionRuntime::HighLevel::ReductionCloser
local_proc	legion_runtime/region_tree.h	/^      const Processor local_proc;$/;"	m	struct:LegionRuntime::HighLevel::MappableInfo
local_proc	legion_runtime/runtime.h	/^      const Processor local_proc;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
local_proc_assignments	legion_runtime/lowlevel_impl.h	/^      std::vector<int> local_proc_assignments;$/;"	m	class:LegionRuntime::LowLevel::ProcessorAssignment
local_proc_group_free_list	legion_runtime/lowlevel_impl.h	/^      ProcessorGroupTableAllocator::FreeList *local_proc_group_free_list;$/;"	m	class:Runtime
local_proc_key	legion_runtime/shared_lowlevel.cc	/^nk_tls_key_t local_proc_key;$/;"	v
local_procs	legion_runtime/runtime.h	/^      const std::set<Processor> local_procs;$/;"	m	class:LegionRuntime::HighLevel::Runtime
local_queue_lock	legion_runtime/runtime.h	/^      Reservation local_queue_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
local_reservation_free_list	legion_runtime/lowlevel_impl.h	/^      ReservationTableAllocator::FreeList *local_reservation_free_list;$/;"	m	class:Runtime
local_scheduler_preconditions	legion_runtime/runtime.h	/^      std::vector<Event> local_scheduler_preconditions;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
local_space	legion_runtime/garbage_collection.h	/^      const AddressSpaceID local_space;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
local_stream	legion_runtime/lowlevel_gpu.cc	/^      CUstream local_stream;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy	file:
local_util_procs	legion_runtime/lowlevel.cc	/^    static std::vector<UtilityProcessor *> local_util_procs;$/;"	m	namespace:LegionRuntime::LowLevel	file:
local_waiters	legion_runtime/lowlevel_impl.h	/^      std::map<Event::gen_t, std::vector<EventWaiter *> > local_waiters; \/\/ set of local threads that are waiting on event (keyed by generation)$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
local_waiters	legion_runtime/lowlevel_impl.h	/^      std::map<unsigned, std::deque<Event> > local_waiters;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
localfunc	lua_src/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
localize_region_requirement	legion_runtime/legion_ops.cc	/^    \/*static*\/ void Operation::localize_region_requirement(RegionRequirement &r)$/;"	f	class:LegionRuntime::HighLevel::Operation
locally_mapped	legion_runtime/legion_tasks.h	/^      bool locally_mapped;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
locally_mapped	legion_runtime/legion_tasks.h	/^      std::vector<bool> locally_mapped;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
localstat	lua_src/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
localtime	nautilus/libccompat.c	/^struct tm *localtime(const time_t *timer)$/;"	f
lock	arch/k1om/xeon_phi.c	/^  spinlock_t lock;$/;"	m	struct:__anon42	file:
lock	legion_runtime/legion.h	/^      Lock lock;$/;"	m	struct:LegionRuntime::HighLevel::LockRequest
lock	legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	class:LegionRuntime::LowLevel::DeferredLockDestruction	file:
lock	legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	class:LegionRuntime::LowLevel::DeferredLockRequest	file:
lock	legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	class:LegionRuntime::LowLevel::DeferredUnlockRequest	file:
lock	legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	struct:LegionRuntime::LowLevel::LockGrantArgs	file:
lock	legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	struct:LegionRuntime::LowLevel::LockReleaseArgs	file:
lock	legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	struct:LegionRuntime::LowLevel::LockRequestArgs	file:
lock	legion_runtime/lowlevel_impl.h	/^      GASNetHSL lock;$/;"	m	class:LegionRuntime::LowLevel::DynamicTable
lock	legion_runtime/lowlevel_impl.h	/^      GASNetHSL lock;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableFreeList
lock	legion_runtime/lowlevel_impl.h	/^      LT lock;$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNodeBase
lock	legion_runtime/lowlevel_impl.h	/^      Reservation::Impl *lock;$/;"	m	class:LegionRuntime::LowLevel::ExclusiveAccess
lock	legion_runtime/lowlevel_impl.h	/^      Reservation::Impl *lock;$/;"	m	class:LegionRuntime::LowLevel::SharedAccess
lock	legion_runtime/lowlevel_impl.h	/^      Reservation::Impl lock;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
lock	legion_runtime/lowlevel_impl.h	/^      Reservation::Impl lock;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
lock	legion_runtime/lowlevel_impl.h	/^      Reservation::Impl lock;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
lock	legion_runtime/lowlevel_impl.h	/^      void lock(void) { gasnet_hsl_lock(&mutex); }$/;"	f	class:LegionRuntime::LowLevel::GASNetHSL
lock	legion_runtime/runtime.h	/^      Reservation lock;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
lock	legion_runtime/utilities.h	/^    void lock(void) {$/;"	f	class:LegionRuntime::ImmovableLock
lock	test/benchmark.c	/^	MUTEX_T lock;$/;"	m	struct:container	file:
lock_id	legion_runtime/lowlevel_impl.h	/^      unsigned time_units, lock_id, owner, action;$/;"	m	struct:LegionRuntime::LowLevel::LockTraceItem
lock_trace_file	legion_runtime/lowlevel.cc	/^    static char *lock_trace_file = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
locked_data	legion_runtime/lowlevel_impl.h	/^      CoherentData locked_data;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
locked_data	legion_runtime/lowlevel_impl.h	/^      } locked_data;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	typeref:struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
log	legion_runtime/legion_logging.cc	/^    void TreeStateLogger::log(const char *fmt, ...)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
log	legion_runtime/legion_spy.cc	/^    void TreeStateLogger::log(const char *fmt, ...)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
log	legion_runtime/utilities.h	/^    static inline void log(LogLevel level, int category, const char *fmt, ...)$/;"	f	class:LegionRuntime::Logger
log	nautilus/libccompat.c	/^double log(double x)$/;"	f
log10	nautilus/libccompat.c	/^double log10(double x)$/;"	f
log_close_operation	legion_runtime/legion_logging.h	/^      static inline void log_close_operation(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_close_operation	legion_runtime/legion_spy.h	/^      static inline void log_close_operation(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_copy_operation	legion_runtime/legion_logging.h	/^      static inline void log_copy_operation(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_copy_operation	legion_runtime/legion_spy.h	/^      static inline void log_copy_operation(IDType src_inst,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_copy_operation	legion_runtime/legion_spy.h	/^      static inline void log_copy_operation(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_deletion_operation	legion_runtime/legion_logging.h	/^      static inline void log_deletion_operation(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_deletion_operation	legion_runtime/legion_spy.h	/^      static inline void log_deletion_operation(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_event_dependence	legion_runtime/legion_logging.h	/^      static inline void log_event_dependence(Processor p, $/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_event_dependence	legion_runtime/legion_spy.h	/^      static inline void log_event_dependence(Event one, Event two)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_event_dependences	legion_runtime/legion_logging.h	/^      static inline void log_event_dependences(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_event_dependences	legion_runtime/legion_spy.h	/^      static inline void log_event_dependences($/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_fence_operation	legion_runtime/legion_logging.h	/^      static inline void log_fence_operation(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_fence_operation	legion_runtime/legion_spy.h	/^      static inline void log_fence_operation(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_field_creation	legion_runtime/legion_logging.h	/^      static inline void log_field_creation(Processor p, FieldSpace handle, $/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_field_creation	legion_runtime/legion_spy.h	/^      static inline void log_field_creation(unsigned unique_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_field_space	legion_runtime/legion_logging.h	/^      static inline void log_field_space(Processor p, FieldSpace handle)$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_field_space	legion_runtime/legion_spy.h	/^      static inline void log_field_space(unsigned unique_id)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_future_nowait	legion_runtime/legion_logging.h	/^      static inline void log_future_nowait(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_future_wait_begin	legion_runtime/legion_logging.h	/^      static inline void log_future_wait_begin(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_future_wait_end	legion_runtime/legion_logging.h	/^      static inline void log_future_wait_end(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_implicit_dependence	legion_runtime/legion_spy.h	/^      static inline void log_implicit_dependence(Event one, Event two)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_index_partition	legion_runtime/legion_logging.h	/^      static inline void log_index_partition(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_index_partition	legion_runtime/legion_spy.h	/^      static inline void log_index_partition(IDType parent_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_index_slice	legion_runtime/legion_logging.h	/^      static inline void log_index_slice(Processor p, UniqueID index_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_index_slice	legion_runtime/legion_spy.h	/^      static inline void log_index_slice(UniqueID index_id, UniqueID slice_id)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_index_space_task	legion_runtime/legion_logging.h	/^      static inline void log_index_space_task(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_index_subspace	legion_runtime/legion_logging.h	/^      static inline void log_index_subspace(Processor p, IndexPartition parent,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_index_subspace	legion_runtime/legion_spy.h	/^      static inline void log_index_subspace(IDType parent_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_index_task	legion_runtime/legion_spy.h	/^      static inline void log_index_task(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_individual_task	legion_runtime/legion_logging.h	/^      static inline void log_individual_task(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_individual_task	legion_runtime/legion_spy.h	/^      static inline void log_individual_task(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_inline_nowait	legion_runtime/legion_logging.h	/^      static inline void log_inline_nowait(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_inline_wait_begin	legion_runtime/legion_logging.h	/^      static inline void log_inline_wait_begin(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_inline_wait_end	legion_runtime/legion_logging.h	/^      static inline void log_inline_wait_end(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_logical_requirement	legion_runtime/legion_logging.h	/^      static inline void log_logical_requirement(Processor p, $/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_logical_requirement	legion_runtime/legion_spy.h	/^      static inline void log_logical_requirement(UniqueID unique_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_lowlevel_copy	legion_runtime/legion_logging.h	/^      static inline void log_lowlevel_copy(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_lowlevel_copy_association	legion_runtime/legion_logging.h	/^      static inline void log_lowlevel_copy_association(Event highlevel_end_event,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_lowlevel_copy_channel	legion_runtime/legion_logging.h	/^      static inline void log_lowlevel_copy_channel(unsigned id, const char* name)$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_machine	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::log_machine(Machine *machine)$/;"	f	class:LegionRuntime::HighLevel::Runtime
log_mapping_dependence	legion_runtime/legion_logging.h	/^      static inline void log_mapping_dependence(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_mapping_dependence	legion_runtime/legion_spy.h	/^      static inline void log_mapping_dependence(UniqueID context, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_mapping_operation	legion_runtime/legion_logging.h	/^      static inline void log_mapping_operation(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_mapping_operation	legion_runtime/legion_spy.h	/^      static inline void log_mapping_operation(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_mem_mem_affinity	legion_runtime/legion_logging.h	/^      static void log_mem_mem_affinity(Memory mem1, Memory mem2,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_mem_mem_affinity	legion_runtime/legion_spy.h	/^      static inline void log_mem_mem_affinity(IDType mem1, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_memory	legion_runtime/legion_logging.h	/^      static void log_memory(Memory mem, Memory::Kind kind,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_memory	legion_runtime/legion_spy.h	/^      static inline void log_memory(IDType unique_id, size_t capacity)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_op_events	legion_runtime/legion_spy.h	/^      static inline void log_op_events(UniqueID uid, Event start_event,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_op_user	legion_runtime/legion_spy.h	/^      static inline void log_op_user(UniqueID user,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_operation_events	legion_runtime/legion_logging.h	/^      static inline void log_operation_events(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_physical_instance	legion_runtime/legion_logging.h	/^      static inline void log_physical_instance(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_physical_instance	legion_runtime/legion_spy.h	/^      static inline void log_physical_instance(IDType inst_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_physical_reduction	legion_runtime/legion_spy.h	/^      static inline void log_physical_reduction(IDType inst_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_physical_user	legion_runtime/legion_logging.h	/^      static inline void log_physical_user(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_point_point	legion_runtime/legion_logging.h	/^      static inline void log_point_point(Processor p, UniqueID orig_point,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_point_point	legion_runtime/legion_spy.h	/^      static inline void log_point_point(UniqueID p1, UniqueID p2)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_proc_mem_affinity	legion_runtime/legion_logging.h	/^      static void log_proc_mem_affinity(Processor proc, Memory mem,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_proc_mem_affinity	legion_runtime/legion_spy.h	/^      static inline void log_proc_mem_affinity(IDType proc_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_processor	legion_runtime/legion_logging.h	/^      static void log_processor(Processor proc, Processor utility,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_processor	legion_runtime/legion_spy.h	/^      static inline void log_processor(IDType unique_id, IDType util_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_requirement	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::log_requirement(UniqueID uid, unsigned idx,$/;"	f	class:LegionRuntime::HighLevel::TaskOp
log_requirement_fields	legion_runtime/legion_spy.h	/^      static inline void log_requirement_fields(UniqueID unique_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_slice_point	legion_runtime/legion_logging.h	/^      static inline void log_slice_point(Processor p, UniqueID slice_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_slice_point	legion_runtime/legion_spy.h	/^      static inline void log_slice_point(UniqueID slice_id, UniqueID point_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_slice_slice	legion_runtime/legion_logging.h	/^      static inline void log_slice_slice(Processor p, UniqueID slice_parent,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_slice_slice	legion_runtime/legion_spy.h	/^      static inline void log_slice_slice(UniqueID slice_one, UniqueID slice_two)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_task_collection	legion_runtime/legion_logging.h	/^      static inline void log_task_collection(Processor::TaskFuncID task_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_task_instance_requirement	legion_runtime/legion_logging.h	/^      static inline void log_task_instance_requirement(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_task_instance_requirement	legion_runtime/legion_spy.h	/^      static inline void log_task_instance_requirement(UniqueID unique_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_task_instance_variant	legion_runtime/legion_logging.h	/^      static inline void log_task_instance_variant(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_task_variant	legion_runtime/legion_logging.h	/^      static inline void log_task_variant(Processor::TaskFuncID task_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_timing_event	legion_runtime/legion_logging.h	/^      static inline void log_timing_event(Processor p, Event event,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_timing_event	legion_runtime/legion_logging.h	/^      static inline void log_timing_event(Processor p, UniqueID unique_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_top_index_space	legion_runtime/legion_logging.h	/^      static inline void log_top_index_space(Processor p, IndexSpace space)$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_top_index_space	legion_runtime/legion_spy.h	/^      static inline void log_top_index_space(IDType unique_id)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_top_level_task	legion_runtime/legion_logging.h	/^      static inline void log_top_level_task(Processor::TaskFuncID task_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_top_level_task	legion_runtime/legion_spy.h	/^      static inline void log_top_level_task(Processor::TaskFuncID task_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_top_region	legion_runtime/legion_logging.h	/^      static inline void log_top_region(Processor p, IndexSpace ispace,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_top_region	legion_runtime/legion_spy.h	/^      static inline void log_top_region(IDType index_space, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_utility_processor	legion_runtime/legion_spy.h	/^      static inline void log_utility_processor(IDType unique_id)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_vc	nautilus/vc.c	/^static struct nk_virtual_console *log_vc = NULL;$/;"	v	typeref:struct:nk_virtual_console	file:
logger_lock	legion_runtime/legion_spy.h	/^      Reservation logger_lock;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
logging_buffer_size	legion_runtime/utilities.h	/^    static const int logging_buffer_size = (1 << 20);$/;"	m	class:LegionRuntime::Logger
logging_region_tree_state	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::logging_region_tree_state = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
logging_region_tree_state	legion_runtime/runtime.h	/^      static bool logging_region_tree_state;$/;"	m	class:LegionRuntime::HighLevel::Runtime
logical_byte_offset	acpi/acpica/aclocal.h	/^	u32 logical_byte_offset;$/;"	m	struct:acpi_parse_obj_asl
logical_fields	legion_runtime/legion_logging.h	/^        const std::set<FieldID> &logical_fields;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgRequirementFields
logical_line_number	acpi/acpica/aclocal.h	/^	u32 logical_line_number;$/;"	m	struct:acpi_parse_obj_asl
logical_logging_only	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::logical_logging_only = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
logical_logging_only	legion_runtime/runtime.h	/^      static bool logical_logging_only;$/;"	m	class:LegionRuntime::HighLevel::Runtime
logical_node	legion_runtime/region_tree.h	/^      RegionTreeNode *const logical_node;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
logical_node	legion_runtime/region_tree.h	/^      RegionTreeNode *const logical_node;$/;"	m	class:LegionRuntime::HighLevel::LogicalView
logical_node	legion_runtime/region_tree.h	/^      RegionTreeNode *const logical_node;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
logical_node	legion_runtime/region_tree.h	/^      RegionTreeNode *const logical_node;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
logical_node	legion_runtime/region_tree.h	/^      RegionTreeNode *const logical_node;$/;"	m	class:LegionRuntime::HighLevel::WARAnalyzer
logical_nodes	legion_runtime/region_tree.h	/^      std::set<PartitionNode*> logical_nodes;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
logical_nodes	legion_runtime/region_tree.h	/^      std::set<RegionNode*> logical_nodes;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
logical_nodes	legion_runtime/region_tree.h	/^      std::set<RegionNode*> logical_nodes;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
logical_only	legion_runtime/legion_spy.h	/^      const bool logical_only;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
logical_part	legion_runtime/legion_ops.h	/^      LogicalPartition logical_part;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
logical_region	legion_runtime/legion.h	/^      LogicalRegion                     logical_region;$/;"	m	class:LegionRuntime::HighLevel::Acquire
logical_region	legion_runtime/legion.h	/^      LogicalRegion                     logical_region;$/;"	m	class:LegionRuntime::HighLevel::Release
logical_region	legion_runtime/legion.h	/^      LogicalRegion                   logical_region;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
logical_region	legion_runtime/legion.h	/^      LogicalRegion                   logical_region;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
logical_region	legion_runtime/legion_ops.h	/^      LogicalRegion logical_region;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
logical_state_size	legion_runtime/region_tree.h	/^      size_t logical_state_size;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
logical_states	legion_runtime/region_tree.h	/^      LegionStack<LogicalState,MAX_CONTEXTS,DEFAULT_CONTEXTS> logical_states;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
logvprintf	legion_runtime/lowlevel.cc	/^  \/*static*\/ void Logger::logvprintf(LogLevel level, int category, const char *fmt, va_list args)$/;"	f	class:LegionRuntime::Logger
logvprintf	legion_runtime/shared_lowlevel.cc	/^  \/*static*\/ void Logger::logvprintf(LogLevel level, int category, const char *fmt, va_list args)$/;"	f	class:LegionRuntime::Logger
lookup_entry	legion_runtime/lowlevel_impl.h	/^    typename DynamicTable<ALLOCATOR>::ET *DynamicTable<ALLOCATOR>::lookup_entry(IT index, int owner, typename ALLOCATOR::FreeList *free_list \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
lookup_lock	legion_runtime/region_tree.h	/^      Reservation lookup_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
loop	asm/thread_lowlevel.S	/^loop:$/;"	l
loop1	asm/excp_early.S	/^loop1:$/;"	l
loop_count	acpi/acpica/aclocal.h	/^	u32 loop_count;		\/* While() loop counter *\/$/;"	m	struct:acpi_control_state
lopcodes_c	lua_src/lopcodes.c	8;"	d	file:
loslib_c	lua_src/loslib.c	16;"	d	file:
low_id	legion_runtime/legion.h	/^        Processor::TaskFuncID low_id;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
low_lock	legion_runtime/legion_utilities.h	/^      Reservation low_lock;$/;"	m	class:LegionRuntime::HighLevel::AutoLock
lower	legion_runtime/rectangle_set.h	/^      Segment<T> *lower, *higher;$/;"	m	struct:LegionRuntime::HighLevel::SplitSegment
lower_targets	legion_runtime/region_tree.h	/^      std::vector<MaterializedView*> lower_targets;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
lower_x	legion_runtime/rectangle_set.h	/^      T lower_x, lower_y, higher_x, higher_y;$/;"	m	struct:LegionRuntime::HighLevel::RebuildRect
lower_y	legion_runtime/rectangle_set.h	/^      T lower_x, lower_y, higher_x, higher_y;$/;"	m	struct:LegionRuntime::HighLevel::RebuildRect
lowlevel_end_event	legion_runtime/legion_logging.h	/^        Event lowlevel_end_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyAssoc
lowlevel_kind	legion_runtime/lowlevel_impl.h	/^      Kind lowlevel_kind;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
lp	test/hpcg/vector.h	/^    lp(size_t index = 0) const$/;"	f	struct:lgncg::Vector
lparser_c	lua_src/lparser.c	11;"	d	file:
lptr	legion_runtime/lowlevel.h	/^	void *lptr;$/;"	m	class:LegionRuntime::LowLevel::DomainLinearization
lr	test/hpcg/vector.h	/^    LegionRuntime::HighLevel::LogicalRegion lr;$/;"	m	struct:lgncg::Vector
lrand48	nautilus/libccompat.c	/^lrand48 (void)$/;"	f
lseek64	nautilus/libccompat.c	/^uint64_t lseek64 (int fd, uint64_t offset, int whence)$/;"	f
lstate_c	lua_src/lstate.c	11;"	d	file:
lstate_c	lua_src/lua_open.c	11;"	d	file:
lstop	lua_src/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:
lstring_c	lua_src/lstring.c	10;"	d	file:
lstrlib_c	lua_src/lstrlib.c	14;"	d	file:
ltable_c	lua_src/ltable.c	23;"	d	file:
ltablib_c	lua_src/ltablib.c	11;"	d	file:
ltm_c	lua_src/ltm.c	10;"	d	file:
luaB_assert	lua_src/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	lua_src/lcorolib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_cocreate	lua_src/lcorolib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	lua_src/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	lua_src/lcorolib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	lua_src/lcorolib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	lua_src/lcorolib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	lua_src/lcorolib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	lua_src/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	lua_src/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_getmetatable	lua_src/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	lua_src/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	lua_src/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	lua_src/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_next	lua_src/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_pairs	lua_src/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	lua_src/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	lua_src/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	lua_src/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	lua_src/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawlen	lua_src/lbaselib.c	/^static int luaB_rawlen (lua_State *L) {$/;"	f	file:
luaB_rawset	lua_src/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	lua_src/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setmetatable	lua_src/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	lua_src/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	lua_src/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	lua_src/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_xpcall	lua_src/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	lua_src/lcorolib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaC_barrier_	lua_src/lgc.c	/^void luaC_barrier_ (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_barrierback_	lua_src/lgc.c	/^void luaC_barrierback_ (lua_State *L, GCObject *o) {$/;"	f
luaC_barrierproto_	lua_src/lgc.c	/^LUAI_FUNC void luaC_barrierproto_ (lua_State *L, Proto *p, Closure *c) {$/;"	f
luaC_changemode	lua_src/lgc.c	/^void luaC_changemode (lua_State *L, int mode) {$/;"	f
luaC_checkfinalizer	lua_src/lgc.c	/^void luaC_checkfinalizer (lua_State *L, GCObject *o, Table *mt) {$/;"	f
luaC_checkupvalcolor	lua_src/lgc.c	/^void luaC_checkupvalcolor (global_State *g, UpVal *uv) {$/;"	f
luaC_forcestep	lua_src/lgc.c	/^void luaC_forcestep (lua_State *L) {$/;"	f
luaC_freeallobjects	lua_src/lgc.c	/^void luaC_freeallobjects (lua_State *L) {$/;"	f
luaC_fullgc	lua_src/lgc.c	/^void luaC_fullgc (lua_State *L, int isemergency) {$/;"	f
luaC_newobj	lua_src/lgc.c	/^GCObject *luaC_newobj (lua_State *L, int tt, size_t sz, GCObject **list,$/;"	f
luaC_runtilstate	lua_src/lgc.c	/^void luaC_runtilstate (lua_State *L, int statesmask) {$/;"	f
luaC_step	lua_src/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaD_call	lua_src/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults, int allowyield) {$/;"	f
luaD_growstack	lua_src/ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f
luaD_hook	lua_src/ldo.c	/^void luaD_hook (lua_State *L, int event, int line) {$/;"	f
luaD_pcall	lua_src/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	lua_src/ldo.c	/^int luaD_poscall (lua_State *L, StkId firstResult) {$/;"	f
luaD_precall	lua_src/ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_protectedparser	lua_src/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name,$/;"	f
luaD_rawrunprotected	lua_src/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocstack	lua_src/ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f
luaD_shrinkstack	lua_src/ldo.c	/^void luaD_shrinkstack (lua_State *L) {$/;"	f
luaD_throw	lua_src/ldo.c	/^l_noret luaD_throw (lua_State *L, int errcode) {$/;"	f
luaE_extendCI	lua_src/lstate.c	/^CallInfo *luaE_extendCI (lua_State *L) {$/;"	f
luaE_freeCI	lua_src/lstate.c	/^void luaE_freeCI (lua_State *L) {$/;"	f
luaE_freethread	lua_src/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_setdebt	lua_src/lstate.c	/^void luaE_setdebt (global_State *g, l_mem debt) {$/;"	f
luaF_close	lua_src/lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f
luaF_findupval	lua_src/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeproto	lua_src/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_freeupval	lua_src/lfunc.c	/^void luaF_freeupval (lua_State *L, UpVal *uv) {$/;"	f
luaF_getlocalname	lua_src/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_newCclosure	lua_src/lfunc.c	/^Closure *luaF_newCclosure (lua_State *L, int n) {$/;"	f
luaF_newLclosure	lua_src/lfunc.c	/^Closure *luaF_newLclosure (lua_State *L, int n) {$/;"	f
luaF_newproto	lua_src/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaF_newupval	lua_src/lfunc.c	/^UpVal *luaF_newupval (lua_State *L) {$/;"	f
luaG_aritherror	lua_src/ldebug.c	/^l_noret luaG_aritherror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_concaterror	lua_src/ldebug.c	/^l_noret luaG_concaterror (lua_State *L, StkId p1, StkId p2) {$/;"	f
luaG_errormsg	lua_src/ldebug.c	/^l_noret luaG_errormsg (lua_State *L) {$/;"	f
luaG_ordererror	lua_src/ldebug.c	/^l_noret luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	lua_src/ldebug.c	/^l_noret luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_typeerror	lua_src/ldebug.c	/^l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_free	lua_src/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	lua_src/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getint	lua_src/ltable.c	/^const TValue *luaH_getint (Table *t, int key) {$/;"	f
luaH_getn	lua_src/ltable.c	/^int luaH_getn (Table *t) {$/;"	f
luaH_getstr	lua_src/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_isdummy	lua_src/ltable.c	/^int luaH_isdummy (Node *n) { return isdummy(n); }$/;"	f
luaH_mainposition	lua_src/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	lua_src/ltable.c	/^Table *luaH_new (lua_State *L) {$/;"	f
luaH_newkey	lua_src/ltable.c	/^TValue *luaH_newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_next	lua_src/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_resize	lua_src/ltable.c	/^void luaH_resize (lua_State *L, Table *t, int nasize, int nhsize) {$/;"	f
luaH_resizearray	lua_src/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, int nasize) {$/;"	f
luaH_set	lua_src/ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_setint	lua_src/ltable.c	/^void luaH_setint (lua_State *L, Table *t, int key, TValue *value) {$/;"	f
luaK_checkstack	lua_src/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	lua_src/lcode.c	/^static int luaK_code (FuncState *fs, Instruction i) {$/;"	f	file:
luaK_codeABC	lua_src/lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f
luaK_codeABx	lua_src/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_codek	lua_src/lcode.c	/^int luaK_codek (FuncState *fs, int reg, int k) {$/;"	f
luaK_concat	lua_src/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	lua_src/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2RK	lua_src/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	lua_src/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyregup	lua_src/lcode.c	/^void luaK_exp2anyregup (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2nextreg	lua_src/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	lua_src/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_fixline	lua_src/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_getlabel	lua_src/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	lua_src/lcode.c	/^void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f
luaK_goiftrue	lua_src/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	lua_src/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	lua_src/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_jump	lua_src/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_nil	lua_src/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	lua_src/lcode.c	/^int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f
luaK_patchclose	lua_src/lcode.c	/^LUAI_FUNC void luaK_patchclose (FuncState *fs, int list, int level) {$/;"	f
luaK_patchlist	lua_src/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	lua_src/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	lua_src/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op,$/;"	f
luaK_prefix	lua_src/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {$/;"	f
luaK_reserveregs	lua_src/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	lua_src/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	lua_src/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_setlist	lua_src/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setoneret	lua_src/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	lua_src/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_storevar	lua_src/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaK_stringK	lua_src/lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f
luaL_addlstring	lua_src/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addstring	lua_src/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	lua_src/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argerror	lua_src/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int narg, const char *extramsg) {$/;"	f
luaL_buffinit	lua_src/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_buffinitsize	lua_src/lauxlib.c	/^LUALIB_API char *luaL_buffinitsize (lua_State *L, luaL_Buffer *B, size_t sz) {$/;"	f
luaL_callmeta	lua_src/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	lua_src/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int narg) {$/;"	f
luaL_checkinteger	lua_src/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int narg) {$/;"	f
luaL_checklstring	lua_src/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {$/;"	f
luaL_checknumber	lua_src/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int narg) {$/;"	f
luaL_checkoption	lua_src/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int narg, const char *def,$/;"	f
luaL_checkstack	lua_src/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *msg) {$/;"	f
luaL_checktype	lua_src/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int narg, int t) {$/;"	f
luaL_checkudata	lua_src/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_checkunsigned	lua_src/lauxlib.c	/^LUALIB_API lua_Unsigned luaL_checkunsigned (lua_State *L, int narg) {$/;"	f
luaL_checkversion_	lua_src/lauxlib.c	/^LUALIB_API void luaL_checkversion_ (lua_State *L, lua_Number ver) {$/;"	f
luaL_error	lua_src/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_execresult	lua_src/lauxlib.c	/^LUALIB_API int luaL_execresult (lua_State *L, int stat) {$/;"	f
luaL_fileresult	lua_src/lauxlib.c	/^LUALIB_API int luaL_fileresult (lua_State *L, int stat, const char *fname) {$/;"	f
luaL_findtable	lua_src/lauxlib.c	/^static const char *luaL_findtable (lua_State *L, int idx,$/;"	f	file:
luaL_getmetafield	lua_src/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getsubtable	lua_src/lauxlib.c	/^LUALIB_API int luaL_getsubtable (lua_State *L, int idx, const char *fname) {$/;"	f
luaL_gsub	lua_src/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f
luaL_len	lua_src/lauxlib.c	/^LUALIB_API int luaL_len (lua_State *L, int idx) {$/;"	f
luaL_loadbufferx	lua_src/lauxlib.c	/^LUALIB_API int luaL_loadbufferx (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfilex	lua_src/lauxlib.c	/^LUALIB_API int luaL_loadfilex (lua_State *L, const char *filename,$/;"	f
luaL_loadstring	lua_src/lauxlib.c	/^LUALIB_API int luaL_loadstring (lua_State *L, const char *s) {$/;"	f
luaL_newmetatable	lua_src/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	lua_src/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_openlib	lua_src/lauxlib.c	/^LUALIB_API void luaL_openlib (lua_State *L, const char *libname,$/;"	f
luaL_openlibs	lua_src/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_optinteger	lua_src/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int narg,$/;"	f
luaL_optlstring	lua_src/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,$/;"	f
luaL_optnumber	lua_src/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int narg, lua_Number def) {$/;"	f
luaL_optunsigned	lua_src/lauxlib.c	/^LUALIB_API lua_Unsigned luaL_optunsigned (lua_State *L, int narg,$/;"	f
luaL_prepbuffsize	lua_src/lauxlib.c	/^LUALIB_API char *luaL_prepbuffsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_pushmodule	lua_src/lauxlib.c	/^LUALIB_API void luaL_pushmodule (lua_State *L, const char *modname,$/;"	f
luaL_pushresult	lua_src/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_pushresultsize	lua_src/lauxlib.c	/^LUALIB_API void luaL_pushresultsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_ref	lua_src/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_requiref	lua_src/lauxlib.c	/^LUALIB_API void luaL_requiref (lua_State *L, const char *modname,$/;"	f
luaL_setfuncs	lua_src/lauxlib.c	/^LUALIB_API void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {$/;"	f
luaL_setmetatable	lua_src/lauxlib.c	/^LUALIB_API void luaL_setmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_testudata	lua_src/lauxlib.c	/^LUALIB_API void *luaL_testudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_tolstring	lua_src/lauxlib.c	/^LUALIB_API const char *luaL_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
luaL_traceback	lua_src/lauxlib.c	/^LUALIB_API void luaL_traceback (lua_State *L, lua_State *L1,$/;"	f
luaL_unref	lua_src/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	lua_src/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaM_growaux_	lua_src/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f
luaM_realloc_	lua_src/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_toobig	lua_src/lmem.c	/^l_noret luaM_toobig (lua_State *L) {$/;"	f
luaO_arith	lua_src/lobject.c	/^lua_Number luaO_arith (int op, lua_Number v1, lua_Number v2) {$/;"	f
luaO_ceillog2	lua_src/lobject.c	/^int luaO_ceillog2 (unsigned int x) {$/;"	f
luaO_chunkid	lua_src/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f
luaO_fb2int	lua_src/lobject.c	/^int luaO_fb2int (int x) {$/;"	f
luaO_hexavalue	lua_src/lobject.c	/^int luaO_hexavalue (int c) {$/;"	f
luaO_int2fb	lua_src/lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f
luaO_nilobject_	lua_src/lobject.c	/^LUAI_DDEF const TValue luaO_nilobject_ = {NILCONSTANT};$/;"	v
luaO_pushfstring	lua_src/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	lua_src/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_str2d	lua_src/lobject.c	/^int luaO_str2d (const char *s, size_t len, lua_Number *result) {$/;"	f
luaP_opmodes	lua_src/lopcodes.c	/^LUAI_DDEF const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaP_opnames	lua_src/lopcodes.c	/^LUAI_DDEF const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v
luaS_eqlngstr	lua_src/lstring.c	/^int luaS_eqlngstr (TString *a, TString *b) {$/;"	f
luaS_eqstr	lua_src/lstring.c	/^int luaS_eqstr (TString *a, TString *b) {$/;"	f
luaS_hash	lua_src/lstring.c	/^unsigned int luaS_hash (const char *str, size_t l, unsigned int seed) {$/;"	f
luaS_new	lua_src/lstring.c	/^TString *luaS_new (lua_State *L, const char *str) {$/;"	f
luaS_newlstr	lua_src/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	lua_src/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s, Table *e) {$/;"	f
luaS_resize	lua_src/lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f
luaT_gettm	lua_src/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	lua_src/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_init	lua_src/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_typenames_	lua_src/ltm.c	/^LUAI_DDEF const char *const luaT_typenames_[LUA_TOTALTAGS] = {$/;"	v
luaU_dump	lua_src/ldump.c	/^int luaU_dump (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)$/;"	f
luaU_header	lua_src/lundump.c	/^void luaU_header (lu_byte* h)$/;"	f
luaU_undump	lua_src/lundump.c	/^Closure* luaU_undump (lua_State* L, ZIO* Z, Mbuffer* buff, const char* name)$/;"	f
luaV_arith	lua_src/lvm.c	/^void luaV_arith (lua_State *L, StkId ra, const TValue *rb,$/;"	f
luaV_concat	lua_src/lvm.c	/^void luaV_concat (lua_State *L, int total) {$/;"	f
luaV_equalobj_	lua_src/lvm.c	/^int luaV_equalobj_ (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	lua_src/lvm.c	/^void luaV_execute (lua_State *L) {$/;"	f
luaV_finishOp	lua_src/lvm.c	/^void luaV_finishOp (lua_State *L) {$/;"	f
luaV_gettable	lua_src/lvm.c	/^void luaV_gettable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_lessequal	lua_src/lvm.c	/^int luaV_lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_lessthan	lua_src/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_objlen	lua_src/lvm.c	/^void luaV_objlen (lua_State *L, StkId ra, const TValue *rb) {$/;"	f
luaV_settable	lua_src/lvm.c	/^void luaV_settable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_tonumber	lua_src/lvm.c	/^const TValue *luaV_tonumber (const TValue *obj, TValue *n) {$/;"	f
luaV_tostring	lua_src/lvm.c	/^int luaV_tostring (lua_State *L, StkId obj) {$/;"	f
luaX_init	lua_src/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lookahead	lua_src/llex.c	/^int luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	lua_src/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	lua_src/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	lua_src/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source,$/;"	f
luaX_syntaxerror	lua_src/llex.c	/^l_noret luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	lua_src/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	lua_src/llex.c	/^static const char *const luaX_tokens [] = {$/;"	v	file:
luaY_parser	lua_src/lparser.c	/^Closure *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff,$/;"	f
luaZ_fill	lua_src/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_init	lua_src/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_openspace	lua_src/lzio.c	/^char *luaZ_openspace (lua_State *L, Mbuffer *buff, size_t n) {$/;"	f
luaZ_read	lua_src/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
lua_absindex	lua_src/lapi.c	/^LUA_API int lua_absindex (lua_State *L, int idx) {$/;"	f
lua_arith	lua_src/lapi.c	/^LUA_API void lua_arith (lua_State *L, int op) {$/;"	f
lua_atpanic	lua_src/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_c	lua_src/lua.c	13;"	d	file:
lua_callk	lua_src/lapi.c	/^LUA_API void lua_callk (lua_State *L, int nargs, int nresults, int ctx,$/;"	f
lua_checkmode	lua_src/liolib.c	42;"	d	file:
lua_checkstack	lua_src/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int size) {$/;"	f
lua_close	lua_src/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_compare	lua_src/lapi.c	/^LUA_API int lua_compare (lua_State *L, int index1, int index2, int op) {$/;"	f
lua_concat	lua_src/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_copy	lua_src/lapi.c	/^LUA_API void lua_copy (lua_State *L, int fromidx, int toidx) {$/;"	f
lua_createtable	lua_src/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_dump	lua_src/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data) {$/;"	f
lua_error	lua_src/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_freeline	lua_src/lua.c	74;"	d	file:
lua_freeline	lua_src/lua.c	82;"	d	file:
lua_gc	lua_src/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f
lua_getallocf	lua_src/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getctx	lua_src/lapi.c	/^LUA_API int lua_getctx (lua_State *L, int *ctx) {$/;"	f
lua_getfield	lua_src/lapi.c	/^LUA_API void lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_getglobal	lua_src/lapi.c	/^LUA_API void lua_getglobal (lua_State *L, const char *var) {$/;"	f
lua_gethook	lua_src/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	lua_src/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	lua_src/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_getinfo	lua_src/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getlocal	lua_src/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getmetatable	lua_src/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getstack	lua_src/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	lua_src/lapi.c	/^LUA_API void lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	lua_src/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	lua_src/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_getuservalue	lua_src/lapi.c	/^LUA_API void lua_getuservalue (lua_State *L, int idx) {$/;"	f
lua_ident	lua_src/lapi.c	/^const char lua_ident[] =$/;"	v
lua_insert	lua_src/lapi.c	/^LUA_API void lua_insert (lua_State *L, int idx) {$/;"	f
lua_iscfunction	lua_src/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isnumber	lua_src/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	lua_src/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_isuserdata	lua_src/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_len	lua_src/lapi.c	/^LUA_API void lua_len (lua_State *L, int idx) {$/;"	f
lua_load	lua_src/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_longjmp	lua_src/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_main	lua_src/lua.c	/^int lua_main (int argc, char **argv) {$/;"	f
lua_newstate	lua_src/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newstate	lua_src/lua_open.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newthread	lua_src/lstate.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	lua_src/lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f
lua_next	lua_src/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_panic	lua_src/lauxlib.c	/^static int lua_panic (lua_State *L) {$/;"	f	file:
lua_pcallk	lua_src/lapi.c	/^LUA_API int lua_pcallk (lua_State *L, int nargs, int nresults, int errfunc,$/;"	f
lua_pclose	lua_src/liolib.c	62;"	d	file:
lua_pclose	lua_src/liolib.c	67;"	d	file:
lua_pclose	lua_src/liolib.c	74;"	d	file:
lua_popen	lua_src/liolib.c	61;"	d	file:
lua_popen	lua_src/liolib.c	66;"	d	file:
lua_popen	lua_src/liolib.c	72;"	d	file:
lua_pushboolean	lua_src/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	lua_src/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushfstring	lua_src/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushinteger	lua_src/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	lua_src/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushlstring	lua_src/lapi.c	/^LUA_API const char *lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	lua_src/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	lua_src/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	lua_src/lapi.c	/^LUA_API const char *lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	lua_src/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushunsigned	lua_src/lapi.c	/^LUA_API void lua_pushunsigned (lua_State *L, lua_Unsigned u) {$/;"	f
lua_pushvalue	lua_src/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	lua_src/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_rawequal	lua_src/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	lua_src/lapi.c	/^LUA_API void lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	lua_src/lapi.c	/^LUA_API void lua_rawgeti (lua_State *L, int idx, int n) {$/;"	f
lua_rawgetp	lua_src/lapi.c	/^LUA_API void lua_rawgetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_rawlen	lua_src/lapi.c	/^LUA_API size_t lua_rawlen (lua_State *L, int idx) {$/;"	f
lua_rawset	lua_src/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	lua_src/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, int n) {$/;"	f
lua_rawsetp	lua_src/lapi.c	/^LUA_API void lua_rawsetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_readline	lua_src/lua.c	70;"	d	file:
lua_readline	lua_src/lua.c	78;"	d	file:
lua_remove	lua_src/lapi.c	/^LUA_API void lua_remove (lua_State *L, int idx) {$/;"	f
lua_replace	lua_src/lapi.c	/^LUA_API void lua_replace (lua_State *L, int idx) {$/;"	f
lua_resume	lua_src/ldo.c	/^LUA_API int lua_resume (lua_State *L, lua_State *from, int nargs) {$/;"	f
lua_saveline	lua_src/lua.c	71;"	d	file:
lua_saveline	lua_src/lua.c	81;"	d	file:
lua_setallocf	lua_src/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setfield	lua_src/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_setglobal	lua_src/lapi.c	/^LUA_API void lua_setglobal (lua_State *L, const char *var) {$/;"	f
lua_sethook	lua_src/ldebug.c	/^LUA_API int lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_setlocal	lua_src/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	lua_src/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	lua_src/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	lua_src/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	lua_src/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_setuservalue	lua_src/lapi.c	/^LUA_API void lua_setuservalue (lua_State *L, int idx) {$/;"	f
lua_status	lua_src/lapi.c	/^LUA_API int lua_status (lua_State *L) {$/;"	f
lua_stdin_is_tty	lua_src/lua.c	49;"	d	file:
lua_stdin_is_tty	lua_src/lua.c	53;"	d	file:
lua_stdin_is_tty	lua_src/lua.c	55;"	d	file:
lua_strx2number	lua_src/lobject.c	/^static lua_Number lua_strx2number (const char *s, char **endptr) {$/;"	f	file:
lua_tmpnam	lua_src/loslib.c	52;"	d	file:
lua_tmpnam	lua_src/loslib.c	61;"	d	file:
lua_toboolean	lua_src/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	lua_src/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_tointegerx	lua_src/lapi.c	/^LUA_API lua_Integer lua_tointegerx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_tolstring	lua_src/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumberx	lua_src/lapi.c	/^LUA_API lua_Number lua_tonumberx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_topointer	lua_src/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tothread	lua_src/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_tounsignedx	lua_src/lapi.c	/^LUA_API lua_Unsigned lua_tounsignedx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_touserdata	lua_src/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	lua_src/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	lua_src/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_upvalueid	lua_src/lapi.c	/^LUA_API void *lua_upvalueid (lua_State *L, int fidx, int n) {$/;"	f
lua_upvaluejoin	lua_src/lapi.c	/^LUA_API void lua_upvaluejoin (lua_State *L, int fidx1, int n1,$/;"	f
lua_version	lua_src/lapi.c	/^LUA_API const lua_Number *lua_version (lua_State *L) {$/;"	f
lua_xmove	lua_src/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yieldk	lua_src/ldo.c	/^LUA_API int lua_yieldk (lua_State *L, int nresults, int ctx, lua_CFunction k) {$/;"	f
luai_ctype_	lua_src/lctype.c	/^LUAI_DDEF const lu_byte luai_ctype_[UCHAR_MAX + 2] = {$/;"	v
luai_jmpbuf	lua_src/ldo.c	58;"	d	file:
luai_jmpbuf	lua_src/ldo.c	65;"	d	file:
luai_jmpbuf	lua_src/ldo.c	72;"	d	file:
luai_makeseed	lua_src/lstate.c	51;"	d	file:
luai_runtimecheck	lua_src/lvm.c	485;"	d	file:
luai_verifycode	lua_src/lundump.c	42;"	d	file:
luaopen_base	lua_src/lbaselib.c	/^LUAMOD_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_bit32	lua_src/lbitlib.c	/^LUAMOD_API int luaopen_bit32 (lua_State *L) {$/;"	f
luaopen_coroutine	lua_src/lcorolib.c	/^LUAMOD_API int luaopen_coroutine (lua_State *L) {$/;"	f
luaopen_debug	lua_src/ldblib.c	/^LUAMOD_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	lua_src/liolib.c	/^LUAMOD_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_math	lua_src/lmathlib.c	/^LUAMOD_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_os	lua_src/loslib.c	/^LUAMOD_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	lua_src/loadlib.c	/^LUAMOD_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_string	lua_src/lstrlib.c	/^LUAMOD_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_table	lua_src/ltablib.c	/^LUAMOD_API int luaopen_table (lua_State *L) {$/;"	f
lundump_c	lua_src/lundump.c	9;"	d	file:
lvm_c	lua_src/lvm.c	12;"	d	file:
lvt_stringify	dev/apic.c	/^lvt_stringify (uint32_t entry, char *buf)$/;"	f	file:
lzio_c	lua_src/lzio.c	10;"	d	file:
m	legion_runtime/lowlevel.cc	/^      Machine *m;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
m	legion_runtime/lowlevel.cc	/^      Memory m;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceArgs	file:
m	legion_runtime/lowlevel.cc	/^      Memory m;$/;"	m	struct:LegionRuntime::LowLevel::DestroyInstanceArgs	file:
m	legion_runtime/lowlevel.h	/^	Memory m;$/;"	m	struct:LegionRuntime::LowLevel::Machine::ProcessorMemoryAffinity
m	legion_runtime/shared_lowlevel.cc	/^      Machine *m;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
m1	legion_runtime/lowlevel.h	/^	Memory m1, m2;$/;"	m	struct:LegionRuntime::LowLevel::Machine::MemoryMemoryAffinity
m2	legion_runtime/lowlevel.h	/^	Memory m1, m2;$/;"	m	struct:LegionRuntime::LowLevel::Machine::MemoryMemoryAffinity
mIdxs	test/hpcg/sparsemat.h	/^    Vector mIdxs;$/;"	m	struct:lgncg::SparseMatrix
mac_address_string	nautilus/printk.c	/^static char *mac_address_string(char *buf, char *end, uint8_t *addr,$/;"	f	file:
machine	legion_runtime/default_mapper.h	/^      Machine *const machine;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
machine	legion_runtime/mapping_utilities.h	/^        Machine *const machine;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
machine	legion_runtime/runtime.h	/^      Machine *const machine;$/;"	m	class:LegionRuntime::HighLevel::Runtime
machine	legion_runtime/shared_lowlevel.cc	/^      Machine *machine;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
machine_interface	legion_runtime/default_mapper.h	/^      MappingUtilities::MachineQueryInterface machine_interface;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
main	arch/hrt/main.c	/^main (unsigned long mbd, $/;"	f
main	arch/k1om/main.c	/^main (unsigned long mbd, unsigned long magic) $/;"	f
main	arch/x64/main.c	/^main (unsigned long mbd, $/;"	f
main	test/benchmark.c	/^int main () {$/;"	f
mainTask	test/hpcg/hpcg-main.cc	/^mainTask(const lrthl::Task *task,$/;"	f	namespace:__anon37
main_task	test/saxpy_array.cc	/^void main_task(const void *args, size_t arglen,$/;"	f
main_thread_gate	acpi/acpica/aclocal.h	/^	acpi_handle main_thread_gate;$/;"	m	struct:acpi_db_method_info
mainfunc	lua_src/lparser.c	/^static void mainfunc (LexState *ls, FuncState *fs) {$/;"	f	file:
mainposition	lua_src/ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	file:
make_persistent	legion_runtime/legion.h	/^      bool make_persistent;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
make_persistent	legion_runtime/region_tree.cc	/^    void InstanceManager::make_persistent(AddressSpaceID origin)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
make_persistent	legion_runtime/region_tree.cc	/^    void MaterializedView::make_persistent(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
make_point	legion_runtime/arrays.h	/^    inline Point<1> make_point(int x)$/;"	f	namespace:LegionRuntime::Arrays
make_point	legion_runtime/arrays.h	/^    inline Point<2> make_point(int x, int y)$/;"	f	namespace:LegionRuntime::Arrays
make_point	legion_runtime/arrays.h	/^    inline Point<3> make_point(int x, int y, int z)$/;"	f	namespace:LegionRuntime::Arrays
makemask	lua_src/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makeseed	lua_src/lstate.c	/^static unsigned int makeseed (lua_State *L) {$/;"	f	file:
makewhite	lua_src/lgc.c	59;"	d	file:
malloc	nautilus/mm/kmem.c	/^malloc (size_t size)$/;"	f
malloc_test	test/benchmark.c	/^malloc_test (void)$/;"	f
manager	legion_runtime/region_tree.h	/^      InstanceManager *const manager;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
manager	legion_runtime/region_tree.h	/^      ReductionManager *const manager;$/;"	m	class:LegionRuntime::HighLevel::ReductionView
manager	legion_runtime/runtime.h	/^        ProcessorManager *manager;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::DeferredTriggerArgs
manager	legion_runtime/runtime.h	/^        ProcessorManager *manager;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerOpArgs
manager	legion_runtime/runtime.h	/^        ProcessorManager *manager;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerTaskArgs
manager_lock	legion_runtime/runtime.h	/^      Reservation manager_lock;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
managers	legion_runtime/region_tree.h	/^                     PHYSICAL_MANAGER_ALLOC>::map managers;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
mantissa0	nautilus/libccompat.c	/^        uint32_t mantissa0 : 20;$/;"	m	struct:ieee754dbl::__anon44	file:
mantissa1	nautilus/libccompat.c	/^        uint32_t mantissa1 : 32;$/;"	m	struct:ieee754dbl::__anon44	file:
map	legion_runtime/legion_allocation.h	/^                       LegionAllocator<std::pair<const T1, T2>, A> > map;$/;"	t	struct:LegionRuntime::HighLevel::LegionKeyValue
map_all_regions	legion_runtime/legion.cc	/^    void HighLevelRuntime::map_all_regions(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
map_all_regions	legion_runtime/legion_tasks.cc	/^    bool SingleTask::map_all_regions(Processor target, Event user_event,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
map_all_regions	legion_runtime/runtime.cc	/^    void Runtime::map_all_regions(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
map_and_launch	legion_runtime/legion_tasks.cc	/^    bool IndexTask::map_and_launch(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
map_and_launch	legion_runtime/legion_tasks.cc	/^    bool SliceTask::map_and_launch(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
map_copy	legion_runtime/default_mapper.cc	/^    bool DefaultMapper::map_copy(Copy *copy)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
map_copy	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_copy(Copy *copy)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_copy	test/hpcg/cg-mapper.h	/^CGMapper::map_copy(LegionRuntime::HighLevel::Copy *copy)$/;"	f	class:CGMapper
map_id	legion_runtime/legion.h	/^      MapperID                            map_id;$/;"	m	class:LegionRuntime::HighLevel::Mappable
map_id	legion_runtime/legion.h	/^      MapperID                           map_id;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
map_id	legion_runtime/legion.h	/^      MapperID                           map_id;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
map_id	legion_runtime/legion.h	/^      MapperID                        map_id;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
map_id	legion_runtime/legion.h	/^      MapperID                        map_id;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
map_id	legion_runtime/legion.h	/^      MapperID                        map_id;$/;"	m	struct:LegionRuntime::HighLevel::InlineLauncher
map_id	legion_runtime/legion.h	/^      MapperID                        map_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochLauncher
map_id	legion_runtime/legion.h	/^      MapperID                        map_id;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
map_id	legion_runtime/runtime.h	/^        MapperID map_id;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::MapperInfo
map_id	legion_runtime/runtime.h	/^      const MapperID map_id;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
map_inline	legion_runtime/default_mapper.cc	/^    bool DefaultMapper::map_inline(Inline *inline_op)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
map_inline	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_inline(Inline *inline_op)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_inline	test/circuit_mapper.cc	/^bool CircuitMapper::map_inline(Inline *inline_operation)$/;"	f	class:CircuitMapper
map_inline	test/hpcg/cg-mapper.h	/^CGMapper::map_inline(LegionRuntime::HighLevel::Inline *inline_operation) {$/;"	f	class:CGMapper
map_locally	legion_runtime/legion.h	/^      bool                                map_locally;$/;"	m	class:LegionRuntime::HighLevel::Task
map_must_epoch	legion_runtime/default_mapper.cc	/^    bool DefaultMapper::map_must_epoch(const std::vector<Task*> &tasks,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
map_op_lock	legion_runtime/runtime.h	/^      Reservation map_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
map_physical_region	legion_runtime/region_tree.cc	/^    MappingRef RegionTreeForest::map_physical_region(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
map_physical_region	legion_runtime/region_tree.cc	/^    bool MappingTraverser::map_physical_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
map_reduction_region	legion_runtime/region_tree.cc	/^    bool MappingTraverser::map_reduction_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
map_region	legion_runtime/legion.cc	/^    PhysicalRegion HighLevelRuntime::map_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
map_region	legion_runtime/legion.cc	/^    PhysicalRegion HighLevelRuntime::map_region(Context ctx, unsigned idx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
map_region	legion_runtime/runtime.cc	/^    PhysicalRegion Runtime::map_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
map_region	legion_runtime/runtime.cc	/^    PhysicalRegion Runtime::map_region(Context ctx, unsigned idx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
map_region_virtually	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_region_virtually(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_task	legion_runtime/default_mapper.cc	/^    bool DefaultMapper::map_task(Task *task)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
map_task	legion_runtime/legion_ops.cc	/^    void MustEpochMapper::map_task(SingleTask *task)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
map_task	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_task(Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_task	test/circuit_mapper.cc	/^bool CircuitMapper::map_task(Task *task)$/;"	f	class:CircuitMapper
map_task	test/custom_mapper.cc	/^bool AdversarialMapper::map_task(Task *task)$/;"	f	class:AdversarialMapper
map_task	test/hpcg/cg-mapper.h	/^CGMapper::map_task(LegionRuntime::HighLevel::Task *task)$/;"	f	class:CGMapper
map_task_locally	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_task_locally(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_task_region	legion_runtime/alt_mappers.cc	/^    bool DebugMapper::map_task_region(const Task *task, Processor target, $/;"	f	class:LegionRuntime::HighLevel::DebugMapper
map_task_region	legion_runtime/alt_mappers.cc	/^    bool SequoiaMapper::map_task_region(const Task *task, Processor target, $/;"	f	class:LegionRuntime::HighLevel::SequoiaMapper
map_task_region	legion_runtime/alt_mappers.cc	/^    bool SharedMapper::map_task_region(const Task *task, Processor target, $/;"	f	class:LegionRuntime::HighLevel::SharedMapper
map_task_region	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_task_region(const Task *task, Processor target, $/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_tasks	legion_runtime/legion_ops.cc	/^    bool MustEpochMapper::map_tasks(const std::set<SingleTask*> &single_tasks)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
map_to_gpus	test/circuit_mapper.h	/^  bool map_to_gpus;$/;"	m	class:CircuitMapper
mappable	legion_runtime/region_tree.h	/^      Mappable *const mappable;$/;"	m	struct:LegionRuntime::HighLevel::MappableInfo
mapped	legion_runtime/legion_ops.h	/^      bool mapped;$/;"	m	class:LegionRuntime::HighLevel::Operation
mapped	legion_runtime/runtime.h	/^      bool mapped; \/\/ whether it is currently mapped$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
mapped_points	legion_runtime/legion_tasks.h	/^      unsigned mapped_points;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
mapper	legion_runtime/legion_ops.h	/^        MustEpochMapper *mapper;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochMapper::MustEpochMapArgs
mapperRegistration	test/hpcg/cg-mapper.h	/^mapperRegistration(LegionRuntime::HighLevel::Machine *machine,$/;"	f
mapper_id	legion_runtime/legion_ops.h	/^      MapperID                     mapper_id;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
mapper_info_lock	legion_runtime/runtime.h	/^      Reservation mapper_info_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
mapper_infos	legion_runtime/runtime.h	/^      std::map<Mapper*,MapperInfo> mapper_infos;$/;"	m	class:LegionRuntime::HighLevel::Runtime
mapper_locks	legion_runtime/runtime.h	/^      std::vector<Reservation> mapper_locks;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
mapper_messages	legion_runtime/runtime.h	/^      std::vector<std::vector<MapperMessage> > mapper_messages;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
mapper_objects	legion_runtime/runtime.h	/^      std::vector<Mapper*> mapper_objects;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
mapper_registration	test/custom_mapper.cc	/^void mapper_registration(Machine *machine, HighLevelRuntime *rt,$/;"	f
mapper_tag	legion_runtime/legion_ops.h	/^      MappingTagID                 mapper_tag;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
mapping	legion_runtime/arrays.h	/^      const T& mapping;$/;"	m	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
mapping	legion_runtime/arrays.h	/^      const T& mapping;$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
mapping_failed	legion_runtime/legion.h	/^      bool mapping_failed;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
mapping_fence	legion_runtime/legion_ops.h	/^      bool mapping_fence;$/;"	m	class:LegionRuntime::HighLevel::FenceOp
mapping_index	legion_runtime/legion_tasks.h	/^      unsigned mapping_index;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
mapping_path	legion_runtime/legion_ops.h	/^      RegionTreePath    mapping_path;$/;"	m	class:LegionRuntime::HighLevel::AcquireOp
mapping_path	legion_runtime/legion_ops.h	/^      RegionTreePath    mapping_path;$/;"	m	class:LegionRuntime::HighLevel::ReleaseOp
mapping_path	legion_runtime/legion_ops.h	/^      RegionTreePath mapping_path;$/;"	m	class:LegionRuntime::HighLevel::MapOp
mapping_paths	legion_runtime/legion_tasks.h	/^      std::vector<RegionTreePath> mapping_paths;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
mapping_tag	legion_runtime/legion.h	/^      MappingTagID               mapping_tag;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochLauncher
mappings	legion_runtime/legion_profiling.h	/^        std::deque<OpInstance> mappings;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
mark_allocated	nautilus/mm/buddy.c	/^mark_allocated (struct buddy_mempool *mp, struct block *block)$/;"	f	file:
mark_available	nautilus/mm/buddy.c	/^mark_available (struct buddy_mempool *mp, struct block *block)$/;"	f	file:
mark_sampled	legion_runtime/runtime.cc	/^    void Future::Impl::mark_sampled(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
mark_stolen	legion_runtime/legion_tasks.cc	/^    void TaskOp::mark_stolen(Processor new_target)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
mark_xcall_done	nautilus/smp.c	/^mark_xcall_done (struct nk_xcall * x) $/;"	f	file:
markbeingfnz	lua_src/lgc.c	/^static void markbeingfnz (global_State *g) {$/;"	f	file:
marklen	lua_src/lua.c	246;"	d	file:
markmt	lua_src/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	lua_src/lgc.c	78;"	d	file:
markupval	lua_src/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	lua_src/lgc.c	75;"	d	file:
mask	legion_runtime/lowlevel.h	/^	const ElementMask& mask;$/;"	m	class:LegionRuntime::LowLevel::ElementMask::Enumerator
mask	legion_runtime/lowlevel_gpu.cc	/^      const ElementMask *mask;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy1D	file:
mask	legion_runtime/shared_lowlevel.cc	/^        ElementMask mask;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
mask	lua_src/lbitlib.c	29;"	d	file:
maskcolors	lua_src/lgc.c	58;"	d	file:
matDiag	test/hpcg/hpcg-problem-generator.h	/^    double  **matDiag;$/;"	m	struct:ProblemGenerator
match	lua_src/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match_capture	lua_src/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	lua_src/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
match_instance	legion_runtime/region_tree.cc	/^    bool InstanceManager::match_instance(const std::vector<size_t> &field_sizes,$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
match_instance	legion_runtime/region_tree.cc	/^    bool InstanceManager::match_instance(size_t field_size, $/;"	f	class:LegionRuntime::HighLevel::InstanceManager
match_layout	legion_runtime/region_tree.cc	/^    bool LayoutDescription::match_layout(LayoutDescription *rhs) const$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
match_layout	legion_runtime/region_tree.cc	/^    bool LayoutDescription::match_layout(const FieldMask &mask, const Domain &d,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
match_layout	legion_runtime/region_tree.cc	/^    bool LayoutDescription::match_layout(const FieldMask &mask,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
match_shape	legion_runtime/region_tree.cc	/^    bool LayoutDescription::match_shape(const size_t field_size) const$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
match_shape	legion_runtime/region_tree.cc	/^    bool LayoutDescription::match_shape(const std::vector<size_t> &field_sizes,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
matchbalance	lua_src/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	lua_src/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
matchdepth	lua_src/lstrlib.c	/^  int matchdepth;  \/* control for recursive depth (to avoid C stack overflow) *\/$/;"	m	struct:MatchState	file:
math_abs	lua_src/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	lua_src/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	lua_src/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	lua_src/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_atan2	lua_src/lmathlib.c	/^static int math_atan2 (lua_State *L) {$/;"	f	file:
math_ceil	lua_src/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	lua_src/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	lua_src/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	lua_src/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	lua_src/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	lua_src/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	lua_src/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	lua_src/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	lua_src/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	lua_src/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	lua_src/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	lua_src/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	lua_src/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	lua_src/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	lua_src/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	lua_src/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	lua_src/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	lua_src/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	lua_src/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	lua_src/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	lua_src/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	lua_src/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	lua_src/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
mathlib	lua_src/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
max	legion_runtime/arrays.h	/^      static Point<DIM> max(const Point<DIM> a, const Point<DIM> b)$/;"	f	class:LegionRuntime::Arrays::Point
max	test/benchmark.c	/^    uint64_t max;$/;"	m	struct:cv	file:
max	test/ipi.c	/^    uint64_t max;$/;"	m	struct:time_struct	file:
maxColNonZeros	test/hpcg/hpcg-problem.cc	/^    int64_t maxColNonZeros;$/;"	m	struct:__anon33::HPCGTaskArgs	file:
maxExponent	nautilus/libccompat.c	/^static int maxExponent = 511;	\/* Largest possible base 10 exponent.  Any$/;"	v	file:
maxIters	test/hpcg/hpcg-main.cc	/^    int64_t maxIters;$/;"	m	struct:__anon37::DriverParams	file:
max_active_threads	legion_runtime/lowlevel.cc	/^      int total_threads, active_thread_count, max_active_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
max_blocking_factor	legion_runtime/legion.h	/^      size_t max_blocking_factor;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
max_depth	legion_runtime/region_tree.h	/^      unsigned max_depth;$/;"	m	class:LegionRuntime::HighLevel::RegionTreePath
max_entries	legion_runtime/lowlevel_impl.h	/^    size_t DynamicTable<ALLOCATOR>::max_entries(void) const$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
max_expand	lua_src/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
max_failed_mappings	legion_runtime/default_mapper.h	/^      unsigned max_failed_mappings;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
max_filter_size	legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::max_filter_size = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
max_filter_size	legion_runtime/runtime.h	/^      static unsigned max_filter_size;$/;"	m	class:LegionRuntime::HighLevel::Runtime
max_line_size	arch/hrt/mwait.c	/^    uint16_t max_line_size;$/;"	m	struct:mwait_info	file:
max_line_size	arch/x64/mwait.c	/^    uint16_t max_line_size;$/;"	m	struct:mwait_info	file:
max_message_size	legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::max_message_size = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
max_message_size	legion_runtime/runtime.h	/^      static unsigned max_message_size;$/;"	m	class:LegionRuntime::HighLevel::Runtime
max_nsec	nautilus/instrument.c	/^    uint64_t max_nsec;$/;"	m	struct:func_data	file:
max_outstanding_steals	legion_runtime/runtime.h	/^      const unsigned max_outstanding_steals;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
max_samples	legion_runtime/mapping_utilities.h	/^        unsigned max_samples; $/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
max_schedule_count	legion_runtime/default_mapper.h	/^      unsigned max_schedule_count;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
max_size	legion_runtime/legion_allocation.h	/^      inline size_type max_size(void) const {$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
max_size	legion_runtime/lowlevel.h	/^      size_t max_size;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
max_size	legion_runtime/shared_lowlevel.cc	/^	const size_t max_size;$/;"	m	class:LegionRuntime::LowLevel::MemoryImpl	file:
max_size	legion_runtime/utilities.h	/^	size_t max_size, cur_size;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
max_steal_count	legion_runtime/default_mapper.h	/^      unsigned max_steal_count;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
max_steals_per_theft	legion_runtime/default_mapper.h	/^      unsigned max_steals_per_theft;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
max_table_count	acpi/acpica/aclocal.h	/^	u32 max_table_count;	\/* Max tables array will hold *\/$/;"	m	struct:acpi_table_list
max_task_window_per_context	legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::max_task_window_per_context = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
max_task_window_per_context	legion_runtime/runtime.h	/^      static unsigned max_task_window_per_context;$/;"	m	class:LegionRuntime::HighLevel::Runtime
max_time	legion_runtime/region_tree.h	/^        unsigned long long max_time;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
maxn	lua_src/ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	file:
mb_get_first_hrt_addr	nautilus/mb_utils.c	/^mb_get_first_hrt_addr (ulong_t mbd)$/;"	f
mb_is_hrt_environ	nautilus/mb_utils.c	/^mb_is_hrt_environ (ulong_t mbd)$/;"	f
me	legion_runtime/lowlevel_impl.h	/^      Event me;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
me	legion_runtime/lowlevel_impl.h	/^      IndexSpace me;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
me	legion_runtime/lowlevel_impl.h	/^      Memory me;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
me	legion_runtime/lowlevel_impl.h	/^      Processor me;$/;"	m	class:LegionRuntime::LowLevel::Processor::Impl
me	legion_runtime/lowlevel_impl.h	/^      RegionInstance me;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
me	legion_runtime/lowlevel_impl.h	/^      Reservation me;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
mem	legion_runtime/legion_logging.h	/^        Memory mem;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemory
mem	legion_runtime/legion_logging.h	/^        Memory mem;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcMemAffinity
mem	legion_runtime/lowlevel.cc	/^      Memory mem;$/;"	m	struct:LegionRuntime::LowLevel::RemoteRedListArgs	file:
mem	legion_runtime/lowlevel.cc	/^      Memory mem;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
mem	legion_runtime/lowlevel.cc	/^      Memory mem;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteArgs	file:
mem	legion_runtime/lowlevel.cc	/^      Memory mem;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteFenceArgs	file:
mem1	legion_runtime/legion_logging.h	/^        Memory mem1;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemMemAffinity
mem2	legion_runtime/legion_logging.h	/^        Memory mem2;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemMemAffinity
mem_events	legion_runtime/legion_profiling.h	/^        std::deque<MemoryEvent> mem_events;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
mem_kinds	legion_runtime/mapping_utilities.h	/^        std::map<Memory::Kind,std::set<Memory> > mem_kinds;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
mem_mem_affinities	legion_runtime/lowlevel.h	/^      std::vector<MemoryMemoryAffinity> mem_mem_affinities;$/;"	m	class:LegionRuntime::LowLevel::Machine
mem_mem_stacks	legion_runtime/mapping_utilities.h	/^        std::map<Memory,std::vector<Memory> > mem_mem_stacks;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
mem_mem_table	legion_runtime/mapping_utilities.h	/^        std::map<std::pair<Memory,Memory::Kind>,Memory> mem_mem_table;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
mem_proc_table	legion_runtime/mapping_utilities.h	/^        std::map<std::pair<Memory,Processor::Kind>,Processor> mem_proc_table;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
mem_region_types	nautilus/mm/boot_mm.c	/^char * mem_region_types[6] = {$/;"	v
members	legion_runtime/lowlevel_impl.h	/^      std::vector<Processor::Impl *> members;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
members	legion_runtime/shared_lowlevel.cc	/^      std::vector<ProcessorImpl *> members;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup	file:
members_requested	legion_runtime/lowlevel_impl.h	/^      bool members_requested;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
members_valid	legion_runtime/lowlevel_impl.h	/^      bool members_valid;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
memchr	nautilus/libccompat.c	/^void *memchr(const void *str, int c, size_t n)$/;"	f
memcmp	nautilus/naut_string.c	/^memcmp (const void * s1_, const void * s2_, size_t n) $/;"	f
memcpy	nautilus/naut_string.c	/^memcpy (void * dst, const void * src, size_t n)$/;"	f
memmove	nautilus/naut_string.c	/^memmove (void * dst, const void * src, size_t n)$/;"	f
memoized_offsets	legion_runtime/region_tree.h	/^      std::map<FIELD_TYPE,std::vector<OffsetEntry> > memoized_offsets;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
memoizer	legion_runtime/default_mapper.h	/^      MappingUtilities::MappingMemoizer memoizer;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
memories	legion_runtime/lowlevel.h	/^      std::set<Memory> memories;$/;"	m	class:LegionRuntime::LowLevel::Machine
memories	legion_runtime/lowlevel_impl.h	/^      std::vector<Memory::Impl *> memories;$/;"	m	struct:Node
memories	legion_runtime/shared_lowlevel.cc	/^      std::vector<MemoryImpl*> memories;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
memory	legion_runtime/legion_logging.h	/^        Memory memory;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
memory	legion_runtime/legion_profiling.h	/^        unsigned memory;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
memory	legion_runtime/lowlevel.cc	/^      Memory memory;$/;"	m	struct:LegionRuntime::LowLevel::RemoteMemAllocArgs	file:
memory	legion_runtime/lowlevel.h	/^      Memory memory;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
memory	legion_runtime/lowlevel_impl.h	/^      Memory memory;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
memory	legion_runtime/region_tree.h	/^      const Memory memory;$/;"	m	class:LegionRuntime::HighLevel::PhysicalManager
memory	legion_runtime/runtime.h	/^      const Memory memory;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
memory	legion_runtime/shared_lowlevel.cc	/^	Memory memory;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
memory_manager_lock	legion_runtime/runtime.h	/^      Reservation memory_manager_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
memory_managers	legion_runtime/runtime.h	/^      std::map<Memory,MemoryManager*> memory_managers;$/;"	m	class:LegionRuntime::HighLevel::Runtime
memory_map	nautilus/mm/boot_mm.c	/^static mem_map_entry_t memory_map[MAX_MMAP_ENTRIES];$/;"	v	file:
memory_stride	legion_runtime/lowlevel_impl.h	/^      off_t memory_stride;$/;"	m	class:LegionRuntime::LowLevel::GASNetMemory
memset	nautilus/naut_string.c	/^memset (void * dst, char c, size_t n)$/;"	f
memtype_efi2mb	arch/k1om/early_mem.c	/^memtype_efi2mb (efi_mem_type_t efi_type)$/;"	f	file:
merge	legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>* IntervalTreeNode<T,DISCRETE>::merge(void)$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
merge	legion_runtime/region_tree.cc	/^    void FieldState::merge(const FieldState &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldState
merge_adjacent	legion_runtime/rectangle_set.h	/^    \/*static*\/ inline bool RectangleSet<T,DISCRETE>::merge_adjacent($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
merge_dominators	legion_runtime/field_tree.h	/^    inline FieldTree<UT>* FieldTree<UT>::merge_dominators($/;"	f	class:LegionRuntime::HighLevel::FieldTree
merge_events	legion_runtime/lowlevel.cc	/^    \/*static*\/ Event Event::Impl::merge_events(Event ev1, Event ev2,$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
merge_events	legion_runtime/lowlevel.cc	/^    \/*static*\/ Event Event::Impl::merge_events(const std::set<Event>& wait_for)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
merge_events	legion_runtime/lowlevel.cc	/^    \/*static*\/ Event Event::merge_events(Event ev1, Event ev2,$/;"	f	class:LegionRuntime::LowLevel::Event
merge_events	legion_runtime/lowlevel.cc	/^    \/*static*\/ Event Event::merge_events(const std::set<Event>& wait_for)$/;"	f	class:LegionRuntime::LowLevel::Event
merge_events	legion_runtime/shared_lowlevel.cc	/^    Event Event::merge_events(Event ev1, Event ev2, Event ev3,$/;"	f	class:LegionRuntime::LowLevel::Event
merge_events	legion_runtime/shared_lowlevel.cc	/^    Event Event::merge_events(const std::set<Event>& wait_for)$/;"	f	class:LegionRuntime::LowLevel::Event
merge_events	legion_runtime/shared_lowlevel.cc	/^    Event EventImpl::merge_events(const std::map<EventImpl*,Event> &wait_for)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
merge_new_field_state	legion_runtime/region_tree.cc	/^    void RegionTreeNode::merge_new_field_state(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
merge_new_field_states	legion_runtime/region_tree.cc	/^    void RegionTreeNode::merge_new_field_states(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
merge_node	legion_runtime/field_tree.h	/^      const bool merge_node;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
merge_segments	legion_runtime/rectangle_set.h	/^    \/*static*\/ void RectangleSet<T,DISCRETE>::merge_segments($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
merge_with_ros_cr3	arch/hrt/hrt.c	/^merge_with_ros_cr3 (uint64_t ros_cr3)$/;"	f	file:
message	legion_runtime/runtime.h	/^        void *message;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::MapperMessage
message_chunks	legion_runtime/activemsg.h	/^  gasnet_handlerarg_t message_chunks;$/;"	m	struct:BaseMedium
message_id	legion_runtime/activemsg.h	/^  gasnet_handlerarg_t message_id;$/;"	m	struct:BaseMedium
message_lock	legion_runtime/runtime.h	/^      Reservation message_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
message_managers	legion_runtime/runtime.h	/^      std::map<AddressSpaceID,MessageManager*> message_managers;$/;"	m	class:LegionRuntime::HighLevel::Runtime
message_proc	legion_runtime/runtime.h	/^      const Processor message_proc;$/;"	m	class:LegionRuntime::HighLevel::Runtime
metadata_lock	legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         metadata_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
metadatas	legion_runtime/shared_lowlevel.cc	/^      std::vector<IndexSpace::Impl*> metadatas;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
method_node	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *method_node;	\/* Method node for this GPE level (saved) *\/$/;"	m	struct:acpi_gpe_handler_info	typeref:struct:acpi_gpe_handler_info::acpi_namespace_node
method_node	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *method_node;	\/* Method node for this GPE level *\/$/;"	m	union:acpi_gpe_dispatch_info	typeref:struct:acpi_gpe_dispatch_info::acpi_namespace_node
mf_handler	nautilus/fpu.c	/^mf_handler (excp_entry_t * excp, excp_vec_t vec)$/;"	f
mg	test/hpcg/comp-mg.h	/^mg(SparseMatrix &A,$/;"	f	namespace:lgncg
mgData	test/hpcg/sparsemat.h	/^    MGData *mgData;$/;"	m	struct:lgncg::SparseMatrix
mgPrep	test/hpcg/comp-mg.h	/^mgPrep(SparseMatrix &A,$/;"	f	namespace:lgncg
mgmt_vm	arch/x64/init.c	/^static void *mgmt_vm;$/;"	v	file:
min	legion_runtime/arrays.h	/^      static Point<DIM> min(const Point<DIM> a, const Point<DIM> b)$/;"	f	class:LegionRuntime::Arrays::Point
min	legion_runtime/lowlevel_dma.cc	/^    static inline int min(int a, int b) { return (a < b) ? a : b; }$/;"	f	namespace:LegionRuntime::LowLevel
min	legion_runtime/lowlevel_dma.cc	/^    template <typename T> T min(T a, T b) { return (a < b) ? a : b; }$/;"	f	namespace:LegionRuntime::LowLevel
min	test/benchmark.c	/^    uint64_t min;$/;"	m	struct:cv	file:
min	test/ipi.c	/^    uint64_t min;$/;"	m	struct:time_struct	file:
min_depth	legion_runtime/region_tree.h	/^      unsigned min_depth;$/;"	m	class:LegionRuntime::HighLevel::RegionTreePath
min_expand	lua_src/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
min_line_size	arch/hrt/mwait.c	/^    uint16_t min_line_size;$/;"	m	struct:mwait_info	file:
min_line_size	arch/x64/mwait.c	/^    uint16_t min_line_size;$/;"	m	struct:mwait_info	file:
min_nsec	nautilus/instrument.c	/^    uint64_t min_nsec;$/;"	m	struct:func_data	file:
min_outstanding	legion_runtime/runtime.h	/^      const unsigned min_outstanding;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
min_tasks_to_schedule	legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::min_tasks_to_schedule = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
min_tasks_to_schedule	legion_runtime/runtime.h	/^      static unsigned min_tasks_to_schedule;$/;"	m	class:LegionRuntime::HighLevel::Runtime
min_time	legion_runtime/region_tree.h	/^        unsigned long long min_time;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
mktime	nautilus/libccompat.c	/^time_t mktime(struct tm *timeptr)$/;"	f
mm_boot_alloc	nautilus/mm/boot_mm.c	/^mm_boot_alloc (ulong_t size)$/;"	f
mm_boot_alloc_aligned	nautilus/mm/boot_mm.c	/^mm_boot_alloc_aligned (ulong_t size, ulong_t align)$/;"	f
mm_boot_free	nautilus/mm/boot_mm.c	/^mm_boot_free (void *addr, ulong_t size)$/;"	f
mm_boot_free_mem	nautilus/mm/boot_mm.c	/^mm_boot_free_mem (addr_t start, ulong_t size)$/;"	f
mm_boot_free_vmem	nautilus/mm/boot_mm.c	/^mm_boot_free_vmem (addr_t start, ulong_t size)$/;"	f
mm_boot_get_region	nautilus/mm/boot_mm.c	/^mm_boot_get_region (unsigned i) $/;"	f
mm_boot_init	nautilus/mm/boot_mm.c	/^mm_boot_init (ulong_t mbd)$/;"	f
mm_boot_kmem_cleanup	nautilus/mm/boot_mm.c	/^mm_boot_kmem_cleanup (void)$/;"	f
mm_boot_kmem_init	nautilus/mm/boot_mm.c	/^mm_boot_kmem_init (void)$/;"	f
mm_boot_last_pfn	nautilus/mm/boot_mm.c	/^mm_boot_last_pfn (void)$/;"	f
mm_boot_num_regions	nautilus/mm/boot_mm.c	/^mm_boot_num_regions (void) $/;"	f
mm_boot_reserve_mem	nautilus/mm/boot_mm.c	/^mm_boot_reserve_mem (addr_t start, ulong_t size)$/;"	f
mm_boot_reserve_vmem	nautilus/mm/boot_mm.c	/^mm_boot_reserve_vmem (addr_t start, ulong_t size)$/;"	f
mm_dump_page_map	nautilus/mm/boot_mm.c	/^mm_dump_page_map (void) $/;"	f
mm_get_all_mem	nautilus/mm/boot_mm.c	/^mm_get_all_mem (void)$/;"	f
mm_get_usable_ram	nautilus/mm/boot_mm.c	/^mm_get_usable_ram (void)$/;"	f
mm_info	nautilus/mm/boot_mm.c	/^static mmap_info_t mm_info;$/;"	v	file:
mode	legion_runtime/activemsg.cc	/^  int mode;$/;"	m	class:ContiguousPayload	file:
mode	legion_runtime/activemsg.cc	/^  int mode;$/;"	m	class:SpanPayload	file:
mode	legion_runtime/activemsg.cc	/^  int mode;$/;"	m	class:TwoDPayload	file:
mode	legion_runtime/legion.h	/^      unsigned mode;$/;"	m	struct:LegionRuntime::HighLevel::LockRequest
mode	legion_runtime/lowlevel.cc	/^      unsigned mode;$/;"	m	class:LegionRuntime::LowLevel::DeferredLockRequest	file:
mode	legion_runtime/lowlevel.cc	/^      unsigned mode;$/;"	m	struct:LegionRuntime::LowLevel::LockGrantArgs	file:
mode	legion_runtime/lowlevel.cc	/^      unsigned mode;$/;"	m	struct:LegionRuntime::LowLevel::LockRequestArgs	file:
mode	legion_runtime/lowlevel_impl.h	/^      unsigned mode;  \/\/ lock mode$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
mode	legion_runtime/runtime.h	/^        unsigned mode;$/;"	m	struct:LegionRuntime::HighLevel::Grant::Impl::ReservationRequest
mode	legion_runtime/shared_lowlevel.cc	/^		unsigned mode;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
mode	legion_runtime/shared_lowlevel.cc	/^	unsigned mode;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
mode	lua_src/ldo.c	/^  const char *mode;$/;"	m	struct:SParser	file:
modf	nautilus/libccompat.c	/^double modf(double y, double *x){$/;"	f
modinit	lua_src/loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	file:
mon_decimal_point	nautilus/libccompat.c	/^    char *mon_decimal_point;  \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
mon_grouping	nautilus/libccompat.c	/^    char *mon_grouping;       \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
mon_thousands_sep	nautilus/libccompat.c	/^    char *mon_thousands_sep;  \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
move_adjacent	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::move_adjacent(Segment<T> *target, T value)$/;"	f	class:LegionRuntime::HighLevel::Segment
move_degenerate	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::move_degenerate(Segment<T> *target)$/;"	f	class:LegionRuntime::HighLevel::Segment
move_degenerate	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::move_degenerate(Segment<T> *target,$/;"	f	class:LegionRuntime::HighLevel::Segment
movegotosout	lua_src/lparser.c	/^static void movegotosout (FuncState *fs, BlockCnt *bl) {$/;"	f	file:
moveto	lua_src/lapi.c	/^static void moveto (lua_State *L, TValue *fr, int idx) {$/;"	f	file:
mp_entry_lengths	arch/x64/smp.c	/^static uint8_t mp_entry_lengths[5] = {$/;"	v	file:
mpi_count	legion_runtime/runtime.h	/^      int mpi_count, legion_count;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
mpi_handoff_to_legion	legion_runtime/legion.cc	/^    void MPILegionHandshake::mpi_handoff_to_legion(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
mpi_handoff_to_legion	legion_runtime/runtime.cc	/^    void MPILegionHandshake::Impl::mpi_handoff_to_legion(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
mpi_participants	legion_runtime/runtime.h	/^      const int mpi_participants;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
mpi_rank	legion_runtime/runtime.cc	/^    \/*static*\/ int Runtime::mpi_rank = -1;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
mpi_rank	legion_runtime/runtime.h	/^        int mpi_rank;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::MPIRankArgs
mpi_rank	legion_runtime/runtime.h	/^      static int mpi_rank;$/;"	m	class:LegionRuntime::HighLevel::Runtime
mpi_rank_event	legion_runtime/runtime.cc	/^    \/*static*\/ UserEvent Runtime::mpi_rank_event = UserEvent::NO_USER_EVENT;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
mpi_rank_event	legion_runtime/runtime.h	/^      static UserEvent mpi_rank_event;$/;"	m	class:LegionRuntime::HighLevel::Runtime
mpi_rank_table	legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::mpi_rank_table[MAX_NUM_NODES];$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
mpi_rank_table	legion_runtime/runtime.h	/^      static unsigned mpi_rank_table[MAX_NUM_NODES];$/;"	m	class:LegionRuntime::HighLevel::Runtime
mpi_ready	legion_runtime/runtime.h	/^      UserEvent mpi_ready, legion_ready;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
mpi_wait_on_legion	legion_runtime/legion.cc	/^    void MPILegionHandshake::mpi_wait_on_legion(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
mpi_wait_on_legion	legion_runtime/runtime.cc	/^    void MPILegionHandshake::Impl::mpi_wait_on_legion(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
mps_inti_flags_polarity	acpi/tables.c	/^static char *mps_inti_flags_polarity[] = { "dfl", "high", "res", "low" };$/;"	v	file:
mps_inti_flags_trigger	acpi/tables.c	/^static char *mps_inti_flags_trigger[] = { "dfl", "edge", "res", "level" };$/;"	v	file:
msgid	legion_runtime/activemsg.cc	/^  unsigned msgid;$/;"	m	struct:OutgoingMessage	file:
msgs_event_dependency	legion_runtime/legion_logging.h	/^        std::deque<LogMsgEventDependency> msgs_event_dependency;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_event_timing	legion_runtime/legion_logging.h	/^        std::deque<LogMsgEventTiming> msgs_event_timing;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_field_creation	legion_runtime/legion_logging.h	/^        std::deque<LogMsgFieldCreation> msgs_field_creation;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_field_space	legion_runtime/legion_logging.h	/^        std::deque<LogMsgFieldSpace> msgs_field_space;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_future_wait	legion_runtime/legion_logging.h	/^        std::deque<LogMsgFutureWait> msgs_future_wait;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_index_partition	legion_runtime/legion_logging.h	/^        std::deque<LogMsgIndexPartition> msgs_index_partition;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_index_slice	legion_runtime/legion_logging.h	/^        std::deque<LogMsgIndexSlice> msgs_index_slice;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_index_subspace	legion_runtime/legion_logging.h	/^        std::deque<LogMsgIndexSubspace> msgs_index_subspace;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_inline_wait	legion_runtime/legion_logging.h	/^        std::deque<LogMsgInlineWait> msgs_inline_wait;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_logical_requirement	legion_runtime/legion_logging.h	/^        std::deque<LogMsgLogicalRequirement> msgs_logical_requirement;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_lowlevel_copy	legion_runtime/legion_logging.h	/^        std::deque<LogMsgLowlevelCopy> msgs_lowlevel_copy;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_lowlevel_copy_assoc	legion_runtime/legion_logging.h	/^        std::deque<LogMsgLowlevelCopyAssoc> msgs_lowlevel_copy_assoc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_lowlevel_copy_channel	legion_runtime/legion_logging.h	/^        std::deque<LogMsgLowlevelCopyChannel> msgs_lowlevel_copy_channel;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_mapping_dependence	legion_runtime/legion_logging.h	/^        std::deque<LogMsgMappingDependence> msgs_mapping_dependence;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_mem_mem_affinity	legion_runtime/legion.cc	/^      std::deque<LogMsgMemMemAffinity> msgs_mem_mem_affinity;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_memory	legion_runtime/legion.cc	/^      std::deque<LogMsgMemory> msgs_memory;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_operation	legion_runtime/legion_logging.h	/^        std::deque<LogMsgOperation> msgs_operation;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_operation_events	legion_runtime/legion_logging.h	/^        std::deque<LogMsgOperationEvents> msgs_operation_events;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_operation_timing	legion_runtime/legion_logging.h	/^        std::deque<LogMsgOperationTiming> msgs_operation_timing;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_phyiscal_user	legion_runtime/legion_logging.h	/^        std::deque<LogMsgPhysicalUser> msgs_phyiscal_user;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_physical_instance	legion_runtime/legion_logging.h	/^        std::deque<LogMsgPhysicalInstance> msgs_physical_instance;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_point_point	legion_runtime/legion_logging.h	/^        std::deque<LogMsgPointPoint> msgs_point_point;  $/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_proc_mem_affinity	legion_runtime/legion.cc	/^      std::deque<LogMsgProcMemAffinity> msgs_proc_mem_affinity;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_processor	legion_runtime/legion.cc	/^      std::deque<LogMsgProcessor> msgs_processor;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_requirement_fields	legion_runtime/legion_logging.h	/^        std::deque<LogMsgRequirementFields> msgs_requirement_fields;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_slice_point	legion_runtime/legion_logging.h	/^        std::deque<LogMsgSlicePoint> msgs_slice_point;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_slice_slice	legion_runtime/legion_logging.h	/^        std::deque<LogMsgSliceSlice> msgs_slice_slice;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_task_collection	legion_runtime/legion.cc	/^      std::deque<LogMsgTaskCollection> msgs_task_collection;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_task_instance_requirement	legion_runtime/legion_logging.h	/^        std::deque<LogMsgTaskInstanceRequirement> msgs_task_instance_requirement;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_task_instance_variant	legion_runtime/legion_logging.h	/^        std::deque<LogMsgTaskInstanceVariant> msgs_task_instance_variant;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_task_operation	legion_runtime/legion_logging.h	/^        std::deque<LogMsgTaskOperation> msgs_task_operation;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_task_variant	legion_runtime/legion.cc	/^      std::deque<LogMsgTaskVariant> msgs_task_variant;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_top_index_space	legion_runtime/legion_logging.h	/^        std::deque<LogMsgTopIndexSpace> msgs_top_index_space;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_top_level_task	legion_runtime/legion.cc	/^      std::deque<LogMsgTopLevelTask> msgs_top_level_task;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_top_region	legion_runtime/legion_logging.h	/^        std::deque<LogMsgTopRegion> msgs_top_region;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msr_read	nautilus/msr.c	/^msr_read (uint32_t msr) $/;"	f
msr_write	nautilus/msr.c	/^msr_write (uint32_t msr, uint64_t data)$/;"	f
mtxInd	test/hpcg/hpcg-problem-generator.h	/^    int64_t **mtxInd;$/;"	m	struct:ProblemGenerator
multiboot_get_phys_mem	nautilus/mb_utils.c	/^multiboot_get_phys_mem (ulong_t mbd)$/;"	f
multiboot_get_size	nautilus/mb_utils.c	/^multiboot_get_size (ulong_t mbd)$/;"	f
multiboot_get_sys_ram	nautilus/mb_utils.c	/^multiboot_get_sys_ram (ulong_t mbd)$/;"	f
multiboot_hdr	arch/hrt/asm/boot.S	/^multiboot_hdr:$/;"	l
multiboot_hdr	arch/k1om/asm/boot.S	/^multiboot_hdr:$/;"	l
multiboot_hdr	arch/x64/asm/boot.S	/^multiboot_hdr:$/;"	l
multiboot_parse	nautilus/mb_utils.c	/^multiboot_parse (ulong_t mbd, ulong_t magic)$/;"	f
must_barrier	legion_runtime/legion_tasks.h	/^      Barrier must_barrier; \/\/ for must parallelism$/;"	m	class:LegionRuntime::HighLevel::MultiTask
must_early_map	legion_runtime/legion.h	/^      bool must_early_map;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
must_epoch	legion_runtime/legion_ops.h	/^        MustEpochOp *must_epoch;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredMappingArgs
must_epoch	legion_runtime/legion_ops.h	/^      MustEpochOp *must_epoch;$/;"	m	class:LegionRuntime::HighLevel::Operation
must_epoch_gen	legion_runtime/legion_ops.h	/^        GenerationID must_epoch_gen;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredMappingArgs
must_epoch_gen	legion_runtime/legion_ops.h	/^      GenerationID must_epoch_gen;$/;"	m	class:LegionRuntime::HighLevel::Operation
must_epoch_index	legion_runtime/legion_ops.h	/^      unsigned must_epoch_index;$/;"	m	class:LegionRuntime::HighLevel::Operation
must_parallelism	legion_runtime/legion.h	/^      bool                                must_parallelism; $/;"	m	class:LegionRuntime::HighLevel::Task
must_parallelism	legion_runtime/legion.h	/^      bool                               must_parallelism;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
mutex	acpi/acpica/aclocal.h	/^	acpi_mutex mutex;$/;"	m	struct:acpi_mutex_info
mutex	legion_runtime/activemsg.cc	/^  gasnet_hsl_t mutex;$/;"	m	class:ActiveMessageEndpoint	file:
mutex	legion_runtime/activemsg.cc	/^  gasnet_hsl_t mutex;$/;"	m	class:SrcDataPool	file:
mutex	legion_runtime/activemsg.h	/^  gasnet_hsl_t mutex;$/;"	m	struct:HandlerReplyFuture
mutex	legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::AMQueue	file:
mutex	legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::EventMerger	file:
mutex	legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
mutex	legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::MultiNodeRollUp	file:
mutex	legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::ThreadImpl	file:
mutex	legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
mutex	legion_runtime/lowlevel_gpu.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
mutex	legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t *mutex; \/\/ controls which local thread has access to internal data (not runtime-visible event)$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
mutex	legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t *mutex; \/\/ controls which local thread has access to internal data (not runtime-visible lock)$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
mutex	legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t mutex; \/\/ protection for resizing vectors$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
mutex	legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::Atomic
mutex	legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::GASNetHSL
mutex	legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
mutex	legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl	file:
mutex	legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T *mutex;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
mutex	legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T mutex;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
mutex	legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
mutex	legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
mutex	legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::MemoryImpl	file:
mutex	legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
mutex	legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
mutex	legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
mutex	legion_runtime/utilities.h	/^        pthread_mutex_t mutex;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
mutex	legion_runtime/utilities.h	/^    pthread_mutex_t *mutex;$/;"	m	class:LegionRuntime::ImmovableLock
mutexp	legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t *mutexp;$/;"	m	class:LegionRuntime::LowLevel::AutoHSLLock
mwait	arch/hrt/mwait.c	/^} mwait;$/;"	v	typeref:struct:mwait_info	file:
mwait	arch/x64/mwait.c	/^} mwait;$/;"	v	typeref:struct:mwait_info	file:
mwait_info	arch/hrt/mwait.c	/^static struct mwait_info {$/;"	s	file:
mwait_info	arch/x64/mwait.c	/^static struct mwait_info {$/;"	s	file:
n	lua_src/lauxlib.c	/^  int n;  \/* number of pre-read characters *\/$/;"	m	struct:LoadF	file:
nCols	test/hpcg/comp-spmv.h	/^    int64_t nCols;$/;"	m	struct:__anon31::spmvTaskArgs
nCols	test/hpcg/sparsemat.h	/^    int64_t nRows, nCols;$/;"	m	struct:lgncg::SparseMatrix
nLocalRows	test/hpcg/hpcg-problem-generator.h	/^    int64_t nLocalRows;$/;"	m	struct:ProblemGenerator
nMGLevels	test/hpcg/hpcg-main.cc	/^    int64_t nMGLevels;$/;"	m	struct:__anon37::DriverParams	file:
nMatCols	test/hpcg/comp-symgs.h	/^    uint64_t nMatCols;$/;"	m	struct:__anon34::symgsTaskArgs
nParts	test/hpcg/sparsemat.h	/^    int64_t nParts;$/;"	m	struct:lgncg::SparseMatrix
nPostsmootherSteps	test/hpcg/mg-data.h	/^    int64_t nPostsmootherSteps;$/;"	m	struct:lgncg::MGData
nPresmootherSteps	test/hpcg/mg-data.h	/^    int64_t nPresmootherSteps;$/;"	m	struct:lgncg::MGData
nRows	test/hpcg/sparsemat.h	/^    int64_t nRows, nCols;$/;"	m	struct:lgncg::SparseMatrix
nSubRgns	test/hpcg/hpcg-main.cc	/^    int64_t nSubRgns;$/;"	m	struct:__anon37::DriverParams	file:
n_cs_precedes	nautilus/libccompat.c	/^    char n_cs_precedes;       \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
n_sep_by_space	nautilus/libccompat.c	/^    char n_sep_by_space;      \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
n_sign_posn	nautilus/libccompat.c	/^    char n_sign_posn;         \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
na	lua_src/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:
nactvar	lua_src/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the block *\/$/;"	m	struct:BlockCnt	file:
name	acpi/acpica/aclocal.h	/^	char *name;		\/* NULL terminated string *\/$/;"	m	union:acpi_parse_value
name	acpi/acpica/aclocal.h	/^	char *name;		\/* Opcode name (disassembler\/debug only) *\/$/;"	m	struct:acpi_opcode_info
name	acpi/acpica/aclocal.h	/^	char *name;$/;"	m	struct:acpi_db_method_info
name	acpi/acpica/aclocal.h	/^	char *name;$/;"	m	struct:acpi_interface_info
name	acpi/acpica/aclocal.h	/^	char *name;$/;"	m	struct:acpi_port_info
name	acpi/acpica/aclocal.h	/^	char name[ACPI_NAME_SIZE];$/;"	m	struct:acpi_name_info
name	acpi/acpica/aclocal.h	/^	u32 name;		\/* 4-byte name or zero if no name *\/$/;"	m	struct:acpi_parse_obj_named
name	acpi/acpica/aclocal.h	/^	union acpi_name_union name;	\/* ACPI Name, always 4 chars per ACPI spec *\/$/;"	m	struct:acpi_namespace_node	typeref:union:acpi_namespace_node::acpi_name_union
name	legion_runtime/legion.h	/^      const char *name;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection
name	legion_runtime/legion_logging.h	/^        const char *name;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskCollection
name	legion_runtime/legion_logging.h	/^        const char* name;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyChannel
name	lua_src/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	lua_src/lundump.c	/^ const char* name;$/;"	m	struct:__anon49	file:
name	nautilus/vc.c	/^  char name[32];$/;"	m	struct:nk_virtual_console	file:
name_seg	acpi/acpica/aclocal.h	/^	char name_seg[4];$/;"	m	struct:acpi_parse_obj_asl
named	acpi/acpica/aclocal.h	/^	struct acpi_parse_obj_named named;$/;"	m	union:acpi_parse_object	typeref:struct:acpi_parse_object::acpi_parse_obj_named
namepath	acpi/acpica/aclocal.h	/^	char *namepath;$/;"	m	struct:acpi_parse_obj_asl
nautilus_hrt_upcall_handler	arch/hrt/hrt.c	/^nautilus_hrt_upcall_handler (excp_entry_t * excp, excp_vec_t vec)$/;"	f
ndpc_rt_test	arch/hrt/init.c	/^void ndpc_rt_test()$/;"	f
ndpc_rt_test	arch/k1om/init.c	/^void ndpc_rt_test()$/;"	f
ndpc_rt_test	arch/x64/init.c	/^void ndpc_rt_test()$/;"	f
need_completion_trigger	legion_runtime/legion_ops.h	/^      bool need_completion_trigger;$/;"	m	class:LegionRuntime::HighLevel::Operation
need_value	lua_src/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
needed	legion_runtime/shared_lowlevel.cc	/^            EventGeneration needed;$/;"	m	struct:LegionRuntime::LowLevel::EventImpl::TriggerableInfo	file:
needed_fields	legion_runtime/region_tree.h	/^      FieldMask needed_fields;$/;"	m	class:LegionRuntime::HighLevel::MappingRef
needed_lock	legion_runtime/region_tree.h	/^      Reservation needed_lock;$/;"	m	class:LegionRuntime::HighLevel::InstanceRef
needed_managers	legion_runtime/region_tree.h	/^      std::set<PhysicalManager*> &needed_managers;$/;"	m	class:LegionRuntime::HighLevel::PathReturner
needed_managers	legion_runtime/region_tree.h	/^      std::set<PhysicalManager*> &needed_managers;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
needed_managers	legion_runtime/region_tree.h	/^      std::set<PhysicalManager*> &needed_managers;$/;"	m	class:LegionRuntime::HighLevel::StateSender
needed_samples	legion_runtime/mapping_utilities.h	/^        unsigned needed_samples;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
needed_views	legion_runtime/region_tree.h	/^      std::map<LogicalView*,FieldMask> &needed_views;$/;"	m	class:LegionRuntime::HighLevel::StateSender
needs_state	legion_runtime/legion_tasks.h	/^      bool needs_state;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
needs_targets	legion_runtime/region_tree.cc	/^    bool PhysicalCloser::needs_targets(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
negative_sign	nautilus/libccompat.c	/^    char *negative_sign;      \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
nemo_bcast_wakeup	test/benchmark.c	/^nemo_bcast_wakeup (void)$/;"	f	file:
nemo_done	test/benchmark.c	/^static volatile int nemo_done = 0;$/;"	v	file:
nemo_end	test/benchmark.c	/^static uint64_t nemo_end = 0;$/;"	v	file:
nemo_event_await	nautilus/nemo.c	/^nemo_event_await (void)$/;"	f
nemo_event_broadcast	nautilus/nemo.c	/^nemo_event_broadcast (nemo_event_id_t eid)$/;"	f
nemo_event_notify	nautilus/nemo.c	/^nemo_event_notify (nemo_event_id_t eid, int cpu)$/;"	f
nemo_init	nautilus/nemo.c	/^nemo_init (void)$/;"	f
nemo_ipi_event_recv	nautilus/nemo.c	/^nemo_ipi_event_recv (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
nemo_register_event_action	nautilus/nemo.c	/^nemo_register_event_action (void (*func)(void), void * priv_data)$/;"	f
nemo_unregister_event_action	nautilus/nemo.c	/^nemo_unregister_event_action (nemo_event_id_t id)$/;"	f
nemo_wakeup	test/benchmark.c	/^nemo_wakeup (void)$/;"	f	file:
new_dynamic_mapping	legion_runtime/arrays.h	/^      static Mapping<IDIM, ODIM> *new_dynamic_mapping(const T& _t)$/;"	f	class:LegionRuntime::Arrays::Mapping
new_localvar	lua_src/lparser.c	/^static void new_localvar (LexState *ls, TString *name) {$/;"	f	file:
new_localvarliteral	lua_src/lparser.c	197;"	d	file:
new_localvarliteral_	lua_src/lparser.c	/^static void new_localvarliteral_ (LexState *ls, const char *name, size_t sz) {$/;"	f	file:
new_point	legion_runtime/legion_logging.h	/^        UniqueID new_point;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPointPoint
new_tree_node	legion_runtime/lowlevel_impl.h	/^    typename DynamicTable<ALLOCATOR>::NodeBase *DynamicTable<ALLOCATOR>::new_tree_node(int level, IT first_index, IT last_index, int owner, typename ALLOCATOR::FreeList *free_list \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
newfile	lua_src/liolib.c	/^static LStream *newfile (lua_State *L) {$/;"	f	file:
newlabelentry	lua_src/lparser.c	/^static int newlabelentry (LexState *ls, Labellist *l, TString *name,$/;"	f	file:
newprefile	lua_src/liolib.c	/^static LStream *newprefile (lua_State *L) {$/;"	f	file:
newshrstr	lua_src/lstring.c	/^static TString *newshrstr (lua_State *L, const char *str, size_t l,$/;"	f	file:
newupvalue	lua_src/lparser.c	/^static int newupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
next	acpi/acpica/aclocal.h	/^	struct acpi_gpe_block_info *next;$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_gpe_block_info
next	acpi/acpica/aclocal.h	/^	struct acpi_gpe_notify_object *next;$/;"	m	struct:acpi_gpe_notify_object	typeref:struct:acpi_gpe_notify_object::acpi_gpe_notify_object
next	acpi/acpica/aclocal.h	/^	struct acpi_gpe_xrupt_info *next;$/;"	m	struct:acpi_gpe_xrupt_info	typeref:struct:acpi_gpe_xrupt_info::acpi_gpe_xrupt_info
next	acpi/acpica/aclocal.h	/^	struct acpi_interface_info *next;$/;"	m	struct:acpi_interface_info	typeref:struct:acpi_interface_info::acpi_interface_info
next	legion_runtime/legion.h	/^    inline ptr_t IndexIterator::next(void)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
next	legion_runtime/lowlevel.cc	/^	  EventStackEntry *next;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry	file:
next	legion_runtime/runtime.h	/^      Impl *next;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap::Impl
next	legion_runtime/utilities.h	/^	TraceBlock *next;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
next	lua_src/llex.c	28;"	d	file:
next	nautilus/hashtable.c	/^    struct nk_hash_entry * next;$/;"	m	struct:nk_hash_entry	typeref:struct:nk_hash_entry::nk_hash_entry	file:
next_alloc	legion_runtime/lowlevel_impl.h	/^      IT volatile next_alloc;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableFreeList
next_block_base_index	acpi/acpica/aclocal.h	/^	u32 next_block_base_index;$/;"	m	struct:acpi_gpe_device_info
next_child	legion_runtime/region_tree.h	/^      Color next_child;$/;"	m	class:LegionRuntime::HighLevel::PathTraverser
next_ci	lua_src/ldo.c	297;"	d	file:
next_entry	legion_runtime/accessor.h	/^	  ptr_t *next_entry;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
next_external_char	acpi/acpica/aclocal.h	/^	const char *next_external_char;$/;"	m	struct:acpi_namestring_info
next_free	legion_runtime/lowlevel_impl.h	/^      Event::Impl *next_free;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
next_free	legion_runtime/lowlevel_impl.h	/^      IndexSpace::Impl *next_free;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
next_free	legion_runtime/lowlevel_impl.h	/^      ProcessorGroup *next_free;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
next_free	legion_runtime/lowlevel_impl.h	/^      Reservation::Impl *next_free;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
next_handle	legion_runtime/shared_lowlevel.cc	/^        TriggerHandle next_handle; \/\/ all numbers >0 are reservation requests, 0 is release trigger handle$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
next_handle	legion_runtime/shared_lowlevel.cc	/^        TriggerHandle next_handle;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
next_id	legion_runtime/legion_logging.h	/^        UniqueID next_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
next_idx	legion_runtime/legion_trace.h	/^        int next_idx;$/;"	m	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
next_index	legion_runtime/legion_logging.h	/^        unsigned next_index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
next_index_on_queue	nautilus/vc.c	/^static inline int next_index_on_queue(enum nk_vc_type type, int index) $/;"	f	file:
next_local_index	legion_runtime/runtime.h	/^      unsigned next_local_index;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
next_outgoing_message_id	legion_runtime/activemsg.cc	/^  int next_outgoing_message_id;$/;"	m	class:ActiveMessageEndpoint	file:
next_point_id	legion_runtime/legion_spy.h	/^      static int next_point_id = 0;$/;"	m	namespace:LegionRuntime::HighLevel::LegionSpy
next_pow2	nautilus/numa.c	/^next_pow2 (uint32_t v)$/;"	f	file:
next_prime	nautilus/mm/kmem.c	/^static uint64_t next_prime(uint64_t n)$/;"	f	file:
next_processor_kind	legion_runtime/mapping_utilities.cc	/^      Processor::Kind MappingProfiler::next_processor_kind($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
next_target	legion_runtime/shared_lowlevel.cc	/^      size_t next_target;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup	file:
next_thread	legion_runtime/lowlevel_impl.h	/^      unsigned next_thread;$/;"	m	class:Runtime
next_tid	nautilus/thread.c	/^static unsigned long next_tid = 0;$/;"	v	file:
nh	lua_src/lparser.c	/^  int nh;  \/* total number of `record' elements *\/$/;"	m	struct:ConsControl	file:
nil	legion_runtime/common.h	/^  static inline ptr_t nil(void) { ptr_t p; p.value = (unsigned)-1; return p; }$/;"	f	struct:ptr_t
nil	legion_runtime/common.h	/^  static inline ptr_t<T> nil(void) { ptr_t<T> p; p.value = (unsigned)-1; return p; }$/;"	f	struct:ptr_t
nil	legion_runtime/common.h	/^  static inline utptr_t nil(void) { utptr_t p; p.value = (unsigned)-1; return p; }$/;"	f	struct:utptr_t
nil	legion_runtime/lowlevel.h	/^      static DomainPoint nil(void) { DomainPoint p; p.dim = -1; return p; }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
nilK	lua_src/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
nk_acpi_init	nautilus/acpi.c	/^nk_acpi_init (void)$/;"	f
nk_add_bus_entry	nautilus/irq.c	/^nk_add_bus_entry (const uint8_t bus_id, const char * bus_type)$/;"	f
nk_add_int_entry	nautilus/irq.c	/^nk_add_int_entry (int_trig_t trig_mode,$/;"	f
nk_barrier_destroy	nautilus/barrier.c	/^nk_barrier_destroy (nk_barrier_t * barrier)$/;"	f
nk_barrier_init	nautilus/barrier.c	/^nk_barrier_init (nk_barrier_t * barrier, uint32_t count) $/;"	f
nk_barrier_test	nautilus/barrier.c	/^void nk_barrier_test(void)$/;"	f
nk_barrier_wait	nautilus/barrier.c	/^nk_barrier_wait (nk_barrier_t * barrier) $/;"	f
nk_bind_vc	nautilus/vc.c	/^int nk_bind_vc(nk_thread_t *thread, struct nk_virtual_console * cons)$/;"	f
nk_condvar_bcast	nautilus/condvar.c	/^nk_condvar_bcast (nk_condvar_t * c)$/;"	f
nk_condvar_destroy	nautilus/condvar.c	/^nk_condvar_destroy (nk_condvar_t * c)$/;"	f
nk_condvar_init	nautilus/condvar.c	/^nk_condvar_init (nk_condvar_t * c)$/;"	f
nk_condvar_signal	nautilus/condvar.c	/^nk_condvar_signal (nk_condvar_t * c)$/;"	f
nk_condvar_test	nautilus/condvar.c	/^nk_condvar_test (void)$/;"	f
nk_condvar_wait	nautilus/condvar.c	/^nk_condvar_wait (nk_condvar_t * c, NK_LOCK_T * l)$/;"	f
nk_core_barrier_arrive	nautilus/barrier.c	/^nk_core_barrier_arrive (void)$/;"	f
nk_core_barrier_lower	nautilus/barrier.c	/^nk_core_barrier_lower (void)$/;"	f
nk_core_barrier_raise	nautilus/barrier.c	/^nk_core_barrier_raise (void) $/;"	f
nk_core_barrier_wait	nautilus/barrier.c	/^nk_core_barrier_wait (void)$/;"	f
nk_cpu_topo_discover	nautilus/numa.c	/^nk_cpu_topo_discover (struct cpu * me)$/;"	f
nk_create_htable	nautilus/hashtable.c	/^nk_create_htable (uint_t min_size,$/;"	f
nk_create_htable_iter	nautilus/hashtable.c	/^nk_create_htable_iter (struct nk_hashtable * htable) $/;"	f
nk_create_vc	nautilus/vc.c	/^struct nk_virtual_console *nk_create_vc(char *name, enum nk_vc_type new_vc_type, uint8_t attr, void (*callback)(nk_scancode_t, void *priv), void *priv_data) $/;"	f
nk_cxx_init	cxx/cxxinit.c	/^nk_cxx_init (void)$/;"	f
nk_dequeue_entry	nautilus/queue.c	/^nk_dequeue_entry (nk_queue_entry_t * entry)$/;"	f
nk_dequeue_entry_atomic	nautilus/queue.c	/^nk_dequeue_entry_atomic (nk_queue_t * q, nk_queue_entry_t * entry)$/;"	f
nk_dequeue_first	nautilus/queue.c	/^nk_dequeue_first (nk_queue_t * q)$/;"	f
nk_dequeue_first_atomic	nautilus/queue.c	/^nk_dequeue_first_atomic (nk_queue_t * q)$/;"	f
nk_dequeue_keycode	nautilus/vc.c	/^nk_keycode_t nk_dequeue_keycode(struct nk_virtual_console *vc) $/;"	f
nk_dequeue_scancode	nautilus/vc.c	/^nk_scancode_t nk_dequeue_scancode(struct nk_virtual_console *vc) $/;"	f
nk_dequeue_thread_from_runq	nautilus/thread.c	/^nk_dequeue_thread_from_runq (nk_thread_t * t)$/;"	f
nk_destroy_htable_iter	nautilus/hashtable.c	/^nk_destroy_htable_iter (struct nk_hashtable_iter * iter) $/;"	f
nk_destroy_vc	nautilus/vc.c	/^int nk_destroy_vc(struct nk_virtual_console *vc) $/;"	f
nk_detect_cpu_freq	nautilus/cpu.c	/^nk_detect_cpu_freq (uint32_t cpu) $/;"	f
nk_dump_mem	nautilus/backtrace.c	/^nk_dump_mem (const void * addr, ulong_t n)$/;"	f
nk_dump_numa_info	nautilus/numa.c	/^nk_dump_numa_info (void)$/;"	f
nk_enqueue_keycode	nautilus/vc.c	/^int nk_enqueue_keycode(struct nk_virtual_console *vc, nk_keycode_t key) $/;"	f
nk_enqueue_scancode	nautilus/vc.c	/^int nk_enqueue_scancode(struct nk_virtual_console *vc, nk_scancode_t scan) $/;"	f
nk_enqueue_thread_on_runq	nautilus/thread.c	/^nk_enqueue_thread_on_runq (nk_thread_t * t, int cpu)$/;"	f
nk_free_htable	nautilus/hashtable.c	/^nk_free_htable (struct nk_hashtable * htable, int free_values, int free_keys) $/;"	f
nk_get_base_region_by_cpu	nautilus/numa.c	/^nk_get_base_region_by_cpu (cpu_id_t cpu)$/;"	f
nk_get_base_region_by_num	nautilus/numa.c	/^nk_get_base_region_by_num (unsigned num)$/;"	f
nk_get_num_cpus	nautilus/smp.c	/^nk_get_num_cpus (void)$/;"	f
nk_get_num_domains	nautilus/numa.c	/^nk_get_num_domains (void)$/;"	f
nk_get_parent_tid	nautilus/thread.c	/^nk_get_parent_tid (void) $/;"	f
nk_get_rand_bytes	nautilus/random.c	/^nk_get_rand_bytes (uint8_t * buf, unsigned len)$/;"	f
nk_get_tid	nautilus/thread.c	/^nk_get_tid (void) $/;"	f
nk_hash_buffer	nautilus/hashtable.c	/^nk_hash_buffer (uchar_t * msg, uint_t length) $/;"	f
nk_hash_entry	nautilus/hashtable.c	/^struct nk_hash_entry {$/;"	s	file:
nk_hash_long	nautilus/hashtable.c	/^nk_hash_long (ulong_t val, uint_t bits) $/;"	f
nk_hashtable	nautilus/hashtable.c	/^struct nk_hashtable {$/;"	s	file:
nk_hpet_get_cntr	dev/hpet.c	/^nk_hpet_get_cntr (void)$/;"	f
nk_hpet_get_freq	dev/hpet.c	/^nk_hpet_get_freq (void)$/;"	f
nk_hpet_init	dev/hpet.c	/^nk_hpet_init (void)$/;"	f
nk_htable_change	nautilus/hashtable.c	/^nk_htable_change (struct nk_hashtable * htable, $/;"	f
nk_htable_count	nautilus/hashtable.c	/^nk_htable_count (struct nk_hashtable * htable) $/;"	f
nk_htable_dec	nautilus/hashtable.c	/^nk_htable_dec (struct nk_hashtable * htable, addr_t key, addr_t value) $/;"	f
nk_htable_get_iter_key	nautilus/hashtable.c	/^nk_htable_get_iter_key (struct nk_hashtable_iter * iter) $/;"	f
nk_htable_get_iter_value	nautilus/hashtable.c	/^nk_htable_get_iter_value (struct nk_hashtable_iter * iter) $/;"	f
nk_htable_inc	nautilus/hashtable.c	/^nk_htable_inc (struct nk_hashtable * htable, $/;"	f
nk_htable_insert	nautilus/hashtable.c	/^nk_htable_insert (struct nk_hashtable * htable, $/;"	f
nk_htable_iter_advance	nautilus/hashtable.c	/^nk_htable_iter_advance (struct nk_hashtable_iter * iter) $/;"	f
nk_htable_iter_remove	nautilus/hashtable.c	/^nk_htable_iter_remove (struct nk_hashtable_iter * iter, int free_key) $/;"	f
nk_htable_iter_search	nautilus/hashtable.c	/^nk_htable_iter_search (struct nk_hashtable_iter * iter,$/;"	f
nk_htable_remove	nautilus/hashtable.c	/^nk_htable_remove(struct nk_hashtable * htable, addr_t key, int free_key) $/;"	f
nk_htable_search	nautilus/hashtable.c	/^nk_htable_search (struct nk_hashtable * htable, addr_t key) $/;"	f
nk_instrument_calibrate	nautilus/instrument.c	/^nk_instrument_calibrate (unsigned loops)$/;"	f
nk_instrument_end	nautilus/instrument.c	/^nk_instrument_end (void) $/;"	f
nk_instrument_init	nautilus/instrument.c	/^nk_instrument_init (void) $/;"	f
nk_instrument_query	nautilus/instrument.c	/^nk_instrument_query (void)$/;"	f
nk_instrument_start	nautilus/instrument.c	/^nk_instrument_start (void)$/;"	f
nk_int_init	nautilus/irq.c	/^nk_int_init (struct sys_info * sys)$/;"	f
nk_int_matches_bus	nautilus/irq.c	/^nk_int_matches_bus (struct nk_int_entry * entry, const char * bus_type, const uint8_t len)$/;"	f
nk_irq_is_assigned	nautilus/irq.c	/^nk_irq_is_assigned (uint8_t irq)$/;"	f
nk_irq_prof_enter	nautilus/instrument.c	/^nk_irq_prof_enter (void)$/;"	f
nk_irq_prof_exit	nautilus/instrument.c	/^nk_irq_prof_exit (void)$/;"	f
nk_is_amd	nautilus/cpu.c	/^nk_is_amd (void) $/;"	f
nk_is_intel	nautilus/cpu.c	/^nk_is_intel (void)$/;"	f
nk_join	nautilus/thread.c	/^nk_join (nk_thread_id_t t, void ** retval)$/;"	f
nk_join_all_children	nautilus/thread.c	/^nk_join_all_children (int (*func)(void * res)) $/;"	f
nk_kmem_init	nautilus/mm/kmem.c	/^nk_kmem_init (void)$/;"	f
nk_launch_shell	nautilus/shell.c	/^nk_thread_id_t nk_launch_shell(char *name, int cpu)$/;"	f
nk_malloc_enter	nautilus/instrument.c	/^nk_malloc_enter (void)$/;"	f
nk_malloc_exit	nautilus/instrument.c	/^nk_malloc_exit (void)$/;"	f
nk_map_page	nautilus/paging.c	/^nk_map_page (addr_t vaddr, addr_t paddr, uint64_t flags, page_size_t ps)$/;"	f
nk_map_page_nocache	nautilus/paging.c	/^nk_map_page_nocache (addr_t paddr, uint64_t flags, page_size_t ps)$/;"	f
nk_mask_irq	nautilus/irq.c	/^nk_mask_irq (uint8_t irq)$/;"	f
nk_mwait_init	arch/hrt/mwait.c	/^nk_mwait_init (void)$/;"	f
nk_mwait_init	arch/x64/mwait.c	/^nk_mwait_init (void)$/;"	f
nk_my_numa_node	nautilus/numa.c	/^nk_my_numa_node (void)$/;"	f
nk_need_resched	nautilus/thread.c	/^nk_need_resched (void) $/;"	f
nk_numa_init	nautilus/numa.c	/^nk_numa_init (void)$/;"	f
nk_paging_init	nautilus/paging.c	/^nk_paging_init (struct nk_mem_info * mem, ulong_t mbd)$/;"	f
nk_pf_handler	nautilus/paging.c	/^nk_pf_handler (excp_entry_t * excp,$/;"	f
nk_print_regs	nautilus/backtrace.c	/^nk_print_regs (struct nk_regs * r)$/;"	f
nk_profile_func_enter	nautilus/instrument.c	/^nk_profile_func_enter (const char  *func)$/;"	f
nk_profile_func_exit	nautilus/instrument.c	/^nk_profile_func_exit (const char *func)$/;"	f
nk_queue_create	nautilus/queue.c	/^nk_queue_create (void)$/;"	f
nk_queue_destroy	nautilus/queue.c	/^nk_queue_destroy (nk_queue_t * q, uint8_t free_entries)$/;"	f
nk_queue_empty_atomic	nautilus/queue.c	/^nk_queue_empty_atomic (nk_queue_t * q)$/;"	f
nk_rand_init	nautilus/random.c	/^nk_rand_init (struct cpu * cpu) $/;"	f
nk_rand_seed	nautilus/random.c	/^nk_rand_seed (uint64_t seed) {$/;"	f
nk_rand_set_xi	nautilus/random.c	/^nk_rand_set_xi (uint64_t xi) $/;"	f
nk_rb_erase	nautilus/rbtree.c	/^void nk_rb_erase(struct rb_node *node, struct rb_root *root)$/;"	f
nk_rb_first	nautilus/rbtree.c	/^struct rb_node *nk_rb_first(struct rb_root *root)$/;"	f
nk_rb_insert_color	nautilus/rbtree.c	/^void nk_rb_insert_color(struct rb_node *node, struct rb_root *root)$/;"	f
nk_rb_last	nautilus/rbtree.c	/^struct rb_node *nk_rb_last(struct rb_root *root)$/;"	f
nk_rb_next	nautilus/rbtree.c	/^struct rb_node *nk_rb_next(struct rb_node *node)$/;"	f
nk_rb_prev	nautilus/rbtree.c	/^struct rb_node *nk_rb_prev(struct rb_node *node)$/;"	f
nk_rb_replace_node	nautilus/rbtree.c	/^void nk_rb_replace_node(struct rb_node *victim, struct rb_node *new,$/;"	f
nk_release_vc	nautilus/vc.c	/^int nk_release_vc(nk_thread_t *thread) $/;"	f
nk_rwlock_init	nautilus/rwlock.c	/^nk_rwlock_init (nk_rwlock_t * l)$/;"	f
nk_rwlock_rd_lock	nautilus/rwlock.c	/^nk_rwlock_rd_lock (nk_rwlock_t * l)$/;"	f
nk_rwlock_rd_unlock	nautilus/rwlock.c	/^nk_rwlock_rd_unlock (nk_rwlock_t * l) $/;"	f
nk_rwlock_test	nautilus/rwlock.c	/^nk_rwlock_test (void) $/;"	f
nk_rwlock_wr_lock	nautilus/rwlock.c	/^nk_rwlock_wr_lock (nk_rwlock_t * l)$/;"	f
nk_rwlock_wr_lock_irq_save	nautilus/rwlock.c	/^nk_rwlock_wr_lock_irq_save (nk_rwlock_t * l)$/;"	f
nk_rwlock_wr_unlock	nautilus/rwlock.c	/^nk_rwlock_wr_unlock (nk_rwlock_t * l)$/;"	f
nk_rwlock_wr_unlock_irq_restore	nautilus/rwlock.c	/^nk_rwlock_wr_unlock_irq_restore (nk_rwlock_t * l, uint8_t flags)$/;"	f
nk_sched_init	nautilus/thread.c	/^nk_sched_init (void) $/;"	f
nk_sched_init_ap	nautilus/thread.c	/^nk_sched_init_ap (void)$/;"	f
nk_schedule	nautilus/thread.c	/^nk_schedule (void) $/;"	f
nk_set_thread_fork_output	nautilus/thread.c	/^nk_set_thread_fork_output (void * result)$/;"	f
nk_sleep	dev/timer.c	/^nk_sleep (uint_t msec) $/;"	f
nk_stack_dump	nautilus/backtrace.c	/^nk_stack_dump (ulong_t n)$/;"	f
nk_switch_to_next_vc	nautilus/vc.c	/^int nk_switch_to_next_vc()$/;"	f
nk_switch_to_prev_vc	nautilus/vc.c	/^int nk_switch_to_prev_vc()$/;"	f
nk_switch_to_vc	nautilus/vc.c	/^int nk_switch_to_vc(struct nk_virtual_console *vc) $/;"	f
nk_switch_to_vc_list	nautilus/vc.c	/^int nk_switch_to_vc_list()$/;"	f
nk_thr_switch_prof_enter	nautilus/instrument.c	/^nk_thr_switch_prof_enter (void)$/;"	f
nk_thr_switch_prof_exit	nautilus/instrument.c	/^nk_thr_switch_prof_exit (void)$/;"	f
nk_thread_create	nautilus/thread.c	/^nk_thread_create (nk_thread_fun_t fun, $/;"	f
nk_thread_destroy	nautilus/thread.c	/^nk_thread_destroy (nk_thread_id_t t)$/;"	f
nk_thread_exit	nautilus/thread.c	/^nk_thread_exit (void * retval) $/;"	f
nk_thread_queue_create	nautilus/thread.c	/^nk_thread_queue_create (void) $/;"	f
nk_thread_queue_destroy	nautilus/thread.c	/^nk_thread_queue_destroy (nk_thread_queue_t * q)$/;"	f
nk_thread_queue_sleep	nautilus/thread.c	/^nk_thread_queue_sleep (nk_thread_queue_t * q)$/;"	f
nk_thread_queue_wake_all	nautilus/thread.c	/^nk_thread_queue_wake_all (nk_thread_queue_t * q)$/;"	f
nk_thread_queue_wake_one	nautilus/thread.c	/^nk_thread_queue_wake_one (nk_thread_queue_t * q)$/;"	f
nk_thread_run	nautilus/thread.c	/^int nk_thread_run(nk_thread_id_t t)$/;"	f
nk_thread_start	nautilus/thread.c	/^nk_thread_start (nk_thread_fun_t fun, $/;"	f
nk_ticket_lock	nautilus/ticketlock.c	/^nk_ticket_lock (nk_ticket_lock_t * l) $/;"	f
nk_ticket_lock_deinit	nautilus/ticketlock.c	/^nk_ticket_lock_deinit (nk_ticket_lock_t * l)$/;"	f
nk_ticket_lock_init	nautilus/ticketlock.c	/^nk_ticket_lock_init (nk_ticket_lock_t * l)$/;"	f
nk_ticket_trylock	nautilus/ticketlock.c	/^nk_ticket_trylock (nk_ticket_lock_t * l)$/;"	f
nk_ticket_unlock	nautilus/ticketlock.c	/^nk_ticket_unlock (nk_ticket_lock_t * l)$/;"	f
nk_timer_handler	dev/timer.c	/^nk_timer_handler (excp_entry_t * excp, excp_vec_t vec)$/;"	f
nk_timer_init	dev/timer.c	/^nk_timer_init (struct naut_info * naut)$/;"	f
nk_tls_get	nautilus/thread.c	/^nk_tls_get (nk_tls_key_t key) $/;"	f
nk_tls_key_create	nautilus/thread.c	/^nk_tls_key_create (nk_tls_key_t * key, void (*destructor)(void*))$/;"	f
nk_tls_key_delete	nautilus/thread.c	/^nk_tls_key_delete (nk_tls_key_t key)$/;"	f
nk_tls_set	nautilus/thread.c	/^nk_tls_set (nk_tls_key_t key, const void * val)$/;"	f
nk_tls_test	nautilus/thread.c	/^nk_tls_test (void)$/;"	f
nk_unmask_irq	nautilus/irq.c	/^nk_unmask_irq (uint8_t irq)$/;"	f
nk_vc_clear	nautilus/vc.c	/^int nk_vc_clear(uint8_t attr)$/;"	f
nk_vc_clear_specific	nautilus/vc.c	/^int nk_vc_clear_specific(struct nk_virtual_console *vc, uint8_t attr)$/;"	f
nk_vc_deinit	nautilus/vc.c	/^int nk_vc_deinit()$/;"	f
nk_vc_display_char	nautilus/vc.c	/^int nk_vc_display_char(uint8_t c, uint8_t attr, uint8_t x, uint8_t y) $/;"	f
nk_vc_display_char_specific	nautilus/vc.c	/^int nk_vc_display_char_specific(struct nk_virtual_console *vc,$/;"	f
nk_vc_get_keycode	nautilus/vc.c	/^nk_keycode_t nk_vc_get_keycode(int wait) $/;"	f
nk_vc_get_scancode	nautilus/vc.c	/^nk_scancode_t nk_vc_get_scancode(int wait)$/;"	f
nk_vc_getchar	nautilus/vc.c	/^int nk_vc_getchar()$/;"	f
nk_vc_getchar_extended	nautilus/vc.c	/^int nk_vc_getchar_extended(int wait)$/;"	f
nk_vc_gets	nautilus/vc.c	/^int nk_vc_gets(char *buf, int n, int display)$/;"	f
nk_vc_handle_input	nautilus/vc.c	/^int nk_vc_handle_input(nk_scancode_t scan) $/;"	f
nk_vc_init	nautilus/vc.c	/^int nk_vc_init() $/;"	f
nk_vc_is_active	nautilus/vc.c	/^inline int nk_vc_is_active()$/;"	f
nk_vc_log	nautilus/vc.c	/^int nk_vc_log(char *fmt, ...)$/;"	f
nk_vc_print	nautilus/vc.c	/^int nk_vc_print(char *s)$/;"	f
nk_vc_printf	nautilus/vc.c	/^int nk_vc_printf(char *fmt, ...)$/;"	f
nk_vc_putchar	nautilus/vc.c	/^int nk_vc_putchar(uint8_t c) $/;"	f
nk_vc_puts	nautilus/vc.c	/^int nk_vc_puts(char *s)$/;"	f
nk_vc_scrollup	nautilus/vc.c	/^int nk_vc_scrollup()$/;"	f
nk_vc_scrollup_specific	nautilus/vc.c	/^int nk_vc_scrollup_specific(struct nk_virtual_console *vc) $/;"	f
nk_vc_setattr	nautilus/vc.c	/^int nk_vc_setattr(uint8_t attr)$/;"	f
nk_vc_setattr_specific	nautilus/vc.c	/^int nk_vc_setattr_specific(struct nk_virtual_console *vc, uint8_t attr)$/;"	f
nk_vc_setpos	nautilus/vc.c	/^int nk_vc_setpos(uint8_t x, uint8_t y) $/;"	f
nk_vc_setpos_specific	nautilus/vc.c	/^int nk_vc_setpos_specific(struct nk_virtual_console *vc, uint8_t x, uint8_t y) $/;"	f
nk_vc_wait	nautilus/vc.c	/^void nk_vc_wait()$/;"	f
nk_virtual_console	nautilus/vc.c	/^struct nk_virtual_console {$/;"	s	file:
nk_vmm_continue_vm	nautilus/vmm.c	/^int nk_vmm_continue_vm(void *vm)$/;"	f
nk_vmm_deinit	nautilus/vmm.c	/^int nk_vmm_deinit()$/;"	f
nk_vmm_free_vm	nautilus/vmm.c	/^int nk_vmm_free_vm(void *vm)$/;"	f
nk_vmm_init	nautilus/vmm.c	/^int nk_vmm_init()$/;"	f
nk_vmm_move_vm_core	nautilus/vmm.c	/^int nk_vmm_move_vm_core(void *vm, int vcore, int pcore)$/;"	f
nk_vmm_move_vm_mem	nautilus/vmm.c	/^int nk_vmm_move_vm_mem(void *vm, void *gpa, int pcore)$/;"	f
nk_vmm_pause_vm	nautilus/vmm.c	/^int nk_vmm_pause_vm(void *vm)$/;"	f
nk_vmm_reset_vm	nautilus/vmm.c	/^int nk_vmm_reset_vm(void *vm)$/;"	f
nk_vmm_start_vm	nautilus/vmm.c	/^void *nk_vmm_start_vm(char *name, void *image, unsigned int cpu_mask) $/;"	f
nk_vmm_stop_vm	nautilus/vmm.c	/^int nk_vmm_stop_vm(void *vm)$/;"	f
nk_wait	nautilus/thread.c	/^nk_wait (nk_thread_id_t t)$/;"	f
nk_wake_waiters	nautilus/thread.c	/^nk_wake_waiters (void)$/;"	f
nk_yield	nautilus/thread.c	/^nk_yield (void)$/;"	f
nmgl	test/hpcg/hpcg-problem.h	/^    int64_t nmgl;$/;"	m	struct:Problem
no	legion_runtime/accessor.h	/^	typedef char no[1];$/;"	t	struct:LegionRuntime::Accessor::TemplateFu::IsAStruct
no	legion_runtime/legion.h	/^        typedef char no[1];$/;"	t	struct:LegionRuntime::HighLevel::LegionSerialization::HasSerialize
no	legion_runtime/legion.h	/^        typedef char no[1];$/;"	t	struct:LegionRuntime::HighLevel::LegionSerialization::IsAStruct
noLuaClosure	lua_src/ldebug.c	33;"	d	file:
no_pf	asm/excp_early.S	/^no_pf:$/;"	l
node	acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON struct acpi_namespace_node *node;$/;"	m	struct:acpi_notify_info	typeref:struct:acpi_notify_info::acpi_namespace_node
node	acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON struct acpi_namespace_node *node;$/;"	m	struct:acpi_scope_state	typeref:struct:acpi_scope_state::acpi_namespace_node
node	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *node;$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_namespace_node
node	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *node;$/;"	m	struct:acpi_gpe_notify_object	typeref:struct:acpi_gpe_notify_object::acpi_namespace_node
node	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *node;$/;"	m	struct:acpi_ns_search_data	typeref:struct:acpi_ns_search_data::acpi_namespace_node
node	legion_runtime/lowlevel.cc	/^      gasnet_node_t node;$/;"	m	struct:LegionRuntime::LowLevel::EventSubscribeArgs	file:
node	legion_runtime/lowlevel.cc	/^      gasnet_node_t node;$/;"	m	struct:LegionRuntime::LowLevel::EventTriggerArgs	file:
node	legion_runtime/lowlevel.cc	/^      gasnet_node_t node;$/;"	m	struct:LegionRuntime::LowLevel::LockReleaseArgs	file:
node	legion_runtime/lowlevel.cc	/^      gasnet_node_t node;$/;"	m	struct:LegionRuntime::LowLevel::LockRequestArgs	file:
node	legion_runtime/lowlevel_impl.h	/^      unsigned node(void) const { return ((value >> INDEX_BITS) & ((1U << NODE_BITS)-1)); }$/;"	f	class:LegionRuntime::LowLevel::ID
node	legion_runtime/region_tree.h	/^      RegionTreeNode *node;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
node_announce_handler	legion_runtime/lowlevel.cc	/^    void node_announce_handler(Machine::NodeAnnounceData annc_data, const void *data, size_t datalen)$/;"	f	namespace:LegionRuntime::LowLevel
node_flags	acpi/acpica/aclocal.h	/^	u8 node_flags;$/;"	m	struct:acpi_predefined_data
node_gpus	legion_runtime/lowlevel_gpu.cc	/^      GPUProcessor **node_gpus;$/;"	m	struct:LegionRuntime::LowLevel::gpu_dma_args	file:
node_gpus	legion_runtime/lowlevel_gpu.cc	/^    \/*static*\/ GPUProcessor** GPUProcessor::node_gpus;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor	file:
node_gpus	legion_runtime/lowlevel_gpu.h	/^      static GPUProcessor **node_gpus;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor
node_id	legion_runtime/lowlevel.cc	/^      gasnet_node_t node_id;$/;"	m	struct:LegionRuntime::LowLevel::Machine::NodeAnnounceData	file:
node_locations	test/circuit.h	/^  LogicalPartition node_locations;$/;"	m	struct:Partitions
node_locator	test/circuit.h	/^  LogicalRegion node_locator;$/;"	m	struct:Circuit
node_lock	legion_runtime/region_tree.h	/^      Reservation node_lock;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
node_lock	legion_runtime/region_tree.h	/^      Reservation node_lock;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
node_lock	legion_runtime/region_tree.h	/^      Reservation node_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
nodes	acpi/acpica/aclocal.h	/^	u32 nodes;$/;"	m	struct:acpi_integrity_info
nodes	legion_runtime/lowlevel_impl.h	/^      Node *nodes;$/;"	m	class:Runtime
noenv	lua_src/loadlib.c	/^static int noenv (lua_State *L) {$/;"	f	file:
noextrachars	lua_src/lua.c	356;"	d	file:
non0sInRow	test/hpcg/hpcg-problem-generator.h	/^    uint8_t *non0sInRow;$/;"	m	struct:ProblemGenerator
non_dominated	legion_runtime/region_tree.h	/^      FieldMask non_dominated;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
non_dominated	legion_runtime/region_tree.h	/^      FieldMask non_dominated;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
nospecials	lua_src/lstrlib.c	/^static int nospecials (const char *p, size_t l) {$/;"	f	file:
not_pred_op_lock	legion_runtime/runtime.h	/^      Reservation not_pred_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
notify	acpi/acpica/aclocal.h	/^	struct acpi_notify_info notify;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_notify_info
notify_activate	legion_runtime/region_tree.cc	/^    void CompositeView::notify_activate(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
notify_activate	legion_runtime/region_tree.cc	/^    void MaterializedView::notify_activate(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
notify_activate	legion_runtime/region_tree.cc	/^    void PhysicalManager::notify_activate(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
notify_activate	legion_runtime/region_tree.cc	/^    void ReductionView::notify_activate(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
notify_activate	legion_runtime/runtime.cc	/^    void Future::Impl::notify_activate(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
notify_commit_dependence	legion_runtime/legion_ops.cc	/^    void Operation::notify_commit_dependence(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
notify_failed_mapping	legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_failed_mapping(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_invalid	legion_runtime/region_tree.cc	/^    void CompositeView::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
notify_invalid	legion_runtime/region_tree.cc	/^    void InstanceManager::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
notify_invalid	legion_runtime/region_tree.cc	/^    void MaterializedView::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
notify_invalid	legion_runtime/region_tree.cc	/^    void ReductionManager::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
notify_invalid	legion_runtime/region_tree.cc	/^    void ReductionView::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
notify_invalid	legion_runtime/runtime.cc	/^    void Future::Impl::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
notify_mapping	legion_runtime/mapping_utilities.cc	/^      void MappingMemoizer::notify_mapping(Processor target, const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
notify_mapping_dependence	legion_runtime/legion_ops.cc	/^    void Operation::notify_mapping_dependence(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
notify_mapping_failed	legion_runtime/default_mapper.cc	/^    void DefaultMapper::notify_mapping_failed(const Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
notify_mapping_failed	legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_mapping_failed(const Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_mapping_failed	test/circuit_mapper.cc	/^void CircuitMapper::notify_mapping_failed(const Mappable *mappable)$/;"	f	class:CircuitMapper
notify_mapping_result	legion_runtime/default_mapper.cc	/^    void DefaultMapper::notify_mapping_result(const Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
notify_mapping_result	legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_mapping_result(const Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_mapping_result	legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_mapping_result(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_mapping_result	test/custom_mapper.cc	/^void AdversarialMapper::notify_mapping_result(const Mappable *mappable)$/;"	f	class:AdversarialMapper
notify_new_remote	legion_runtime/region_tree.cc	/^    void PhysicalManager::notify_new_remote(AddressSpaceID sid)$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
notify_new_remote	legion_runtime/runtime.cc	/^    void Future::Impl::notify_new_remote(AddressSpaceID sid)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
notify_pending_shutdown	legion_runtime/runtime.cc	/^    void ProcessorManager::notify_pending_shutdown(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
notify_predicate_value	legion_runtime/legion_ops.cc	/^    void AndPredOp::notify_predicate_value(GenerationID pred_gen, bool value)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
notify_predicate_value	legion_runtime/legion_ops.cc	/^    void NotPredOp::notify_predicate_value(GenerationID prev_gen, bool value)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
notify_predicate_value	legion_runtime/legion_ops.cc	/^    void OrPredOp::notify_predicate_value(GenerationID pred_gen, bool value)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
notify_predicate_value	legion_runtime/legion_ops.cc	/^    void SpeculativeOp::notify_predicate_value(GenerationID pred_gen,bool value)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
notify_profiling_info	legion_runtime/default_mapper.cc	/^    void DefaultMapper::notify_profiling_info(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
notify_profiling_info	legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_profiling_info(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_profiling_info	legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_profiling_info(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_regions_verified	legion_runtime/legion_ops.cc	/^    void Operation::notify_regions_verified(const std::set<unsigned> &regions,$/;"	f	class:LegionRuntime::HighLevel::Operation
notify_speculation_dependence	legion_runtime/legion_ops.cc	/^    void Operation::notify_speculation_dependence(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
notify_subop_commit	legion_runtime/legion_ops.cc	/^    void MustEpochOp::notify_subop_commit(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
notify_subop_complete	legion_runtime/legion_ops.cc	/^    void MustEpochOp::notify_subop_complete(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
notify_valid	legion_runtime/region_tree.cc	/^    void CompositeView::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
notify_valid	legion_runtime/region_tree.cc	/^    void InstanceManager::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
notify_valid	legion_runtime/region_tree.cc	/^    void MaterializedView::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
notify_valid	legion_runtime/region_tree.cc	/^    void PhysicalManager::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
notify_valid	legion_runtime/region_tree.cc	/^    void ReductionView::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
notify_valid	legion_runtime/runtime.cc	/^    void Future::Impl::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
npx	test/hpcg/geometry.h	/^    int64_t npx;$/;"	m	struct:lgncg::Geometry
npx	test/hpcg/hpcg-main.cc	/^    int64_t npx, npy, npz;$/;"	m	struct:__anon37::DriverParams	file:
npy	test/hpcg/geometry.h	/^    int64_t npy;$/;"	m	struct:lgncg::Geometry
npy	test/hpcg/hpcg-main.cc	/^    int64_t npx, npy, npz;$/;"	m	struct:__anon37::DriverParams	file:
npz	test/hpcg/geometry.h	/^    int64_t npz;$/;"	m	struct:lgncg::Geometry
npz	test/hpcg/hpcg-main.cc	/^    int64_t npx, npy, npz;$/;"	m	struct:__anon37::DriverParams	file:
nresults	lua_src/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
null_check	legion_runtime/lowlevel.cc	/^    inline T *null_check(T *ptr)$/;"	f	namespace:LegionRuntime::LowLevel
null_excp_handler	nautilus/idt.c	/^null_excp_handler (excp_entry_t * excp,$/;"	f
null_irq_handler	nautilus/idt.c	/^null_irq_handler (excp_entry_t * excp,$/;"	f
null_kick	dev/apic.c	/^null_kick (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
num_args	legion_runtime/activemsg.cc	/^  unsigned num_args;$/;"	m	struct:OutgoingMessage	file:
num_blocks	test/saxpy_array.cc	/^  unsigned num_blocks;$/;"	m	struct:MainArgs	file:
num_carats	acpi/acpica/aclocal.h	/^	u32 num_carats;$/;"	m	struct:acpi_namestring_info
num_completed	acpi/acpica/aclocal.h	/^	u32 num_completed;$/;"	m	struct:acpi_db_method_info
num_created	acpi/acpica/aclocal.h	/^	u32 num_created;$/;"	m	struct:acpi_db_method_info
num_dma_threads	legion_runtime/shared_lowlevel.cc	/^      const unsigned num_dma_threads;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
num_elements	legion_runtime/lowlevel.h	/^      int num_elements;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
num_elems	test/saxpy_array.cc	/^  unsigned num_elems;$/;"	m	struct:MainArgs	file:
num_elmts	legion_runtime/lowlevel_impl.h	/^	size_t num_elmts;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
num_elmts	legion_runtime/shared_lowlevel.cc	/^	size_t num_elmts;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
num_elmts	legion_runtime/shared_lowlevel.cc	/^	size_t num_elmts;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
num_fields	legion_runtime/lowlevel.cc	/^      size_t num_fields; \/\/ as long as it needs to be$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
num_has	lua_src/lua.c	365;"	d	file:
num_idle_tasks	legion_runtime/shared_lowlevel.cc	/^        unsigned num_idle_tasks; \/\/ number of idle tasks enabled for the utility processor$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
num_lmbs	legion_runtime/activemsg.cc	/^static int num_lmbs = 2;$/;"	v	file:
num_local_procs	legion_runtime/lowlevel_impl.h	/^      int num_local_procs;$/;"	m	class:LegionRuntime::LowLevel::ProcessorAssignment
num_loops	acpi/acpica/aclocal.h	/^	u32 num_loops;$/;"	m	struct:acpi_db_method_info
num_memories	legion_runtime/lowlevel.cc	/^      unsigned num_memories;$/;"	m	struct:LegionRuntime::LowLevel::Machine::NodeAnnounceData	file:
num_node_gpus	legion_runtime/lowlevel_gpu.cc	/^      size_t num_node_gpus;$/;"	m	struct:LegionRuntime::LowLevel::gpu_dma_args	file:
num_node_gpus	legion_runtime/lowlevel_gpu.cc	/^    \/*static*\/ size_t GPUProcessor::num_node_gpus;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor	file:
num_node_gpus	legion_runtime/lowlevel_gpu.h	/^      static size_t num_node_gpus;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor
num_nodes	legion_runtime/lowlevel_impl.h	/^      int num_nodes;$/;"	m	class:LegionRuntime::LowLevel::GASNetMemory
num_nodes	test/circuit.h	/^  unsigned      num_nodes;$/;"	m	struct:CircuitPiece
num_packages	acpi/acpica/aclocal.h	/^	u32 num_packages;$/;"	m	struct:acpi_pkg_state
num_polling_threads	legion_runtime/activemsg.cc	/^static int num_polling_threads = 0;$/;"	v	file:
num_procs	legion_runtime/lowlevel.cc	/^      unsigned num_procs;$/;"	m	struct:LegionRuntime::LowLevel::Machine::NodeAnnounceData	file:
num_profiling_nodes	legion_runtime/runtime.cc	/^    \/*static*\/ int Runtime::num_profiling_nodes = -1;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
num_profiling_nodes	legion_runtime/runtime.h	/^      static int num_profiling_nodes;$/;"	m	class:LegionRuntime::HighLevel::Runtime
num_readers	acpi/acpica/aclocal.h	/^	u32 num_readers;$/;"	m	struct:acpi_rw_lock
num_segments	acpi/acpica/aclocal.h	/^	u32 num_segments;$/;"	m	struct:acpi_namestring_info
num_sending_threads	legion_runtime/activemsg.cc	/^static int num_sending_threads = 0;$/;"	v	file:
num_threads	acpi/acpica/aclocal.h	/^	u32 num_threads;$/;"	m	struct:acpi_db_method_info
num_threads	legion_runtime/lowlevel_dma.cc	/^    static int num_threads = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
num_threads	nautilus/vc.c	/^  uint32_t num_threads;$/;"	m	struct:nk_virtual_console	file:
num_threads_str	acpi/acpica/aclocal.h	/^	char num_threads_str[11];$/;"	m	struct:acpi_db_method_info
num_uncommitted_points	legion_runtime/legion_tasks.h	/^      unsigned num_uncommitted_points;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
num_uncomplete_points	legion_runtime/legion_tasks.h	/^      unsigned num_uncomplete_points;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
num_unmapped_points	legion_runtime/legion_tasks.h	/^      unsigned num_unmapped_points;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
num_virtual_mappings	legion_runtime/legion_tasks.h	/^      unsigned num_virtual_mappings;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
num_wires	test/circuit.h	/^  unsigned      num_wires;$/;"	m	struct:CircuitPiece
num_worker_threads	legion_runtime/lowlevel_impl.h	/^      int num_worker_threads;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
num_writes	legion_runtime/lowlevel.cc	/^      unsigned num_writes;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteFenceArgs	file:
num_writes	legion_runtime/lowlevel_dma.cc	/^      unsigned sequence_id, num_writes;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
numa_current_task	test/circuit.cc	/^    void * numa_current_task[8] = {0,0,0,0,0,0,0,0};$/;"	m	namespace:TaskHelper	file:
number	nautilus/printk.c	/^static char *number(char *buf, char *end, unsigned long long num,$/;"	f	file:
numerator	legion_runtime/legion_utilities.h	/^      T numerator;$/;"	m	class:LegionRuntime::HighLevel::Fraction
numusearray	lua_src/ltable.c	/^static int numusearray (const Table *t, int *nums) {$/;"	f	file:
numusehash	lua_src/ltable.c	/^static int numusehash (const Table *t, int *nums, int *pnasize) {$/;"	f	file:
nx	test/hpcg/geometry.h	/^    int64_t nx;$/;"	m	struct:lgncg::Geometry
nx	test/hpcg/hpcg-main.cc	/^    int64_t nx, ny, nz;$/;"	m	struct:__anon37::DriverParams	file:
ny	test/hpcg/geometry.h	/^    int64_t ny;$/;"	m	struct:lgncg::Geometry
ny	test/hpcg/hpcg-main.cc	/^    int64_t nx, ny, nz;$/;"	m	struct:__anon37::DriverParams	file:
nz	test/hpcg/geometry.h	/^    int64_t nz;$/;"	m	struct:lgncg::Geometry
nz	test/hpcg/hpcg-main.cc	/^    int64_t nx, ny, nz;$/;"	m	struct:__anon37::DriverParams	file:
nzir	test/hpcg/sparsemat.h	/^    Vector nzir;$/;"	m	struct:lgncg::SparseMatrix
oas_by_inst	legion_runtime/lowlevel_dma.cc	/^      OASByInst *oas_by_inst;$/;"	m	class:LegionRuntime::LowLevel::CopyRequest	file:
oas_vec	legion_runtime/lowlevel_dma.cc	/^      OASVec &oas_vec;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier	file:
oas_vec	legion_runtime/lowlevel_dma.cc	/^      OASVec &oas_vec;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
obj_desc	acpi/acpica/aclocal.h	/^	    union acpi_operand_object *obj_desc[ACPI_RESULTS_FRAME_OBJ_NUM];$/;"	m	struct:acpi_result_values	typeref:union:acpi_result_values::acpi_operand_object
object	acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON union acpi_operand_object *object;$/;"	m	struct:acpi_update_state	typeref:union:acpi_update_state::acpi_operand_object
object	acpi/acpica/aclocal.h	/^	union acpi_operand_object *object;	\/* Interpreter object *\/$/;"	m	struct:acpi_namespace_node	typeref:union:acpi_namespace_node::acpi_operand_object
object_type	acpi/acpica/aclocal.h	/^	u8 object_type;		\/* Corresponding internal object type *\/$/;"	m	struct:acpi_opcode_info
object_type	acpi/acpica/aclocal.h	/^	u8 object_type[2];$/;"	m	struct:acpi_package_info3
object_type	acpi/acpica/aclocal.h	/^	u8 object_type[4];$/;"	m	struct:acpi_package_info2
object_type1	acpi/acpica/aclocal.h	/^	u8 object_type1;$/;"	m	struct:acpi_package_info
object_type2	acpi/acpica/aclocal.h	/^	u8 object_type2;$/;"	m	struct:acpi_package_info
objects	acpi/acpica/aclocal.h	/^	u32 objects;$/;"	m	struct:acpi_integrity_info
observed	legion_runtime/region_tree.h	/^      FieldMask observed;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
observed_mask	legion_runtime/region_tree.h	/^      FieldMask observed_mask;$/;"	m	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
observed_messages	legion_runtime/activemsg.cc	/^  std::map<int\/*message id*\/,ChunkInfo> observed_messages;$/;"	m	class:ActiveMessageEndpoint	file:
offset	legion_runtime/accessor.h	/^      int offset;$/;"	m	class:LegionRuntime::Accessor::ByteOffset
offset	legion_runtime/arrays.h	/^      Point<DIM> offset;$/;"	m	class:LegionRuntime::Arrays::Translation
offset	legion_runtime/arrays.h	/^      int offset;$/;"	m	class:LegionRuntime::Arrays::Linearization
offset	legion_runtime/lowlevel.cc	/^      off_t offset;$/;"	m	struct:LegionRuntime::LowLevel::RemoteRedListArgs	file:
offset	legion_runtime/lowlevel.cc	/^      off_t offset;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
offset	legion_runtime/lowlevel.cc	/^      off_t offset;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteArgs	file:
offset	legion_runtime/lowlevel.h	/^	unsigned offset, size;$/;"	m	struct:LegionRuntime::LowLevel::Domain::CopySrcDstField
offset	legion_runtime/lowlevel.h	/^      off_t offset;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
offsetMismatch	test/hpcg/utils.h	/^offsetMismatch(int i,$/;"	f	namespace:lgncg
offset_lock	legion_runtime/region_tree.h	/^      Reservation offset_lock; $/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
offset_mask	legion_runtime/region_tree.h	/^        FieldMask offset_mask;$/;"	m	struct:LegionRuntime::HighLevel::InstanceManager::OffsetEntry
offset_mask	legion_runtime/region_tree.h	/^        FieldMask offset_mask;$/;"	m	struct:LegionRuntime::HighLevel::LayoutDescription::OffsetEntry
offset_size_map	legion_runtime/region_tree.h	/^      std::map<unsigned\/*offset*\/,unsigned\/*size*\/> offset_size_map;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
offsets	legion_runtime/lowlevel_dma.cc	/^	std::vector<off_t> offsets;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
offsets	legion_runtime/lowlevel_dma.cc	/^	std::vector<off_t> offsets;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
offsets	legion_runtime/region_tree.h	/^        std::vector<Domain::CopySrcDstField> offsets;$/;"	m	struct:LegionRuntime::HighLevel::InstanceManager::OffsetEntry
offsets	legion_runtime/region_tree.h	/^        std::vector<Domain::CopySrcDstField> offsets;$/;"	m	struct:LegionRuntime::HighLevel::LayoutDescription::OffsetEntry
offsetsAreDense	test/hpcg/utils.h	/^offsetsAreDense(const Rect<DIM> &bounds,$/;"	f	namespace:lgncg
one	legion_runtime/legion_logging.h	/^        Event one;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventDependency
op	acpi/acpica/aclocal.h	/^	union acpi_parse_object *op;	\/* Current op being parsed *\/$/;"	m	struct:acpi_pscope_state	typeref:union:acpi_pscope_state::acpi_parse_object
op	acpi/acpica/aclocal.h	/^	union acpi_parse_object *op;$/;"	m	struct:acpi_namespace_node	typeref:union:acpi_namespace_node::acpi_parse_object
op	legion_runtime/region_tree.h	/^      Operation *const op;$/;"	m	class:LegionRuntime::HighLevel::LogicalOpAnalyzer
op	legion_runtime/region_tree.h	/^      Operation *const op;$/;"	m	class:LegionRuntime::HighLevel::LogicalPathRegistrar
op	legion_runtime/region_tree.h	/^      Operation *const op;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegistrar
op	legion_runtime/region_tree.h	/^      Operation *op;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
op	legion_runtime/region_tree.h	/^      const ReductionOp *const op;$/;"	m	class:LegionRuntime::HighLevel::ReductionManager
op	legion_runtime/runtime.h	/^        Operation *op;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::DeferredTriggerArgs
op	legion_runtime/runtime.h	/^        Operation *op;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerOpArgs
op	legion_runtime/runtime.h	/^        TaskOp *op;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerTaskArgs
op1_idx	legion_runtime/legion_ops.h	/^        unsigned op1_idx;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
op2_idx	legion_runtime/legion_ops.h	/^        unsigned op2_idx;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
op_lock	legion_runtime/legion_ops.h	/^      Reservation op_lock;$/;"	m	class:LegionRuntime::HighLevel::Operation
op_map	legion_runtime/legion_trace.h	/^      std::map<std::pair<Operation*,GenerationID>,unsigned> op_map;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
opcode	acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON u16 opcode;$/;"	m	struct:acpi_control_state
open_children	legion_runtime/region_tree.h	/^      std::map<Color,FieldMask> open_children;$/;"	m	struct:LegionRuntime::HighLevel::ChildState
open_children	legion_runtime/region_tree.h	/^      std::map<CompositeNode*,ChildInfo> open_children;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
open_fields	legion_runtime/region_tree.h	/^        FieldMask open_fields;$/;"	m	struct:LegionRuntime::HighLevel::CompositeNode::ChildInfo
open_func	lua_src/lparser.c	/^static void open_func (LexState *ls, FuncState *fs, BlockCnt *bl) {$/;"	f	file:
open_logical_node	legion_runtime/region_tree.cc	/^    void RegionTreeNode::open_logical_node(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
open_state	legion_runtime/region_tree.h	/^      OpenState open_state;$/;"	m	struct:LegionRuntime::HighLevel::FieldState
opencheck	lua_src/liolib.c	/^static void opencheck (lua_State *L, const char *fname, const char *mode) {$/;"	f	file:
operation_idx	legion_runtime/legion_trace.h	/^        int operation_idx;$/;"	m	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
operations	legion_runtime/legion_trace.h	/^      std::vector<std::pair<Operation*,GenerationID> > operations;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
operator !	legion_runtime/common.h	/^  inline bool operator!(void) const { return (value == (unsigned)-1); }$/;"	f	struct:ptr_t
operator !	legion_runtime/common.h	/^  inline bool operator!(void) const { return (value == (unsigned)-1); }$/;"	f	struct:utptr_t
operator !	legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator !	legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator !	legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator !	legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator !	legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator !	legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator !	legion_runtime/lowlevel.cc	/^    bool ElementMask::operator!(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator !	legion_runtime/shared_lowlevel.cc	/^    bool ElementMask::operator!(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator !=	legion_runtime/accessor.h	/^      bool operator!=(const ByteOffset rhs) const { return offset != rhs.offset; }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator !=	legion_runtime/arrays.h	/^      bool operator!=(const Point<DIM>& other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator !=	legion_runtime/arrays.h	/^      bool operator!=(const Rect<DIM>& other)$/;"	f	class:LegionRuntime::Arrays::Rect
operator !=	legion_runtime/common.h	/^  inline bool operator!=(const ptr_t &ptr) const { return (ptr.value != this->value); }$/;"	f	struct:ptr_t
operator !=	legion_runtime/common.h	/^  inline bool operator!=(const ptr_t<T> &ptr) const { return (ptr.value != this->value); }$/;"	f	struct:ptr_t
operator !=	legion_runtime/common.h	/^  inline bool operator!=(const utptr_t &ptr) const { return (ptr.value != this->value); }$/;"	f	struct:utptr_t
operator !=	legion_runtime/legion.h	/^    inline bool FieldSpace::operator!=(const FieldSpace &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
operator !=	legion_runtime/legion.h	/^    inline bool LogicalPartition::operator!=(const LogicalPartition &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
operator !=	legion_runtime/legion.h	/^    inline bool LogicalRegion::operator!=(const LogicalRegion &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
operator !=	legion_runtime/legion.h	/^    inline bool Predicate::operator!=(const Predicate &p) const$/;"	f	class:LegionRuntime::HighLevel::Predicate
operator !=	legion_runtime/legion_allocation.h	/^      inline bool operator!=(LegionAllocator const& a) const$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
operator !=	legion_runtime/legion_utilities.h	/^      inline bool operator!=(const RegionUsage &rhs) const$/;"	f	struct:LegionRuntime::HighLevel::RegionUsage
operator !=	legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::operator!=(const AVXBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator !=	legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::operator!=(const AVXTLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator !=	legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::operator!=(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator !=	legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::operator!=(const SSEBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator !=	legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::operator!=(const SSETLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator !=	legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::operator!=($/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator !=	legion_runtime/lowlevel.cc	/^    bool ElementMask::operator!=(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator !=	legion_runtime/lowlevel.h	/^      bool operator!=(const Domain &rhs) const { return !(*this == rhs); }$/;"	f	class:LegionRuntime::LowLevel::Domain
operator !=	legion_runtime/lowlevel.h	/^      bool operator!=(const Event& rhs) const { return (id != rhs.id) || (gen != rhs.gen); }$/;"	f	class:LegionRuntime::LowLevel::Event
operator !=	legion_runtime/lowlevel.h	/^      bool operator!=(const IndexSpace &rhs) const { return id != rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
operator !=	legion_runtime/lowlevel.h	/^      bool operator!=(const Memory &rhs) const { return id != rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Memory
operator !=	legion_runtime/lowlevel.h	/^      bool operator!=(const Processor& rhs) const { return id != rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Processor
operator !=	legion_runtime/lowlevel.h	/^      bool operator!=(const RegionInstance &rhs) const { return id != rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
operator !=	legion_runtime/lowlevel.h	/^      bool operator!=(const RegionInstanceAccessorUntyped<AccessorArray> &rhs) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
operator !=	legion_runtime/lowlevel.h	/^      bool operator!=(const Reservation& rhs) const { return id != rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Reservation
operator !=	legion_runtime/shared_lowlevel.cc	/^    bool ElementMask::operator!=(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator &	legion_runtime/legion.h	/^    inline AllocateMode operator&(AllocateMode left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &	legion_runtime/legion.h	/^    inline PrivilegeMode operator&(PrivilegeMode left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &	legion_runtime/legion.h	/^    inline RegionFlags operator&(RegionFlags left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &	legion_runtime/legion_utilities.h	/^                BitMask<T,MAX,SHIFT,MASK>::operator&(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator &	legion_runtime/legion_utilities.h	/^          TLBitMask<T,MAX,SHIFT,MASK>::operator&(const TLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator &	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator&($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator &	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator&($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator &	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator&($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator &	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator&($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator &	legion_runtime/lowlevel.cc	/^    ElementMask ElementMask::operator&(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator &	legion_runtime/shared_lowlevel.cc	/^    ElementMask ElementMask::operator&(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator &=	legion_runtime/legion.h	/^    inline AllocateMode operator&=(AllocateMode &left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &=	legion_runtime/legion.h	/^    inline PrivilegeMode operator&=(PrivilegeMode &left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &=	legion_runtime/legion.h	/^    inline RegionFlags operator&=(RegionFlags &left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &=	legion_runtime/legion_utilities.h	/^                      BitMask<T,MAX,SHIFT,MASK>::operator&=(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator &=	legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator&=(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator &=	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator&=(const AVXBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator &=	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator&=($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator &=	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator&=(const SSEBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator &=	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator&=($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator &=	legion_runtime/lowlevel.cc	/^    ElementMask& ElementMask::operator&=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator &=	legion_runtime/shared_lowlevel.cc	/^    ElementMask& ElementMask::operator&=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator ()	legion_runtime/arrays.h	/^	bool operator()(const Point<DIM>& a, const Point<DIM>& b) const$/;"	f	struct:LegionRuntime::Arrays::Point::STLComparator
operator ()	legion_runtime/legion_utilities.h	/^    inline __m128i& SSEBitMask<MAX>::operator()(const unsigned int &idx)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ()	legion_runtime/legion_utilities.h	/^    inline __m128i& SSETLBitMask<MAX>::operator()(const unsigned int &idx)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator ()	legion_runtime/legion_utilities.h	/^    inline __m256i& AVXBitMask<MAX>::operator()(const unsigned int &idx)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ()	legion_runtime/legion_utilities.h	/^    inline __m256i& AVXTLBitMask<MAX>::operator()(const unsigned int &idx)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ()	legion_runtime/legion_utilities.h	/^    inline const __m128i& SSEBitMask<MAX>::operator()($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ()	legion_runtime/legion_utilities.h	/^    inline const __m128i& SSETLBitMask<MAX>::operator()($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator ()	legion_runtime/legion_utilities.h	/^    inline const __m256i& AVXBitMask<MAX>::operator()($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ()	legion_runtime/legion_utilities.h	/^    inline const __m256i& AVXTLBitMask<MAX>::operator()($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ()	legion_runtime/lowlevel.h	/^	bool operator()(const DomainPoint& a, const DomainPoint& b) const$/;"	f	struct:LegionRuntime::LowLevel::DomainPoint::STLComparator
operator ()	legion_runtime/rectangle_set.h	/^      bool operator()(const Segment<T> *left, const Segment<T> *right)$/;"	f	class:LegionRuntime::HighLevel::SegmentComparator
operator ()	legion_runtime/rectangle_set.h	/^      bool operator()(const Segment<T> *left, const Segment<T> *right)$/;"	f	struct:LegionRuntime::HighLevel::MergeComparator
operator ()	legion_runtime/rectangle_set.h	/^      bool operator()(const Segment<T> *left, const Segment<T> *right)$/;"	f	struct:LegionRuntime::HighLevel::SplitComparator
operator ()	legion_runtime/utilities.h	/^      inline void operator()(int level, const char *fmt, ...) __attribute__((format (printf, 3, 4)))$/;"	f	class:LegionRuntime::Logger::Category
operator *	legion_runtime/accessor.h	/^      ByteOffset operator*(int scale) const { return ByteOffset(offset * scale); }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator *	legion_runtime/accessor.h	/^    inline ByteOffset operator*(int scale, const ByteOffset rhs) { return ByteOffset(scale * rhs.offset); }$/;"	f	namespace:LegionRuntime::Accessor
operator *	legion_runtime/arrays.h	/^      Point<DIM> operator*(const Point<DIM> other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator *	legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::operator*(const AVXBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator *	legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::operator*(const AVXTLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator *	legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::operator*(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator *	legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::operator*(const SSEBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator *	legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::operator*(const SSETLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator *	legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::operator*(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator *=	legion_runtime/accessor.h	/^      ByteOffset& operator*=(int scale) { offset *= scale; return *this; }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator +	legion_runtime/accessor.h	/^      ByteOffset operator+(const ByteOffset rhs) const { return ByteOffset(offset + rhs.offset); }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator +	legion_runtime/accessor.h	/^    inline T* operator+(T *ptr, const ByteOffset offset) { return offset.add_to_pointer(ptr); }$/;"	f	namespace:LegionRuntime::Accessor
operator +	legion_runtime/arrays.h	/^      Point<DIM> operator+(const Point<DIM> other) const { return sum(*this, other); }$/;"	f	class:LegionRuntime::Arrays::Point
operator +	legion_runtime/arrays.h	/^      Point<DIM> operator+(const Point<DIM> other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator +	legion_runtime/common.h	/^  inline ptr_t operator+(const ptr_t &ptr) const { return ptr_t(value + ptr.value); }$/;"	f	struct:ptr_t
operator +	legion_runtime/common.h	/^  inline ptr_t operator+(int offset) const { return ptr_t(value + offset); }$/;"	f	struct:ptr_t
operator +	legion_runtime/common.h	/^  inline ptr_t operator+(unsigned offset) const { return ptr_t(value + offset); }$/;"	f	struct:ptr_t
operator +	legion_runtime/common.h	/^  inline ptr_t<T> operator+(const ptr_t<T> &ptr) const { return ptr_t<T>(value + ptr.value); }$/;"	f	struct:ptr_t
operator +	legion_runtime/common.h	/^  inline ptr_t<T> operator+(const utptr_t &ptr) const { return ptr_t<T>(value + ptr.value); }$/;"	f	struct:ptr_t
operator +	legion_runtime/common.h	/^  inline ptr_t<T> operator+(int offset) const { return ptr_t<T>(value + offset); }$/;"	f	struct:ptr_t
operator +	legion_runtime/common.h	/^  inline ptr_t<T> operator+(unsigned offset) const { return ptr_t<T>(value + offset); }$/;"	f	struct:ptr_t
operator +	legion_runtime/common.h	/^  inline utptr_t operator+(const ptr_t<T> &ptr) const { return utptr_t(value + ptr.value); }$/;"	f	struct:utptr_t
operator +	legion_runtime/common.h	/^  inline utptr_t operator+(const utptr_t &ptr) const { return utptr_t(value + ptr.value); }$/;"	f	struct:utptr_t
operator +	legion_runtime/common.h	/^  inline utptr_t operator+(int offset) const { return utptr_t(value + offset); }$/;"	f	struct:utptr_t
operator +	legion_runtime/common.h	/^  inline utptr_t operator+(unsigned offset) const { return utptr_t(value + offset); }$/;"	f	struct:utptr_t
operator ++	legion_runtime/arrays.h	/^      GenericDenseSubrectIterator& operator++(int \/*i am postfix*\/) { step(); return *this; }$/;"	f	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
operator ++	legion_runtime/arrays.h	/^      GenericLinearSubrectIterator& operator++(int \/*i am postfix*\/) { step(); return *this; }$/;"	f	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
operator ++	legion_runtime/arrays.h	/^      GenericPointInRectIterator& operator++(int \/*i am postfix*\/) { step(); return *this; }$/;"	f	class:LegionRuntime::Arrays::GenericPointInRectIterator
operator ++	legion_runtime/common.h	/^  inline ptr_t operator++(int) { value++; return *this; }$/;"	f	struct:ptr_t
operator ++	legion_runtime/common.h	/^  inline ptr_t& operator++(void) { value++; return *this; }$/;"	f	struct:ptr_t
operator ++	legion_runtime/common.h	/^  inline ptr_t<T> operator++(int) { value++; return *this; }$/;"	f	struct:ptr_t
operator ++	legion_runtime/common.h	/^  inline ptr_t<T>& operator++(void) { value++; return *this; }$/;"	f	struct:ptr_t
operator ++	legion_runtime/common.h	/^  inline utptr_t operator++(int) { value++; return *this; }$/;"	f	struct:utptr_t
operator ++	legion_runtime/common.h	/^  inline utptr_t& operator++(void) { value++; return *this; }$/;"	f	struct:utptr_t
operator ++	legion_runtime/lowlevel.h	/^	DomainPointIterator& operator++(int \/*i am postfix*\/) { step(); return *this; }$/;"	f	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
operator +=	legion_runtime/accessor.h	/^      ByteOffset& operator+=(ByteOffset rhs) { offset += rhs.offset; return *this; }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator +=	legion_runtime/accessor.h	/^    inline T*& operator+=(T *&ptr, const ByteOffset offset) { ptr = offset.add_to_pointer(ptr); return ptr; }$/;"	f	namespace:LegionRuntime::Accessor
operator -	legion_runtime/arrays.h	/^      Point<DIM> operator-(const Point<DIM> other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator -	legion_runtime/common.h	/^  inline ptr_t operator-(const ptr_t &ptr) const { return ptr_t(value - ptr.value); }$/;"	f	struct:ptr_t
operator -	legion_runtime/common.h	/^  inline ptr_t operator-(int offset) const { return ptr_t(value - offset); }$/;"	f	struct:ptr_t
operator -	legion_runtime/common.h	/^  inline ptr_t operator-(unsigned offset) const { return ptr_t(value - offset); }$/;"	f	struct:ptr_t
operator -	legion_runtime/common.h	/^  inline ptr_t<T> operator-(const ptr_t<T> &ptr) const { return ptr_t<T>(value - ptr.value); }$/;"	f	struct:ptr_t
operator -	legion_runtime/common.h	/^  inline ptr_t<T> operator-(const utptr_t &ptr) const { return ptr_t<T>(value - ptr.value); }$/;"	f	struct:ptr_t
operator -	legion_runtime/common.h	/^  inline ptr_t<T> operator-(int offset) const { return ptr_t<T>(value - offset); }$/;"	f	struct:ptr_t
operator -	legion_runtime/common.h	/^  inline ptr_t<T> operator-(unsigned offset) const { return ptr_t<T>(value - offset); }$/;"	f	struct:ptr_t
operator -	legion_runtime/common.h	/^  inline utptr_t operator-(const ptr_t<T> &ptr) const { return utptr_t(value - ptr.value); }$/;"	f	struct:utptr_t
operator -	legion_runtime/common.h	/^  inline utptr_t operator-(const utptr_t &ptr) const { return utptr_t(value - ptr.value); }$/;"	f	struct:utptr_t
operator -	legion_runtime/common.h	/^  inline utptr_t operator-(int offset) const { return utptr_t(value - offset); }$/;"	f	struct:utptr_t
operator -	legion_runtime/common.h	/^  inline utptr_t operator-(unsigned offset) const { return utptr_t(value - offset); }$/;"	f	struct:utptr_t
operator -	legion_runtime/legion_utilities.h	/^                BitMask<T,MAX,SHIFT,MASK>::operator-(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator -	legion_runtime/legion_utilities.h	/^            TLBitMask<T,MAX,SHIFT,MASK>::operator-(const TLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator -	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator-($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator -	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator-($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator -	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator-($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator -	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator-($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator -	legion_runtime/lowlevel.cc	/^    ElementMask ElementMask::operator-(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator -	legion_runtime/shared_lowlevel.cc	/^    ElementMask ElementMask::operator-(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator --	legion_runtime/common.h	/^  inline ptr_t operator--(int) { value--; return *this; }$/;"	f	struct:ptr_t
operator --	legion_runtime/common.h	/^  inline ptr_t& operator--(void) { value--; return *this; }$/;"	f	struct:ptr_t
operator --	legion_runtime/common.h	/^  inline ptr_t<T> operator--(int) { value--; return *this; }$/;"	f	struct:ptr_t
operator --	legion_runtime/common.h	/^  inline ptr_t<T>& operator--(void) { value--; return *this; }$/;"	f	struct:ptr_t
operator --	legion_runtime/common.h	/^  inline utptr_t operator--(int) { value--; return *this; }$/;"	f	struct:utptr_t
operator --	legion_runtime/common.h	/^  inline utptr_t& operator--(void) { value--; return *this; }$/;"	f	struct:utptr_t
operator -=	legion_runtime/legion_utilities.h	/^                      BitMask<T,MAX,SHIFT,MASK>::operator-=(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator -=	legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator-=(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator -=	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator-=(const AVXBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator -=	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator-=($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator -=	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator-=(const SSEBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator -=	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator-=($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator -=	legion_runtime/lowlevel.cc	/^    ElementMask& ElementMask::operator-=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator -=	legion_runtime/shared_lowlevel.cc	/^    ElementMask& ElementMask::operator-=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator ->	legion_runtime/lowlevel_impl.h	/^      CoherentData *operator->(void) { return data; }$/;"	f	class:LegionRuntime::LowLevel::ExclusiveAccess
operator ->	legion_runtime/lowlevel_impl.h	/^      const CoherentData *operator->(void) { return data; }$/;"	f	class:LegionRuntime::LowLevel::SharedAccess
operator ->	legion_runtime/lowlevel_impl.h	/^      const StaticData *operator->(void) { return data; }$/;"	f	class:LegionRuntime::LowLevel::StaticAccess
operator /	legion_runtime/arrays.h	/^      Point<DIM> operator\/(const Point<DIM> other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator <	legion_runtime/common.h	/^  inline bool operator< (const ptr_t &ptr) const { return (ptr.value <  this->value); }$/;"	f	struct:ptr_t
operator <	legion_runtime/common.h	/^  inline bool operator< (const ptr_t<T> &ptr) const { return (ptr.value <  this->value); }$/;"	f	struct:ptr_t
operator <	legion_runtime/common.h	/^  inline bool operator< (const utptr_t &ptr) const { return (ptr.value <  this->value); }$/;"	f	struct:utptr_t
operator <	legion_runtime/legion.cc	/^    bool FieldSpaceRequirement::operator<($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceRequirement
operator <	legion_runtime/legion.cc	/^    bool IndexSpaceRequirement::operator<($/;"	f	class:LegionRuntime::HighLevel::IndexSpaceRequirement
operator <	legion_runtime/legion.cc	/^    bool Lock::operator<(const Lock &rhs) const$/;"	f	class:LegionRuntime::HighLevel::Lock
operator <	legion_runtime/legion.cc	/^    bool PhaseBarrier::operator<(const PhaseBarrier &rhs) const$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
operator <	legion_runtime/legion.cc	/^    bool RegionRequirement::operator<(const RegionRequirement &rhs) const$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
operator <	legion_runtime/legion.h	/^      bool operator<(const Future &f) const$/;"	f	class:LegionRuntime::HighLevel::Future
operator <	legion_runtime/legion.h	/^      bool operator<(const FutureMap &f) const$/;"	f	class:LegionRuntime::HighLevel::FutureMap
operator <	legion_runtime/legion.h	/^      bool operator<(const Grant &g) const$/;"	f	class:LegionRuntime::HighLevel::Grant
operator <	legion_runtime/legion.h	/^      bool operator<(const MPILegionHandshake &h) const$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
operator <	legion_runtime/legion.h	/^      inline bool operator<(const ArgumentMap &rhs) const$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
operator <	legion_runtime/legion.h	/^      inline bool operator<(const PhysicalRegion &reg) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
operator <	legion_runtime/legion.h	/^      inline bool operator<(const TaskArgument &arg) const$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
operator <	legion_runtime/legion.h	/^    inline bool FieldAllocator::operator<(const FieldAllocator &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
operator <	legion_runtime/legion.h	/^    inline bool FieldSpace::operator<(const FieldSpace &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
operator <	legion_runtime/legion.h	/^    inline bool IndexAllocator::operator<(const IndexAllocator &rhs) const$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
operator <	legion_runtime/legion.h	/^    inline bool LogicalPartition::operator<(const LogicalPartition &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
operator <	legion_runtime/legion.h	/^    inline bool LogicalRegion::operator<(const LogicalRegion &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
operator <	legion_runtime/legion.h	/^    inline bool Predicate::operator<(const Predicate &p) const$/;"	f	class:LegionRuntime::HighLevel::Predicate
operator <	legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::operator<(const AVXBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator <	legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::operator<(const AVXTLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator <	legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::operator<(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator <	legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::operator<(const SSEBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator <	legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::operator<(const SSETLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator <	legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::operator<(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator <	legion_runtime/lowlevel.cc	/^      bool operator<(const PartialWriteKey& rhs) const$/;"	f	struct:LegionRuntime::LowLevel::PartialWriteKey
operator <	legion_runtime/lowlevel.h	/^      bool operator<(const Domain &rhs) const$/;"	f	class:LegionRuntime::LowLevel::Domain
operator <	legion_runtime/lowlevel.h	/^      bool operator<(const Event& rhs) const $/;"	f	class:LegionRuntime::LowLevel::Event
operator <	legion_runtime/lowlevel.h	/^      bool operator<(const IndexSpace &rhs) const { return id < rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
operator <	legion_runtime/lowlevel.h	/^      bool operator<(const Memory &rhs) const { return id < rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Memory
operator <	legion_runtime/lowlevel.h	/^      bool operator<(const Processor& rhs) const { return id < rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Processor
operator <	legion_runtime/lowlevel.h	/^      bool operator<(const RegionInstance &rhs) const { return id < rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
operator <	legion_runtime/lowlevel.h	/^      bool operator<(const RegionInstanceAccessorUntyped<AccessorArray> &rhs) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
operator <	legion_runtime/lowlevel.h	/^      bool operator<(const Reservation& rhs) const { return id < rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Reservation
operator <	legion_runtime/utilities.h	/^    bool operator<(const ImmovableLock &rhs) const$/;"	f	class:LegionRuntime::ImmovableLock
operator <<	legion_runtime/legion_utilities.h	/^                    BitMask<T,MAX,SHIFT,MASK>::operator<<(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator <<	legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator<<(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator <<	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator<<(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator <<	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator<<($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator <<	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator<<(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator <<	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator<<($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator <<	test/hpcg/lgncg.cc	/^operator<<(std::ostream &os, const I64Tuple &tup) {$/;"	f	namespace:lgncg
operator <<=	legion_runtime/legion_utilities.h	/^                        BitMask<T,MAX,SHIFT,MASK>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator <<=	legion_runtime/legion_utilities.h	/^                      TLBitMask<T,MAX,SHIFT,MASK>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator <<=	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator <<=	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator <<=	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator <<=	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator <=	legion_runtime/arrays.h	/^      bool operator<=(const Point<DIM>& other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator =	legion_runtime/accessor.h	/^	  Typed &operator=(const Typed& rhs) {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
operator =	legion_runtime/arrays.h	/^      Point& operator=(const Point<1>& other) $/;"	f	class:LegionRuntime::Arrays::Point
operator =	legion_runtime/arrays.h	/^      Point& operator=(const Point<DIM>& other) $/;"	f	class:LegionRuntime::Arrays::Point
operator =	legion_runtime/arrays.h	/^      Rect& operator=(const Rect<DIM>& other)$/;"	f	class:LegionRuntime::Arrays::Rect
operator =	legion_runtime/common.h	/^  inline ptr_t& operator=(const ptr_t &ptr) { value = ptr.value; return *this; }$/;"	f	struct:ptr_t
operator =	legion_runtime/common.h	/^  inline ptr_t<T>& operator=(const ptr_t<T> &ptr) { value = ptr.value; return *this; }$/;"	f	struct:ptr_t
operator =	legion_runtime/common.h	/^  inline ptr_t<T>& operator=(const utptr_t &ptr)  { value = ptr.value; return *this; }$/;"	f	struct:ptr_t
operator =	legion_runtime/common.h	/^  inline utptr_t& operator=(const ptr_t<T> &ptr) { value = ptr.value; return *this; }$/;"	f	struct:utptr_t
operator =	legion_runtime/common.h	/^  inline utptr_t& operator=(const utptr_t &ptr) { value = ptr.value; return *this; }$/;"	f	struct:utptr_t
operator =	legion_runtime/default_mapper.cc	/^    DefaultMapper& DefaultMapper::operator=(const DefaultMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
operator =	legion_runtime/field_tree.h	/^    FieldTree<UT>& FieldTree<UT>::operator=(const FieldTree<UT> &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
operator =	legion_runtime/interval_tree.h	/^    IntervalTree<T,DISCRETE>& IntervalTree<T,DISCRETE>::operator=($/;"	f	class:LegionRuntime::HighLevel::IntervalTree
operator =	legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>& IntervalTreeNode<T,DISCRETE>::operator=($/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
operator =	legion_runtime/legion.cc	/^    ArgumentMap& ArgumentMap::operator=(const ArgumentMap &rhs)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
operator =	legion_runtime/legion.cc	/^    FieldAllocator& FieldAllocator::operator=(const FieldAllocator &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
operator =	legion_runtime/legion.cc	/^    Future& Future::operator=(const Future &rhs)$/;"	f	class:LegionRuntime::HighLevel::Future
operator =	legion_runtime/legion.cc	/^    FutureMap& FutureMap::operator=(const FutureMap &rhs)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
operator =	legion_runtime/legion.cc	/^    Grant& Grant::operator=(const Grant &rhs)$/;"	f	class:LegionRuntime::HighLevel::Grant
operator =	legion_runtime/legion.cc	/^    IndexAllocator& IndexAllocator::operator=(const IndexAllocator &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
operator =	legion_runtime/legion.cc	/^    IndexIterator& IndexIterator::operator=(const IndexIterator &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
operator =	legion_runtime/legion.cc	/^    MPILegionHandshake& MPILegionHandshake::operator=($/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
operator =	legion_runtime/legion.cc	/^    PhysicalRegion& PhysicalRegion::operator=(const PhysicalRegion &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
operator =	legion_runtime/legion.cc	/^    Predicate& Predicate::operator=(const Predicate &rhs)$/;"	f	class:LegionRuntime::HighLevel::Predicate
operator =	legion_runtime/legion.h	/^      inline TaskArgument& operator=(const TaskArgument &rhs)$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
operator =	legion_runtime/legion.h	/^    inline FieldSpace& FieldSpace::operator=(const FieldSpace &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
operator =	legion_runtime/legion.h	/^    inline LogicalPartition& LogicalPartition::operator=($/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
operator =	legion_runtime/legion.h	/^    inline LogicalRegion& LogicalRegion::operator=(const LogicalRegion &rhs) $/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
operator =	legion_runtime/legion_logging.h	/^        ProcessorProfiler& operator=(const ProcessorProfiler& copy_from) {assert(false);}$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
operator =	legion_runtime/legion_ops.cc	/^    AcquireOp& AcquireOp::operator=(const AcquireOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
operator =	legion_runtime/legion_ops.cc	/^    AndPredOp& AndPredOp::operator=(const AndPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
operator =	legion_runtime/legion_ops.cc	/^    CloseOp& CloseOp::operator=(const CloseOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
operator =	legion_runtime/legion_ops.cc	/^    CopyOp& CopyOp::operator=(const CopyOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
operator =	legion_runtime/legion_ops.cc	/^    DeletionOp& DeletionOp::operator=(const DeletionOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
operator =	legion_runtime/legion_ops.cc	/^    FenceOp& FenceOp::operator=(const FenceOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
operator =	legion_runtime/legion_ops.cc	/^    FuturePredOp& FuturePredOp::operator=(const FuturePredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
operator =	legion_runtime/legion_ops.cc	/^    MapOp& MapOp::operator=(const MapOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::MapOp
operator =	legion_runtime/legion_ops.cc	/^    MustEpochDistributor& MustEpochDistributor::operator=($/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
operator =	legion_runtime/legion_ops.cc	/^    MustEpochMapper& MustEpochMapper::operator=(const MustEpochMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
operator =	legion_runtime/legion_ops.cc	/^    MustEpochOp& MustEpochOp::operator=(const MustEpochOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
operator =	legion_runtime/legion_ops.cc	/^    MustEpochTriggerer& MustEpochTriggerer::operator=($/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
operator =	legion_runtime/legion_ops.cc	/^    NotPredOp& NotPredOp::operator=(const NotPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
operator =	legion_runtime/legion_ops.cc	/^    OrPredOp& OrPredOp::operator=(const OrPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
operator =	legion_runtime/legion_ops.cc	/^    ReleaseOp& ReleaseOp::operator=(const ReleaseOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
operator =	legion_runtime/legion_profiling.h	/^	ProcessorProfiler& operator=(const ProcessorProfiler& copy_from) $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
operator =	legion_runtime/legion_tasks.cc	/^    DeferredSlicer& DeferredSlicer::operator=(const DeferredSlicer &rhs)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
operator =	legion_runtime/legion_tasks.cc	/^    IndexTask& IndexTask::operator=(const IndexTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
operator =	legion_runtime/legion_tasks.cc	/^    IndividualTask& IndividualTask::operator=(const IndividualTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
operator =	legion_runtime/legion_tasks.cc	/^    InlineTask& InlineTask::operator=(const InlineTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
operator =	legion_runtime/legion_tasks.cc	/^    PointTask& PointTask::operator=(const PointTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::PointTask
operator =	legion_runtime/legion_tasks.cc	/^    RemoteTask& RemoteTask::operator=(const RemoteTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
operator =	legion_runtime/legion_tasks.cc	/^    SliceTask& SliceTask::operator=(const SliceTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
operator =	legion_runtime/legion_trace.cc	/^    LegionTrace& LegionTrace::operator=(const LegionTrace &rhs)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
operator =	legion_runtime/legion_trace.cc	/^    TraceCaptureOp& TraceCaptureOp::operator=(const TraceCaptureOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
operator =	legion_runtime/legion_trace.cc	/^    TraceCompleteOp& TraceCompleteOp::operator=(const TraceCompleteOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
operator =	legion_runtime/legion_utilities.h	/^                      BitMask<T,MAX,SHIFT,MASK>::operator=(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator =	legion_runtime/legion_utilities.h	/^                  TLBitMask<T,MAX,SHIFT,MASK>::operator=(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator =	legion_runtime/legion_utilities.h	/^      AutoLock& operator=(const AutoLock &rhs)$/;"	f	class:LegionRuntime::HighLevel::AutoLock
operator =	legion_runtime/legion_utilities.h	/^      inline DerezCheck& operator=(const DerezCheck &rhs)$/;"	f	class:LegionRuntime::HighLevel::DerezCheck
operator =	legion_runtime/legion_utilities.h	/^      inline RezCheck& operator=(const RezCheck &rhs)$/;"	f	class:LegionRuntime::HighLevel::RezCheck
operator =	legion_runtime/legion_utilities.h	/^    Fraction<T>& Fraction<T>::operator=(const Fraction<T> &rhs)$/;"	f	class:LegionRuntime::HighLevel::Fraction
operator =	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator=(const AVXBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator =	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator=($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator =	legion_runtime/legion_utilities.h	/^    inline Deserializer& Deserializer::operator=(const Deserializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
operator =	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator=(const SSEBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator =	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator=($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator =	legion_runtime/legion_utilities.h	/^    inline Serializer& Serializer::operator=(const Serializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::Serializer
operator =	legion_runtime/lowlevel.cc	/^    ElementMask& ElementMask::operator=(const ElementMask &rhs)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator =	legion_runtime/lowlevel.h	/^      Domain& operator=(const Domain& other)$/;"	f	class:LegionRuntime::LowLevel::Domain
operator =	legion_runtime/lowlevel.h	/^      DomainLinearization& operator=(const DomainLinearization& other)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
operator =	legion_runtime/lowlevel.h	/^      DomainPoint& operator=(const DomainPoint &rhs)$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
operator =	legion_runtime/rectangle_set.h	/^                    RectangleSet<T,DISCRETE>::operator=(const RectangleSet &rhs)$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
operator =	legion_runtime/rectangle_set.h	/^    Segment<T>& Segment<T>::operator=(const Segment<T> &rhs)$/;"	f	class:LegionRuntime::HighLevel::Segment
operator =	legion_runtime/region_tree.cc	/^                          operator=(const LegionStack<T,MAX_SIZE,INC_SIZE> &rhs)$/;"	f	class:LegionRuntime::HighLevel::LegionStack
operator =	legion_runtime/region_tree.cc	/^    CompositeCloser& CompositeCloser::operator=(const CompositeCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
operator =	legion_runtime/region_tree.cc	/^    CompositeNode& CompositeNode::operator=(const CompositeNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
operator =	legion_runtime/region_tree.cc	/^    FieldSpaceNode& FieldSpaceNode::operator=(const FieldSpaceNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
operator =	legion_runtime/region_tree.cc	/^    FoldReductionManager& FoldReductionManager::operator=($/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
operator =	legion_runtime/region_tree.cc	/^    IndexPartNode& IndexPartNode::operator=(const IndexPartNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
operator =	legion_runtime/region_tree.cc	/^    IndexSpaceNode& IndexSpaceNode::operator=(const IndexSpaceNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
operator =	legion_runtime/region_tree.cc	/^    InstanceManager& InstanceManager::operator=(const InstanceManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
operator =	legion_runtime/region_tree.cc	/^    LayoutDescription& LayoutDescription::operator=($/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
operator =	legion_runtime/region_tree.cc	/^    ListReductionManager& ListReductionManager::operator=($/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
operator =	legion_runtime/region_tree.cc	/^    LogicalInitializer& LogicalInitializer::operator=($/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
operator =	legion_runtime/region_tree.cc	/^    LogicalInvalidator& LogicalInvalidator::operator=($/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
operator =	legion_runtime/region_tree.cc	/^    LogicalPathRegistrar& LogicalPathRegistrar::operator=($/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
operator =	legion_runtime/region_tree.cc	/^    LogicalRegistrar<DOMINATE>& LogicalRegistrar<DOMINATE>::operator=($/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
operator =	legion_runtime/region_tree.cc	/^    LogicalState& LogicalState::operator=(const LogicalState &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalState
operator =	legion_runtime/region_tree.cc	/^    MappingRef& MappingRef::operator=(const MappingRef &rhs)$/;"	f	class:LegionRuntime::HighLevel::MappingRef
operator =	legion_runtime/region_tree.cc	/^    MappingTraverser& MappingTraverser::operator=(const MappingTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
operator =	legion_runtime/region_tree.cc	/^    MaterializedView& MaterializedView::operator=(const MaterializedView &rhs)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
operator =	legion_runtime/region_tree.cc	/^    PartitionNode& PartitionNode::operator=(const PartitionNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
operator =	legion_runtime/region_tree.cc	/^    PathReturner& PathReturner::operator=(const PathReturner &rhs)$/;"	f	class:LegionRuntime::HighLevel::PathReturner
operator =	legion_runtime/region_tree.cc	/^    PathTraverser& PathTraverser::operator=(const PathTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PathTraverser
operator =	legion_runtime/region_tree.cc	/^    PhysicalCloser& PhysicalCloser::operator=(const PhysicalCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
operator =	legion_runtime/region_tree.cc	/^    PhysicalInitializer& PhysicalInitializer::operator=($/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
operator =	legion_runtime/region_tree.cc	/^    PhysicalInvalidator& PhysicalInvalidator::operator=($/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
operator =	legion_runtime/region_tree.cc	/^    PremapTraverser& PremapTraverser::operator=(const PremapTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
operator =	legion_runtime/region_tree.cc	/^    ReductionCloser& ReductionCloser::operator=(const ReductionCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
operator =	legion_runtime/region_tree.cc	/^    ReductionView& ReductionView::operator=(const ReductionView &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
operator =	legion_runtime/region_tree.cc	/^    RegionNode& RegionNode::operator=(const RegionNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
operator =	legion_runtime/region_tree.cc	/^    RegionTreeForest& RegionTreeForest::operator=(const RegionTreeForest &rhs)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
operator =	legion_runtime/region_tree.cc	/^    RestrictedTraverser& RestrictedTraverser::operator=($/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
operator =	legion_runtime/region_tree.cc	/^    StateReturner& StateReturner::operator=(const StateReturner &rhs)$/;"	f	class:LegionRuntime::HighLevel::StateReturner
operator =	legion_runtime/region_tree.cc	/^    StateSender& StateSender::operator=(const StateSender &rhs)$/;"	f	class:LegionRuntime::HighLevel::StateSender
operator =	legion_runtime/region_tree.cc	/^    TreeClose& TreeClose::operator=(const TreeClose &rhs)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
operator =	legion_runtime/region_tree.cc	/^    TreeCloseImpl& TreeCloseImpl::operator=(const TreeCloseImpl &rhs)$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
operator =	legion_runtime/region_tree.cc	/^    ViewHandle& ViewHandle::operator=(const ViewHandle &rhs)$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
operator =	legion_runtime/runtime.cc	/^    ArgumentMap::Impl& ArgumentMap::Impl::operator=(const Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
operator =	legion_runtime/runtime.cc	/^    ArgumentMapStore& ArgumentMapStore::operator=(const ArgumentMapStore &rhs)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMapStore
operator =	legion_runtime/runtime.cc	/^    Future::Impl& Future::Impl::operator=(const Future::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
operator =	legion_runtime/runtime.cc	/^    FutureMap::Impl& FutureMap::Impl::operator=(const FutureMap::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
operator =	legion_runtime/runtime.cc	/^    GarbageCollectionEpoch& GarbageCollectionEpoch::operator=($/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
operator =	legion_runtime/runtime.cc	/^    Grant::Impl& Grant::Impl::operator=(const Grant::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
operator =	legion_runtime/runtime.cc	/^    MPILegionHandshake::Impl& MPILegionHandshake::Impl::operator=($/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
operator =	legion_runtime/runtime.cc	/^    MemoryManager& MemoryManager::operator=(const MemoryManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
operator =	legion_runtime/runtime.cc	/^    MessageManager& MessageManager::operator=(const MessageManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
operator =	legion_runtime/runtime.cc	/^    PhysicalRegion::Impl& PhysicalRegion::Impl::operator=($/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
operator =	legion_runtime/runtime.cc	/^    ProcessorManager& ProcessorManager::operator=(const ProcessorManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
operator =	legion_runtime/runtime.cc	/^    Runtime& Runtime::operator=(const Runtime &rhs)$/;"	f	class:LegionRuntime::HighLevel::Runtime
operator =	legion_runtime/runtime.h	/^      AllocManager& operator=(const AllocManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::AllocManager
operator =	legion_runtime/shared_lowlevel.cc	/^    ElementMask& ElementMask::operator=(const ElementMask &rhs)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator =	legion_runtime/shim_mapper.cc	/^    ShimMapper& ShimMapper::operator=(const ShimMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
operator =	legion_runtime/utilities.h	/^    ImmovableLock& operator=(const ImmovableLock &rhs)$/;"	f	class:LegionRuntime::ImmovableLock
operator ==	legion_runtime/accessor.h	/^      bool operator==(const ByteOffset rhs) const { return offset == rhs.offset; }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator ==	legion_runtime/arrays.h	/^      bool operator==(const Point<DIM>& other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator ==	legion_runtime/arrays.h	/^      bool operator==(const Rect<DIM>& other)$/;"	f	class:LegionRuntime::Arrays::Rect
operator ==	legion_runtime/common.h	/^  inline bool operator==(const ptr_t &ptr) const { return (ptr.value == this->value); }$/;"	f	struct:ptr_t
operator ==	legion_runtime/common.h	/^  inline bool operator==(const ptr_t<T> &ptr) const { return (ptr.value == this->value); }$/;"	f	struct:ptr_t
operator ==	legion_runtime/common.h	/^  inline bool operator==(const utptr_t &ptr) const { return (ptr.value == this->value); }$/;"	f	struct:utptr_t
operator ==	legion_runtime/legion.cc	/^    bool FieldSpaceRequirement::operator==($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceRequirement
operator ==	legion_runtime/legion.cc	/^    bool IndexSpaceRequirement::operator==($/;"	f	class:LegionRuntime::HighLevel::IndexSpaceRequirement
operator ==	legion_runtime/legion.cc	/^    bool Lock::operator==(const Lock &rhs) const$/;"	f	class:LegionRuntime::HighLevel::Lock
operator ==	legion_runtime/legion.cc	/^    bool PhaseBarrier::operator==(const PhaseBarrier &rhs) const$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
operator ==	legion_runtime/legion.cc	/^    bool RegionRequirement::operator==(const RegionRequirement &rhs) const$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
operator ==	legion_runtime/legion.h	/^      bool operator==(const Future &f) const$/;"	f	class:LegionRuntime::HighLevel::Future
operator ==	legion_runtime/legion.h	/^      bool operator==(const FutureMap &f) const$/;"	f	class:LegionRuntime::HighLevel::FutureMap
operator ==	legion_runtime/legion.h	/^      bool operator==(const Grant &g) const$/;"	f	class:LegionRuntime::HighLevel::Grant
operator ==	legion_runtime/legion.h	/^      bool operator==(const MPILegionHandshake &h) const$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
operator ==	legion_runtime/legion.h	/^      inline bool operator==(const ArgumentMap &rhs) const$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
operator ==	legion_runtime/legion.h	/^      inline bool operator==(const PhysicalRegion &reg) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
operator ==	legion_runtime/legion.h	/^      inline bool operator==(const TaskArgument &arg) const$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
operator ==	legion_runtime/legion.h	/^    inline bool FieldAllocator::operator==(const FieldAllocator &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
operator ==	legion_runtime/legion.h	/^    inline bool FieldSpace::operator==(const FieldSpace &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
operator ==	legion_runtime/legion.h	/^    inline bool IndexAllocator::operator==(const IndexAllocator &rhs) const$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
operator ==	legion_runtime/legion.h	/^    inline bool LogicalPartition::operator==(const LogicalPartition &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
operator ==	legion_runtime/legion.h	/^    inline bool LogicalRegion::operator==(const LogicalRegion &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
operator ==	legion_runtime/legion.h	/^    inline bool Predicate::operator==(const Predicate &p) const$/;"	f	class:LegionRuntime::HighLevel::Predicate
operator ==	legion_runtime/legion_allocation.h	/^      inline bool operator==(LegionAllocator const&) const { return true; }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
operator ==	legion_runtime/legion_utilities.h	/^      inline bool operator==(const RegionUsage &rhs) const$/;"	f	struct:LegionRuntime::HighLevel::RegionUsage
operator ==	legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::operator==(const AVXBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ==	legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::operator==(const AVXTLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ==	legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::operator==(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator ==	legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::operator==(const SSEBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ==	legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::operator==(const SSETLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator ==	legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::operator==($/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator ==	legion_runtime/lowlevel.cc	/^    bool ElementMask::operator==(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator ==	legion_runtime/lowlevel.h	/^      bool operator==(const Domain &rhs) const$/;"	f	class:LegionRuntime::LowLevel::Domain
operator ==	legion_runtime/lowlevel.h	/^      bool operator==(const DomainPoint &rhs) const$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
operator ==	legion_runtime/lowlevel.h	/^      bool operator==(const Event& rhs) const { return (id == rhs.id) && (gen == rhs.gen); }$/;"	f	class:LegionRuntime::LowLevel::Event
operator ==	legion_runtime/lowlevel.h	/^      bool operator==(const IndexSpace &rhs) const { return id == rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
operator ==	legion_runtime/lowlevel.h	/^      bool operator==(const Memory &rhs) const { return id == rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Memory
operator ==	legion_runtime/lowlevel.h	/^      bool operator==(const Processor& rhs) const { return id == rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Processor
operator ==	legion_runtime/lowlevel.h	/^      bool operator==(const RegionInstance &rhs) const { return id == rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
operator ==	legion_runtime/lowlevel.h	/^      bool operator==(const RegionInstanceAccessorUntyped<AccessorArray> &rhs) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
operator ==	legion_runtime/lowlevel.h	/^      bool operator==(const Reservation& rhs) const { return id == rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Reservation
operator ==	legion_runtime/shared_lowlevel.cc	/^    bool ElementMask::operator==(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator ==	legion_runtime/utilities.h	/^    bool operator==(const ImmovableLock &rhs) const$/;"	f	class:LegionRuntime::ImmovableLock
operator >>	legion_runtime/legion_utilities.h	/^                    BitMask<T,MAX,SHIFT,MASK>::operator>>(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator >>	legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator>>(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator >>	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator>>(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator >>	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator>>($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator >>	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator>>(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator >>	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator>>($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator >>=	legion_runtime/legion_utilities.h	/^                        BitMask<T,MAX,SHIFT,MASK>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator >>=	legion_runtime/legion_utilities.h	/^                      TLBitMask<T,MAX,SHIFT,MASK>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator >>=	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator >>=	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator >>=	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator >>=	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator []	legion_runtime/arrays.h	/^      int operator[](unsigned idx) const { return x[idx]; }$/;"	f	class:LegionRuntime::Arrays::Point
operator []	legion_runtime/legion_utilities.h	/^    inline T& BitMask<T,MAX,SHIFT,MASK>::operator[](const unsigned &idx) $/;"	f	class:LegionRuntime::HighLevel::BitMask
operator []	legion_runtime/legion_utilities.h	/^    inline T& TLBitMask<T,MAX,SHIFT,MASK>::operator[](const unsigned &idx)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator []	legion_runtime/legion_utilities.h	/^    inline const T& BitMask<T,MAX,SHIFT,MASK>::operator[]($/;"	f	class:LegionRuntime::HighLevel::BitMask
operator []	legion_runtime/legion_utilities.h	/^    inline const T& TLBitMask<T,MAX,SHIFT,MASK>::operator[]($/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator []	legion_runtime/legion_utilities.h	/^    inline const uint64_t& AVXBitMask<MAX>::operator[]($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator []	legion_runtime/legion_utilities.h	/^    inline const uint64_t& AVXTLBitMask<MAX>::operator[]($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator []	legion_runtime/legion_utilities.h	/^    inline const uint64_t& SSEBitMask<MAX>::operator[]($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator []	legion_runtime/legion_utilities.h	/^    inline const uint64_t& SSETLBitMask<MAX>::operator[]($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator []	legion_runtime/legion_utilities.h	/^    inline uint64_t& AVXBitMask<MAX>::operator[](const unsigned int &idx) $/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator []	legion_runtime/legion_utilities.h	/^    inline uint64_t& AVXTLBitMask<MAX>::operator[](const unsigned int &idx) $/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator []	legion_runtime/legion_utilities.h	/^    inline uint64_t& SSEBitMask<MAX>::operator[](const unsigned int &idx) $/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator []	legion_runtime/legion_utilities.h	/^    inline uint64_t& SSETLBitMask<MAX>::operator[](const unsigned int &idx) $/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator []	legion_runtime/region_tree.cc	/^    T& LegionStack<T,MAX_SIZE,INC_SIZE>::operator[](unsigned int idx)$/;"	f	class:LegionRuntime::HighLevel::LegionStack
operator ^	legion_runtime/legion.h	/^    inline AllocateMode operator^(AllocateMode left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^	legion_runtime/legion.h	/^    inline PrivilegeMode operator^(PrivilegeMode left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^	legion_runtime/legion.h	/^    inline RegionFlags operator^(RegionFlags left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^	legion_runtime/legion_utilities.h	/^                BitMask<T,MAX,SHIFT,MASK>::operator^(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator ^	legion_runtime/legion_utilities.h	/^            TLBitMask<T,MAX,SHIFT,MASK>::operator^(const TLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator ^	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator^($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ^	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator^($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ^	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator^($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ^	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator^($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator ^=	legion_runtime/legion.h	/^    inline AllocateMode operator^=(AllocateMode &left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^=	legion_runtime/legion.h	/^    inline PrivilegeMode operator^=(PrivilegeMode &left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^=	legion_runtime/legion.h	/^    inline RegionFlags operator^=(RegionFlags &left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^=	legion_runtime/legion_utilities.h	/^                      BitMask<T,MAX,SHIFT,MASK>::operator^=(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator ^=	legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator^=(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator ^=	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator^=(const AVXBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ^=	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator^=($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ^=	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator^=(const SSEBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ^=	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator^=($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator bool	legion_runtime/arrays.h	/^      operator bool(void) const { return any_left; }$/;"	f	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
operator bool	legion_runtime/arrays.h	/^      operator bool(void) const { return any_left; }$/;"	f	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
operator bool	legion_runtime/arrays.h	/^      operator bool(void) const { return any_left; }$/;"	f	class:LegionRuntime::Arrays::GenericPointInRectIterator
operator bool	legion_runtime/common.h	/^  inline operator bool(void) const { return (value != (unsigned)-1); }$/;"	f	struct:ptr_t
operator bool	legion_runtime/common.h	/^  inline operator bool(void) const { return (value != (unsigned)-1); }$/;"	f	struct:utptr_t
operator bool	legion_runtime/lowlevel.h	/^	operator bool(void) const { return any_left; }$/;"	f	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
operator delete	cxx/cxxglue.cc	/^void operator $/;"	f
operator delete[]	cxx/cxxglue.cc	/^void operator $/;"	f
operator int	legion_runtime/arrays.h	/^      operator int(void) const { return x[0]; }$/;"	f	class:LegionRuntime::Arrays::Point
operator int	legion_runtime/common.h	/^  inline operator int(void) const { return int(value); }$/;"	f	struct:ptr_t
operator int	legion_runtime/common.h	/^  inline operator int(void) const { return int(value); }$/;"	f	struct:utptr_t
operator int	legion_runtime/utilities.h	/^      operator int(void) const { return index; }$/;"	f	class:LegionRuntime::Logger::Category
operator new	cxx/cxxglue.cc	/^void *operator $/;"	f
operator new[]	cxx/cxxglue.cc	/^void *operator $/;"	f
operator unsigned	legion_runtime/common.h	/^  inline operator unsigned(void) const { return value; } $/;"	f	struct:ptr_t
operator unsigned	legion_runtime/common.h	/^  inline operator unsigned(void) const { return value; } $/;"	f	struct:utptr_t
operator utptr_t	legion_runtime/common.h	/^  inline operator utptr_t(void) const { utptr_t ptr; ptr.value = value; return ptr; }$/;"	f	struct:ptr_t
operator |	legion_runtime/legion.h	/^    inline AllocateMode operator|(AllocateMode left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |	legion_runtime/legion.h	/^    inline PrivilegeMode operator|(PrivilegeMode left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |	legion_runtime/legion.h	/^    inline RegionFlags operator|(RegionFlags left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |	legion_runtime/legion_utilities.h	/^                BitMask<T,MAX,SHIFT,MASK>::operator|(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator |	legion_runtime/legion_utilities.h	/^            TLBitMask<T,MAX,SHIFT,MASK>::operator|(const TLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator |	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator|($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator |	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator|($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator |	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator|($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator |	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator|($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator |	legion_runtime/lowlevel.cc	/^    ElementMask ElementMask::operator|(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator |	legion_runtime/shared_lowlevel.cc	/^    ElementMask ElementMask::operator|(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator |=	legion_runtime/legion.h	/^    inline AllocateMode operator|=(AllocateMode &left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |=	legion_runtime/legion.h	/^    inline PrivilegeMode operator|=(PrivilegeMode &left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |=	legion_runtime/legion.h	/^    inline RegionFlags operator|=(RegionFlags &left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |=	legion_runtime/legion_utilities.h	/^                      BitMask<T,MAX,SHIFT,MASK>::operator|=(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator |=	legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator|=(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator |=	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator|=(const AVXBitMask &rhs) $/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator |=	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator|=($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator |=	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator|=(const SSEBitMask &rhs) $/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator |=	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator|=($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator |=	legion_runtime/lowlevel.cc	/^    ElementMask& ElementMask::operator|=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator |=	legion_runtime/shared_lowlevel.cc	/^    ElementMask& ElementMask::operator|=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator ~	legion_runtime/legion.h	/^    inline AllocateMode operator~(AllocateMode a)$/;"	f	namespace:LegionRuntime::HighLevel
operator ~	legion_runtime/legion.h	/^    inline PrivilegeMode operator~(PrivilegeMode p)$/;"	f	namespace:LegionRuntime::HighLevel
operator ~	legion_runtime/legion.h	/^    inline RegionFlags operator~(RegionFlags f)$/;"	f	namespace:LegionRuntime::HighLevel
operator ~	legion_runtime/legion_utilities.h	/^                              BitMask<T,MAX,SHIFT,MASK>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator ~	legion_runtime/legion_utilities.h	/^                            TLBitMask<T,MAX,SHIFT,MASK>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator ~	legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ~	legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ~	legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ~	legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
opmode	lua_src/lopcodes.c	62;"	d	file:
or_pred_op_lock	legion_runtime/runtime.h	/^      Reservation or_pred_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
order	nautilus/mm/buddy.c	/^    ulong_t    order;$/;"	m	struct:block	file:
order	nautilus/mm/kmem.c	/^    uint64_t order;  \/* order of the block allocated from buddy system *\/$/;"	m	struct:kmem_block_hdr	file:
orig_point	legion_runtime/legion_logging.h	/^        UniqueID orig_point;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPointPoint
orig_proc	legion_runtime/legion.h	/^      Processor                           orig_proc;$/;"	m	class:LegionRuntime::HighLevel::Task
orig_rect	legion_runtime/arrays.h	/^      Rect<T::IDIM> orig_rect;$/;"	m	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
orig_rect	legion_runtime/arrays.h	/^      Rect<T::IDIM> orig_rect;$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
orig_task	legion_runtime/legion_tasks.h	/^      IndividualTask *orig_task; \/\/ Not a valid pointer when remote$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
original_flags	acpi/acpica/aclocal.h	/^	u8 original_flags;      \/* Original (pre-handler) GPE info *\/$/;"	m	struct:acpi_gpe_handler_info
originally_enabled	acpi/acpica/aclocal.h	/^	u8 originally_enabled;  \/* True if GPE was originally enabled *\/$/;"	m	struct:acpi_gpe_handler_info
os_clock	lua_src/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_date	lua_src/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_difftime	lua_src/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_execute	lua_src/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_exit	lua_src/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_getenv	lua_src/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_remove	lua_src/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	lua_src/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_setlocale	lua_src/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_time	lua_src/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tmpname	lua_src/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
osi_dependency	acpi/acpica/aclocal.h	/^	u8 osi_dependency;$/;"	m	struct:acpi_port_info
other	legion_runtime/legion_allocation.h	/^        typedef LegionAllocator<U, A> other;$/;"	t	struct:LegionRuntime::HighLevel::LegionAllocator::rebind
out_acquire_ops	legion_runtime/runtime.h	/^      std::set<AcquireOp*>      out_acquire_ops; $/;"	m	class:LegionRuntime::HighLevel::Runtime
out_index_tasks	legion_runtime/runtime.h	/^      std::set<IndexTask*>      out_index_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
out_individual_tasks	legion_runtime/runtime.h	/^      std::set<IndividualTask*> out_individual_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
out_long_hdrs	legion_runtime/activemsg.cc	/^  std::queue<OutgoingMessage *> out_long_hdrs;$/;"	m	class:ActiveMessageEndpoint	file:
out_point_tasks	legion_runtime/runtime.h	/^      std::set<PointTask*>      out_point_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
out_short_hdrs	legion_runtime/activemsg.cc	/^  std::queue<OutgoingMessage *> out_short_hdrs;$/;"	m	class:ActiveMessageEndpoint	file:
out_slice_tasks	legion_runtime/runtime.h	/^      std::set<SliceTask*>      out_slice_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
outgoing	legion_runtime/legion_ops.h	/^      std::map<Operation*,GenerationID> outgoing;$/;"	m	class:LegionRuntime::HighLevel::Operation
outside	legion_runtime/rectangle_set.h	/^    \/*static*\/ inline bool RectangleSet<T,DISCRETE>::outside($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
outstanding_commit_deps	legion_runtime/legion_ops.h	/^      unsigned outstanding_commit_deps;$/;"	m	class:LegionRuntime::HighLevel::Operation
outstanding_mapping_deps	legion_runtime/legion_ops.h	/^      unsigned outstanding_mapping_deps;$/;"	m	class:LegionRuntime::HighLevel::Operation
outstanding_mapping_references	legion_runtime/legion_ops.h	/^      unsigned outstanding_mapping_references;$/;"	m	class:LegionRuntime::HighLevel::Operation
outstanding_messages	legion_runtime/activemsg.cc	/^  int *outstanding_messages;$/;"	m	class:EndpointManager	file:
outstanding_speculation_deps	legion_runtime/legion_ops.h	/^      unsigned outstanding_speculation_deps;$/;"	m	class:LegionRuntime::HighLevel::Operation
outstanding_steal_requests	legion_runtime/runtime.h	/^      std::map<MapperID,std::set<Processor> > outstanding_steal_requests;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
outstanding_subtasks	legion_runtime/legion_tasks.h	/^      unsigned outstanding_subtasks;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
overlaps	legion_runtime/arrays.h	/^      bool overlaps(const Rect<DIM>& other) const$/;"	f	class:LegionRuntime::Arrays::Rect
overlaps	legion_runtime/region_tree.cc	/^    bool FieldState::overlaps(const FieldState &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldState
overlaps_with	legion_runtime/lowlevel.cc	/^    ElementMask::OverlapResult ElementMask::overlaps_with(const ElementMask& other,$/;"	f	class:LegionRuntime::LowLevel::ElementMask
overlaps_with	legion_runtime/shared_lowlevel.cc	/^    ElementMask::OverlapResult ElementMask::overlaps_with(const ElementMask &other,$/;"	f	class:LegionRuntime::LowLevel::ElementMask
own_intersections	legion_runtime/region_tree.h	/^        bool own_intersections;$/;"	m	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
own_local	legion_runtime/lowlevel_impl.h	/^      bool own_local;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
owned_tasks	legion_runtime/runtime.h	/^        unsigned owned_tasks;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::ContextState
owner	legion_runtime/garbage_collection.h	/^      const bool owner;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
owner	legion_runtime/legion_ops.h	/^      MustEpochOp *const owner;$/;"	m	class:LegionRuntime::HighLevel::MustEpochDistributor
owner	legion_runtime/legion_ops.h	/^      MustEpochOp *const owner;$/;"	m	class:LegionRuntime::HighLevel::MustEpochMapper
owner	legion_runtime/legion_ops.h	/^      MustEpochOp *const owner;$/;"	m	class:LegionRuntime::HighLevel::MustEpochTriggerer
owner	legion_runtime/legion_tasks.h	/^      MultiTask *const owner;$/;"	m	class:LegionRuntime::HighLevel::DeferredSlicer
owner	legion_runtime/lowlevel_impl.h	/^      int owner;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableFreeList
owner	legion_runtime/lowlevel_impl.h	/^      unsigned owner; \/\/ which node owns the lock$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
owner	legion_runtime/lowlevel_impl.h	/^      unsigned owner;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
owner	legion_runtime/lowlevel_impl.h	/^      unsigned time_units, lock_id, owner, action;$/;"	m	struct:LegionRuntime::LowLevel::LockTraceItem
owner	legion_runtime/region_tree.h	/^      FieldSpaceNode *const owner;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
owner_addr	legion_runtime/garbage_collection.h	/^      AddressSpaceID owner_addr;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
owner_did	legion_runtime/garbage_collection.h	/^      DistributedID owner_did;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
owner_id	acpi/acpica/aclocal.h	/^	acpi_owner_id owner_id;	\/* Node creator *\/$/;"	m	struct:acpi_namespace_node
owner_id	acpi/acpica/aclocal.h	/^	acpi_owner_id owner_id;$/;"	m	struct:acpi_gpe_walk_info
owner_space	legion_runtime/garbage_collection.h	/^      const AddressSpaceID owner_space;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
p	legion_runtime/arrays.h	/^      Point<DIM> p;$/;"	m	class:LegionRuntime::Arrays::GenericPointInRectIterator
p	legion_runtime/legion_utilities.h	/^      BITMASK p[LOG2MAX];$/;"	m	class:LegionRuntime::HighLevel::BitPermutation
p	legion_runtime/lowlevel.h	/^	DomainPoint p;$/;"	m	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
p	legion_runtime/lowlevel.h	/^	Processor p;$/;"	m	struct:LegionRuntime::LowLevel::Machine::ProcessorMemoryAffinity
p	test/hpcg/cg-data.h	/^    Vector p;$/;"	m	struct:lgncg::CGData
p_cs_precedes	nautilus/libccompat.c	/^    char p_cs_precedes;       \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
p_end	lua_src/lstrlib.c	/^  const char *p_end;  \/* end ('\\0') of pattern *\/$/;"	m	struct:MatchState	file:
p_sep_by_space	nautilus/libccompat.c	/^    char p_sep_by_space;      \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
p_sign_posn	nautilus/libccompat.c	/^    char p_sign_posn;         \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
pack	lua_src/ltablib.c	/^static int pack (lua_State *L) {$/;"	f	file:
pack_arguments	legion_runtime/runtime.cc	/^    void ArgumentMap::Impl::pack_arguments(Serializer &rez, const Domain &dom)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
pack_base_task	legion_runtime/legion_tasks.cc	/^    void TaskOp::pack_base_task(Serializer &rez, AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_composite_node	legion_runtime/region_tree.cc	/^    void CompositeNode::pack_composite_node(Serializer &rez, bool send_back, $/;"	f	class:LegionRuntime::HighLevel::CompositeNode
pack_composite_view	legion_runtime/region_tree.cc	/^    void CompositeView::pack_composite_view(Serializer &rez, bool send_back,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
pack_field_tree	legion_runtime/field_tree.h	/^    void FieldTree<UT>::pack_field_tree(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
pack_grant	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::pack_grant(const Grant &grant, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_grant	legion_runtime/runtime.cc	/^    void Grant::Impl::pack_grant(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
pack_hex_byte	nautilus/printk.c	/^static inline char *pack_hex_byte(char *buf, uint8_t byte)$/;"	f	file:
pack_index_space_requirement	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::pack_index_space_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_layout_description	legion_runtime/region_tree.cc	/^    void LayoutDescription::pack_layout_description(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
pack_manager	legion_runtime/region_tree.cc	/^    void InstanceManager::pack_manager(Serializer &rez, AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
pack_manager	legion_runtime/region_tree.cc	/^    void ReductionManager::pack_manager(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
pack_materialized_view	legion_runtime/region_tree.cc	/^    void MaterializedView::pack_materialized_view(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
pack_multi_task	legion_runtime/legion_tasks.cc	/^    void MultiTask::pack_multi_task(Serializer &rez, bool pack_args, $/;"	f	class:LegionRuntime::HighLevel::MultiTask
pack_parent_task	legion_runtime/legion_tasks.cc	/^    void SingleTask::pack_parent_task(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
pack_phase_barrier	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::pack_phase_barrier($/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_point	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::pack_point(Serializer &rez, const DomainPoint &p)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_privilege_state	legion_runtime/legion_tasks.cc	/^    void TaskOp::pack_privilege_state(Serializer &rez, AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_reduction_view	legion_runtime/region_tree.cc	/^    void ReductionView::pack_reduction_view(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
pack_reference	legion_runtime/region_tree.cc	/^    void InstanceRef::pack_reference(Serializer &rez, AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
pack_region_requirement	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::pack_region_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_remote_commit	legion_runtime/legion_tasks.cc	/^    void IndividualTask::pack_remote_commit(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
pack_remote_commit	legion_runtime/legion_tasks.cc	/^    void SliceTask::pack_remote_commit(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
pack_remote_complete	legion_runtime/legion_tasks.cc	/^    void IndividualTask::pack_remote_complete(Serializer &rez) $/;"	f	class:LegionRuntime::HighLevel::IndividualTask
pack_remote_complete	legion_runtime/legion_tasks.cc	/^    void SliceTask::pack_remote_complete(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
pack_remote_mapped	legion_runtime/legion_tasks.cc	/^    void IndividualTask::pack_remote_mapped(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
pack_remote_mapped	legion_runtime/legion_tasks.cc	/^    void SliceTask::pack_remote_mapped(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
pack_send_back_state	legion_runtime/region_tree.cc	/^    bool RegionTreeNode::pack_send_back_state(ContextID ctx, Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
pack_send_state	legion_runtime/region_tree.cc	/^    bool RegionTreeNode::pack_send_state(ContextID ctx, Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
pack_single_task	legion_runtime/legion_tasks.cc	/^    void SingleTask::pack_single_task(Serializer &rez, AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
pack_task	legion_runtime/legion_tasks.cc	/^    bool IndexTask::pack_task(Serializer &rez, Processor target)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
pack_task	legion_runtime/legion_tasks.cc	/^    bool IndividualTask::pack_task(Serializer &rez, Processor target)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
pack_task	legion_runtime/legion_tasks.cc	/^    bool PointTask::pack_task(Serializer &rez, Processor target)$/;"	f	class:LegionRuntime::HighLevel::PointTask
pack_task	legion_runtime/legion_tasks.cc	/^    bool SliceTask::pack_task(Serializer &rez, Processor target)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
pack_task	legion_runtime/legion_tasks.cc	/^    bool WrapperTask::pack_task(Serializer &rez, Processor target)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
package_end	acpi/acpica/aclocal.h	/^	u8 *package_end;	\/* End of if\/while block *\/$/;"	m	struct:acpi_control_state
package_message	legion_runtime/runtime.cc	/^    void MessageManager::package_message(Serializer &rez, MessageKind k,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
packaged_messages	legion_runtime/runtime.h	/^      unsigned packaged_messages;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
paging_longmode_setup	arch/x64/asm/boot.S	/^paging_longmode_setup:$/;"	l
paging_setup	arch/k1om/asm/boot.S	/^paging_setup:$/;"	l
pairsmeta	lua_src/lbaselib.c	/^static int pairsmeta (lua_State *L, const char *method, int iszero,$/;"	f	file:
panic	nautilus/printk.c	/^panic (const char * fmt, ...)$/;"	f
panic_str	asm/thread_lowlevel.S	/^panic_str:$/;"	l
param_count	acpi/acpica/aclocal.h	/^	u8 param_count;$/;"	m	struct:acpi_name_info
parent	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *parent;	\/* Parent node *\/$/;"	m	struct:acpi_namespace_node	typeref:struct:acpi_namespace_node::acpi_namespace_node
parent	legion_runtime/legion.h	/^      Context parent;$/;"	m	class:LegionRuntime::HighLevel::FieldAllocator
parent	legion_runtime/legion.h	/^      IndexSpace    parent;$/;"	m	struct:LegionRuntime::HighLevel::IndexSpaceRequirement
parent	legion_runtime/legion.h	/^      LogicalRegion parent; \/**< parent region to derive privileges from*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
parent	legion_runtime/legion_logging.h	/^        IndexPartition parent;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSubspace
parent	legion_runtime/legion_logging.h	/^        IndexSpace parent;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexPartition
parent	legion_runtime/lowlevel_impl.h	/^	IndexSpace parent;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
parent	legion_runtime/region_tree.h	/^        IndexPartNode *parent;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicSpaceTest
parent	legion_runtime/region_tree.h	/^        IndexSpaceNode *parent;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
parent	legion_runtime/region_tree.h	/^      CompositeNode *const parent;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
parent	legion_runtime/region_tree.h	/^      CompositeView *const parent;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
parent	legion_runtime/region_tree.h	/^      IndexPartNode *const parent;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
parent	legion_runtime/region_tree.h	/^      IndexSpaceNode *parent;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
parent	legion_runtime/region_tree.h	/^      MaterializedView *const parent;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
parent	legion_runtime/region_tree.h	/^      PartitionNode *const parent;$/;"	m	class:LegionRuntime::HighLevel::RegionNode
parent	legion_runtime/region_tree.h	/^      RegionNode *const parent;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
parent	legion_runtime/shared_lowlevel.cc	/^        IndexSpace::Impl *parent;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
parent_condvar	legion_runtime/lowlevel_gpu.cc	/^      gasnett_cond_t parent_condvar, worker_condvar;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
parent_context	legion_runtime/legion_logging.h	/^        UniqueID parent_context;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
parent_ctx	legion_runtime/legion_ops.h	/^      SingleTask *parent_ctx;$/;"	m	class:LegionRuntime::HighLevel::Operation
parent_id	legion_runtime/legion_profiling.h	/^        UniqueID parent_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::OpInstance
parent_impl	legion_runtime/shared_lowlevel.cc	/^        RegionInstance::Impl *parent_impl; \/\/ for lists$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
parent_index	legion_runtime/legion_ops.h	/^      unsigned parent_index;$/;"	m	class:LegionRuntime::HighLevel::CloseOp
parent_inst	legion_runtime/lowlevel.cc	/^      RegionInstance parent_inst;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceArgs	file:
parent_inst	legion_runtime/lowlevel_impl.h	/^	RegionInstance parent_inst;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
parent_method	acpi/acpica/aclocal.h	/^	union acpi_parse_object *parent_method;$/;"	m	struct:acpi_parse_obj_asl	typeref:union:acpi_parse_obj_asl::acpi_parse_object
parent_package	acpi/acpica/aclocal.h	/^	union acpi_operand_object *parent_package;$/;"	m	struct:acpi_predefined_data	typeref:union:acpi_predefined_data::acpi_operand_object
parent_region	legion_runtime/legion.h	/^      LogicalRegion                     parent_region;$/;"	m	class:LegionRuntime::HighLevel::Acquire
parent_region	legion_runtime/legion.h	/^      LogicalRegion                     parent_region;$/;"	m	class:LegionRuntime::HighLevel::Release
parent_region	legion_runtime/legion.h	/^      LogicalRegion                   parent_region;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
parent_region	legion_runtime/legion.h	/^      LogicalRegion                   parent_region;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
parent_register	acpi/acpica/aclocal.h	/^	u8 parent_register;$/;"	m	struct:acpi_bit_register_info
parent_task	legion_runtime/legion.h	/^      Task                              *parent_task;$/;"	m	class:LegionRuntime::HighLevel::Acquire
parent_task	legion_runtime/legion.h	/^      Task                              *parent_task;$/;"	m	class:LegionRuntime::HighLevel::Copy
parent_task	legion_runtime/legion.h	/^      Task                              *parent_task;$/;"	m	class:LegionRuntime::HighLevel::Inline
parent_task	legion_runtime/legion.h	/^      Task                              *parent_task;$/;"	m	class:LegionRuntime::HighLevel::Release
parlist	lua_src/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
parse_args	acpi/acpica/aclocal.h	/^	u32 parse_args;		\/* Grammar\/Parse time arguments *\/$/;"	m	struct:acpi_opcode_info
parse_entry	nautilus/sfi.c	/^parse_entry (struct sfi_common_hdr * entry, struct sys_info * sys)$/;"	f	file:
parse_hpet_tbl	dev/hpet.c	/^parse_hpet_tbl (struct acpi_table_header * hdr, void * arg)$/;"	f	file:
parse_input_args	test/circuit.cc	/^void parse_input_args(char **argv, int argc, int &num_loops, int &num_pieces,$/;"	f
parse_mp_table	arch/x64/smp.c	/^parse_mp_table (struct sys_info * sys, struct mp_table * mp)$/;"	f	file:
parse_mptable_bus	arch/x64/smp.c	/^parse_mptable_bus (struct sys_info * sys, struct mp_table_entry_bus * bus)$/;"	f	file:
parse_mptable_cpu	arch/x64/smp.c	/^parse_mptable_cpu (struct sys_info * sys, struct mp_table_entry_cpu * cpu)$/;"	f	file:
parse_mptable_ioapic	arch/x64/smp.c	/^parse_mptable_ioapic (struct sys_info * sys, struct mp_table_entry_ioapic * ioapic)$/;"	f	file:
parse_mptable_ioint	arch/x64/smp.c	/^parse_mptable_ioint (struct sys_info * sys, struct mp_table_entry_ioint * ioint)$/;"	f	file:
parse_mptable_lint	arch/x64/smp.c	/^parse_mptable_lint (struct sys_info * sys, struct mp_table_entry_lint * lint)$/;"	f	file:
parse_node_announce_data	legion_runtime/lowlevel.cc	/^    void Machine::parse_node_announce_data(const void *args, size_t arglen,$/;"	f	class:LegionRuntime::LowLevel::Machine
parse_node_announce_data	legion_runtime/shared_lowlevel.cc	/^    void Machine::parse_node_announce_data(const void *args, size_t arglen,$/;"	f	class:LegionRuntime::LowLevel::Machine
parse_op_name	acpi/acpica/aclocal.h	/^	char parse_op_name[ACPI_MAX_PARSEOP_NAME];$/;"	m	struct:acpi_parse_obj_asl
parse_opcode	acpi/acpica/aclocal.h	/^	u16 parse_opcode;$/;"	m	struct:acpi_parse_obj_asl
parse_scope	acpi/acpica/aclocal.h	/^	struct acpi_pscope_state parse_scope;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_pscope_state
parse_sfi_cpu	nautilus/sfi.c	/^parse_sfi_cpu (struct sfi_cpu_tbl * tbl, struct sys_info * sys)$/;"	f	file:
parse_sfi_ioapic	nautilus/sfi.c	/^parse_sfi_ioapic (struct sfi_ioapic_tbl * tbl, struct sys_info * sys)$/;"	f	file:
parse_sfi_mmap	nautilus/sfi.c	/^parse_sfi_mmap (struct sfi_mmap_tbl * tbl, struct nk_mem_info * sysmem)$/;"	f	file:
part_nodes	legion_runtime/region_tree.h	/^      std::map<LogicalPartition,PartitionNode*> part_nodes;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
partial	legion_runtime/runtime.h	/^      bool partial;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
partial_field	legion_runtime/lowlevel_dma.cc	/^      std::vector<bool> partial_field;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
partial_remote_writes	legion_runtime/lowlevel.cc	/^    static PartialWriteMap partial_remote_writes;$/;"	m	namespace:LegionRuntime::LowLevel	file:
partial_remote_writes_lock	legion_runtime/lowlevel.cc	/^    static gasnet_hsl_t partial_remote_writes_lock = GASNET_HSL_INITIALIZER;$/;"	m	namespace:LegionRuntime::LowLevel	file:
participant_count	legion_runtime/legion.h	/^      unsigned participant_count(void) const { return participants; }$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
participants	legion_runtime/legion.h	/^      unsigned participants;$/;"	m	class:LegionRuntime::HighLevel::PhaseBarrier
partition	legion_runtime/legion.h	/^      LogicalPartition partition; \/**< mutually exclusive with region*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
partition	test/hpcg/cg-data.h	/^    partition(int64_t nParts,$/;"	f	struct:lgncg::CGData
partition	test/hpcg/mg-data.h	/^    partition(int64_t nParts,$/;"	f	struct:lgncg::MGData
partition	test/hpcg/sparsemat.h	/^    partition(const Geometry &geom,$/;"	f	struct:lgncg::SparseMatrix
partition	test/hpcg/vector.h	/^    partition(int64_t nParts,$/;"	f	struct:lgncg::Vector
patchlistaux	lua_src/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	lua_src/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
path	acpi/acpica/aclocal.h	/^	ACPI_PARSE_COMMON u8 *path;$/;"	m	struct:acpi_parse_obj_named
path	legion_runtime/region_tree.h	/^      RegionTreePath &path;$/;"	m	class:LegionRuntime::HighLevel::PathTraverser
path	legion_runtime/region_tree.h	/^      std::vector<int> path;$/;"	m	class:LegionRuntime::HighLevel::RegionTreePath
pathname	acpi/acpica/aclocal.h	/^	char *pathname;$/;"	m	struct:acpi_predefined_data
pathname	acpi/acpica/aclocal.h	/^	char pathname[128];$/;"	m	struct:acpi_db_method_info
payload	legion_runtime/activemsg.cc	/^  void *payload;$/;"	m	struct:OutgoingMessage	file:
payload_count	legion_runtime/activemsg.cc	/^static int payload_count = 0;$/;"	v	file:
payload_mode	legion_runtime/activemsg.cc	/^  int payload_mode;$/;"	m	struct:OutgoingMessage	file:
payload_num	legion_runtime/activemsg.cc	/^  int payload_num;$/;"	m	struct:OutgoingMessage	file:
payload_size	legion_runtime/activemsg.cc	/^  size_t payload_size;$/;"	m	struct:OutgoingMessage	file:
payload_src	legion_runtime/activemsg.cc	/^  PayloadSource *payload_src;$/;"	m	struct:OutgoingMessage	file:
pc_int_handler	dev/apic.c	/^pc_int_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
pcallcont	lua_src/lbaselib.c	/^static int pcallcont (lua_State *L) {$/;"	f	file:
pci_add_bus	dev/pci.c	/^pci_add_bus (struct pci_bus * bus, struct pci_info * pci)$/;"	f	file:
pci_add_dev_to_bus	dev/pci.c	/^pci_add_dev_to_bus (struct pci_dev * dev, $/;"	f	file:
pci_bus_create	dev/pci.c	/^pci_bus_create (uint32_t num, struct pci_info * pci)$/;"	f	file:
pci_bus_probe	dev/pci.c	/^pci_bus_probe (struct pci_info * pci, uint8_t bus)$/;"	f	file:
pci_bus_scan	dev/pci.c	/^pci_bus_scan (struct pci_info * pci)$/;"	f	file:
pci_cfg_readl	dev/pci.c	/^pci_cfg_readl (uint8_t bus, $/;"	f
pci_cfg_readw	dev/pci.c	/^pci_cfg_readw (uint8_t bus, $/;"	f
pci_cfg_writel	dev/pci.c	/^pci_cfg_writel (uint8_t bus, $/;"	f
pci_cfg_writew	dev/pci.c	/^pci_cfg_writew (uint8_t bus, $/;"	f
pci_copy_cfg_space	dev/pci.c	/^pci_copy_cfg_space(struct pci_dev *dev, struct pci_bus *bus)$/;"	f	file:
pci_dev_create	dev/pci.c	/^pci_dev_create (uint32_t num, struct pci_bus * bus)$/;"	f	file:
pci_dev_probe	dev/pci.c	/^pci_dev_probe (struct pci_bus * bus, uint8_t dev)$/;"	f	file:
pci_dev_valid	dev/pci.c	/^pci_dev_valid (uint8_t bus, uint8_t slot)$/;"	f	file:
pci_fun_probe	dev/pci.c	/^pci_fun_probe (struct pci_info * pci, uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_base_class	dev/pci.c	/^pci_get_base_class (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_dev_id	dev/pci.c	/^pci_get_dev_id (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_hdr_type	dev/pci.c	/^pci_get_hdr_type (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_rev_id	dev/pci.c	/^pci_get_rev_id (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_sec_bus	dev/pci.c	/^pci_get_sec_bus (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_sub_class	dev/pci.c	/^pci_get_sub_class (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_vendor_id	dev/pci.c	/^pci_get_vendor_id (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_init	dev/pci.c	/^pci_init (struct naut_info * naut)$/;"	f
peek_next	legion_runtime/lowlevel.cc	/^    bool ElementMask::Enumerator::peek_next(int &position, int &length)$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
peer	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *peer;	\/* First peer *\/$/;"	m	struct:acpi_namespace_node	typeref:struct:acpi_namespace_node::acpi_namespace_node
peer	legion_runtime/activemsg.cc	/^  gasnet_node_t peer;$/;"	m	class:ActiveMessageEndpoint	file:
peer_gpus	legion_runtime/lowlevel_gpu.h	/^      std::set<GPUProcessor*> peer_gpus;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor
pending	legion_runtime/lowlevel.cc	/^        std::map<Barrier::timestamp_t, int> pending;$/;"	m	struct:LegionRuntime::LowLevel::Event::Impl::PendingUpdates::PerNodeUpdates	file:
pending_allocations	legion_runtime/activemsg.cc	/^  std::queue<OutgoingMessage *> pending_allocations;$/;"	m	class:SrcDataPool	file:
pending_copies	legion_runtime/shared_lowlevel.cc	/^        std::list<CopyOperation2> pending_copies;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
pending_gc_epochs	legion_runtime/runtime.h	/^                      RUNTIME_GC_EPOCH_ALLOC>::set pending_gc_epochs;$/;"	m	class:LegionRuntime::HighLevel::Runtime
pending_shutdown	legion_runtime/runtime.h	/^      bool pending_shutdown;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
pending_subtasks	legion_runtime/legion_tasks.h	/^      unsigned pending_subtasks;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
pending_tasks	legion_runtime/lowlevel.cc	/^      std::list<Task *> pending_tasks;$/;"	m	class:LegionRuntime::LowLevel::ProcessorThread	file:
pending_updates	legion_runtime/lowlevel_impl.h	/^      std::map<Event::gen_t, PendingUpdates *> pending_updates;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
pending_updates	legion_runtime/region_tree.h	/^                     PENDING_UPDATES_ALLOC>::map pending_updates;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
perf_report	nautilus/pmc.c	/^perf_report (void)$/;"	f
perf_trace_lock	legion_runtime/region_tree.h	/^      Reservation perf_trace_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
perf_trace_tolerance	legion_runtime/runtime.cc	/^    \/*static*\/ unsigned long long Runtime::perf_trace_tolerance = 10000; $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
perf_trace_tolerance	legion_runtime/runtime.h	/^      static unsigned long long perf_trace_tolerance;$/;"	m	class:LegionRuntime::HighLevel::Runtime
perform_close_operations	legion_runtime/region_tree.cc	/^    bool PremapTraverser::perform_close_operations(RegionTreeNode *node, $/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
perform_close_operations	legion_runtime/region_tree.cc	/^    void RegionTreeNode::perform_close_operations(LogicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
perform_closing_checks	legion_runtime/region_tree.cc	/^    void RegionTreeNode::perform_closing_checks($/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
perform_composite_across_reduction	legion_runtime/region_tree.cc	/^    Event ReductionView::perform_composite_across_reduction($/;"	f	class:LegionRuntime::HighLevel::ReductionView
perform_composite_reduction	legion_runtime/region_tree.cc	/^    Event ReductionView::perform_composite_reduction(MaterializedView *target,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
perform_copy_operation	legion_runtime/region_tree.cc	/^    Event RegionTreeNode::perform_copy_operation(Event precondition,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
perform_copy_operation	legion_runtime/shared_lowlevel.cc	/^    void CopyOperation::perform_copy_operation(void)$/;"	f	class:LegionRuntime::LowLevel::CopyOperation
perform_copy_operation	legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::perform_copy_operation(RegionInstance::Impl *target, const ElementMask &src_mask, const ElementMask &dst_mask)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
perform_dependence_analysis	legion_runtime/region_tree.cc	/^    void RegionTreeForest::perform_dependence_analysis(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
perform_dependence_checks	legion_runtime/region_tree.cc	/^    FieldMask RegionTreeNode::perform_dependence_checks($/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
perform_dma	legion_runtime/lowlevel_dma.cc	/^    void CopyRequest::perform_dma(void)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
perform_dma	legion_runtime/lowlevel_dma.cc	/^    void ReduceRequest::perform_dma(void)$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
perform_dma_mask	legion_runtime/lowlevel_dma.cc	/^    void CopyRequest::perform_dma_mask(MemPairCopier *mpc)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
perform_dma_rect	legion_runtime/lowlevel_dma.cc	/^    void CopyRequest::perform_dma_rect(MemPairCopier *mpc)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
perform_dma_rect	legion_runtime/lowlevel_dma.cc	/^    void ReduceRequest::perform_dma_rect(MemPairCopier *mpc)$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
perform_dynamic_independence_tests	legion_runtime/runtime.cc	/^    bool Runtime::perform_dynamic_independence_tests(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
perform_dynamic_tests	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::perform_dynamic_tests(unsigned num_tests)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
perform_fence_analysis	legion_runtime/region_tree.cc	/^    void RegionTreeForest::perform_fence_analysis(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
perform_inlining	legion_runtime/legion_tasks.cc	/^    void IndexTask::perform_inlining(SingleTask *ctx, InlineFnptr fn)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
perform_inlining	legion_runtime/legion_tasks.cc	/^    void IndividualTask::perform_inlining(SingleTask *ctx, InlineFnptr fn) $/;"	f	class:LegionRuntime::HighLevel::IndividualTask
perform_inlining	legion_runtime/legion_tasks.cc	/^    void PointTask::perform_inlining(SingleTask *ctx, InlineFnptr fn)$/;"	f	class:LegionRuntime::HighLevel::PointTask
perform_inlining	legion_runtime/legion_tasks.cc	/^    void SliceTask::perform_inlining(SingleTask *ctx, InlineFnptr fn)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
perform_inlining	legion_runtime/legion_tasks.cc	/^    void WrapperTask::perform_inlining(SingleTask *ctx, InlineFnptr fn)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
perform_mapping	legion_runtime/legion_tasks.cc	/^    bool IndexTask::perform_mapping(bool mapper_invoked)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
perform_mapping	legion_runtime/legion_tasks.cc	/^    bool IndividualTask::perform_mapping(bool mapper_invoked)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
perform_mapping	legion_runtime/legion_tasks.cc	/^    bool PointTask::perform_mapping(bool mapper_invoked)$/;"	f	class:LegionRuntime::HighLevel::PointTask
perform_mapping	legion_runtime/legion_tasks.cc	/^    bool SliceTask::perform_mapping(bool mapper_invoked)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
perform_mapping	legion_runtime/legion_tasks.cc	/^    bool WrapperTask::perform_mapping(bool mapper_invoked)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
perform_mapping_operations	legion_runtime/runtime.cc	/^    void ProcessorManager::perform_mapping_operations(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
perform_one_time_logging	legion_runtime/runtime.cc	/^    void Runtime::perform_one_time_logging(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
perform_privilege_checks	legion_runtime/legion_tasks.cc	/^    void TaskOp::perform_privilege_checks(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
perform_reduction	legion_runtime/region_tree.cc	/^    void ReductionView::perform_reduction(LogicalView *target,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
perform_registration	legion_runtime/legion_ops.cc	/^    bool Operation::perform_registration(GenerationID our_gen, $/;"	f	class:LegionRuntime::HighLevel::Operation
perform_release	legion_runtime/shared_lowlevel.cc	/^    void ReservationImpl::perform_release(std::set<EventImpl*> &to_trigger)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
perform_scheduling	legion_runtime/runtime.cc	/^    void ProcessorManager::perform_scheduling(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
perform_scheduling	legion_runtime/shared_lowlevel.cc	/^    bool ProcessorImpl::perform_scheduling(bool need_lock)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
perform_slice	legion_runtime/legion_tasks.cc	/^    void DeferredSlicer::perform_slice(SliceTask *slice)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
perform_test	legion_runtime/region_tree.cc	/^    void RegionTreeForest::DynamicPartTest::perform_test(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
perform_test	legion_runtime/region_tree.cc	/^    void RegionTreeForest::DynamicSpaceTest::perform_test(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicSpaceTest
permanent_mappings	legion_runtime/mapping_utilities.h	/^        std::map<MappingKey,MemoizedMapping> permanent_mappings;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
permit_leave_open	legion_runtime/region_tree.h	/^      bool permit_leave_open;$/;"	m	struct:LegionRuntime::HighLevel::CompositeCloser
permit_leave_open	legion_runtime/region_tree.h	/^      bool permit_leave_open;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
permit_task_steal	legion_runtime/alt_mappers.cc	/^    void DebugMapper::permit_task_steal(Processor thief, const std::vector<const Task*> &tasks,$/;"	f	class:LegionRuntime::HighLevel::DebugMapper
permit_task_steal	legion_runtime/default_mapper.cc	/^    void DefaultMapper::permit_task_steal(Processor thief,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
permute	legion_runtime/legion_utilities.h	/^    inline void BitPermutation<BITMASK,LOG2MAX>::permute(BITMASK &mask)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
pernode	legion_runtime/lowlevel.cc	/^      std::map<int, PerNodeUpdates *> pernode;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates	file:
persistent	legion_runtime/region_tree.h	/^      bool persistent;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
phase_barrier	legion_runtime/legion.h	/^      Barrier phase_barrier;$/;"	m	class:LegionRuntime::HighLevel::PhaseBarrier
phi_card_is_up	arch/k1om/xeon_phi.c	/^phi_card_is_up (void)$/;"	f
phi_cons_clear_screen	arch/k1om/xeon_phi.c	/^phi_cons_clear_screen (void)$/;"	f
phi_cons_get_cursor	arch/k1om/xeon_phi.c	/^phi_cons_get_cursor (uint8_t * x, uint8_t * y)$/;"	f
phi_cons_init	arch/k1om/xeon_phi.c	/^phi_cons_init (void)$/;"	f
phi_cons_notify_char_write	arch/k1om/xeon_phi.c	/^phi_cons_notify_char_write (uint16_t x, uint16_t y)$/;"	f	file:
phi_cons_notify_line_draw	arch/k1om/xeon_phi.c	/^phi_cons_notify_line_draw (unsigned row)$/;"	f
phi_cons_notify_redraw	arch/k1om/xeon_phi.c	/^phi_cons_notify_redraw (void)$/;"	f
phi_cons_notify_scrollup	arch/k1om/xeon_phi.c	/^phi_cons_notify_scrollup (void)$/;"	f
phi_cons_print	arch/k1om/xeon_phi.c	/^phi_cons_print (char *buf)$/;"	f
phi_cons_putchar	arch/k1om/xeon_phi.c	/^phi_cons_putchar (char c)$/;"	f
phi_cons_read_reg	arch/k1om/xeon_phi.c	/^phi_cons_read_reg(uint32_t off)$/;"	f	file:
phi_cons_scrollup	arch/k1om/xeon_phi.c	/^phi_cons_scrollup (void)$/;"	f	file:
phi_cons_set_cursor	arch/k1om/xeon_phi.c	/^phi_cons_set_cursor (uint8_t x, uint8_t y)$/;"	f
phi_cons_wait_for_out_cmpl	arch/k1om/xeon_phi.c	/^phi_cons_wait_for_out_cmpl (void)$/;"	f	file:
phi_cons_write_fb_and_notify	arch/k1om/xeon_phi.c	/^phi_cons_write_fb_and_notify (uint16_t x, uint16_t y, char c, uint8_t color)$/;"	f	file:
phi_cons_write_reg	arch/k1om/xeon_phi.c	/^phi_cons_write_reg (uint32_t off, uint32_t val)$/;"	f	file:
phi_term	arch/k1om/xeon_phi.c	/^} phi_term;$/;"	v	typeref:struct:__anon42	file:
physical_instances	legion_runtime/legion_tasks.h	/^                                                    physical_instances;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
physical_instances	legion_runtime/runtime.h	/^                     MEMORY_INSTANCES_ALLOC>::map physical_instances;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
physical_logging_only	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::physical_logging_only = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
physical_logging_only	legion_runtime/runtime.h	/^      static bool physical_logging_only;$/;"	m	class:LegionRuntime::HighLevel::Runtime
physical_only	legion_runtime/legion_spy.h	/^      const bool physical_only;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
physical_region	legion_runtime/legion.h	/^      PhysicalRegion                  physical_region;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
physical_region	legion_runtime/legion.h	/^      PhysicalRegion                  physical_region;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
physical_regions	legion_runtime/legion_tasks.h	/^      std::vector<PhysicalRegion> physical_regions;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
physical_state_size	legion_runtime/region_tree.h	/^      size_t physical_state_size;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
physical_states	legion_runtime/region_tree.h	/^      LegionStack<PhysicalState,MAX_CONTEXTS,DEFAULT_CONTEXTS> physical_states;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
pic_spur_int_handler	nautilus/idt.c	/^pic_spur_int_handler (excp_entry_t * excp,$/;"	f	file:
pin_memory	legion_runtime/lowlevel.cc	/^      void pin_memory(GPUProcessor *proc)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
ping	test/ipi.c	/^ping (excp_entry_t * excp, excp_vec_t vec)$/;"	f
pit_irq_handler	dev/i8254.c	/^pit_irq_handler (excp_entry_t * excp, excp_vec_t vec)$/;"	f	file:
pk_funcs	lua_src/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
pkg	acpi/acpica/aclocal.h	/^	struct acpi_pkg_state pkg;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_pkg_state
pkg_end	acpi/acpica/aclocal.h	/^	u8 *pkg_end;		\/* Current package end *\/$/;"	m	struct:acpi_parse_state
pkg_end	acpi/acpica/aclocal.h	/^	u8 *pkg_end;		\/* Current package end *\/$/;"	m	struct:acpi_pscope_state
pkg_length	acpi/acpica/aclocal.h	/^	u32 pkg_length;$/;"	m	struct:acpi_field_info
pkg_start	acpi/acpica/aclocal.h	/^	u8 *pkg_start;		\/* Current package begin *\/$/;"	m	struct:acpi_parse_state
pm1_cnt_len	arch/hrt/shutdown.c	/^    uint8_t   pm1_cnt_len;$/;"	m	struct:shutdown_info	file:
pm1_cnt_len	arch/x64/shutdown.c	/^    uint8_t   pm1_cnt_len;$/;"	m	struct:shutdown_info	file:
pm1a_cnt	arch/hrt/shutdown.c	/^    uint32_t  pm1a_cnt;$/;"	m	struct:shutdown_info	file:
pm1a_cnt	arch/x64/shutdown.c	/^    uint32_t  pm1a_cnt;$/;"	m	struct:shutdown_info	file:
pm1b_cnt	arch/hrt/shutdown.c	/^    uint32_t  pm1b_cnt;$/;"	m	struct:shutdown_info	file:
pm1b_cnt	arch/x64/shutdown.c	/^    uint32_t  pm1b_cnt;$/;"	m	struct:shutdown_info	file:
pmain	lua_src/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:
pmc_init	nautilus/pmc.c	/^pmc_init (void)$/;"	f
pmc_slots	nautilus/pmc.c	/^static perf_slot_t  pmc_slots[NUM_PERF_SLOTS];$/;"	v	file:
point	legion_runtime/legion.h	/^      DomainPoint                        point;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
point	legion_runtime/legion_logging.h	/^        const DomainPoint &point;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSlicePoint
point	legion_runtime/legion_profiling.h	/^        DomainPoint point;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::TaskInstance
point_data	legion_runtime/lowlevel.h	/^      int point_data[MAX_POINT_DIM];$/;"	m	class:LegionRuntime::LowLevel::DomainPoint
point_id	legion_runtime/legion_logging.h	/^        UniqueID point_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSlicePoint
point_task_lock	legion_runtime/runtime.h	/^      Reservation point_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
point_termination	legion_runtime/legion_tasks.h	/^      UserEvent point_termination;$/;"	m	class:LegionRuntime::HighLevel::PointTask
pointer	legion_runtime/legion_allocation.h	/^      typedef T*                pointer;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
pointer	nautilus/printk.c	/^static char *pointer(const char *fmt, char *buf, char *end, void *ptr,$/;"	f	file:
points	legion_runtime/legion.h	/^      std::set<T> points;$/;"	m	struct:LegionRuntime::HighLevel::ColoredPoints
points	legion_runtime/legion_tasks.h	/^      std::deque<PointTask*> points;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
points_left	legion_runtime/rectangle_set.h	/^      inline bool points_left(void) const { return (dir == LEFT_DIR); }$/;"	f	class:LegionRuntime::HighLevel::Segment
points_none	legion_runtime/rectangle_set.h	/^      inline bool points_none(void) const { return (dir == NONE_DIR); }$/;"	f	class:LegionRuntime::HighLevel::Segment
points_right	legion_runtime/rectangle_set.h	/^      inline bool points_right(void) const { return (dir == RIGHT_DIR); }$/;"	f	class:LegionRuntime::HighLevel::Segment
polarity	legion_runtime/lowlevel.h	/^	int polarity;$/;"	m	class:LegionRuntime::LowLevel::ElementMask::Enumerator
poll	nautilus/libccompat.c	/^int poll (struct pollfd *fds, nfds_t nfds, int timeout)$/;"	f
polling_threads	legion_runtime/activemsg.cc	/^static pthread_t *polling_threads = 0;$/;"	v	file:
pong	test/ipi.c	/^pong (excp_entry_t * excp, excp_vec_t vec)$/;"	f	file:
pong_bcast	test/ipi.c	/^pong_bcast (excp_entry_t * excp, excp_vec_t vec)$/;"	f	file:
pop	legion_runtime/lowlevel_impl.h	/^    JOBTYPE *JobQueue<JOBTYPE>::pop(void)$/;"	f	class:LegionRuntime::LowLevel::JobQueue
pop_count	legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int AVXBitMask<MAX>::pop_count($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
pop_count	legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int AVXTLBitMask<MAX>::pop_count($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
pop_count	legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int BitMask<T,MAX,SHIFT,MASK>::pop_count($/;"	f	class:LegionRuntime::HighLevel::BitMask
pop_count	legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int SSEBitMask<MAX>::pop_count($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
pop_count	legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int SSETLBitMask<MAX>::pop_count($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
pop_count	legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int TLBitMask<T,MAX,SHIFT,MASK>::pop_count($/;"	f	class:LegionRuntime::HighLevel::TLBitMask
pop_count	legion_runtime/lowlevel.cc	/^    size_t ElementMask::pop_count(bool enabled) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
pop_count	legion_runtime/shared_lowlevel.cc	/^    size_t ElementMask::pop_count(bool enabled) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
pop_timer	legion_runtime/lowlevel.cc	/^    \/*static*\/ void DetailedTimer::pop_timer(void)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
pop_timer	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void DetailedTimer::pop_timer(void)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
popfq	asm/thread_lowlevel.S	/^popfq           ;                               \\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %r10	;				\\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %r11	;				\\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %r12	;				\\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %r13	;				\\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %r14	;				\\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %r15       ;                               \\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %r8	;				\\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %r9	;				\\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %rax       ;$/;"	l
popq	asm/thread_lowlevel.S	/^popq %rbp   ;               \\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %rbx	;				\\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %rcx	;				\\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %rdi	;				\\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %rdx	;				\\$/;"	l
popq	asm/thread_lowlevel.S	/^popq %rsi	;				\\$/;"	l
populatef2c	test/hpcg/hpcg-problem.cc	/^Problem::populatef2c(lgncg::SparseMatrix &Af,$/;"	f	class:Problem
populatef2cTID	test/hpcg/hpcg-problem.cc	/^int Problem::populatef2cTID   = -1;$/;"	m	class:Problem	file:
populatef2cTID	test/hpcg/hpcg-problem.h	/^    static int populatef2cTID;$/;"	m	struct:Problem
populatef2cTask	test/hpcg/hpcg-problem.cc	/^populatef2cTask($/;"	f
pos	legion_runtime/lowlevel.h	/^	int pos;$/;"	m	class:LegionRuntime::LowLevel::ElementMask::Enumerator
positive_sign	nautilus/libccompat.c	/^    char *positive_sign;      \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
posrelat	lua_src/lstrlib.c	/^static size_t posrelat (ptrdiff_t pos, size_t len) {$/;"	f	file:
post_end_task	legion_runtime/legion_tasks.cc	/^    void SingleTask::post_end_task(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
post_execute	legion_runtime/lowlevel_gpu.cc	/^      void post_execute(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
post_wait	legion_runtime/runtime.cc	/^    void Runtime::post_wait(Processor proc)$/;"	f	class:LegionRuntime::HighLevel::Runtime
pow	nautilus/libccompat.c	/^double pow(double x, double y)$/;"	f
powersOf10	nautilus/libccompat.c	/^static double powersOf10[] = {	\/* Table giving binary powers of 10.  Entry *\/$/;"	v	file:
preSolvPrep	test/hpcg/cg.h	/^preSolvPrep(lgncg::SparseMatrix &A,$/;"	f	namespace:__anon38
preStartInit	test/hpcg/hpcg-main.cc	/^preStartInit(void)$/;"	f	namespace:__anon37
pre_map_task	legion_runtime/default_mapper.cc	/^    bool DefaultMapper::pre_map_task(Task *task)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
pre_map_task	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::pre_map_task(Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
pre_mask	legion_runtime/region_tree.h	/^      FieldMask pre_mask;$/;"	m	struct:LegionRuntime::HighLevel::PreconditionSet
pre_wait	legion_runtime/runtime.cc	/^    void Runtime::pre_wait(Processor proc)$/;"	f	class:LegionRuntime::HighLevel::Runtime
prealloced	legion_runtime/lowlevel.cc	/^      bool prealloced, registered;$/;"	m	class:LegionRuntime::LowLevel::LocalCPUMemory	file:
precise_users	legion_runtime/field_tree.h	/^      std::list<UT> precise_users;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
precision	nautilus/printk.c	/^	int			precision;	\/* # of digits\/chars *\/$/;"	m	struct:printf_spec	file:
preconditions	legion_runtime/region_tree.h	/^      std::set<Event> preconditions;$/;"	m	struct:LegionRuntime::HighLevel::PreconditionSet
pred_op	legion_runtime/legion_ops.h	/^      PredicateOp *pred_op;$/;"	m	class:LegionRuntime::HighLevel::NotPredOp
predefined	acpi/acpica/aclocal.h	/^	const union acpi_predefined_info *predefined;$/;"	m	struct:acpi_predefined_data	typeref:union:acpi_predefined_data::acpi_predefined_info
predicate	legion_runtime/legion.h	/^      Predicate                          predicate;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
predicate	legion_runtime/legion.h	/^      Predicate                          predicate;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
predicate	legion_runtime/legion.h	/^      Predicate                       predicate;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
predicate	legion_runtime/legion.h	/^      Predicate                       predicate;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
predicate	legion_runtime/legion.h	/^      Predicate                       predicate;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
predicate	legion_runtime/legion_ops.h	/^      PredicateOp *predicate;$/;"	m	class:LegionRuntime::HighLevel::SpeculativeOp
predicate_and	legion_runtime/legion.cc	/^    Predicate HighLevelRuntime::predicate_and(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
predicate_and	legion_runtime/runtime.cc	/^    Predicate Runtime::predicate_and(Context ctx, const Predicate &p1, $/;"	f	class:LegionRuntime::HighLevel::Runtime
predicate_false_future	legion_runtime/legion.h	/^      Future                             predicate_false_future;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
predicate_false_future	legion_runtime/legion.h	/^      Future                             predicate_false_future;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
predicate_false_future	legion_runtime/legion_tasks.h	/^      Future predicate_false_future;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
predicate_false_future	legion_runtime/legion_tasks.h	/^      Future predicate_false_future;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
predicate_false_result	legion_runtime/legion.h	/^      TaskArgument                       predicate_false_result;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
predicate_false_result	legion_runtime/legion.h	/^      TaskArgument                       predicate_false_result;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
predicate_false_result	legion_runtime/legion_tasks.h	/^      void *predicate_false_result;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
predicate_false_result	legion_runtime/legion_tasks.h	/^      void *predicate_false_result;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
predicate_false_size	legion_runtime/legion_tasks.h	/^      size_t predicate_false_size;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
predicate_false_size	legion_runtime/legion_tasks.h	/^      size_t predicate_false_size;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
predicate_not	legion_runtime/legion.cc	/^    Predicate HighLevelRuntime::predicate_not(Context ctx, const Predicate &p) $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
predicate_not	legion_runtime/runtime.cc	/^    Predicate Runtime::predicate_not(Context ctx, const Predicate &p) $/;"	f	class:LegionRuntime::HighLevel::Runtime
predicate_op	acpi/acpica/aclocal.h	/^	union acpi_parse_object *predicate_op;$/;"	m	struct:acpi_control_state	typeref:union:acpi_control_state::acpi_parse_object
predicate_or	legion_runtime/legion.cc	/^    Predicate HighLevelRuntime::predicate_or(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
predicate_or	legion_runtime/runtime.cc	/^    Predicate Runtime::predicate_or(Context ctx, const Predicate &p1, $/;"	f	class:LegionRuntime::HighLevel::Runtime
predicate_references	legion_runtime/legion_ops.h	/^      unsigned predicate_references;$/;"	m	class:LegionRuntime::HighLevel::Predicate::Impl
predicate_resolved	legion_runtime/legion_ops.h	/^      bool predicate_resolved;$/;"	m	class:LegionRuntime::HighLevel::Predicate::Impl
predicate_value	legion_runtime/legion_ops.h	/^      bool predicate_value;$/;"	m	class:LegionRuntime::HighLevel::Predicate::Impl
predicate_waiter	legion_runtime/legion_ops.h	/^      UserEvent predicate_waiter; \/\/ used only when needed$/;"	m	class:LegionRuntime::HighLevel::SpeculativeOp
preempt	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::preempt(EventImpl *event, EventImpl::EventGeneration needed)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
preemptable_sleep	legion_runtime/lowlevel.cc	/^    \/*static*\/ bool PreemptableThread::preemptable_sleep(Event wait_for,$/;"	f	class:LegionRuntime::LowLevel::PreemptableThread
preemptable_threads	legion_runtime/lowlevel.cc	/^      std::list<Thread *> preemptable_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
preimage	legion_runtime/arrays.h	/^      Rect<DIM> preimage(const Point<DIM> p) const$/;"	f	class:LegionRuntime::Arrays::Blockify
preimage	legion_runtime/arrays.h	/^      Rect<IDIM> preimage(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::Linearization
preimage	legion_runtime/arrays.h	/^      Rect<IDIM> preimage(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::Translation
preimage	legion_runtime/arrays.h	/^      virtual Rect<IDIM> preimage(const Point<ODIM> p) const { assert(0); return Rect<IDIM>(); }\/\/= 0;$/;"	f	class:LegionRuntime::Arrays::Mapping
preimage	legion_runtime/arrays.h	/^      virtual Rect<IDIM> preimage(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
preimage_is_dense	legion_runtime/arrays.h	/^      bool preimage_is_dense(const Point<DIM> p) const$/;"	f	class:LegionRuntime::Arrays::Blockify
preimage_is_dense	legion_runtime/arrays.h	/^      bool preimage_is_dense(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::Linearization
preimage_is_dense	legion_runtime/arrays.h	/^      bool preimage_is_dense(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::Translation
preimage_is_dense	legion_runtime/arrays.h	/^      virtual bool preimage_is_dense(const Point<ODIM> p) const { assert(0); return false; }\/\/= 0;$/;"	f	class:LegionRuntime::Arrays::Mapping
preimage_is_dense	legion_runtime/arrays.h	/^      virtual bool preimage_is_dense(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
preinit_state	lua_src/lstate.c	/^static void preinit_state (lua_State *L, global_State *g) {$/;"	f	file:
preloadedlibs	lua_src/linit.c	/^static const luaL_Reg preloadedlibs[] = {$/;"	v	file:
premap_physical_region	legion_runtime/region_tree.cc	/^    bool RegionTreeForest::premap_physical_region(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
premap_task	legion_runtime/legion_tasks.cc	/^    bool IndexTask::premap_task(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
premap_task	legion_runtime/legion_tasks.cc	/^    bool IndividualTask::premap_task(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
premap_task	legion_runtime/legion_tasks.cc	/^    bool PointTask::premap_task(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
premap_task	legion_runtime/legion_tasks.cc	/^    bool SliceTask::premap_task(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
premap_task	legion_runtime/legion_tasks.cc	/^    bool WrapperTask::premap_task(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
premapped	legion_runtime/legion.h	/^      bool                                premapped;$/;"	m	class:LegionRuntime::HighLevel::Task
premapped	legion_runtime/legion.h	/^      bool premapped;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
premapping_events	legion_runtime/legion_tasks.h	/^      std::map<RegionTreeID,std::map<Event,FieldMask> > premapping_events;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
prepare_steal	legion_runtime/legion_tasks.cc	/^    bool IndexTask::prepare_steal(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
prepare_steal	legion_runtime/legion_tasks.cc	/^    bool IndividualTask::prepare_steal(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
prepare_steal	legion_runtime/legion_tasks.cc	/^    bool PointTask::prepare_steal(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
prepare_steal	legion_runtime/legion_tasks.cc	/^    bool SliceTask::prepare_steal(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
prepare_steal	legion_runtime/legion_tasks.cc	/^    bool WrapperTask::prepare_steal(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
prev	lua_src/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
prev_count	legion_runtime/lowlevel.cc	/^	int prev_offset, prev_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
prev_count	legion_runtime/lowlevel_dma.cc	/^	int prev_offset, prev_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
prev_epoch_users	legion_runtime/region_tree.h	/^      FieldTree<LogicalUser> *prev_epoch_users;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
prev_epoch_users	legion_runtime/region_tree.h	/^      FieldTree<PhysicalUser> *const prev_epoch_users;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
prev_epoch_users	legion_runtime/region_tree.h	/^      LegionContainer<LogicalUser,PREV_LOGICAL_ALLOC>::list prev_epoch_users;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
prev_epoch_users	legion_runtime/region_tree.h	/^      LegionContainer<PhysicalUser,PREV_PHYSICAL_ALLOC>::list prev_epoch_users;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
prev_idx	legion_runtime/legion_trace.h	/^        int prev_idx;$/;"	m	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
prev_offset	legion_runtime/lowlevel.cc	/^	int prev_offset, prev_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
prev_offset	legion_runtime/lowlevel_dma.cc	/^	int prev_offset, prev_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
previous	acpi/acpica/aclocal.h	/^	struct acpi_gpe_block_info *previous;$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_gpe_block_info
previous	acpi/acpica/aclocal.h	/^	struct acpi_gpe_xrupt_info *previous;$/;"	m	struct:acpi_gpe_xrupt_info	typeref:struct:acpi_gpe_xrupt_info::acpi_gpe_xrupt_info
previous	lua_src/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	lua_src/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
previous_id	legion_runtime/legion_logging.h	/^        UniqueID previous_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
previous_index	legion_runtime/legion_logging.h	/^        unsigned previous_index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
previous_subscribe_gen	legion_runtime/lowlevel.cc	/^      Event::gen_t previous_subscribe_gen;$/;"	m	struct:LegionRuntime::LowLevel::EventSubscribeArgs	file:
pri_insert	legion_runtime/lowlevel_impl.h	/^      void pri_insert(T to_add) {$/;"	f	class:LegionRuntime::LowLevel::pri_list
pri_list	legion_runtime/lowlevel_impl.h	/^    class pri_list : public std::list<T> {$/;"	c	namespace:LegionRuntime::LowLevel
primaryexp	lua_src/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
prime_index	nautilus/hashtable.c	/^    uint_t prime_index;$/;"	m	struct:nk_hashtable	file:
prime_table_length	nautilus/hashtable.c	/^const uint_t prime_table_length = sizeof(primes) \/ sizeof(primes[0]);$/;"	v
primes	nautilus/hashtable.c	/^static const uint_t primes[] = $/;"	v	file:
primes	nautilus/mm/kmem.c	/^static const uint64_t primes[] = $/;"	v	file:
print	legion_runtime/utilities.h	/^      inline void print(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
print_children	legion_runtime/legion_tasks.cc	/^    void SingleTask::print_children(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
print_event_waiters	legion_runtime/shared_lowlevel.cc	/^    void Runtime::print_event_waiters(void)$/;"	f	class:LegionRuntime::LowLevel::Runtime
print_info	legion_runtime/lowlevel.cc	/^	  virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry
print_info	legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f) { fprintf(f,"external waiter\\n"); }$/;"	f	class:LegionRuntime::LowLevel::PthreadCondWaiter
print_info	legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredBarrierArrival
print_info	legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredEventTrigger
print_info	legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
print_info	legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredLockDestruction
print_info	legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredLockRequest
print_info	legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredTaskSpawn
print_info	legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredUnlockRequest
print_info	legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
print_info	legion_runtime/lowlevel_dma.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::CopyCompletionLogger
print_info	legion_runtime/lowlevel_dma.cc	/^    void DmaRequest::Waiter::print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DmaRequest::Waiter
print_info	legion_runtime/lowlevel_gpu.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
print_info	legion_runtime/lowlevel_gpu.cc	/^    void GPUTask::print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
print_logical_context	legion_runtime/region_tree.cc	/^    void PartitionNode::print_logical_context(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
print_logical_context	legion_runtime/region_tree.cc	/^    void RegionNode::print_logical_context(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionNode
print_logical_state	legion_runtime/region_tree.cc	/^    void PartitionNode::print_logical_state(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
print_logical_state	legion_runtime/region_tree.cc	/^    void RegionNode::print_logical_state(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
print_message	legion_runtime/utilities.h	/^    const char *print_message;$/;"	m	class:LegionRuntime::TimeStamp
print_out_acquire_ops	legion_runtime/runtime.cc	/^    void Runtime::print_out_acquire_ops(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_out_index_tasks	legion_runtime/runtime.cc	/^    void Runtime::print_out_index_tasks(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_out_individual_tasks	legion_runtime/runtime.cc	/^    void Runtime::print_out_individual_tasks(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_out_point_tasks	legion_runtime/runtime.cc	/^    void Runtime::print_out_point_tasks(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_out_slice_tasks	legion_runtime/runtime.cc	/^    void Runtime::print_out_slice_tasks(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_outstanding_tasks	legion_runtime/runtime.cc	/^    void Runtime::print_outstanding_tasks(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_physical_context	legion_runtime/region_tree.cc	/^    void PartitionNode::print_physical_context(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
print_physical_context	legion_runtime/region_tree.cc	/^    void RegionNode::print_physical_context(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionNode
print_physical_state	legion_runtime/region_tree.cc	/^    void PartitionNode::print_physical_state(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
print_physical_state	legion_runtime/region_tree.cc	/^    void RegionNode::print_physical_state(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
print_state	legion_runtime/region_tree.cc	/^    void FieldState::print_state(TreeStateLogger *logger,$/;"	f	class:LegionRuntime::HighLevel::FieldState
print_usage	lua_src/lua.c	/^static void print_usage (const char *badoption) {$/;"	f	file:
print_version	lua_src/lua.c	/^static void print_version (void) {$/;"	f	file:
print_waiters	legion_runtime/shared_lowlevel.cc	/^    void EventImpl::print_waiters(void)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
printf	nautilus/libccompat.c	/^int printf (const char * s, ...)$/;"	f
printf_spec	nautilus/printk.c	/^struct printf_spec {$/;"	s	file:
printk	nautilus/printk.c	/^printk (const char *fmt, ...)$/;"	f
printk_char	nautilus/printk.c	/^printk_char (char * arg, int c)$/;"	f	file:
printk_lock	nautilus/printk.c	/^spinlock_t printk_lock;$/;"	v
printk_state	nautilus/printk.c	/^struct printk_state {$/;"	s	file:
println	legion_runtime/legion_logging.cc	/^    void TreeStateLogger::println(const char *fmt, va_list args)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
println	legion_runtime/legion_spy.cc	/^    void TreeStateLogger::println(const char *fmt, va_list args)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
printnum	nautilus/doprnt.c	/^printnum(register unsigned long u, $/;"	f	file:
printnum_16	nautilus/doprnt.c	/^printnum_16 (register unsigned long u, $/;"	f	file:
priority	legion_runtime/lowlevel.cc	/^      int priority;$/;"	m	struct:LegionRuntime::LowLevel::SpawnTaskArgs	file:
priority	legion_runtime/lowlevel_dma.cc	/^      int priority;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest	file:
priority	legion_runtime/lowlevel_dma.h	/^      int priority;$/;"	m	struct:LegionRuntime::LowLevel::RemoteCopyArgs
priority	legion_runtime/lowlevel_gpu.cc	/^      int priority;$/;"	m	class:LegionRuntime::LowLevel::GPUTask	file:
priority	legion_runtime/lowlevel_impl.h	/^      int priority;$/;"	m	class:LegionRuntime::LowLevel::Task
priority	legion_runtime/shared_lowlevel.cc	/^                int priority;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
priority	lua_src/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon50	file:
priv	legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
priv	legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
priv	legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
priv	legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
priv	legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
priv	legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
privilege	legion_runtime/legion.h	/^      AllocateMode  privilege;$/;"	m	struct:LegionRuntime::HighLevel::IndexSpaceRequirement
privilege	legion_runtime/legion.h	/^      AllocateMode privilege;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceRequirement
privilege	legion_runtime/legion.h	/^      PrivilegeMode privilege; \/**< region privilege mode*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
privilege	legion_runtime/legion_logging.h	/^        PrivilegeMode privilege;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
privilege	legion_runtime/legion_utilities.h	/^      PrivilegeMode     privilege;$/;"	m	struct:LegionRuntime::HighLevel::RegionUsage
privilege_fields	legion_runtime/legion.h	/^      std::set<FieldID> privilege_fields; \/**< unique set of privilege fields*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
privilege_path	legion_runtime/legion_ops.h	/^      RegionTreePath    privilege_path;$/;"	m	class:LegionRuntime::HighLevel::AcquireOp
privilege_path	legion_runtime/legion_ops.h	/^      RegionTreePath    privilege_path;$/;"	m	class:LegionRuntime::HighLevel::ReleaseOp
privilege_path	legion_runtime/legion_ops.h	/^      RegionTreePath privilege_path;$/;"	m	class:LegionRuntime::HighLevel::CloseOp
privilege_path	legion_runtime/legion_ops.h	/^      RegionTreePath privilege_path;$/;"	m	class:LegionRuntime::HighLevel::MapOp
privilege_paths	legion_runtime/legion_tasks.h	/^      std::vector<RegionTreePath> privilege_paths;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
privilege_paths	legion_runtime/legion_tasks.h	/^      std::vector<RegionTreePath> privilege_paths;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
proc	legion_runtime/legion.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::DomainSplit
proc	legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventTiming
proc	legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
proc	legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
proc	legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
proc	legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationTiming
proc	legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcMemAffinity
proc	legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcessor
proc	legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
proc	legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
proc	legion_runtime/legion_profiling.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
proc	legion_runtime/lowlevel.cc	/^	LocalProcessor *proc;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
proc	legion_runtime/lowlevel.cc	/^      Processor *proc;$/;"	m	class:LegionRuntime::LowLevel::ProcessorThread	file:
proc	legion_runtime/lowlevel.cc	/^      Processor proc;$/;"	m	struct:LegionRuntime::LowLevel::SpawnTaskArgs	file:
proc	legion_runtime/lowlevel.cc	/^      Processor::Impl *proc;$/;"	m	class:LegionRuntime::LowLevel::DeferredTaskSpawn	file:
proc	legion_runtime/lowlevel.cc	/^      UtilityProcessor *proc;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread	file:
proc	legion_runtime/lowlevel_impl.h	/^      Processor proc;$/;"	m	class:LegionRuntime::LowLevel::Task
proc	legion_runtime/runtime.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::SchedulerArgs
proc	legion_runtime/runtime.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::MapperInfo
proc	legion_runtime/shared_lowlevel.cc	/^	Processor proc;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
proc_assignment	legion_runtime/lowlevel.cc	/^    ProcessorAssignment *proc_assignment = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
proc_ctx	legion_runtime/lowlevel_gpu.cc	/^      CUcontext proc_ctx;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
proc_dev	legion_runtime/lowlevel_gpu.cc	/^      CUdevice  proc_dev;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
proc_events	legion_runtime/legion_profiling.h	/^        std::deque<ProfilingEvent> proc_events;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
proc_group_lock	legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         proc_group_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
proc_groups	legion_runtime/lowlevel.cc	/^    static std::map<Processor, std::set<Processor> *> proc_groups;$/;"	m	namespace:LegionRuntime::LowLevel	file:
proc_groups	legion_runtime/lowlevel_impl.h	/^      DynamicTable<ProcessorGroupTableAllocator> proc_groups;$/;"	m	struct:Node
proc_groups	legion_runtime/shared_lowlevel.cc	/^      std::vector<ProcessorGroup*> proc_groups;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
proc_kind	legion_runtime/legion.h	/^        Processor::Kind proc_kind;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
proc_kind	legion_runtime/legion_logging.h	/^        Processor::Kind proc_kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
proc_kind	legion_runtime/runtime.h	/^      const Processor::Kind proc_kind;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
proc_kind	legion_runtime/shared_lowlevel.cc	/^        Processor::Kind proc_kind;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
proc_kinds	legion_runtime/mapping_utilities.h	/^        std::map<Processor::Kind,std::set<Processor> > proc_kinds;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
proc_managers	legion_runtime/runtime.h	/^      std::map<Processor,ProcessorManager*> proc_managers;$/;"	m	class:LegionRuntime::HighLevel::Runtime
proc_mem_affinities	legion_runtime/lowlevel.h	/^      std::vector<ProcessorMemoryAffinity> proc_mem_affinities;$/;"	m	class:LegionRuntime::LowLevel::Machine
proc_mem_stacks	legion_runtime/mapping_utilities.h	/^        std::map<Processor,std::vector<Memory> > proc_mem_stacks;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
proc_mem_table	legion_runtime/mapping_utilities.h	/^        std::map<std::pair<Processor,Memory::Kind>,Memory> proc_mem_table;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
proc_spaces	legion_runtime/runtime.h	/^      const std::map<Processor,AddressSpaceID> proc_spaces;$/;"	m	class:LegionRuntime::HighLevel::Runtime
process_add_remote_reference	legion_runtime/garbage_collection.cc	/^    \/*static*\/ void DistributedCollectable::process_add_remote_reference($/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
process_advertisement	legion_runtime/runtime.cc	/^    void ProcessorManager::process_advertisement(Processor advertiser,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
process_message	legion_runtime/runtime.cc	/^    void MessageManager::process_message(const void *args, size_t arglen)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
process_message_task	legion_runtime/runtime.cc	/^    void Runtime::process_message_task(const void *args, size_t arglen)$/;"	f	class:LegionRuntime::HighLevel::Runtime
process_remove_remote_reference	legion_runtime/garbage_collection.cc	/^    \/*static*\/ void DistributedCollectable::process_remove_remote_reference($/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
process_remove_remote_reference	legion_runtime/garbage_collection.cc	/^    \/*static*\/ void HierarchicalCollectable::process_remove_remote_reference($/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
process_remove_resource_reference	legion_runtime/garbage_collection.cc	/^    \/*static*\/ void DistributedCollectable::process_remove_resource_reference($/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
process_remove_resource_reference	legion_runtime/garbage_collection.cc	/^    \/*static*\/ void HierarchicalCollectable::process_remove_resource_reference($/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
process_schedule_request	legion_runtime/runtime.cc	/^    void Runtime::process_schedule_request(Processor proc, bool first\/*=false*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
process_send_back_user	legion_runtime/region_tree.cc	/^    void CompositeView::process_send_back_user(AddressSpaceID source,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
process_send_back_user	legion_runtime/region_tree.cc	/^    void MaterializedView::process_send_back_user(AddressSpaceID source,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
process_send_back_user	legion_runtime/region_tree.cc	/^    void ReductionView::process_send_back_user(AddressSpaceID source,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
process_slice_commit	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndexTask::process_slice_commit(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
process_slice_complete	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndexTask::process_slice_complete(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
process_slice_mapped	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndexTask::process_slice_mapped(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
process_steal_request	legion_runtime/runtime.cc	/^    void ProcessorManager::process_steal_request(Processor thief,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
process_unpack_remote_commit	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndividualTask::process_unpack_remote_commit($/;"	f	class:LegionRuntime::HighLevel::IndividualTask
process_unpack_remote_complete	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndividualTask::process_unpack_remote_complete($/;"	f	class:LegionRuntime::HighLevel::IndividualTask
process_unpack_remote_mapped	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndividualTask::process_unpack_remote_mapped($/;"	f	class:LegionRuntime::HighLevel::IndividualTask
process_unpack_task	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::process_unpack_task(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::TaskOp
process_updates	legion_runtime/region_tree.cc	/^    void MaterializedView::process_updates(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
process_updates	legion_runtime/region_tree.cc	/^    void ReductionView::process_updates(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
processor_group	legion_runtime/runtime.h	/^        Processor           processor_group;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::ProcessorGroupInfo
processor_groups	legion_runtime/runtime.h	/^                     PROCESSOR_GROUP_ALLOC>::map processor_groups;$/;"	m	class:LegionRuntime::HighLevel::Runtime
processor_mask	legion_runtime/runtime.h	/^        ProcessorMask       processor_mask;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::ProcessorGroupInfo
processor_profilers	legion_runtime/legion.cc	/^      std::list<ProcessorProfiler *> processor_profilers;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
processors	legion_runtime/lowlevel_impl.h	/^      std::vector<Processor::Impl *> processors;$/;"	m	struct:Node
processors	legion_runtime/shared_lowlevel.cc	/^      std::vector<ProcessorImpl*> processors;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
procs	legion_runtime/lowlevel.h	/^      std::set<Processor> procs;$/;"	m	class:LegionRuntime::LowLevel::Machine
procs_in_idle_task	legion_runtime/lowlevel_impl.h	/^      std::set<Processor::Impl *> procs_in_idle_task;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
profile_task	legion_runtime/legion.h	/^      bool                                profile_task;$/;"	m	class:LegionRuntime::HighLevel::Task
profile_task_execution	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::profile_task_execution(const Task *task, Processor target)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
profiler	legion_runtime/default_mapper.h	/^      MappingUtilities::MappingProfiler profiler;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
profiler_mutex	legion_runtime/legion.cc	/^      pthread_mutex_t profiler_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
profiling_complete	legion_runtime/mapping_utilities.cc	/^      bool MappingProfiler::profiling_complete(const Task *task) const$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
profiling_enabled	legion_runtime/legion.cc	/^      bool profiling_enabled;$/;"	m	namespace:LegionRuntime::HighLevel::LegionProf	file:
progname	lua_src/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
program_order_execution	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::program_order_execution = true;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
program_order_execution	legion_runtime/runtime.h	/^      static bool program_order_execution;$/;"	m	class:LegionRuntime::HighLevel::Runtime
projection	legion_runtime/legion.h	/^      ProjectionID projection; \/**< projection function for index space tasks*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
prolongation	test/hpcg/comp-prolongation.h	/^prolongation(SparseMatrix &Af,$/;"	f	namespace:lgncg
prolongationTask	test/hpcg/comp-prolongation.h	/^prolongationTask($/;"	f	namespace:lgncg
prop	legion_runtime/legion.h	/^      CoherenceProperty prop; \/**< region coherence mode*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
prop	legion_runtime/legion_logging.h	/^        CoherenceProperty prop;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
prop	legion_runtime/legion_utilities.h	/^      CoherenceProperty prop;$/;"	m	struct:LegionRuntime::HighLevel::RegionUsage
propagateall	lua_src/lgc.c	/^static void propagateall (global_State *g) {$/;"	f	file:
propagatelist	lua_src/lgc.c	/^static void propagatelist (global_State *g, GCObject *l) {$/;"	f	file:
propagatemark	lua_src/lgc.c	/^static void propagatemark (global_State *g) {$/;"	f	file:
proxy_this	legion_runtime/legion_ops.h	/^        Operation *proxy_this;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredCompleteArgs
proxy_this	legion_runtime/legion_ops.h	/^        Operation *proxy_this;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredMappingArgs
proxy_this	legion_runtime/legion_tasks.h	/^        SingleTask *proxy_this;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::PostEndArgs
ps2str	nautilus/paging.c	/^static char * ps2str[3] = {$/;"	v	file:
pthread_barrier_t	legion_runtime/shared_lowlevel.cc	/^    typedef UtilityBarrier pthread_barrier_t;$/;"	t	namespace:LegionRuntime::LowLevel	file:
pthread_profiler_key	legion_runtime/legion.cc	/^      pthread_key_t pthread_profiler_key;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
ptr	legion_runtime/accessor.h	/^	  inline T *ptr(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
ptr	legion_runtime/accessor.h	/^	  inline T *ptr(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
ptr	legion_runtime/accessor.h	/^	  inline T *ptr(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
ptr	legion_runtime/accessor.h	/^	  ptr_t ptr;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::ReductionListEntry
ptr	legion_runtime/lowlevel.h	/^      ptr_t ptr;$/;"	m	struct:LegionRuntime::LowLevel::ReductionListEntry
ptr_buffer	legion_runtime/region_tree.h	/^      T* ptr_buffer[(MAX_SIZE+INC_SIZE-1)\/INC_SIZE];$/;"	m	class:LegionRuntime::HighLevel::LegionStack
ptr_space	legion_runtime/region_tree.h	/^      const Domain ptr_space;$/;"	m	class:LegionRuntime::HighLevel::ListReductionManager
ptr_t	legion_runtime/common.h	/^  explicit ptr_t(const utptr_t &p) : value(p.value) { }$/;"	f	struct:ptr_t
ptr_t	legion_runtime/common.h	/^  ptr_t(const ptr_t &p) : value(p.value) { }$/;"	f	struct:ptr_t
ptr_t	legion_runtime/common.h	/^  ptr_t(const ptr_t<T> &p) : value(p.value) { }$/;"	f	struct:ptr_t
ptr_t	legion_runtime/common.h	/^  ptr_t(unsigned v) : value(v) { }$/;"	f	struct:ptr_t
ptr_t	legion_runtime/common.h	/^  ptr_t(void) : value(0) { }$/;"	f	struct:ptr_t
ptr_t	legion_runtime/common.h	/^struct ptr_t $/;"	s
ptr_t	legion_runtime/common.h	/^struct ptr_t$/;"	s
pull_valid_instance_views	legion_runtime/region_tree.cc	/^    void RegionTreeNode::pull_valid_instance_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
push_captures	lua_src/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_messages	legion_runtime/activemsg.cc	/^  int push_messages(int max_to_send = 0, bool wait = false)$/;"	f	class:ActiveMessageEndpoint
push_messages	legion_runtime/activemsg.cc	/^  void push_messages(int max_to_send = 0, bool wait = false)$/;"	f	class:EndpointManager
push_onecapture	lua_src/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
push_timer	legion_runtime/lowlevel.cc	/^    \/*static*\/ void DetailedTimer::push_timer(int timer_kind)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
push_timer	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void DetailedTimer::push_timer(int timer_kind)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
pushclosure	lua_src/lvm.c	/^static void pushclosure (lua_State *L, Proto *p, UpVal **encup, StkId base,$/;"	f	file:
pusherror	lua_src/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pushfq	asm/thread_lowlevel.S	/^pushfq          ;$/;"	l
pushfuncname	lua_src/lauxlib.c	/^static void pushfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushglobalfuncname	lua_src/lauxlib.c	/^static int pushglobalfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushline	lua_src/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:
pushnexttemplate	lua_src/loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	file:
pushq	asm/thread_lowlevel.S	/^pushq %r10	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %r11	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %r12	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %r13	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %r14	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %r15      ;                               \\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %r8	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %r9	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %rax	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %rbp  ;               \\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %rbx	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %rcx	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %rdi	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %rdx	;				\\$/;"	l
pushq	asm/thread_lowlevel.S	/^pushq %rsi	;				\\$/;"	l
pushstr	lua_src/lobject.c	/^static void pushstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
put_batch	legion_runtime/lowlevel.cc	/^    void GASNetMemory::put_batch(size_t batch_size,$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
put_bytes	legion_runtime/lowlevel.cc	/^      virtual void put_bytes(off_t offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
put_bytes	legion_runtime/lowlevel.cc	/^    void GASNetMemory::put_bytes(off_t offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
put_bytes	legion_runtime/lowlevel.cc	/^    void RegionInstance::Impl::put_bytes(int index, off_t byte_offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
put_bytes	legion_runtime/lowlevel.cc	/^    void RemoteMemory::put_bytes(off_t offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
put_bytes	legion_runtime/lowlevel_gpu.cc	/^    void GPUFBMemory::put_bytes(off_t offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
put_bytes	legion_runtime/lowlevel_gpu.h	/^      virtual void put_bytes(off_t offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
put_dec	nautilus/printk.c	/^static __noinline char* put_dec(char *buf, unsigned long long num)$/;"	f	file:
put_dec_full	nautilus/printk.c	/^static char* put_dec_full(char *buf, unsigned q)$/;"	f	file:
put_dec_trunc	nautilus/printk.c	/^static char* put_dec_trunc(char *buf, unsigned q)$/;"	f	file:
pvec	test/hpcg/vector.h	/^    std::vector<PVecItem> pvec;$/;"	m	struct:lgncg::Vector
pvt_nodes	test/circuit.h	/^  LogicalPartition pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:Partitions
pvt_nodes	test/circuit.h	/^  LogicalRegion pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:CircuitPiece
pvt_wires	test/circuit.h	/^  LogicalPartition pvt_wires;$/;"	m	struct:Partitions
pvt_wires	test/circuit.h	/^  LogicalRegion pvt_wires;$/;"	m	struct:CircuitPiece
qualifier	nautilus/printk.c	/^	int			qualifier;$/;"	m	struct:printf_spec	file:
quash_operation	legion_runtime/legion_ops.cc	/^    void Operation::quash_operation(GenerationID gen, bool restart)$/;"	f	class:LegionRuntime::HighLevel::Operation
queue	legion_runtime/lowlevel_dma.cc	/^	DmaRequestQueue *queue;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest::Waiter	file:
queue	nautilus/vc.c	/^  union queue{$/;"	u	struct:nk_virtual_console	file:
queue_condvar	legion_runtime/lowlevel_dma.cc	/^      gasnett_cond_t queue_condvar;$/;"	m	class:LegionRuntime::LowLevel::DmaRequestQueue	file:
queue_lock	legion_runtime/runtime.h	/^      Reservation queue_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
queue_lock	nautilus/vc.c	/^  spinlock_t       queue_lock;$/;"	m	struct:nk_virtual_console	file:
queue_mutex	legion_runtime/lowlevel_dma.cc	/^      gasnet_hsl_t queue_mutex;$/;"	m	class:LegionRuntime::LowLevel::DmaRequestQueue	file:
queue_scancode	dev/kbd.c	/^static void queue_scancode(nk_scancode_t scan)$/;"	f	file:
queue_sleepers	legion_runtime/lowlevel_dma.cc	/^      int queue_sleepers;$/;"	m	class:LegionRuntime::LowLevel::DmaRequestQueue	file:
queues	legion_runtime/lowlevel_dma.cc	/^      std::map<int, std::list<DmaRequest *> *> queues;$/;"	m	class:LegionRuntime::LowLevel::DmaRequestQueue	file:
r	legion_runtime/arrays.h	/^      Rect<DIM> r;$/;"	m	class:LegionRuntime::Arrays::GenericPointInRectIterator
r	legion_runtime/lowlevel.cc	/^      IndexSpace r;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceArgs	file:
r	test/hpcg/cg-data.h	/^    Vector r;$/;"	m	struct:lgncg::CGData
rTreeID	test/hpcg/vector.h	/^    LegionRuntime::HighLevel::RegionTreeID rTreeID;$/;"	m	struct:lgncg::Vector
r_x	test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:Block	file:
r_x	test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:MainArgs	file:
r_y	test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:Block	file:
r_y	test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:MainArgs	file:
r_z	test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:Block	file:
r_z	test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:MainArgs	file:
raise_region_exception	legion_runtime/legion.cc	/^    void HighLevelRuntime::raise_region_exception(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
raise_region_exception	legion_runtime/runtime.cc	/^    void Runtime::raise_region_exception(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
rand	nautilus/libccompat.c	/^rand (void) {$/;"	f
random_element	test/circuit.cc	/^static T random_element(const std::set<T> &set)$/;"	f	file:
random_element	test/circuit.cc	/^static T random_element(const std::vector<T> &vec)$/;"	f	file:
ranges	legion_runtime/legion.h	/^      std::set<std::pair<T,T> > ranges;$/;"	m	struct:LegionRuntime::HighLevel::ColoredPoints
rank_char	nautilus/fmtout.c	/^  rank_char	= -2,$/;"	e	enum:ranks	file:
rank_copy_sources	legion_runtime/default_mapper.cc	/^    void DefaultMapper::rank_copy_sources(const Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
rank_copy_sources	legion_runtime/shim_mapper.cc	/^    void ShimMapper::rank_copy_sources($/;"	f	class:LegionRuntime::HighLevel::ShimMapper
rank_copy_sources	legion_runtime/shim_mapper.cc	/^    void ShimMapper::rank_copy_sources(const Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
rank_copy_targets	legion_runtime/alt_mappers.cc	/^    void DebugMapper::rank_copy_targets(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::DebugMapper
rank_copy_targets	legion_runtime/alt_mappers.cc	/^    void SequoiaMapper::rank_copy_targets(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::SequoiaMapper
rank_copy_targets	legion_runtime/alt_mappers.cc	/^    void SharedMapper::rank_copy_targets(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::SharedMapper
rank_copy_targets	legion_runtime/default_mapper.cc	/^    bool DefaultMapper::rank_copy_targets(const Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
rank_copy_targets	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::rank_copy_targets(const Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
rank_copy_targets	legion_runtime/shim_mapper.cc	/^    void ShimMapper::rank_copy_targets(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
rank_int	nautilus/fmtout.c	/^  rank_int 	= 0,$/;"	e	enum:ranks	file:
rank_long	nautilus/fmtout.c	/^  rank_long	= 1,$/;"	e	enum:ranks	file:
rank_short	nautilus/fmtout.c	/^  rank_short	= -1,$/;"	e	enum:ranks	file:
rankings	legion_runtime/mapping_utilities.h	/^          std::vector<std::vector<Memory> > rankings;$/;"	m	struct:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer::MemoizedMapping
ranks	nautilus/fmtout.c	/^enum ranks {$/;"	g	file:
raw_data	legion_runtime/lowlevel.h	/^      void *raw_data;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
raw_dense_ptr	legion_runtime/accessor.h	/^	  T *raw_dense_ptr(const Rect<DIM>& r, Rect<DIM> &subrect, ByteOffset &elem_stride)$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
raw_dense_ptr	legion_runtime/lowlevel.cc	/^    void *AccessorType::Generic::Untyped::raw_dense_ptr(const Rect<DIM>& r, Rect<DIM>& subrect, ByteOffset &elem_stride)$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
raw_dense_ptr	legion_runtime/lowlevel.cc	/^    void *AccessorType::Generic::Untyped::raw_dense_ptr(const Rect<DIM>& r, Rect<DIM>& subrect, ByteOffset &elem_stride,$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
raw_noqueue_callback	nautilus/vc.c	/^  void    (*raw_noqueue_callback)(nk_scancode_t, void *priv);$/;"	m	struct:nk_virtual_console	file:
raw_noqueue_callback_priv	nautilus/vc.c	/^  void     *raw_noqueue_callback_priv;$/;"	m	struct:nk_virtual_console	file:
raw_rect_ptr	legion_runtime/accessor.h	/^	    T *raw_rect_ptr(const Rect<DIM>& r, Rect<DIM> &subrect, ByteOffset *offsets,$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
raw_rect_ptr	legion_runtime/accessor.h	/^	  T *raw_rect_ptr(const Rect<DIM>& r, Rect<DIM> &subrect, ByteOffset *offsets)$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
raw_rect_ptr	legion_runtime/lowlevel.cc	/^    void *AccessorType::Generic::Untyped::raw_rect_ptr(const Rect<DIM>& r, Rect<DIM>& subrect, ByteOffset *offsets)$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
raw_rect_ptr	legion_runtime/lowlevel.cc	/^    void *AccessorType::Generic::Untyped::raw_rect_ptr(const Rect<DIM>& r, Rect<DIM>& subrect, ByteOffset *offsets,$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
raw_rect_ptr	legion_runtime/shared_lowlevel.cc	/^    void *AccessorType::Generic::Untyped::raw_rect_ptr(const Rect<DIM>& r, Rect<DIM>& subrect, ByteOffset *offsets)$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
raw_size	legion_runtime/lowlevel.cc	/^    size_t ElementMask::raw_size(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
raw_size	legion_runtime/shared_lowlevel.cc	/^    size_t ElementMask::raw_size(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
rc	test/hpcg/mg-data.h	/^    Vector rc;$/;"	m	struct:lgncg::MGData
rdma_sequence_no	legion_runtime/lowlevel_dma.cc	/^    static unsigned rdma_sequence_no = 1;$/;"	m	namespace:LegionRuntime::LowLevel	file:
rdtsc	test/custom_mapper.cc	/^rdtsc (void)$/;"	f	file:
rdtsc	test/hpcg/comp-waxpby.h	/^rdtsc (void) $/;"	f	namespace:lgncg
rdtsc	test/multiple_partitions.cc	/^rdtsc (void)$/;"	f	file:
rdtsc	test/partitioning.cc	/^rdtsc (void)$/;"	f	file:
rdtsc	test/physical_regions.cc	/^rdtsc (void)$/;"	f	file:
rdtsc	test/privileges.cc	/^rdtsc (void)$/;"	f	file:
rdtscll	test/benchmark.c	58;"	d	file:
rdtscll	test/hpcg/cg.h	93;"	d
rdtscll	test/hpcg/hpcg-main.cc	246;"	d	file:
rdtscll	test/ipi.c	36;"	d	file:
reacquire	legion_runtime/lowlevel_impl.h	/^      void reacquire(void)$/;"	f	class:LegionRuntime::LowLevel::AutoHSLLock
read	legion_runtime/accessor.h	/^	  inline T read(PTRTYPE ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
read	legion_runtime/accessor.h	/^	  inline T read(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
read	legion_runtime/accessor.h	/^	  inline T read(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
read	legion_runtime/accessor.h	/^	  inline T read(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
read	legion_runtime/lowlevel.h	/^      ET read(ptr_t ptr) const { return ria.read(ptr); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
read	legion_runtime/lowlevel.h	/^      T read(ptr_t ptr) const $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
read	legion_runtime/lowlevel.h	/^      T read(ptr_t ptr) const { $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
read	legion_runtime/lowlevel.h	/^      __device__ ET read(ptr_t ptr) const { return ria.read(ptr); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
read	legion_runtime/shared_lowlevel.cc	/^    const void* RegionInstance::Impl::read(unsigned ptr)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
read_all	lua_src/liolib.c	/^static void read_all (lua_State *L, FILE *f) {$/;"	f	file:
read_chars	lua_src/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_event_count	nautilus/pmc.c	/^read_event_count (perf_event_t * event)$/;"	f
read_line	lua_src/liolib.c	/^static int read_line (lua_State *L, FILE *f, int chop) {$/;"	f	file:
read_long_string	lua_src/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	file:
read_number	lua_src/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	lua_src/llex.c	/^static void read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_partial	legion_runtime/lowlevel.h	/^      void read_partial(ptr_t ptr, off_t offset, void *dst, size_t size) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
read_pmc_ctl	nautilus/pmc.c	/^read_pmc_ctl (uint8_t idx)$/;"	f	file:
read_pmc_ctr	nautilus/pmc.c	/^read_pmc_ctr (uint8_t idx)$/;"	f	file:
read_string	lua_src/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
read_untyped	legion_runtime/lowlevel.cc	/^    void AccessorType::Generic::Untyped::read_untyped(const DomainPoint& dp, void *dst, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
read_untyped	legion_runtime/lowlevel.cc	/^    void AccessorType::Generic::Untyped::read_untyped(ptr_t ptr, void *dst, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
read_untyped	legion_runtime/shared_lowlevel.cc	/^    void AccessorType::Generic::Untyped::read_untyped(const DomainPoint& dp, void *dst, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
read_untyped	legion_runtime/shared_lowlevel.cc	/^    void AccessorType::Generic::Untyped::read_untyped(ptr_t ptr, void *dst, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
readable	lua_src/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
readdecesc	lua_src/llex.c	/^static int readdecesc (LexState *ls) {$/;"	f	file:
reader1	nautilus/rwlock.c	/^reader1 (void * in, void ** out) $/;"	f	file:
reader2	nautilus/rwlock.c	/^reader2 (void * in, void ** out)$/;"	f	file:
reader_mutex	acpi/acpica/aclocal.h	/^	acpi_mutex reader_mutex;$/;"	m	struct:acpi_rw_lock
readhexa	lua_src/lobject.c	/^static lua_Number readhexa (const char **s, lua_Number r, int *count) {$/;"	f	file:
readhexaesc	lua_src/llex.c	/^static int readhexaesc (LexState *ls) {$/;"	f	file:
reading_users	legion_runtime/region_tree.h	/^      std::list<PhysicalUser> reading_users;$/;"	m	class:LegionRuntime::HighLevel::ReductionView
ready	legion_runtime/lowlevel_impl.h	/^      std::map<int, std::deque<JOBTYPE*> > ready;$/;"	m	class:LegionRuntime::LowLevel::JobQueue
ready	legion_runtime/shared_lowlevel.cc	/^                bool ready; \/\/ If this reservation waits on a event, see if it's ready$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
ready	test/benchmark.c	/^static volatile int ready[2];$/;"	v	file:
ready_copies	legion_runtime/shared_lowlevel.cc	/^      std::deque<CopyOperation*> ready_copies;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
ready_event	legion_runtime/region_tree.h	/^      Event ready_event;$/;"	m	class:LegionRuntime::HighLevel::InstanceRef
ready_event	legion_runtime/runtime.h	/^      Event ready_event;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
ready_event	legion_runtime/runtime.h	/^      Event ready_event;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
ready_event	legion_runtime/runtime.h	/^      UserEvent ready_event;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
ready_queue	legion_runtime/shared_lowlevel.cc	/^	std::list<TaskDesc*> ready_queue;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
ready_queues	legion_runtime/runtime.h	/^      std::vector<std::list<TaskOp*> > ready_queues;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
realloc	nautilus/mm/kmem.c	/^void *realloc(void *ptr, size_t size)$/;"	f
really_do_span	legion_runtime/lowlevel.cc	/^	void really_do_span(bool last)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
really_do_span	legion_runtime/lowlevel_dma.cc	/^	void really_do_span(bool last)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
reallymarkobject	lua_src/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
rebind	legion_runtime/legion_allocation.h	/^      struct rebind {$/;"	s	class:LegionRuntime::HighLevel::LegionAllocator
reboot	arch/hrt/shutdown.c	/^reboot (void) $/;"	f
reboot	arch/x64/shutdown.c	/^reboot (void) $/;"	f
rebuild_timeout	legion_runtime/region_tree.h	/^      unsigned rebuild_timeout;$/;"	m	struct:LegionRuntime::HighLevel::FieldState
recall_chosen	legion_runtime/mapping_utilities.cc	/^      Memory MappingMemoizer::recall_chosen(Processor target, const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
recall_mapping	legion_runtime/mapping_utilities.cc	/^      bool MappingMemoizer::recall_mapping(Processor target, const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
received_messages	legion_runtime/activemsg.cc	/^  int received_messages;$/;"	m	class:ActiveMessageEndpoint	file:
received_messages	legion_runtime/runtime.h	/^      unsigned received_messages; $/;"	m	class:LegionRuntime::HighLevel::MessageManager
received_trigger_resolution	legion_runtime/legion_ops.h	/^      bool received_trigger_resolution;$/;"	m	class:LegionRuntime::HighLevel::SpeculativeOp
receiving_buffer	legion_runtime/runtime.h	/^      char *receiving_buffer;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
receiving_buffer_size	legion_runtime/runtime.h	/^      size_t receiving_buffer_size;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
receiving_index	legion_runtime/runtime.h	/^      unsigned receiving_index;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
recfield	lua_src/lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
reclaim	legion_runtime/legion_tasks.h	/^      bool reclaim; \/\/ used for reclaiming intermediate slices$/;"	m	class:LegionRuntime::HighLevel::SliceTask
reclaim_event	legion_runtime/legion_tasks.h	/^        Event      reclaim_event;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
reclaim_physical_instance	legion_runtime/runtime.cc	/^    bool MemoryManager::reclaim_physical_instance(InstanceManager *instance)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
reclaim_physical_instance	legion_runtime/runtime.cc	/^    bool Runtime::reclaim_physical_instance(InstanceManager *inst)$/;"	f	class:LegionRuntime::HighLevel::Runtime
record_after_version	legion_runtime/region_tree.cc	/^    void RegionTreePath::record_after_version(unsigned depth, VersionID vid,$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
record_before_version	legion_runtime/region_tree.cc	/^    void RegionTreePath::record_before_version(unsigned depth, VersionID vid,$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
record_call	legion_runtime/region_tree.cc	/^    void RegionTreeForest::record_call(int kind, unsigned long long time)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
record_call	legion_runtime/region_tree.h	/^        inline void record_call(int call_kind, unsigned long long time)$/;"	f	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
record_call	legion_runtime/region_tree.h	/^        inline void record_call(unsigned long long time)$/;"	f	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
record_child_committed	legion_runtime/legion_tasks.cc	/^    void SliceTask::record_child_committed(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
record_child_complete	legion_runtime/legion_tasks.cc	/^    void SliceTask::record_child_complete(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
record_child_mapped	legion_runtime/legion_tasks.cc	/^    void SliceTask::record_child_mapped(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
record_close_operation	legion_runtime/region_tree.cc	/^    void RegionTreePath::record_close_operation(unsigned depth,$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
record_close_operations	legion_runtime/region_tree.cc	/^    void RegionTreeNode::record_close_operations(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
record_dependence	legion_runtime/legion_ops.cc	/^    bool MustEpochOp::record_dependence(Operation *src_op, GenerationID src_gen,$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
record_dependence	legion_runtime/legion_trace.cc	/^    void LegionTrace::record_dependence(Operation *target, GenerationID tar_gen,$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
record_field_versions	legion_runtime/region_tree.cc	/^    void RegionTreeNode::record_field_versions(LogicalState &state, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
record_mapping	legion_runtime/mapping_utilities.cc	/^      void MappingMemoizer::record_mapping(Processor target, const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
record_message	legion_runtime/activemsg.cc	/^  void record_message(bool sent_reply) $/;"	f	class:ActiveMessageEndpoint
record_message	legion_runtime/activemsg.cc	/^  void record_message(gasnet_node_t source, bool sent_reply)$/;"	f	class:EndpointManager
record_message	legion_runtime/activemsg.cc	/^extern void record_message(gasnet_node_t source, bool sent_reply)$/;"	f
record_region_dependence	legion_runtime/legion_trace.cc	/^    void LegionTrace::record_region_dependence(Operation *target, $/;"	f	class:LegionRuntime::HighLevel::LegionTrace
record_user_coherence	legion_runtime/region_tree.cc	/^    void RegionTreeNode::record_user_coherence(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
records	legion_runtime/region_tree.h	/^        std::vector<CallRecord> records;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
recover	lua_src/ldo.c	/^static int recover (lua_State *L, int status) {$/;"	f	file:
rect_data	legion_runtime/lowlevel.h	/^      int rect_data[2 * MAX_RECT_DIM];$/;"	m	class:LegionRuntime::LowLevel::Domain
recurse	legion_runtime/legion.h	/^        bool recurse;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::DomainSplit
recycle_distributed_id	legion_runtime/runtime.cc	/^    void Runtime::recycle_distributed_id(DistributedID did, Event recycle_event)$/;"	f	class:LegionRuntime::HighLevel::Runtime
recycle_events	legion_runtime/garbage_collection.h	/^      std::set<Event> recycle_events;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
recycle_physical_instance	legion_runtime/runtime.cc	/^    void MemoryManager::recycle_physical_instance(InstanceManager *instance)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
recycle_physical_instance	legion_runtime/runtime.cc	/^    void Runtime::recycle_physical_instance(InstanceManager *inst)$/;"	f	class:LegionRuntime::HighLevel::Runtime
recycled	legion_runtime/region_tree.h	/^      bool recycled;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
red_fold	legion_runtime/lowlevel_dma.cc	/^      bool red_fold;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
red_fold	legion_runtime/lowlevel_dma.h	/^      bool red_fold;$/;"	m	struct:LegionRuntime::LowLevel::RemoteCopyArgs
red_fold	legion_runtime/shared_lowlevel.cc	/^      bool red_fold;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
red_list_size	legion_runtime/lowlevel_impl.h	/^	off_t red_list_size;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
redfold	legion_runtime/lowlevel.cc	/^	bool redfold;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce	file:
redfold	legion_runtime/lowlevel_dma.cc	/^	bool redfold;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce	file:
redop	legion_runtime/legion.h	/^      ReductionOpID redop; \/**<reduction operation (default 0)*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
redop	legion_runtime/legion_logging.h	/^        ReductionOpID redop;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
redop	legion_runtime/legion_logging.h	/^        ReductionOpID redop;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
redop	legion_runtime/legion_logging.h	/^        ReductionOpID redop;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
redop	legion_runtime/legion_profiling.h	/^        unsigned redop;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
redop	legion_runtime/legion_tasks.h	/^      ReductionOpID redop;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
redop	legion_runtime/legion_utilities.h	/^      ReductionOpID     redop;$/;"	m	struct:LegionRuntime::HighLevel::RegionUsage
redop	legion_runtime/lowlevel.cc	/^	const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce	file:
redop	legion_runtime/lowlevel_dma.cc	/^	const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutRedList	file:
redop	legion_runtime/lowlevel_dma.cc	/^	const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce	file:
redop	legion_runtime/lowlevel_dma.cc	/^      const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
redop	legion_runtime/lowlevel_dma.cc	/^      const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier	file:
redop	legion_runtime/region_tree.h	/^      ReductionOpID redop;$/;"	m	struct:LegionRuntime::HighLevel::FieldState
redop	legion_runtime/region_tree.h	/^      const ReductionOpID redop;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
redop	legion_runtime/region_tree.h	/^      const ReductionOpID redop;$/;"	m	class:LegionRuntime::HighLevel::ReductionManager
redop	legion_runtime/shared_lowlevel.cc	/^        const ReductionOpUntyped *redop; \/\/ for all reductions$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
redop	legion_runtime/shared_lowlevel.cc	/^        const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply	file:
redop	legion_runtime/shared_lowlevel.cc	/^        const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopFold	file:
redop	legion_runtime/shared_lowlevel.cc	/^        const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply	file:
redop	legion_runtime/shared_lowlevel.cc	/^        const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold	file:
redop_id	legion_runtime/lowlevel.cc	/^      ReductionOpID redop_id;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
redop_id	legion_runtime/lowlevel_dma.cc	/^      ReductionOpID redop_id;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
redop_id	legion_runtime/lowlevel_dma.h	/^      ReductionOpID redop_id;$/;"	m	struct:LegionRuntime::LowLevel::RemoteCopyArgs
redop_id	legion_runtime/shared_lowlevel.cc	/^      ReductionOpID redop_id;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
redop_table	legion_runtime/shared_lowlevel.cc	/^      ReductionOpTable redop_table;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
redopid	legion_runtime/lowlevel.cc	/^      ReductionOpID redopid;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
redopid	legion_runtime/lowlevel.cc	/^      ReductionOpID redopid;$/;"	m	struct:LegionRuntime::LowLevel::RemoteRedListArgs	file:
redopid	legion_runtime/lowlevel_dma.cc	/^	ReductionOpID redopid;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutRedList	file:
redopid	legion_runtime/lowlevel_impl.h	/^	ReductionOpID redopid;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
reduce	legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
reduce	legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
reduce	legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
reduce	legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Typed
reduce	legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Typed
reduce	legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
reduce	legion_runtime/lowlevel.h	/^      void reduce(ptr_t ptr, RHS newval) const $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
reduce	legion_runtime/lowlevel.h	/^      void reduce(ptr_t ptr, RHS newval) const { $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
reduce	legion_runtime/lowlevel.h	/^      void reduce(ptr_t ptr, RHS newval) const { REDOP::template fold<true>(((RHS*)array_base)[ptr.value], newval); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
reduce	legion_runtime/lowlevel.h	/^      void reduce(ptr_t ptr, RHS newval) const { ria.template reduce<REDOP>(ptr, newval); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
reduce_from	legion_runtime/region_tree.cc	/^    void ReductionView::reduce_from(ReductionOpID redop,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
reduce_node	test/circuit_cpu.cc	/^static inline void reduce_node(const RegionAccessor<AT1,typename REDOP::LHS> &priv,$/;"	f	file:
reduce_op_table	legion_runtime/lowlevel.cc	/^    ReductionOpTable reduce_op_table;$/;"	m	namespace:LegionRuntime::LowLevel	file:
reduce_slow_case	legion_runtime/lowlevel.cc	/^    void RegionAccessor<AccessorReductionList>::reduce_slow_case(size_t my_pos, unsigned ptrvalue,$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
reduce_to	legion_runtime/region_tree.cc	/^    bool CompositeView::reduce_to(ReductionOpID redop, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
reduce_to	legion_runtime/region_tree.cc	/^    bool MaterializedView::reduce_to(ReductionOpID redop, $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
reduce_to	legion_runtime/region_tree.cc	/^    bool ReductionView::reduce_to(ReductionOpID redop, $/;"	f	class:LegionRuntime::HighLevel::ReductionView
reduction	legion_runtime/shared_lowlevel.cc	/^        bool reduction; \/\/ reduction fold$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
reduction_future	legion_runtime/legion_tasks.h	/^      Future reduction_future;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
reduction_instances	legion_runtime/runtime.h	/^                     MEMORY_REDUCTION_ALLOC>::map reduction_instances;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
reduction_list	legion_runtime/legion.h	/^      bool reduction_list;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
reduction_mask	legion_runtime/region_tree.h	/^      FieldMask reduction_mask;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
reduction_mask	legion_runtime/region_tree.h	/^      FieldMask reduction_mask;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
reduction_op	legion_runtime/legion_tasks.h	/^      const ReductionOp *reduction_op;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
reduction_state	legion_runtime/legion_tasks.h	/^      void *reduction_state; $/;"	m	class:LegionRuntime::HighLevel::MultiTask
reduction_state_size	legion_runtime/legion_tasks.h	/^      size_t reduction_state_size;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
reduction_users	legion_runtime/region_tree.h	/^      std::list<PhysicalUser> reduction_users;$/;"	m	class:LegionRuntime::HighLevel::ReductionView
reduction_views	legion_runtime/region_tree.h	/^                     VALID_REDUCTION_ALLOC>::map reduction_views;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
reduction_views	legion_runtime/region_tree.h	/^      std::map<ReductionView*,FieldMask> reduction_views;$/;"	m	struct:LegionRuntime::HighLevel::CompositeCloser
ref	legion_runtime/accessor.h	/^          inline T& ref(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
ref	legion_runtime/accessor.h	/^          inline T& ref(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
ref	legion_runtime/accessor.h	/^          inline T& ref(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
ref	legion_runtime/legion.h	/^      inline Coloring& ref(void) { return coloring; }$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
ref	legion_runtime/legion.h	/^      inline DomainColoring& ref(void) { return coloring; }$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
ref	legion_runtime/lowlevel.h	/^      ET& ref(ptr_t ptr) const { return ria.ref(ptr); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
ref	legion_runtime/lowlevel.h	/^      T &ref(ptr_t ptr) const $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
ref	legion_runtime/lowlevel.h	/^      T &ref(ptr_t ptr) const { $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
reference	legion_runtime/legion_allocation.h	/^      typedef T&              reference;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
reference	legion_runtime/legion_ops.h	/^      InstanceRef reference;$/;"	m	class:LegionRuntime::HighLevel::CloseOp
reference	legion_runtime/runtime.h	/^      InstanceRef reference;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
references	legion_runtime/arrays.h	/^      unsigned references;$/;"	m	class:LegionRuntime::Arrays::Mapping
references	legion_runtime/garbage_collection.h	/^      unsigned int references;$/;"	m	class:LegionRuntime::HighLevel::Collectable
references	legion_runtime/rectangle_set.h	/^      unsigned int references;$/;"	m	class:LegionRuntime::HighLevel::Segment
reg1_idx	legion_runtime/legion_ops.h	/^        unsigned reg1_idx;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
reg2_idx	legion_runtime/legion_ops.h	/^        unsigned reg2_idx;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
regbase	legion_runtime/lowlevel.cc	/^      void *regbase;$/;"	m	class:LegionRuntime::LowLevel::RemoteMemory	file:
region	legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
region	legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
region	legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
region	legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
region	legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
region	legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
region	legion_runtime/legion.h	/^      LogicalRegion region; \/**< mutually exclusive with partition*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
region	legion_runtime/legion.h	/^      PhysicalRegion                    region;$/;"	m	class:LegionRuntime::HighLevel::Acquire
region	legion_runtime/legion.h	/^      PhysicalRegion                    region;$/;"	m	class:LegionRuntime::HighLevel::Release
region	legion_runtime/legion_logging.h	/^        bool region;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
region	legion_runtime/legion_ops.h	/^      PhysicalRegion region;$/;"	m	class:LegionRuntime::HighLevel::MapOp
region	legion_runtime/shared_lowlevel.cc	/^        IndexSpace region;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
region_deleted	legion_runtime/legion_tasks.h	/^      std::vector<bool> region_deleted; $/;"	m	class:LegionRuntime::HighLevel::SingleTask
region_node	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *region_node;$/;"	m	struct:acpi_create_field_info	typeref:struct:acpi_create_field_info::acpi_namespace_node
region_node	legion_runtime/region_tree.h	/^      RegionNode *const region_node;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
region_node	legion_runtime/region_tree.h	/^      RegionNode *const region_node;$/;"	m	class:LegionRuntime::HighLevel::ReductionManager
region_nodes	legion_runtime/region_tree.h	/^      std::map<LogicalRegion,RegionNode*>     region_nodes;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
region_requirements	legion_runtime/legion.h	/^      std::vector<RegionRequirement>     region_requirements;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
region_requirements	legion_runtime/legion.h	/^      std::vector<RegionRequirement>     region_requirements;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
regions	legion_runtime/legion.h	/^      std::vector<RegionRequirement>      regions;$/;"	m	class:LegionRuntime::HighLevel::Task
register_child	legion_runtime/region_tree.cc	/^    void RegionTreePath::register_child(unsigned depth, Color color)$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
register_child_commit	legion_runtime/legion_tasks.cc	/^    void InlineTask::register_child_commit(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
register_child_commit	legion_runtime/legion_tasks.cc	/^    void SingleTask::register_child_commit(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_child_complete	legion_runtime/legion_tasks.cc	/^    void InlineTask::register_child_complete(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
register_child_complete	legion_runtime/legion_tasks.cc	/^    void SingleTask::register_child_complete(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_child_executed	legion_runtime/legion_tasks.cc	/^    void InlineTask::register_child_executed(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
register_child_executed	legion_runtime/legion_tasks.cc	/^    void SingleTask::register_child_executed(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_child_operation	legion_runtime/legion_tasks.cc	/^    void InlineTask::register_child_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
register_child_operation	legion_runtime/legion_tasks.cc	/^    void SingleTask::register_child_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_close	legion_runtime/legion_profiling.h	/^      static inline void register_close(UniqueID uid, UniqueID pid)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_copy	legion_runtime/legion_profiling.h	/^      static inline void register_copy(UniqueID uid, UniqueID pid)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_copy	legion_runtime/shared_lowlevel.cc	/^    Event CopyOperation::register_copy(Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::CopyOperation
register_count	acpi/acpica/aclocal.h	/^	u32 register_count;	\/* Number of register pairs in block *\/$/;"	m	struct:acpi_gpe_block_info
register_cpu_variants	test/circuit.h	/^  void register_cpu_variants(void)$/;"	f	namespace:TaskHelper
register_dependence	legion_runtime/legion_ops.cc	/^    bool Operation::register_dependence(Operation *target, $/;"	f	class:LegionRuntime::HighLevel::Operation
register_dependence	legion_runtime/legion_ops.cc	/^    bool Operation::register_dependence(unsigned idx, Operation *target, $/;"	f	class:LegionRuntime::HighLevel::Operation
register_dependent	legion_runtime/shared_lowlevel.cc	/^    bool EventImpl::register_dependent(Triggerable *target, EventGeneration gen, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
register_distributed_collectable	legion_runtime/runtime.cc	/^    void Runtime::register_distributed_collectable(DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::Runtime
register_event	legion_runtime/legion_profiling.h	/^      static inline void register_event(UniqueID uid, ProfKind kind)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_fence_dependence	legion_runtime/legion_tasks.cc	/^    void InlineTask::register_fence_dependence(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
register_fence_dependence	legion_runtime/legion_tasks.cc	/^    void SingleTask::register_fence_dependence(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_field_creation	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_creation(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_creations	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_creations($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_creations	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_creations(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_deletions	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_deletions($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_deletions	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_deletions(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_space_creation	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_space_creation(FieldSpace space)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_space_creations	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_space_creations($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_space_deletion	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_space_deletion(FieldSpace space)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_space_deletions	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_space_deletions($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_future	legion_runtime/runtime.cc	/^    void Runtime::register_future(DistributedID did, Future::Impl *impl)$/;"	f	class:LegionRuntime::HighLevel::Runtime
register_hierarchical_collectable	legion_runtime/runtime.cc	/^    void Runtime::register_hierarchical_collectable(DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::Runtime
register_host_memory	legion_runtime/lowlevel_gpu.cc	/^      void register_host_memory(void *base, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
register_host_memory	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::register_host_memory(void *base, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
register_hybrid_variants	test/circuit.h	/^  void register_hybrid_variants(void)$/;"	f	namespace:TaskHelper
register_index_space_creation	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_index_space_creation(IndexSpace space)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_index_space_creations	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_index_space_creations($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_index_space_deletion	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_index_space_deletion(IndexSpace space)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_index_space_deletions	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_index_space_deletions($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_index_task	legion_runtime/legion.h	/^    \/*static*\/ TaskID HighLevelRuntime::register_index_task(TaskID id, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_info	acpi/acpica/aclocal.h	/^	struct acpi_gpe_register_info *register_info;	\/* Backpointer to register info *\/$/;"	m	struct:acpi_gpe_event_info	typeref:struct:acpi_gpe_event_info::acpi_gpe_register_info
register_info	acpi/acpica/aclocal.h	/^	struct acpi_gpe_register_info *register_info;	\/* One per GPE register pair *\/$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_gpe_register_info
register_inline_mapped_region	legion_runtime/legion_tasks.cc	/^    void SingleTask::register_inline_mapped_region(PhysicalRegion &region)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_instance_creation	legion_runtime/legion_profiling.h	/^      static inline void register_instance_creation(unsigned inst_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_instance_deletion	legion_runtime/legion_profiling.h	/^      static inline void register_instance_deletion(unsigned inst_id)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_int_handler	nautilus/irq.c	/^register_int_handler (uint16_t int_vec, $/;"	f
register_irq_handler	nautilus/irq.c	/^register_irq_handler (uint16_t irq, $/;"	f
register_layout_description	legion_runtime/region_tree.cc	/^    LayoutDescription* FieldSpaceNode::register_layout_description($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
register_legion_task	legion_runtime/legion.h	/^    \/*static*\/ TaskID HighLevelRuntime::register_legion_task(TaskID id,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_logical_dependences	legion_runtime/region_tree.cc	/^    void RegionTreeNode::register_logical_dependences(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
register_logical_node	legion_runtime/region_tree.cc	/^    void RegionTreeNode::register_logical_node(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
register_logical_view	legion_runtime/region_tree.cc	/^    void RegionTreeForest::register_logical_view(DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
register_map	legion_runtime/legion_profiling.h	/^      static inline void register_map(UniqueID uid, UniqueID pid)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_mapping	legion_runtime/arrays.h	/^      bool register_mapping(void) {$/;"	f	class:LegionRuntime::Arrays::MappingRegistry
register_mapping	legion_runtime/arrays.h	/^      static void register_mapping(void)$/;"	f	class:LegionRuntime::Arrays::Mapping
register_must_epoch	legion_runtime/legion_tasks.cc	/^    void IndexTask::register_must_epoch(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
register_must_epoch	legion_runtime/legion_tasks.cc	/^    void SliceTask::register_must_epoch(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
register_node	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *register_node;$/;"	m	struct:acpi_create_field_info	typeref:struct:acpi_create_field_info::acpi_namespace_node
register_operation	legion_runtime/legion_trace.cc	/^    void LegionTrace::register_operation(Operation *op, GenerationID gen)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
register_operation	legion_runtime/runtime.cc	/^    void Grant::Impl::register_operation(Event completion_event)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
register_partition_function	legion_runtime/legion.h	/^    \/*static*\/ ProjectionID HighLevelRuntime::register_partition_function($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_partition_projection_function	legion_runtime/legion.cc	/^      register_partition_projection_function(ProjectionID handle, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_partition_projection_function	legion_runtime/runtime.cc	/^      register_partition_projection_function(ProjectionID handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
register_physical_manager	legion_runtime/region_tree.cc	/^    void RegionTreeForest::register_physical_manager(PhysicalManager *manager)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
register_physical_region	legion_runtime/region_tree.cc	/^    InstanceRef RegionTreeForest::register_physical_region($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
register_predicate_dependence	legion_runtime/legion_ops.cc	/^    void SpeculativeOp::register_predicate_dependence(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
register_reduction_op	legion_runtime/legion.h	/^    \/*static*\/ void HighLevelRuntime::register_reduction_op($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_region	legion_runtime/region_tree.cc	/^    InstanceRef RegionNode::register_region(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
register_region_creation	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_region_creation(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_region_creations	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_region_creations(const std::set<LogicalRegion> &regs)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_region_deletion	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_region_deletion(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_region_deletions	legion_runtime/legion_tasks.cc	/^    void TaskOp::register_region_deletions(const std::set<LogicalRegion> &regs)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_region_dependence	legion_runtime/legion_ops.cc	/^    bool Operation::register_region_dependence(unsigned idx, Operation *target,$/;"	f	class:LegionRuntime::HighLevel::Operation
register_region_function	legion_runtime/legion.h	/^    \/*static*\/ ProjectionID HighLevelRuntime::register_region_function($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_region_projection_function	legion_runtime/legion.cc	/^      register_region_projection_function(ProjectionID handle, void *func_ptr)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_region_projection_function	legion_runtime/runtime.cc	/^    \/*static*\/ ProjectionID Runtime::register_region_projection_function($/;"	f	class:LegionRuntime::HighLevel::Runtime
register_request	legion_runtime/shared_lowlevel.cc	/^    Event ReservationImpl::register_request(unsigned m, bool exc, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
register_runtime_tasks	legion_runtime/runtime.cc	/^                          register_runtime_tasks(Processor::TaskIDTable &table)$/;"	f	class:LegionRuntime::HighLevel::Runtime
register_single_task	legion_runtime/legion.h	/^    \/*static*\/ TaskID HighLevelRuntime::register_single_task(TaskID id, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_single_task	legion_runtime/legion_ops.cc	/^    void MustEpochOp::register_single_task(SingleTask *single, unsigned index)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
register_slice_task	legion_runtime/legion_ops.cc	/^    void MustEpochOp::register_slice_task(SliceTask *slice)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
register_subop	legion_runtime/legion_ops.cc	/^    void MustEpochOp::register_subop(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
register_task	legion_runtime/legion_profiling.h	/^      static inline void register_task(unsigned tid, UniqueID uid, $/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_task	test/circuit_cpu.cc	/^void CheckTask::register_task(void)$/;"	f	class:CheckTask
register_task_variant	legion_runtime/legion_profiling.h	/^      static inline void register_task_variant(unsigned task_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_waiter	legion_runtime/legion_ops.cc	/^    bool Predicate::Impl::register_waiter(PredicateWaiter *waiter,$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
register_waiter	legion_runtime/runtime.cc	/^    void Future::Impl::register_waiter(AddressSpaceID sid)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
registered	legion_runtime/lowlevel.cc	/^      bool prealloced, registered;$/;"	m	class:LegionRuntime::LowLevel::LocalCPUMemory	file:
registered_waiters	legion_runtime/runtime.h	/^      std::set<AddressSpaceID> registered_waiters;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
registerlocalvar	lua_src/lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	file:
registration_callback	legion_runtime/runtime.cc	/^                                              registration_callback = NULL;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
registration_callback	legion_runtime/runtime.h	/^      static volatile RegistrationCallbackFnptr registration_callback;$/;"	m	class:LegionRuntime::HighLevel::Runtime
registry	legion_runtime/arrays.h	/^      static MappingRegistry<IDIM_, ODIM_> registry;$/;"	m	class:LegionRuntime::Arrays::Mapping
registry	legion_runtime/lowlevel.cc	/^    MappingRegistry<IDIM, ODIM> Mapping<IDIM, ODIM>::registry;$/;"	m	class:LegionRuntime::Arrays::Mapping	file:
registry	legion_runtime/shared_lowlevel.cc	/^    MappingRegistry<IDIM, ODIM> Mapping<IDIM, ODIM>::registry;$/;"	m	class:LegionRuntime::Arrays::Mapping	file:
rehash	lua_src/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
reinsert	legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>* IntervalTreeNode<T,DISCRETE>::reinsert($/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
reinsert	legion_runtime/region_tree.h	/^      std::deque<LogicalUser> reinsert;$/;"	m	class:LegionRuntime::HighLevel::LogicalFilter
reinsert	legion_runtime/region_tree.h	/^      std::deque<LogicalUser> reinsert;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
reinsert	legion_runtime/region_tree.h	/^      std::deque<PhysicalUser> reinsert;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
reinsert	legion_runtime/region_tree.h	/^      std::deque<PhysicalUser> reinsert;$/;"	m	class:LegionRuntime::HighLevel::PhysicalFilter
reinsert	legion_runtime/region_tree.h	/^      std::deque<PhysicalUser> reinsert;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
reinsert_count	legion_runtime/region_tree.h	/^      unsigned reinsert_count;$/;"	m	class:LegionRuntime::HighLevel::LogicalFilter
reinsert_count	legion_runtime/region_tree.h	/^      unsigned reinsert_count;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
reinsert_count	legion_runtime/region_tree.h	/^      unsigned reinsert_count;$/;"	m	class:LegionRuntime::HighLevel::PhysicalFilter
reinsert_count	legion_runtime/region_tree.h	/^      unsigned reinsert_count;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
reinsert_count	legion_runtime/region_tree.h	/^      unsigned reinsert_count;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
reinsert_stack	legion_runtime/region_tree.h	/^      std::deque<unsigned> reinsert_stack;$/;"	m	class:LegionRuntime::HighLevel::LogicalFilter
reinsert_stack	legion_runtime/region_tree.h	/^      std::deque<unsigned> reinsert_stack;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
reinsert_stack	legion_runtime/region_tree.h	/^      std::deque<unsigned> reinsert_stack;$/;"	m	class:LegionRuntime::HighLevel::PhysicalFilter
reinsert_stack	legion_runtime/region_tree.h	/^      std::deque<unsigned> reinsert_stack;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
reinsert_stack	legion_runtime/region_tree.h	/^      std::deque<unsigned> reinsert_stack;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
rel_time	legion_runtime/utilities.h	/^      static double rel_time(void)$/;"	f	class:LegionRuntime::LowLevel::Clock
release	legion_runtime/legion.cc	/^    void Lock::release(void)$/;"	f	class:LegionRuntime::HighLevel::Lock
release	legion_runtime/lowlevel.cc	/^    void Reservation::Impl::release(void)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
release	legion_runtime/lowlevel.cc	/^    void Reservation::release(Event wait_on \/* = Event::NO_EVENT *\/) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
release	legion_runtime/lowlevel_impl.h	/^      void release(void)$/;"	f	class:LegionRuntime::LowLevel::AutoHSLLock
release	legion_runtime/shared_lowlevel.cc	/^    void Reservation::release(Event wait_on) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
release	legion_runtime/shared_lowlevel.cc	/^    void ReservationImpl::release(Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
release_context	legion_runtime/legion_tasks.cc	/^    RegionTreeContext SingleTask::release_context(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
release_grant	legion_runtime/legion.cc	/^    void HighLevelRuntime::release_grant(Context ctx, Grant grant)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
release_grant	legion_runtime/runtime.cc	/^    void Grant::Impl::release_grant(void)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
release_grant	legion_runtime/runtime.cc	/^    void Runtime::release_grant(Context ctx, Grant grant)$/;"	f	class:LegionRuntime::HighLevel::Runtime
release_op_lock	legion_runtime/runtime.h	/^      Reservation release_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
release_perf_event	nautilus/pmc.c	/^release_perf_event (perf_event_t * event)$/;"	f
release_physical_state	legion_runtime/region_tree.cc	/^    bool RegionTreeNode::release_physical_state(PhysicalState &state)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
release_reservation	legion_runtime/lowlevel.cc	/^    void Reservation::Impl::release_reservation(void)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
release_srcptr	legion_runtime/activemsg.cc	/^void SrcDataPool::release_srcptr(void *srcptr)$/;"	f	class:SrcDataPool
release_srcptr	legion_runtime/activemsg.cc	/^void release_srcptr(void *srcptr)$/;"	f
release_srcptr_handler	legion_runtime/activemsg.cc	/^\/*static*\/ void SrcDataPool::release_srcptr_handler(gasnet_token_t token,$/;"	f	class:SrcDataPool
release_user	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::release_user()$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
release_user_coherence	legion_runtime/region_tree.cc	/^    void RegionTreeForest::release_user_coherence(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
release_user_coherence	legion_runtime/region_tree.cc	/^    void RegionTreeNode::release_user_coherence(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
remaining	legion_runtime/region_tree.h	/^      size_t remaining;$/;"	m	class:LegionRuntime::HighLevel::LegionStack
remaining	legion_runtime/runtime.h	/^      int remaining;$/;"	m	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
remaining	legion_runtime/shared_lowlevel.cc	/^	size_t remaining;$/;"	m	class:LegionRuntime::LowLevel::MemoryImpl	file:
remaining_arrivals	legion_runtime/utilities.h	/^      unsigned remaining_arrivals;$/;"	m	class:LegionRuntime::LowLevel::UtilityBarrier
remaining_bytes	legion_runtime/shared_lowlevel.cc	/^    size_t MemoryImpl::remaining_bytes(void) $/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
remaining_capacity	legion_runtime/runtime.h	/^      size_t remaining_capacity;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
remaining_count	legion_runtime/lowlevel.cc	/^      int remaining_count;$/;"	m	struct:LegionRuntime::LowLevel::PartialWriteEntry	file:
remaining_elmts	legion_runtime/legion.h	/^      int remaining_elmts;$/;"	m	class:LegionRuntime::HighLevel::IndexIterator
remaining_leaves	legion_runtime/utilities.h	/^      unsigned remaining_leaves;$/;"	m	class:LegionRuntime::LowLevel::UtilityBarrier
remaining_logical	legion_runtime/region_tree.h	/^      FieldMask remaining_logical;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
remaining_mpi_notifications	legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::remaining_mpi_notifications = 0;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
remaining_mpi_notifications	legion_runtime/runtime.h	/^      static unsigned remaining_mpi_notifications;$/;"	m	class:LegionRuntime::HighLevel::Runtime
remaining_physical	legion_runtime/region_tree.h	/^      FieldMask remaining_physical;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
remaining_stops	legion_runtime/shared_lowlevel.cc	/^        unsigned remaining_stops; \/\/ for utility processor knowing when to stop$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
remaining_subop_commits	legion_runtime/legion_ops.h	/^      unsigned remaining_subop_commits;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
remaining_subop_completes	legion_runtime/legion_ops.h	/^      unsigned remaining_subop_completes;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
remap_physical_region	legion_runtime/region_tree.cc	/^    MappingRef RegionTreeForest::remap_physical_region(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
remap_region	legion_runtime/legion.cc	/^    void HighLevelRuntime::remap_region(Context ctx, PhysicalRegion region)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
remap_region	legion_runtime/legion_ops.h	/^      bool remap_region;$/;"	m	class:LegionRuntime::HighLevel::MapOp
remap_region	legion_runtime/region_tree.cc	/^    void RegionNode::remap_region(ContextID ctx, MaterializedView *view,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
remap_region	legion_runtime/runtime.cc	/^    void PhysicalRegion::Impl::remap_region(Event new_ready)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
remap_region	legion_runtime/runtime.cc	/^    void Runtime::remap_region(Context ctx, PhysicalRegion region)$/;"	f	class:LegionRuntime::HighLevel::Runtime
remarkupvals	lua_src/lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	file:
remote_address_procs	legion_runtime/runtime.h	/^      const std::set<Processor> remote_address_procs;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
remote_address_space	legion_runtime/runtime.h	/^      const AddressSpaceID remote_address_space;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
remote_completion_event	legion_runtime/legion_tasks.h	/^      Event remote_completion_event;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
remote_contexts	legion_runtime/legion_tasks.h	/^      std::deque<RegionTreeContext> remote_contexts;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
remote_contexts	legion_runtime/legion_tasks.h	/^      std::deque<RegionTreeContext> remote_contexts;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
remote_contexts	legion_runtime/runtime.h	/^                     RUNTIME_REMOTE_ALLOC>::map remote_contexts;$/;"	m	class:LegionRuntime::HighLevel::Runtime
remote_ctx	legion_runtime/region_tree.h	/^      const ContextID remote_ctx;$/;"	m	class:LegionRuntime::HighLevel::PathReturner
remote_ctx	legion_runtime/region_tree.h	/^      const ContextID remote_ctx;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
remote_legion_spy_completion	legion_runtime/legion_tasks.h	/^      Event remote_legion_spy_completion;$/;"	m	class:LegionRuntime::HighLevel::RemoteTask
remote_lock	legion_runtime/runtime.h	/^      Reservation remote_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
remote_outermost_context	legion_runtime/legion_tasks.h	/^      RegionTreeContext remote_outermost_context;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
remote_outermost_context	legion_runtime/legion_tasks.h	/^      RegionTreeContext remote_outermost_context;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
remote_references	legion_runtime/garbage_collection.h	/^      std::map<AddressSpaceID,int> remote_references;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
remote_references	legion_runtime/garbage_collection.h	/^      unsigned remote_references;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
remote_sharer_mask	legion_runtime/lowlevel_impl.h	/^      NodeMask remote_waiter_mask, remote_sharer_mask;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
remote_spaces	legion_runtime/garbage_collection.h	/^      std::set<AddressSpaceID> remote_spaces;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
remote_state	legion_runtime/region_tree.h	/^      std::map<AddressSpaceID,FieldMask> remote_state;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
remote_task_lock	legion_runtime/runtime.h	/^      Reservation remote_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
remote_unique_id	legion_runtime/legion_tasks.h	/^      UniqueID remote_unique_id;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
remote_unique_id	legion_runtime/legion_tasks.h	/^      UniqueID remote_unique_id;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
remote_waiter_mask	legion_runtime/lowlevel_impl.h	/^      NodeMask remote_waiter_mask, remote_sharer_mask;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
remote_waiters	legion_runtime/lowlevel_impl.h	/^      std::map<Event::gen_t,NodeMask> remote_waiters;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
remove	nautilus/libccompat.c	/^int remove(const char *path)$/;"	f
remove_adjacent	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::remove_adjacent(Segment<T> *old)$/;"	f	class:LegionRuntime::HighLevel::Segment
remove_child	legion_runtime/region_tree.cc	/^    void IndexPartNode::remove_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
remove_child	legion_runtime/region_tree.cc	/^    void IndexSpaceNode::remove_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
remove_child	legion_runtime/region_tree.cc	/^    void PartitionNode::remove_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
remove_child	legion_runtime/region_tree.cc	/^    void RegionNode::remove_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
remove_created_field	legion_runtime/legion_tasks.cc	/^    void MultiTask::remove_created_field(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
remove_created_field	legion_runtime/legion_tasks.cc	/^    void SingleTask::remove_created_field(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
remove_created_index	legion_runtime/legion_tasks.cc	/^    void MultiTask::remove_created_index(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
remove_created_index	legion_runtime/legion_tasks.cc	/^    void SingleTask::remove_created_index(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
remove_created_region	legion_runtime/legion_tasks.cc	/^    void MultiTask::remove_created_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
remove_created_region	legion_runtime/legion_tasks.cc	/^    void SingleTask::remove_created_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
remove_gc_reference	legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::remove_gc_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
remove_gc_reference	legion_runtime/garbage_collection.cc	/^    bool HierarchicalCollectable::remove_gc_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
remove_gc_references	legion_runtime/region_tree.cc	/^    void CompositeNode::remove_gc_references(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
remove_local_reference	legion_runtime/lowlevel.h	/^      void remove_local_reference(void)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
remove_mapping_reference	legion_runtime/legion_ops.cc	/^    void Operation::remove_mapping_reference(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
remove_point	legion_runtime/legion.cc	/^    bool ArgumentMap::remove_point(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
remove_point	legion_runtime/legion.h	/^    inline bool ArgumentMap::remove_point(const PT point[DIM])$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
remove_point	legion_runtime/runtime.cc	/^    bool ArgumentMap::Impl::remove_point(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
remove_predicate_reference	legion_runtime/legion_ops.cc	/^    void Predicate::Impl::remove_predicate_reference(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
remove_reference	legion_runtime/arrays.h	/^      inline bool remove_reference(void)$/;"	f	class:LegionRuntime::Arrays::Mapping
remove_reference	legion_runtime/garbage_collection.h	/^    inline bool Collectable::remove_reference(unsigned cnt \/*= 1*\/)$/;"	f	class:LegionRuntime::HighLevel::Collectable
remove_reference	legion_runtime/rectangle_set.h	/^    inline bool Segment<T>::remove_reference(void)$/;"	f	class:LegionRuntime::HighLevel::Segment
remove_remote_reference	legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::remove_remote_reference(AddressSpaceID sid,$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
remove_remote_reference	legion_runtime/garbage_collection.cc	/^    bool HierarchicalCollectable::remove_remote_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
remove_resource_reference	legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::remove_resource_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
remove_resource_reference	legion_runtime/garbage_collection.cc	/^    bool HierarchicalCollectable::remove_resource_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
remove_valid_reference	legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::remove_valid_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
remove_valid_reference	legion_runtime/garbage_collection.cc	/^    bool HierarchicalCollectable::remove_valid_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
remove_valid_reference	legion_runtime/region_tree.cc	/^    void InstanceRef::remove_valid_reference(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
remove_valid_references	legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionTreeNode::remove_valid_references($/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
remove_valid_references	legion_runtime/region_tree.cc	/^    void CompositeNode::remove_valid_references(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
remove_valid_view	legion_runtime/region_tree.cc	/^    void InstanceManager::remove_valid_view(MaterializedView *view)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
removeentry	lua_src/lgc.c	/^static void removeentry (Node *n) {$/;"	f	file:
removevalues	lua_src/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	lua_src/lparser.c	/^static void removevars (FuncState *fs, int tolevel) {$/;"	f	file:
rename	nautilus/libccompat.c	/^int rename(const char *old, const char *new)$/;"	f
repeatstat	lua_src/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
replace_adjacent	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::replace_adjacent(Segment<T> *old_seg,$/;"	f	class:LegionRuntime::HighLevel::Segment
replace_default_mapper	legion_runtime/legion.cc	/^    void HighLevelRuntime::replace_default_mapper(Mapper *mapper, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
replace_default_mapper	legion_runtime/runtime.cc	/^    void ProcessorManager::replace_default_mapper(Mapper *m)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
replace_default_mapper	legion_runtime/runtime.cc	/^    void Runtime::replace_default_mapper(Mapper *mapper, $/;"	f	class:LegionRuntime::HighLevel::Runtime
report	lua_src/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:
report_activemsg_status	legion_runtime/activemsg.cc	/^  void report_activemsg_status(FILE *f)$/;"	f	class:EndpointManager
report_activemsg_status	legion_runtime/activemsg.cc	/^extern void report_activemsg_status(FILE *f)$/;"	f
report_aliased_requirements	legion_runtime/legion_ops.cc	/^    void CopyOp::report_aliased_requirements(unsigned idx1, unsigned idx2)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
report_aliased_requirements	legion_runtime/legion_ops.cc	/^    void Operation::report_aliased_requirements(unsigned idx1, unsigned idx2)$/;"	f	class:LegionRuntime::HighLevel::Operation
report_aliased_requirements	legion_runtime/legion_tasks.cc	/^    void IndexTask::report_aliased_requirements(unsigned idx1, unsigned idx2)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
report_aliased_requirements	legion_runtime/legion_tasks.cc	/^    void IndividualTask::report_aliased_requirements(unsigned idx1, $/;"	f	class:LegionRuntime::HighLevel::IndividualTask
report_timers	legion_runtime/lowlevel.cc	/^    \/*static*\/ void DetailedTimer::report_timers(bool local_only \/*= false*\/)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
report_timers	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void DetailedTimer::report_timers(bool local_only \/* = false*\/)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
report_trace	legion_runtime/region_tree.cc	/^    void RegionTreeForest::PerfTrace::report_trace(unsigned long long diff)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
req	legion_runtime/lowlevel_dma.cc	/^	DmaRequest *req;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest::Waiter	file:
req	legion_runtime/region_tree.h	/^      RegionRequirement &req;$/;"	m	struct:LegionRuntime::HighLevel::MappableInfo
req	legion_runtime/runtime.h	/^      RegionRequirement req;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
request	legion_runtime/activemsg.h	/^  static RPLTYPE request(gasnet_node_t dest, REQTYPE args)$/;"	f	class:ActiveMessageShortReply
request	legion_runtime/activemsg.h	/^  static RPLTYPE request(gasnet_node_t dest, REQTYPE args,$/;"	f	class:ActiveMessageMediumReply
request	legion_runtime/activemsg.h	/^  static void request(gasnet_node_t dest, MSGTYPE args)$/;"	f	class:ActiveMessageShortNoReply
request	legion_runtime/activemsg.h	/^  static void request(gasnet_node_t dest, \/*const*\/ MSGTYPE &args, $/;"	f	class:ActiveMessageMediumNoReply
request_early_commit	legion_runtime/legion_ops.cc	/^    bool Operation::request_early_commit(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
request_shutdown	legion_runtime/lowlevel.cc	/^    void UtilityProcessor::request_shutdown(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
request_valid_mask	legion_runtime/lowlevel.cc	/^    Event IndexSpace::Impl::request_valid_mask(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
requested	legion_runtime/lowlevel_impl.h	/^      bool requested; \/\/ do we have a request for the lock in flight?$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
requests	legion_runtime/region_tree.h	/^      std::deque<std::pair<UserEvent,bool\/*exclusive*\/> > requests;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
requests	legion_runtime/runtime.h	/^      std::vector<ReservationRequest> requests;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
requests	legion_runtime/shared_lowlevel.cc	/^	std::list<ReservationRecord> requests;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
requirement	legion_runtime/legion.h	/^      RegionRequirement                 requirement;$/;"	m	class:LegionRuntime::HighLevel::Inline
requirement	legion_runtime/legion.h	/^      RegionRequirement               requirement;$/;"	m	struct:LegionRuntime::HighLevel::InlineLauncher
requirement	legion_runtime/legion_ops.h	/^      RegionRequirement requirement;$/;"	m	class:LegionRuntime::HighLevel::AcquireOp
requirement	legion_runtime/legion_ops.h	/^      RegionRequirement requirement;$/;"	m	class:LegionRuntime::HighLevel::CloseOp
requirement	legion_runtime/legion_ops.h	/^      RegionRequirement requirement;$/;"	m	class:LegionRuntime::HighLevel::ReleaseOp
reservation	legion_runtime/runtime.h	/^        Reservation reservation;$/;"	m	struct:LegionRuntime::HighLevel::Grant::Impl::ReservationRequest
reservation	legion_runtime/shared_lowlevel.cc	/^	ReservationImpl *reservation;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
reservation	legion_runtime/shared_lowlevel.cc	/^	ReservationImpl *reservation;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
reservation_lock	legion_runtime/legion.h	/^      Reservation reservation_lock;$/;"	m	class:LegionRuntime::HighLevel::Lock
reservation_lock	legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         reservation_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
reservations	legion_runtime/lowlevel_impl.h	/^      DynamicTable<ReservationTableAllocator> reservations;$/;"	m	struct:Node
reservations	legion_runtime/shared_lowlevel.cc	/^      std::vector<ReservationImpl*> reservations;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
reserve	legion_runtime/lowlevel.cc	/^    void IndexSpaceAllocator::reserve(unsigned ptr, unsigned count \/*= 1  *\/) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
reserve_contexts	legion_runtime/region_tree.cc	/^    void RegionTreeNode::reserve_contexts(unsigned num_contexts)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
reserve_elements	legion_runtime/lowlevel.cc	/^    void IndexSpaceAllocator::Impl::reserve_elements(unsigned ptr, unsigned count \/*= 1 *\/)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
reserve_srcdata	legion_runtime/activemsg.cc	/^void OutgoingMessage::reserve_srcdata(void)$/;"	f	class:OutgoingMessage
reserved	acpi/acpica/aclocal.h	/^	u8 reserved;$/;"	m	struct:acpi_package_info
reserved	acpi/acpica/aclocal.h	/^	u8 reserved;$/;"	m	struct:acpi_package_info3
reset	legion_runtime/region_tree.cc	/^    void LogicalState::reset(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalState
reset_all_counters	nautilus/pmc.c	/^reset_all_counters (void)$/;"	f
reset_all_futures	legion_runtime/runtime.cc	/^    bool FutureMap::Impl::reset_all_futures(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
reset_future	legion_runtime/runtime.cc	/^    bool Future::Impl::reset_future(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
reset_reference	legion_runtime/runtime.cc	/^    void PhysicalRegion::Impl::reset_reference(const InstanceRef &ref,$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
resilient_mode	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::resilient_mode = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
resilient_mode	legion_runtime/runtime.h	/^      static bool resilient_mode;$/;"	m	class:LegionRuntime::HighLevel::Runtime
resize	legion_runtime/legion_utilities.h	/^    inline void Serializer::resize(void)$/;"	f	class:LegionRuntime::HighLevel::Serializer
resize_node_contexts	legion_runtime/region_tree.cc	/^    void RegionTreeForest::resize_node_contexts(unsigned total_contexts)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
resolve_false	legion_runtime/legion_ops.cc	/^    void AcquireOp::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
resolve_false	legion_runtime/legion_ops.cc	/^    void CopyOp::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
resolve_false	legion_runtime/legion_ops.cc	/^    void ReleaseOp::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
resolve_false	legion_runtime/legion_tasks.cc	/^    void IndexTask::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
resolve_false	legion_runtime/legion_tasks.cc	/^    void IndividualTask::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
resolve_false	legion_runtime/legion_tasks.cc	/^    void PointTask::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
resolve_false	legion_runtime/legion_tasks.cc	/^    void SliceTask::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
resolve_false	legion_runtime/legion_tasks.cc	/^    void WrapperTask::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
resolve_future_predicate	legion_runtime/legion_ops.cc	/^    void FuturePredOp::resolve_future_predicate(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
resolve_speculation	legion_runtime/legion_ops.cc	/^    void Operation::resolve_speculation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
resolve_true	legion_runtime/legion_ops.cc	/^    void AcquireOp::resolve_true(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
resolve_true	legion_runtime/legion_ops.cc	/^    void CopyOp::resolve_true(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
resolve_true	legion_runtime/legion_ops.cc	/^    void ReleaseOp::resolve_true(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
resolve_true	legion_runtime/legion_tasks.cc	/^    void TaskOp::resolve_true(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
resolved	legion_runtime/legion_ops.h	/^      bool resolved;$/;"	m	class:LegionRuntime::HighLevel::Operation
resource_references	legion_runtime/garbage_collection.h	/^      unsigned resource_references;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
resource_references	legion_runtime/garbage_collection.h	/^      unsigned resource_references;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
restart_task	legion_runtime/legion_tasks.cc	/^    void SingleTask::restart_task(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
restartcollection	lua_src/lgc.c	/^static void restartcollection (global_State *g) {$/;"	f	file:
restricted	legion_runtime/legion.h	/^      bool restricted;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
restriction	test/hpcg/comp-restriction.h	/^restriction(SparseMatrix &A,$/;"	f	namespace:lgncg
restrictionTask	test/hpcg/comp-restriction.h	/^restrictionTask($/;"	f	namespace:lgncg
result	legion_runtime/legion_tasks.h	/^      Future result; $/;"	m	class:LegionRuntime::HighLevel::IndividualTask
result	legion_runtime/region_tree.h	/^      MappingRef result;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
result	legion_runtime/runtime.h	/^        Future::Impl *result;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureMapSetArgs
result	legion_runtime/runtime.h	/^        Future::Impl *result;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureSetArgs
result	legion_runtime/runtime.h	/^      void *result; $/;"	m	class:LegionRuntime::HighLevel::Future::Impl
result_map	legion_runtime/legion_ops.h	/^      FutureMap result_map;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
result_size	legion_runtime/runtime.h	/^      size_t result_size;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
results	acpi/acpica/aclocal.h	/^	struct acpi_result_values results;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_result_values
resumable_threads	legion_runtime/lowlevel.cc	/^      std::list<Thread *> resumable_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
resume	lua_src/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume_error	lua_src/ldo.c	/^static l_noret resume_error (lua_State *L, const char *msg, StkId firstArg) {$/;"	f	file:
ret_info	acpi/acpica/aclocal.h	/^	struct acpi_package_info ret_info;$/;"	m	union:acpi_predefined_info	typeref:struct:acpi_predefined_info::acpi_package_info
ret_info2	acpi/acpica/aclocal.h	/^	struct acpi_package_info2 ret_info2;$/;"	m	union:acpi_predefined_info	typeref:struct:acpi_predefined_info::acpi_package_info2
ret_info3	acpi/acpica/aclocal.h	/^	struct acpi_package_info3 ret_info3;$/;"	m	union:acpi_predefined_info	typeref:struct:acpi_predefined_info::acpi_package_info3
retraversegrays	lua_src/lgc.c	/^static void retraversegrays (global_State *g) {$/;"	f	file:
retstat	lua_src/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
return_ACPI_STATUS	acpi/acpica/acmacros.h	408;"	d
return_ACPI_STATUS	acpi/acpica/acmacros.h	430;"	d
return_ACPI_STATUS	acpi/acpica/acmacros.h	457;"	d
return_ACPI_STATUS	acpi/acpica/acmacros.h	512;"	d
return_PTR	acpi/acpica/acmacros.h	412;"	d
return_PTR	acpi/acpica/acmacros.h	433;"	d
return_PTR	acpi/acpica/acmacros.h	461;"	d
return_PTR	acpi/acpica/acmacros.h	516;"	d
return_UINT32	acpi/acpica/acmacros.h	424;"	d
return_UINT32	acpi/acpica/acmacros.h	440;"	d
return_UINT32	acpi/acpica/acmacros.h	460;"	d
return_UINT32	acpi/acpica/acmacros.h	515;"	d
return_UINT8	acpi/acpica/acmacros.h	420;"	d
return_UINT8	acpi/acpica/acmacros.h	439;"	d
return_UINT8	acpi/acpica/acmacros.h	459;"	d
return_UINT8	acpi/acpica/acmacros.h	514;"	d
return_VALUE	acpi/acpica/acmacros.h	416;"	d
return_VALUE	acpi/acpica/acmacros.h	436;"	d
return_VALUE	acpi/acpica/acmacros.h	458;"	d
return_VALUE	acpi/acpica/acmacros.h	513;"	d
return_VOID	acpi/acpica/acmacros.h	394;"	d
return_VOID	acpi/acpica/acmacros.h	456;"	d
return_VOID	acpi/acpica/acmacros.h	511;"	d
return_close_op	legion_runtime/region_tree.cc	/^    void TreeClose::return_close_op(const FieldMask &close_mask)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
return_close_op	legion_runtime/region_tree.cc	/^    void TreeCloseImpl::return_close_op(const FieldMask &close_mask)$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
return_close_op	legion_runtime/region_tree.h	/^      inline void return_close_op(void)$/;"	f	struct:LegionRuntime::HighLevel::CloseInfo
return_held_references	legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::return_held_references(void)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
return_held_references	legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::return_held_references(void)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
return_mask	legion_runtime/region_tree.h	/^      const FieldMask return_mask;$/;"	m	class:LegionRuntime::HighLevel::PathReturner
return_mask	legion_runtime/region_tree.h	/^      const FieldMask return_mask;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
return_on_finish	legion_runtime/shared_lowlevel.cc	/^        const bool return_on_finish;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
return_privilege_state	legion_runtime/legion_tasks.cc	/^    void TaskOp::return_privilege_state(TaskOp *target)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
return_privileges	legion_runtime/legion_tasks.cc	/^    void SliceTask::return_privileges(PointTask *point)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
return_size	legion_runtime/legion.h	/^      const size_t return_size;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection
return_slice_commit	legion_runtime/legion_tasks.cc	/^    void IndexTask::return_slice_commit(unsigned points)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
return_slice_complete	legion_runtime/legion_tasks.cc	/^    void IndexTask::return_slice_complete(unsigned points)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
return_slice_mapped	legion_runtime/legion_tasks.cc	/^    void IndexTask::return_slice_mapped(unsigned points, long long denom)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
reverse_mpi_mapping	legion_runtime/runtime.h	/^      std::map<AddressSpace,int> reverse_mpi_mapping;$/;"	m	class:LegionRuntime::HighLevel::Runtime
rez	legion_runtime/legion_utilities.h	/^      Serializer &rez;$/;"	m	class:LegionRuntime::HighLevel::RezCheck
rhs	legion_runtime/accessor.h	/^	  typename REDOP::RHS rhs;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::ReductionListEntry
rhs	legion_runtime/lowlevel.h	/^      RHS rhs;$/;"	m	struct:LegionRuntime::LowLevel::ReductionListEntry
ria	legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped<AT> ria;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessor
ria	legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped<AccessorGPU> ria;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessor
right	legion_runtime/legion_ops.h	/^      PredicateOp *right;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
right	legion_runtime/legion_ops.h	/^      PredicateOp *right;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
right	legion_runtime/region_tree.h	/^        IndexPartNode *left, *right;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
right	legion_runtime/region_tree.h	/^        IndexSpaceNode *left, *right;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicSpaceTest
right	lua_src/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon50	file:
right_bound	legion_runtime/interval_tree.h	/^      T left_bound, right_bound;$/;"	m	class:LegionRuntime::HighLevel::IntervalTreeNode
right_node	legion_runtime/interval_tree.h	/^      IntervalTreeNode<T, DISCRETE> *left_node, *right_node;$/;"	m	class:LegionRuntime::HighLevel::IntervalTreeNode
right_spaces	legion_runtime/region_tree.h	/^        std::vector<IndexSpaceNode*> left_spaces, right_spaces;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
right_valid	legion_runtime/legion_ops.h	/^      bool right_valid;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
right_valid	legion_runtime/legion_ops.h	/^      bool right_valid;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
right_value	legion_runtime/legion_ops.h	/^      bool right_value;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
right_value	legion_runtime/legion_ops.h	/^      bool right_value;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
roll_up_timers	legion_runtime/lowlevel.cc	/^    \/*static*\/ void DetailedTimer::roll_up_timers(std::map<int, double>& timers,$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
roll_up_timers	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void DetailedTimer::roll_up_timers(std::map<int,double> &timers, bool local_only)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
rollup_ptr	legion_runtime/lowlevel.cc	/^      void *rollup_ptr;$/;"	m	struct:LegionRuntime::LowLevel::RollUpDataArgs	file:
rollup_ptr	legion_runtime/lowlevel.cc	/^      void *rollup_ptr;$/;"	m	struct:LegionRuntime::LowLevel::RollUpRequestArgs	file:
root	legion_runtime/interval_tree.h	/^      IntervalTreeNode<T, DISCRETE> *root;$/;"	m	class:LegionRuntime::HighLevel::IntervalTree
root	legion_runtime/lowlevel_impl.h	/^      NodeBase * volatile root;$/;"	m	class:LegionRuntime::LowLevel::DynamicTable
roots	legion_runtime/region_tree.h	/^      std::map<CompositeNode*,FieldMask> roots;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
round_robin_point_assign	legion_runtime/default_mapper.cc	/^    static void round_robin_point_assign(const Domain &domain, $/;"	f	namespace:LegionRuntime::HighLevel
round_up_size	legion_runtime/activemsg.cc	/^size_t SrcDataPool::round_up_size(size_t size)$/;"	f	class:SrcDataPool
row	arch/k1om/xeon_phi.c	/^  size_t row;$/;"	m	struct:__anon42	file:
row_source	legion_runtime/region_tree.h	/^      IndexPartNode *const row_source;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
row_source	legion_runtime/region_tree.h	/^      IndexSpaceNode *const row_source;$/;"	m	class:LegionRuntime::HighLevel::RegionNode
rptr	legion_runtime/lowlevel.cc	/^      unsigned wptr, rptr, size;$/;"	m	class:LegionRuntime::LowLevel::AMQueue	file:
run	legion_runtime/lowlevel.cc	/^      virtual void run(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorThread
run	legion_runtime/lowlevel.cc	/^    void Machine::run(Processor::TaskFuncID task_id \/*= 0*\/,$/;"	f	class:LegionRuntime::LowLevel::Machine
run	legion_runtime/lowlevel_impl.h	/^      void run(Atomic<int> *_run_counter)$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
run	legion_runtime/shared_lowlevel.cc	/^    void Machine::run(Processor::TaskFuncID task_id \/*= 0*\/,$/;"	f	class:LegionRuntime::LowLevel::Machine
run	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::run(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
run_benchmarks	test/benchmark.c	/^run_benchmarks(void)$/;"	f
run_count	legion_runtime/lowlevel_impl.h	/^      int run_count, finish_count;$/;"	m	class:LegionRuntime::LowLevel::Task
run_counter	legion_runtime/lowlevel_impl.h	/^      Atomic<int> *run_counter;$/;"	m	class:LegionRuntime::LowLevel::Processor::Impl
run_dma_loop	legion_runtime/shared_lowlevel.cc	/^    void DMAQueue::run_dma_loop(void)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
run_legion_tests	test/test_legion.c	/^run_legion_tests (void) $/;"	f
run_or_wait	legion_runtime/lowlevel_gpu.cc	/^      virtual void run_or_wait(Event start_event)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
run_or_wait	legion_runtime/lowlevel_gpu.cc	/^    void GPUTask::run_or_wait(Event start_event)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
run_task	legion_runtime/lowlevel.cc	/^	void run_task(Task *task, Processor actual_proc = Processor::NO_PROC)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
run_task	legion_runtime/lowlevel.cc	/^      void run_task(Task *task, Processor actual_proc = Processor::NO_PROC)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
runargs	lua_src/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:
running_as_background_thread	legion_runtime/lowlevel.cc	/^    static bool running_as_background_thread = false;$/;"	m	namespace:LegionRuntime::LowLevel	file:
runtime	legion_runtime/garbage_collection.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
runtime	legion_runtime/garbage_collection.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
runtime	legion_runtime/legion.h	/^      HighLevelRuntime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::Mapper
runtime	legion_runtime/legion.h	/^      HighLevelRuntime *runtime;$/;"	m	class:LegionRuntime::HighLevel::FieldAllocator
runtime	legion_runtime/legion.h	/^      Runtime *runtime;$/;"	m	class:LegionRuntime::HighLevel::HighLevelRuntime
runtime	legion_runtime/legion_allocation.h	/^      Runtime *runtime;$/;"	m	class:LegionRuntime::HighLevel::LegionAllocator
runtime	legion_runtime/legion_ops.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::Operation
runtime	legion_runtime/lowlevel.cc	/^    \/*static*\/ Runtime *Runtime::runtime = 0;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
runtime	legion_runtime/lowlevel_impl.h	/^      static Runtime *runtime;$/;"	m	class:Runtime
runtime	legion_runtime/region_tree.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
runtime	legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
runtime	legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
runtime	legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
runtime	legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
runtime	legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
runtime	legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
runtime	legion_runtime/shared_lowlevel.cc	/^      static Runtime *runtime;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
runtime	legion_runtime/shared_lowlevel.cc	/^    Runtime *Runtime::runtime = NULL;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
runtime_args	acpi/acpica/aclocal.h	/^	u32 runtime_args;	\/* Interpret time arguments *\/$/;"	m	struct:acpi_opcode_info
runtime_count	acpi/acpica/aclocal.h	/^	u8 runtime_count;	\/* References to a run GPE *\/$/;"	m	struct:acpi_gpe_event_info
runtime_init	arch/hrt/init.c	/^runtime_init (void)$/;"	f	file:
runtime_init	arch/x64/init.c	/^runtime_init (void)$/;"	f	file:
runtime_map	legion_runtime/runtime.cc	/^    \/*static*\/ Runtime *Runtime::runtime_map[(MAX_NUM_PROCS+1)];$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
runtime_map	legion_runtime/runtime.h	/^      static Runtime *runtime_map[(MAX_NUM_PROCS+1\/*+1 for NO_PROC*\/)];$/;"	m	class:LegionRuntime::HighLevel::Runtime
runtime_stride	legion_runtime/runtime.h	/^      const unsigned runtime_stride; \/\/ stride for uniqueness$/;"	m	class:LegionRuntime::HighLevel::Runtime
s	lua_src/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
s_queue	nautilus/vc.c	/^    nk_scancode_t s_queue[Scancode_QUEUE_SIZE];$/;"	m	union:nk_virtual_console::queue	file:
safe_cast	legion_runtime/legion.cc	/^    DomainPoint HighLevelRuntime::safe_cast(Context ctx, DomainPoint point, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
safe_cast	legion_runtime/legion.cc	/^    ptr_t HighLevelRuntime::safe_cast(Context ctx, ptr_t pointer, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
safe_cast	legion_runtime/runtime.cc	/^    DomainPoint Runtime::safe_cast(Context ctx, DomainPoint point, $/;"	f	class:LegionRuntime::HighLevel::Runtime
safe_cast	legion_runtime/runtime.cc	/^    ptr_t Runtime::safe_cast(Context ctx, ptr_t pointer, $/;"	f	class:LegionRuntime::HighLevel::Runtime
same	test/hpcg/vector.h	/^    same(const Vector &a, const Vector &b) {$/;"	f	struct:lgncg::Vector
sample_allocated_instances	legion_runtime/legion.cc	/^    unsigned Mapper::sample_allocated_instances(Memory mem) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
sample_allocated_instances	legion_runtime/runtime.cc	/^    unsigned MemoryManager::sample_allocated_instances(void)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
sample_allocated_instances	legion_runtime/runtime.cc	/^    unsigned Runtime::sample_allocated_instances(Memory mem)$/;"	f	class:LegionRuntime::HighLevel::Runtime
sample_allocated_space	legion_runtime/legion.cc	/^    size_t Mapper::sample_allocated_space(Memory mem) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
sample_allocated_space	legion_runtime/runtime.cc	/^    size_t MemoryManager::sample_allocated_space(void)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
sample_allocated_space	legion_runtime/runtime.cc	/^    size_t Runtime::sample_allocated_space(Memory mem)$/;"	f	class:LegionRuntime::HighLevel::Runtime
sample_free_space	legion_runtime/legion.cc	/^    size_t Mapper::sample_free_space(Memory mem) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
sample_free_space	legion_runtime/runtime.cc	/^    size_t MemoryManager::sample_free_space(void)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
sample_free_space	legion_runtime/runtime.cc	/^    size_t Runtime::sample_free_space(Memory mem)$/;"	f	class:LegionRuntime::HighLevel::Runtime
sample_unmapped_tasks	legion_runtime/legion.cc	/^    unsigned Mapper::sample_unmapped_tasks(Processor proc) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
sample_unmapped_tasks	legion_runtime/runtime.cc	/^    unsigned ProcessorManager::sample_unmapped_tasks(MapperID map_id)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
sample_unmapped_tasks	legion_runtime/runtime.cc	/^    unsigned Runtime::sample_unmapped_tasks(Processor proc, Mapper *mapper)$/;"	f	class:LegionRuntime::HighLevel::Runtime
sampled	legion_runtime/runtime.h	/^      volatile bool sampled;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
sanity_check	legion_runtime/interval_tree.h	/^    void IntervalTreeNode<T,DISCRETE>::sanity_check(void)$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
sanity_check	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::sanity_check(void) const$/;"	f	class:LegionRuntime::HighLevel::Segment
sanity_check_logical_state	legion_runtime/region_tree.cc	/^    void RegionTreeNode::sanity_check_logical_state(LogicalState &state)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
save	lua_src/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
save_and_next	lua_src/llex.c	46;"	d	file:
scanformat	lua_src/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:
schedule	legion_runtime/legion.h	/^      bool                                schedule;$/;"	m	class:LegionRuntime::HighLevel::Task
schedule_runtime	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::schedule_runtime($/;"	f	class:LegionRuntime::HighLevel::Runtime
scheduler_invoked	legion_runtime/shared_lowlevel.cc	/^        bool scheduler_invoked;   \/\/ for traking if we've invoked the scheduler$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
sci_en	arch/hrt/shutdown.c	/^    uint16_t  sci_en;$/;"	m	struct:shutdown_info	file:
sci_en	arch/x64/shutdown.c	/^    uint16_t  sci_en;$/;"	m	struct:shutdown_info	file:
scnprintf	nautilus/printk.c	/^int scnprintf(char * buf, size_t size, const char *fmt, ...)$/;"	f
scope	acpi/acpica/aclocal.h	/^	struct acpi_scope_state scope;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_scope_state
scope	acpi/acpica/aclocal.h	/^	union acpi_generic_state *scope;	\/* Current scope *\/$/;"	m	struct:acpi_parse_state	typeref:union:acpi_parse_state::acpi_generic_state
sdp	legion_runtime/activemsg.cc	/^    SrcDataPool& sdp;$/;"	m	class:SrcDataPool::Lock	file:
search_for	acpi/acpica/aclocal.h	/^	char *search_for;$/;"	m	struct:acpi_find_context
searcher_C	lua_src/loadlib.c	/^static int searcher_C (lua_State *L) {$/;"	f	file:
searcher_Croot	lua_src/loadlib.c	/^static int searcher_Croot (lua_State *L) {$/;"	f	file:
searcher_Lua	lua_src/loadlib.c	/^static int searcher_Lua (lua_State *L) {$/;"	f	file:
searcher_preload	lua_src/loadlib.c	/^static int searcher_preload (lua_State *L) {$/;"	f	file:
searchpath	lua_src/loadlib.c	/^static const char *searchpath (lua_State *L, const char *name,$/;"	f	file:
searchupvalue	lua_src/lparser.c	/^static int searchupvalue (FuncState *fs, TString *name) {$/;"	f	file:
searchvar	lua_src/lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	file:
seed_state	legion_runtime/region_tree.cc	/^    InstanceRef RegionNode::seed_state(ContextID ctx, PhysicalUser &user,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
seginfos	legion_runtime/lowlevel_impl.h	/^      gasnet_seginfo_t *seginfos;$/;"	m	class:LegionRuntime::LowLevel::GASNetMemory
segment	legion_runtime/rectangle_set.h	/^      Segment<T> *segment;$/;"	m	struct:LegionRuntime::HighLevel::SplitSegment
segment_info	legion_runtime/activemsg.cc	/^gasnet_seginfo_t *segment_info = 0;$/;"	v
select_close_targets	legion_runtime/region_tree.cc	/^    bool RegionTreeNode::select_close_targets(PhysicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
select_dma_node	legion_runtime/lowlevel_dma.cc	/^    static int select_dma_node(Memory src_mem, Memory dst_mem,$/;"	f	namespace:LegionRuntime::LowLevel
select_local_waiters	legion_runtime/lowlevel.cc	/^    bool Reservation::Impl::select_local_waiters(std::deque<Event>& to_wake)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
select_random_processor	legion_runtime/default_mapper.cc	/^    \/*static*\/ Processor DefaultMapper::select_random_processor($/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
select_reduction_layout	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::select_reduction_layout(const Task *task, $/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_region_layout	legion_runtime/shim_mapper.cc	/^    size_t ShimMapper::select_region_layout(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_target_processor	legion_runtime/shim_mapper.cc	/^    Processor ShimMapper::select_target_processor(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_task_options	legion_runtime/default_mapper.cc	/^    void DefaultMapper::select_task_options(Task *task)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
select_task_options	legion_runtime/shim_mapper.cc	/^    void ShimMapper::select_task_options(Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_task_options	test/custom_mapper.cc	/^void AdversarialMapper::select_task_options(Task *task)$/;"	f	class:AdversarialMapper
select_task_variant	legion_runtime/default_mapper.cc	/^    void DefaultMapper::select_task_variant(Task *task)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
select_task_variant	legion_runtime/shim_mapper.cc	/^    VariantID ShimMapper::select_task_variant(const Task *task, $/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_task_variant	legion_runtime/shim_mapper.cc	/^    void ShimMapper::select_task_variant(Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_tasks_to_schedule	legion_runtime/default_mapper.cc	/^    void DefaultMapper::select_tasks_to_schedule($/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
select_tasks_to_schedule	legion_runtime/shim_mapper.cc	/^    void ShimMapper::select_tasks_to_schedule($/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_variant	legion_runtime/legion.cc	/^    const TaskVariantCollection::Variant& TaskVariantCollection::select_variant($/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
selected_memory	legion_runtime/legion.h	/^      Memory selected_memory;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
selected_variant	legion_runtime/legion.h	/^      VariantID                           selected_variant;$/;"	m	class:LegionRuntime::HighLevel::Task
semerror	lua_src/lparser.c	/^static l_noret semerror (LexState *ls, const char *msg) {$/;"	f	file:
send_add_distributed_remote	legion_runtime/runtime.cc	/^    void MessageManager::send_add_distributed_remote(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_add_distributed_remote	legion_runtime/runtime.cc	/^    void Runtime::send_add_distributed_remote(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_advertisement	legion_runtime/runtime.cc	/^    void MessageManager::send_advertisement(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_advertisements	legion_runtime/runtime.cc	/^    void Runtime::send_advertisements(const std::set<Processor> &targets,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_composite_view	legion_runtime/runtime.cc	/^    void MessageManager::send_back_composite_view(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_composite_view	legion_runtime/runtime.cc	/^    void Runtime::send_back_composite_view(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_created_state	legion_runtime/legion_tasks.cc	/^    void PointTask::send_back_created_state(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::PointTask
send_back_materialized_view	legion_runtime/runtime.cc	/^    void MessageManager::send_back_materialized_view(Serializer &rez,bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_materialized_view	legion_runtime/runtime.cc	/^    void Runtime::send_back_materialized_view(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_partition_state	legion_runtime/runtime.cc	/^    void MessageManager::send_back_partition_state(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_partition_state	legion_runtime/runtime.cc	/^    void Runtime::send_back_partition_state(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_physical_state	legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_back_physical_state(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_back_reduction_view	legion_runtime/runtime.cc	/^    void MessageManager::send_back_reduction_view(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_reduction_view	legion_runtime/runtime.cc	/^    void Runtime::send_back_reduction_view(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_region_state	legion_runtime/runtime.cc	/^    void MessageManager::send_back_region_state(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_region_state	legion_runtime/runtime.cc	/^    void Runtime::send_back_region_state(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_remote_state	legion_runtime/legion_tasks.cc	/^    void PointTask::send_back_remote_state(AddressSpaceID target, unsigned idx,$/;"	f	class:LegionRuntime::HighLevel::PointTask
send_back_state	legion_runtime/region_tree.cc	/^    DistributedID CompositeView::send_back_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
send_back_state	legion_runtime/region_tree.cc	/^    DistributedID MaterializedView::send_back_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
send_back_state	legion_runtime/region_tree.cc	/^    DistributedID ReductionView::send_back_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
send_back_state	legion_runtime/region_tree.cc	/^    bool PartitionNode::send_back_state(ContextID ctx, ContextID remote_ctx,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
send_back_state	legion_runtime/region_tree.cc	/^    bool RegionNode::send_back_state(ContextID ctx, ContextID remote_ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
send_back_user	legion_runtime/region_tree.cc	/^    void LogicalView::send_back_user(const PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::LogicalView
send_back_user	legion_runtime/runtime.cc	/^    void MessageManager::send_back_user(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_user	legion_runtime/runtime.cc	/^    void Runtime::send_back_user(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_composite_update	legion_runtime/runtime.cc	/^    void MessageManager::send_composite_update(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_composite_update	legion_runtime/runtime.cc	/^    void Runtime::send_composite_update(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_composite_view	legion_runtime/runtime.cc	/^    void MessageManager::send_composite_view(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_composite_view	legion_runtime/runtime.cc	/^    void Runtime::send_composite_view(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_field_allocation	legion_runtime/runtime.cc	/^    void MessageManager::send_field_allocation(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_field_allocation	legion_runtime/runtime.cc	/^    void Runtime::send_field_allocation(FieldSpace space, FieldID fid,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_field_destruction	legion_runtime/runtime.cc	/^    void MessageManager::send_field_destruction(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_field_destruction	legion_runtime/runtime.cc	/^    void Runtime::send_field_destruction(FieldSpace space, FieldID fid,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_field_space_destruction	legion_runtime/runtime.cc	/^    void MessageManager::send_field_space_destruction(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_field_space_destruction	legion_runtime/runtime.cc	/^    void Runtime::send_field_space_destruction(FieldSpace handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_field_space_node	legion_runtime/runtime.cc	/^    void MessageManager::send_field_space_node(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_field_space_node	legion_runtime/runtime.cc	/^    void Runtime::send_field_space_node(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_future	legion_runtime/runtime.cc	/^    bool Future::Impl::send_future(AddressSpaceID sid)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
send_future	legion_runtime/runtime.cc	/^    void MessageManager::send_future(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_future	legion_runtime/runtime.cc	/^    void Runtime::send_future(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_future_result	legion_runtime/runtime.cc	/^    void MessageManager::send_future_result(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_future_result	legion_runtime/runtime.cc	/^    void Runtime::send_future_result(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_future_subscription	legion_runtime/runtime.cc	/^    void MessageManager::send_future_subscription(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_future_subscription	legion_runtime/runtime.cc	/^    void Runtime::send_future_subscription(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_index_partition_destruction	legion_runtime/runtime.cc	/^    void MessageManager::send_index_partition_destruction(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_index_partition_destruction	legion_runtime/runtime.cc	/^    void Runtime::send_index_partition_destruction(IndexPartition handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_index_partition_node	legion_runtime/runtime.cc	/^    void MessageManager::send_index_partition_node(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_index_partition_node	legion_runtime/runtime.cc	/^    void Runtime::send_index_partition_node(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_index_space_destruction	legion_runtime/runtime.cc	/^    void MessageManager::send_index_space_destruction(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_index_space_destruction	legion_runtime/runtime.cc	/^    void Runtime::send_index_space_destruction(IndexSpace handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_index_space_node	legion_runtime/runtime.cc	/^    void MessageManager::send_index_space_node(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_index_space_node	legion_runtime/runtime.cc	/^    void Runtime::send_index_space_node(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_individual_remote_commit	legion_runtime/runtime.cc	/^    void MessageManager::send_individual_remote_commit(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_individual_remote_commit	legion_runtime/runtime.cc	/^    void Runtime::send_individual_remote_commit(Processor target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_individual_remote_complete	legion_runtime/runtime.cc	/^    void MessageManager::send_individual_remote_complete(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_individual_remote_complete	legion_runtime/runtime.cc	/^    void Runtime::send_individual_remote_complete(Processor target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_individual_remote_mapped	legion_runtime/runtime.cc	/^    void MessageManager::send_individual_remote_mapped(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_individual_remote_mapped	legion_runtime/runtime.cc	/^    void Runtime::send_individual_remote_mapped(Processor target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_individual_request	legion_runtime/runtime.cc	/^    void MessageManager::send_individual_request(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_individual_request	legion_runtime/runtime.cc	/^    void Runtime::send_individual_request(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_individual_return	legion_runtime/runtime.cc	/^    void MessageManager::send_individual_return(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_individual_return	legion_runtime/runtime.cc	/^    void Runtime::send_individual_return(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_instance_manager	legion_runtime/runtime.cc	/^    void MessageManager::send_instance_manager(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_instance_manager	legion_runtime/runtime.cc	/^    void Runtime::send_instance_manager(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_lock	legion_runtime/runtime.h	/^      Reservation send_lock;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
send_logical_partition_destruction	legion_runtime/runtime.cc	/^    void MessageManager::send_logical_partition_destruction(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_logical_partition_destruction	legion_runtime/runtime.cc	/^    void Runtime::send_logical_partition_destruction($/;"	f	class:LegionRuntime::HighLevel::Runtime
send_logical_region_destruction	legion_runtime/runtime.cc	/^    void MessageManager::send_logical_region_destruction(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_logical_region_destruction	legion_runtime/runtime.cc	/^    void Runtime::send_logical_region_destruction(LogicalRegion handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_logical_region_node	legion_runtime/runtime.cc	/^    void MessageManager::send_logical_region_node(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_logical_region_node	legion_runtime/runtime.cc	/^    void Runtime::send_logical_region_node(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_long	legion_runtime/activemsg.cc	/^  void send_long(OutgoingMessage *hdr, void *dest_ptr)$/;"	f	class:ActiveMessageEndpoint
send_make_persistent	legion_runtime/runtime.cc	/^    void MessageManager::send_make_persistent(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_make_persistent	legion_runtime/runtime.cc	/^    void Runtime::send_make_persistent(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_manager	legion_runtime/region_tree.cc	/^    DistributedID InstanceManager::send_manager(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
send_manager	legion_runtime/region_tree.cc	/^    DistributedID ReductionManager::send_manager(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
send_mapper_message	legion_runtime/runtime.cc	/^    void MessageManager::send_mapper_message(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_mapper_message	legion_runtime/runtime.cc	/^    void Runtime::send_mapper_message(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_mapper_messages	legion_runtime/runtime.cc	/^    void ProcessorManager::send_mapper_messages(MapperID map_id, $/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
send_mask	legion_runtime/region_tree.h	/^      const FieldMask send_mask;$/;"	m	class:LegionRuntime::HighLevel::StateSender
send_materialized_update	legion_runtime/runtime.cc	/^    void MessageManager::send_materialized_update(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_materialized_update	legion_runtime/runtime.cc	/^    void Runtime::send_materialized_update(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_materialized_view	legion_runtime/runtime.cc	/^    void MessageManager::send_materialized_view(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_materialized_view	legion_runtime/runtime.cc	/^    void Runtime::send_materialized_view(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_message	legion_runtime/legion.cc	/^    void Mapper::send_message(Processor target, $/;"	f	class:LegionRuntime::HighLevel::Mapper
send_message	legion_runtime/runtime.cc	/^    void MessageManager::send_message(bool complete)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_node	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::send_node(AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
send_node	legion_runtime/region_tree.cc	/^    void IndexPartNode::send_node(AddressSpaceID target, bool up, bool down)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
send_node	legion_runtime/region_tree.cc	/^    void IndexSpaceNode::send_node(AddressSpaceID target, bool up, bool down)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
send_node	legion_runtime/region_tree.cc	/^    void PartitionNode::send_node(AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
send_node	legion_runtime/region_tree.cc	/^    void RegionNode::send_node(AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
send_partition_state	legion_runtime/runtime.cc	/^    void MessageManager::send_partition_state(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_partition_state	legion_runtime/runtime.cc	/^    void Runtime::send_partition_state(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_physical_state	legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_physical_state(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_reduction_manager	legion_runtime/runtime.cc	/^    void MessageManager::send_reduction_manager(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_reduction_manager	legion_runtime/runtime.cc	/^    void Runtime::send_reduction_manager(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_reduction_update	legion_runtime/runtime.cc	/^    void MessageManager::send_reduction_update(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_reduction_update	legion_runtime/runtime.cc	/^    void Runtime::send_reduction_update(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_reduction_view	legion_runtime/runtime.cc	/^    void MessageManager::send_reduction_view(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_reduction_view	legion_runtime/runtime.cc	/^    void Runtime::send_reduction_view(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_region_state	legion_runtime/runtime.cc	/^    void MessageManager::send_region_state(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_region_state	legion_runtime/runtime.cc	/^    void Runtime::send_region_state(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_remote_reference	legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::send_remote_reference(AddressSpaceID sid,$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
send_remote_references	legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_remote_references($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_remote_references	legion_runtime/runtime.cc	/^    void MessageManager::send_remote_references(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_remote_references	legion_runtime/runtime.cc	/^    void Runtime::send_remote_references(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_remote_state	legion_runtime/legion_tasks.cc	/^    void IndexTask::send_remote_state(AddressSpaceID target, UniqueID uid)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
send_remote_state	legion_runtime/legion_tasks.cc	/^    void IndividualTask::send_remote_state(AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
send_remove_distributed_remote	legion_runtime/runtime.cc	/^    void MessageManager::send_remove_distributed_remote(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_remove_distributed_remote	legion_runtime/runtime.cc	/^    void Runtime::send_remove_distributed_remote(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_remove_distributed_resource	legion_runtime/runtime.cc	/^    void MessageManager::send_remove_distributed_resource(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_remove_distributed_resource	legion_runtime/runtime.cc	/^    void Runtime::send_remove_distributed_resource(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_remove_hierarchical_remote	legion_runtime/runtime.cc	/^    void MessageManager::send_remove_hierarchical_remote(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_remove_hierarchical_remote	legion_runtime/runtime.cc	/^    void Runtime::send_remove_hierarchical_remote(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_remove_hierarchical_resource	legion_runtime/runtime.cc	/^    void MessageManager::send_remove_hierarchical_resource(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_remove_hierarchical_resource	legion_runtime/runtime.cc	/^    void Runtime::send_remove_hierarchical_resource(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_request	legion_runtime/lowlevel.cc	/^      static void send_request(gasnet_node_t target, Event event, int delta, Barrier::timestamp_t timestamp, Event wait_on)$/;"	f	struct:LegionRuntime::LowLevel::BarrierAdjustMessage
send_short	legion_runtime/activemsg.cc	/^  void send_short(OutgoingMessage *hdr)$/;"	f	class:ActiveMessageEndpoint
send_slice_remote_commit	legion_runtime/runtime.cc	/^    void MessageManager::send_slice_remote_commit(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_slice_remote_commit	legion_runtime/runtime.cc	/^    void Runtime::send_slice_remote_commit(Processor target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_slice_remote_complete	legion_runtime/runtime.cc	/^    void MessageManager::send_slice_remote_complete(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_slice_remote_complete	legion_runtime/runtime.cc	/^    void Runtime::send_slice_remote_complete(Processor target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_slice_remote_mapped	legion_runtime/runtime.cc	/^    void MessageManager::send_slice_remote_mapped(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_slice_remote_mapped	legion_runtime/runtime.cc	/^    void Runtime::send_slice_remote_mapped(Processor target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_slice_request	legion_runtime/runtime.cc	/^    void MessageManager::send_slice_request(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_slice_request	legion_runtime/runtime.cc	/^    void Runtime::send_slice_request(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_slice_return	legion_runtime/runtime.cc	/^    void MessageManager::send_slice_return(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_slice_return	legion_runtime/runtime.cc	/^    void Runtime::send_slice_return(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_state	legion_runtime/region_tree.cc	/^    DistributedID CompositeView::send_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
send_state	legion_runtime/region_tree.cc	/^    DistributedID MaterializedView::send_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
send_state	legion_runtime/region_tree.cc	/^    DistributedID ReductionView::send_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
send_state	legion_runtime/region_tree.cc	/^    bool PartitionNode::send_state(ContextID ctx, UniqueID uid,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
send_state	legion_runtime/region_tree.cc	/^    bool RegionNode::send_state(ContextID ctx, UniqueID uid, $/;"	f	class:LegionRuntime::HighLevel::RegionNode
send_steal_request	legion_runtime/runtime.cc	/^    void MessageManager::send_steal_request(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_steal_request	legion_runtime/runtime.cc	/^    void Runtime::send_steal_request($/;"	f	class:LegionRuntime::HighLevel::Runtime
send_subscriber	legion_runtime/runtime.cc	/^    void MessageManager::send_subscriber(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_subscriber	legion_runtime/runtime.cc	/^    void Runtime::send_subscriber(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_task	legion_runtime/runtime.cc	/^    void MessageManager::send_task(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_task	legion_runtime/runtime.cc	/^    void Runtime::send_task(Processor target, TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_tasks	legion_runtime/runtime.cc	/^    void Runtime::send_tasks(Processor target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_to	legion_runtime/legion_utilities.h	/^    inline void BitPermutation<BITMASK,LOG2MAX>::send_to(unsigned src,$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
send_tree_shape	legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_tree_shape(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_tree_shape	legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_tree_shape(IndexSpace handle, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_tree_shape	legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_tree_shape(LogicalRegion handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_tree_shape	legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_tree_shape(const IndexSpaceRequirement &req,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_tree_shape	legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_tree_shape(const RegionRequirement &req,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_updates	legion_runtime/region_tree.cc	/^    void CompositeView::send_updates(DistributedID remote_did, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
send_updates	legion_runtime/region_tree.cc	/^    void MaterializedView::send_updates(DistributedID remote_did,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
send_updates	legion_runtime/region_tree.cc	/^    void ReductionView::send_updates(DistributedID remote_did, $/;"	f	class:LegionRuntime::HighLevel::ReductionView
sender	legion_runtime/lowlevel.cc	/^      int sender;$/;"	m	struct:LegionRuntime::LowLevel::ClearTimerRequestArgs	file:
sender	legion_runtime/lowlevel.cc	/^      int sender;$/;"	m	struct:LegionRuntime::LowLevel::RollUpRequestArgs	file:
sender	legion_runtime/lowlevel.cc	/^      int sender;$/;"	m	struct:LegionRuntime::LowLevel::ValidMaskRequestArgs	file:
sender	legion_runtime/lowlevel.cc	/^      unsigned sender;$/;"	m	struct:LegionRuntime::LowLevel::PartialWriteKey	file:
sender	legion_runtime/lowlevel.cc	/^      unsigned sender;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
sender	legion_runtime/lowlevel.cc	/^      unsigned sender;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteArgs	file:
sender	legion_runtime/lowlevel.cc	/^      unsigned sender;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteFenceArgs	file:
sender_thread_loop	legion_runtime/activemsg.cc	/^static void* sender_thread_loop(void *index)$/;"	f	file:
sending_buffer	legion_runtime/runtime.h	/^      char *const sending_buffer;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
sending_buffer_size	legion_runtime/runtime.h	/^      const size_t sending_buffer_size;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
sending_index	legion_runtime/runtime.h	/^      unsigned sending_index;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
sending_threads	legion_runtime/activemsg.cc	/^static pthread_t *sending_threads = 0;$/;"	v	file:
sent_messages	legion_runtime/activemsg.cc	/^  int sent_messages;$/;"	m	class:ActiveMessageEndpoint	file:
sent_remotely	legion_runtime/legion_tasks.h	/^      bool sent_remotely;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
separate_runtime_instances	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::separate_runtime_instances = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
separate_runtime_instances	legion_runtime/runtime.h	/^      static bool separate_runtime_instances;$/;"	m	class:LegionRuntime::HighLevel::Runtime
separatetobefnz	lua_src/lgc.c	/^static void separatetobefnz (lua_State *L, int all) {$/;"	f	file:
sequence_id	legion_runtime/lowlevel.cc	/^      unsigned sequence_id;$/;"	m	struct:LegionRuntime::LowLevel::PartialWriteKey	file:
sequence_id	legion_runtime/lowlevel.cc	/^      unsigned sequence_id;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
sequence_id	legion_runtime/lowlevel.cc	/^      unsigned sequence_id;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteArgs	file:
sequence_id	legion_runtime/lowlevel.cc	/^      unsigned sequence_id;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteFenceArgs	file:
sequence_id	legion_runtime/lowlevel_dma.cc	/^      unsigned sequence_id, num_writes;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
serial_device_ready	dev/serial.c	/^static uint8_t serial_device_ready = 0;$/;"	v	file:
serial_get_irq	dev/serial.c	/^serial_get_irq (void)$/;"	f
serial_init	dev/serial.c	/^serial_init (void) $/;"	f
serial_init_addr	dev/serial.c	/^serial_init_addr (uint16_t io_addr) $/;"	f
serial_io_addr	dev/serial.c	/^uint16_t serial_io_addr = 0;$/;"	v
serial_irq_handler	dev/serial.c	/^serial_irq_handler (excp_entry_t * excp,$/;"	f	file:
serial_lock	dev/serial.c	/^static spinlock_t serial_lock; \/* for SMP *\/$/;"	v	file:
serial_mem_dump	dev/serial.c	/^serial_mem_dump (uint8_t * start, int n)$/;"	f
serial_output_sink	dev/serial.c	/^static struct Output_Sink serial_output_sink;$/;"	v	typeref:struct:Output_Sink	file:
serial_print	dev/serial.c	/^serial_print (const char * format, ...)$/;"	f
serial_print_hex	dev/serial.c	/^serial_print_hex (uchar_t x)$/;"	f
serial_print_level	dev/serial.c	/^uint_t serial_print_level;$/;"	v
serial_print_list	dev/serial.c	/^serial_print_list (const char * format, va_list ap) $/;"	f
serial_printlevel	dev/serial.c	/^serial_printlevel (int level, const char * format, ...) $/;"	f
serial_putchar	dev/serial.c	/^serial_putchar (uchar_t c)$/;"	f
serial_putlnn	dev/serial.c	/^serial_putlnn (const char * line, int len) $/;"	f
serial_puts	dev/serial.c	/^serial_puts( const char *buf)$/;"	f
serial_write	dev/serial.c	/^serial_write (const char *buf) $/;"	f
serialize	legion_runtime/legion_utilities.h	/^    inline void AVXBitMask<MAX>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
serialize	legion_runtime/legion_utilities.h	/^    inline void AVXTLBitMask<MAX>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
serialize	legion_runtime/legion_utilities.h	/^    inline void BitMask<T,MAX,SHIFT,MASK>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
serialize	legion_runtime/legion_utilities.h	/^    inline void SSEBitMask<MAX>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
serialize	legion_runtime/legion_utilities.h	/^    inline void SSETLBitMask<MAX>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
serialize	legion_runtime/legion_utilities.h	/^    inline void Serializer::serialize(const T &element)$/;"	f	class:LegionRuntime::HighLevel::Serializer
serialize	legion_runtime/legion_utilities.h	/^    inline void Serializer::serialize(const void *src, size_t bytes)$/;"	f	class:LegionRuntime::HighLevel::Serializer
serialize	legion_runtime/legion_utilities.h	/^    inline void Serializer::serialize<FieldMask>(const FieldMask &mask)$/;"	f	class:LegionRuntime::HighLevel::Serializer
serialize	legion_runtime/legion_utilities.h	/^    inline void Serializer::serialize<bool>(const bool &element)$/;"	f	class:LegionRuntime::HighLevel::Serializer
serialize	legion_runtime/legion_utilities.h	/^    inline void TLBitMask<T,MAX,SHIFT,MASK>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
serialize	legion_runtime/lowlevel.h	/^      IDType *serialize(IDType *data) const$/;"	f	class:LegionRuntime::LowLevel::Domain
serialize	legion_runtime/lowlevel.h	/^      void serialize(int *data) const$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
serialize	legion_runtime/lowlevel_dma.cc	/^    size_t CopyRequest::serialize(void *buffer, size_t maxlen)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
serialize	legion_runtime/lowlevel_dma.cc	/^    size_t ReduceRequest::serialize(void *buffer, size_t maxlen)$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
serialize_mapping	legion_runtime/arrays.h	/^      virtual void serialize_mapping(int *data) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
set	legion_runtime/activemsg.h	/^  void set(T newval)$/;"	f	struct:HandlerReplyFuture
set	legion_runtime/legion_allocation.h	/^      typedef std::set<T, std::less<T>, LegionAllocator<T, A> > set;$/;"	t	struct:LegionRuntime::HighLevel::LegionContainer
set2	lua_src/ltablib.c	/^static void set2 (lua_State *L, int i, int j) {$/;"	f	file:
setICs	test/hpcg/hpcg-problem.cc	/^Problem::setICs(lgncg::SparseMatrix &A,$/;"	f	class:Problem
setICsTask	test/hpcg/hpcg-problem.cc	/^setICsTask($/;"	f
setInitialConds	test/hpcg/hpcg-problem.h	/^    setInitialConds(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:Problem
set_adjacent	legion_runtime/rectangle_set.h	/^    \/*static*\/ inline void RectangleSet<T,DISCRETE>::set_adjacent($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
set_adjacent	legion_runtime/rectangle_set.h	/^    inline void Segment<T>::set_adjacent(Segment<T> *one, Segment<T> *two)$/;"	f	class:LegionRuntime::HighLevel::Segment
set_bit	legion_runtime/legion_utilities.h	/^    inline void AVXBitMask<MAX>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
set_bit	legion_runtime/legion_utilities.h	/^    inline void AVXTLBitMask<MAX>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
set_bit	legion_runtime/legion_utilities.h	/^    inline void BitMask<T,MAX,SHIFT,MASK>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::BitMask
set_bit	legion_runtime/legion_utilities.h	/^    inline void SSEBitMask<MAX>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
set_bit	legion_runtime/legion_utilities.h	/^    inline void SSETLBitMask<MAX>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
set_bit	legion_runtime/legion_utilities.h	/^    inline void TLBitMask<T,MAX,SHIFT,MASK>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
set_edge	legion_runtime/legion_utilities.h	/^    inline void BitPermutation<BITMASK,LOG2MAX>::set_edge(unsigned src,$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
set_env	lua_src/loadlib.c	/^static void set_env (lua_State *L) {$/;"	f	file:
set_executing_processor	legion_runtime/legion_tasks.h	/^      inline void set_executing_processor(Processor p)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
set_future	legion_runtime/legion_ops.cc	/^    void MustEpochOp::set_future(const DomainPoint &point, const void *result, $/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
set_group_members	legion_runtime/lowlevel.cc	/^    void ProcessorGroup::set_group_members(const std::vector<Processor>& member_list)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
set_impl	legion_runtime/lowlevel.h	/^      void set_impl(void *impl)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
set_irq_vector	nautilus/irq.c	/^set_irq_vector (uint8_t irq, uint8_t vector)$/;"	f	file:
set_local_data	legion_runtime/lowlevel_impl.h	/^      void set_local_data(T *data)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
set_magic	legion_runtime/activemsg.h	/^  void set_magic(void) {$/;"	f	struct:BaseMedium
set_max_profiling_samples	legion_runtime/mapping_utilities.cc	/^      void MappingProfiler::set_max_profiling_samples(unsigned max)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
set_must_epoch	legion_runtime/legion_ops.cc	/^    void Operation::set_must_epoch(MustEpochOp *epoch, unsigned index)$/;"	f	class:LegionRuntime::HighLevel::Operation
set_needed_profiling_samples	legion_runtime/mapping_utilities.cc	/^      void MappingProfiler::set_needed_profiling_samples(unsigned num_samples)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
set_no_free_did	legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::set_no_free_did(void)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
set_osxsave	nautilus/fpu.c	/^set_osxsave (void)$/;"	f	file:
set_payload	legion_runtime/activemsg.cc	/^void OutgoingMessage::set_payload(PayloadSource *_payload_src,$/;"	f	class:OutgoingMessage
set_point	legion_runtime/legion.cc	/^    void ArgumentMap::set_point(const DomainPoint &point, $/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
set_point	legion_runtime/runtime.cc	/^    void ArgumentMap::Impl::set_point(const DomainPoint &point, $/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
set_point_arg	legion_runtime/legion.h	/^    inline void ArgumentMap::set_point_arg(const PT point[DIM], $/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
set_predicate_false_future	legion_runtime/legion.h	/^    inline void IndexLauncher::set_predicate_false_future(Future f)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
set_predicate_false_future	legion_runtime/legion.h	/^    inline void TaskLauncher::set_predicate_false_future(Future f)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
set_predicate_false_result	legion_runtime/legion.h	/^    inline void IndexLauncher::set_predicate_false_result(TaskArgument arg)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
set_predicate_false_result	legion_runtime/legion.h	/^    inline void TaskLauncher::set_predicate_false_result(TaskArgument arg)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
set_privileges	legion_runtime/accessor.h	/^          inline void set_privileges(AccessorPrivilege p) $/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Typed
set_privileges	legion_runtime/accessor.h	/^          inline void set_privileges(AccessorPrivilege p) { priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
set_privileges	legion_runtime/accessor.h	/^          inline void set_privileges(AccessorPrivilege p) { this->priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
set_privileges	legion_runtime/accessor.h	/^          inline void set_privileges(AccessorPrivilege p) { this->priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
set_privileges	legion_runtime/accessor.h	/^          inline void set_privileges(AccessorPrivilege p) { this->priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
set_privileges	legion_runtime/accessor.h	/^        inline void set_privileges(AccessorPrivilege p) $/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Typed
set_privileges_untyped	legion_runtime/accessor.h	/^          inline void set_privileges_untyped(AccessorPrivilege p) $/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
set_privileges_untyped	legion_runtime/accessor.h	/^          inline void set_privileges_untyped(AccessorPrivilege p) { priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
set_privileges_untyped	legion_runtime/accessor.h	/^          inline void set_privileges_untyped(AccessorPrivilege p) { priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
set_privileges_untyped	legion_runtime/accessor.h	/^          inline void set_privileges_untyped(AccessorPrivilege p) { priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
set_privileges_untyped	legion_runtime/accessor.h	/^          inline void set_privileges_untyped(AccessorPrivilege p) { priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
set_raw	legion_runtime/lowlevel.cc	/^    void ElementMask::set_raw(const void *data)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
set_raw	legion_runtime/shared_lowlevel.cc	/^    void ElementMask::set_raw(const void *data)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
set_region	legion_runtime/accessor.h	/^          inline void set_region(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
set_region	legion_runtime/accessor.h	/^          inline void set_region(void *r) { this->region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
set_region	legion_runtime/accessor.h	/^          inline void set_region(void *r) { this->region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
set_region	legion_runtime/accessor.h	/^          inline void set_region(void *r) { this->template region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
set_region	legion_runtime/accessor.h	/^          inline void set_region(void *r) { this->template region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Typed
set_region	legion_runtime/accessor.h	/^        inline void set_region(void *r) { this->template region = r; } $/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Typed
set_region_untpyed	legion_runtime/accessor.h	/^          inline void set_region_untpyed(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
set_region_untyped	legion_runtime/accessor.h	/^          inline void set_region_untyped(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
set_region_untyped	legion_runtime/accessor.h	/^          inline void set_region_untyped(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
set_region_untyped	legion_runtime/accessor.h	/^          inline void set_region_untyped(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
set_region_untyped	legion_runtime/accessor.h	/^          inline void set_region_untyped(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
set_region_untyped	legion_runtime/accessor.h	/^          inline void set_region_untyped(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
set_registration_callback	legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::set_registration_callback($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
set_registration_callback	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::set_registration_callback($/;"	f	class:LegionRuntime::HighLevel::Runtime
set_resolved_value	legion_runtime/legion_ops.cc	/^    void Predicate::Impl::set_resolved_value(GenerationID pred_gen, bool value)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
set_result	legion_runtime/runtime.cc	/^    void Future::Impl::set_result(const void *args, size_t arglen, bool own)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
set_task_options	legion_runtime/legion_ops.cc	/^    void MustEpochOp::set_task_options(ProcessorManager *manager)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
set_top_level_task_id	legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::set_top_level_task_id($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
set_top_level_task_id	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::set_top_level_task_id($/;"	f	class:LegionRuntime::HighLevel::Runtime
set_trace	legion_runtime/legion_ops.cc	/^    void Operation::set_trace(LegionTrace *t)$/;"	f	class:LegionRuntime::HighLevel::Operation
set_untyped_privileges	legion_runtime/accessor.h	/^          inline void set_untyped_privileges(AccessorPrivilege p) $/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
set_utility_processor	legion_runtime/lowlevel.cc	/^    void Processor::Impl::set_utility_processor(UtilityProcessor *_util_proc)$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
setarrayvector	lua_src/ltable.c	/^static void setarrayvector (lua_State *L, Table *t, int size) {$/;"	f	file:
setb	nautilus/mm/buddy.c	/^static inline void setb(ulong_t nr, volatile char *addr)$/;"	f	file:
setboolfield	lua_src/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
seterrorobj	lua_src/ldo.c	/^static void seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f	file:
setfield	lua_src/loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setlocale	nautilus/libccompat.c	/^char *setlocale (int category, const char *locale)$/;"	f
setnodevector	lua_src/ltable.c	/^static void setnodevector (lua_State *L, Table *t, int size) {$/;"	f	file:
setpath	lua_src/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname, const char *envname1,$/;"	f	file:
setpause	lua_src/lgc.c	/^static void setpause (global_State *g, l_mem estimate) {$/;"	f	file:
setprogdir	lua_src/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setprogdir	lua_src/loadlib.c	105;"	d	file:
setprogdir	lua_src/loadlib.c	158;"	d	file:
settabsb	lua_src/ldblib.c	/^static void settabsb (lua_State *L, const char *i, int v) {$/;"	f	file:
settabsi	lua_src/ldblib.c	/^static void settabsi (lua_State *L, const char *i, int v) {$/;"	f	file:
settabss	lua_src/ldblib.c	/^static void settabss (lua_State *L, const char *i, const char *v) {$/;"	f	file:
setupHalo	test/hpcg/setup-halo.h	/^setupHalo(SparseMatrix &A,$/;"	f	namespace:lgncg
setupHaloTask	test/hpcg/setup-halo.h	/^setupHaloTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
setup_idt	nautilus/idt.c	/^setup_idt (void)$/;"	f
setvbuf	nautilus/libccompat.c	/^int setvbuf(FILE *restrict stream, char *restrict buf, int type,$/;"	f
sfi_fill_attrs	nautilus/sfi.c	/^sfi_fill_attrs (char * str, uint64_t attr)$/;"	f	file:
sfi_find_syst	nautilus/sfi.c	/^sfi_find_syst (void)$/;"	f
sfi_get_mmap	nautilus/sfi.c	/^sfi_get_mmap (void) $/;"	f
sfi_get_mmap_nentries	nautilus/sfi.c	/^sfi_get_mmap_nentries (struct sfi_mmap_tbl * tbl)$/;"	f
sfi_parse_phys_mem	nautilus/sfi.c	/^sfi_parse_phys_mem (struct nk_mem_info * mem)$/;"	f
sfi_parse_syst	nautilus/sfi.c	/^sfi_parse_syst (struct sys_info * sys, struct sfi_sys_tbl * sfi)$/;"	f
sgb	test/hpcg/vector.h	/^    sgb(size_t index = 0) const$/;"	f	struct:lgncg::Vector
shared_memory	legion_runtime/alt_mappers.h	/^      Memory shared_memory;$/;"	m	class:LegionRuntime::HighLevel::SharedMapper
sheep_and_goats	legion_runtime/legion_utilities.h	/^    inline BITMASK BitPermutation<BITMASK,LOG2MAX>::sheep_and_goats($/;"	f	class:LegionRuntime::HighLevel::BitPermutation
shell	nautilus/shell.c	/^static void shell(void *in, void **out)$/;"	f	file:
show_event_waiters	legion_runtime/lowlevel.cc	/^    void show_event_waiters(FILE *f = stdout)$/;"	f	namespace:LegionRuntime::LowLevel
shr_nodes	test/circuit.h	/^  LogicalPartition pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:Partitions
shr_nodes	test/circuit.h	/^  LogicalRegion pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:CircuitPiece
shutdown	legion_runtime/lowlevel.cc	/^    void Machine::shutdown(bool local_request \/*= true*\/)$/;"	f	class:LegionRuntime::LowLevel::Machine
shutdown	legion_runtime/shared_lowlevel.cc	/^	bool shutdown;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
shutdown	legion_runtime/shared_lowlevel.cc	/^    void DMAQueue::shutdown(void)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
shutdown	legion_runtime/shared_lowlevel.cc	/^    void Machine::shutdown(bool local_request \/*= true*\/)$/;"	f	class:LegionRuntime::LowLevel::Machine
shutdown_counter	legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::shutdown_counter = 0;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
shutdown_counter	legion_runtime/runtime.h	/^      static unsigned shutdown_counter;$/;"	m	class:LegionRuntime::HighLevel::Runtime
shutdown_event	legion_runtime/lowlevel.cc	/^      Event shutdown_event;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
shutdown_flag	legion_runtime/lowlevel_dma.cc	/^      bool shutdown_flag;$/;"	m	class:LegionRuntime::LowLevel::DmaRequestQueue	file:
shutdown_info	arch/hrt/shutdown.c	/^struct shutdown_info {$/;"	s	file:
shutdown_info	arch/x64/shutdown.c	/^struct shutdown_info {$/;"	s	file:
shutdown_ok	arch/hrt/shutdown.c	/^    uint8_t shutdown_ok;$/;"	m	struct:shutdown_info	file:
shutdown_ok	arch/x64/shutdown.c	/^    uint8_t shutdown_ok;$/;"	m	struct:shutdown_info	file:
shutdown_queue	legion_runtime/lowlevel_dma.cc	/^    void DmaRequestQueue::shutdown_queue(void)$/;"	f	class:LegionRuntime::LowLevel::DmaRequestQueue
shutdown_requested	legion_runtime/lowlevel.cc	/^      bool init_done, shutdown_requested;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
shutdown_requested	legion_runtime/lowlevel_gpu.cc	/^      bool shutdown_requested;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
shutdown_requested	legion_runtime/lowlevel_impl.h	/^      bool shutdown_requested;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
shutdown_runtime	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::shutdown_runtime($/;"	f	class:LegionRuntime::HighLevel::Runtime
shutdown_trigger	legion_runtime/shared_lowlevel.cc	/^	EventImpl *shutdown_trigger;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
sigabrt_catch	legion_runtime/lowlevel.cc	/^    void sigabrt_catch(int signal) {$/;"	f	namespace:LegionRuntime::LowLevel
sign	nautilus/libccompat.c	/^        uint32_t sign      :1;$/;"	m	struct:ieee754dbl::__anon44	file:
signal	nautilus/libccompat.c	/^void (*signal(int sig, void (*func)(int)))(int ){$/;"	f
sigterm_catch	legion_runtime/lowlevel.cc	/^    void sigterm_catch(int signal) {$/;"	f	namespace:LegionRuntime::LowLevel
simple_guess_base	nautilus/printk.c	/^static unsigned int simple_guess_base(const char *cp)$/;"	f	file:
simple_strtol	nautilus/printk.c	/^long simple_strtol(const char *cp, char **endp, unsigned int base)$/;"	f
simple_strtoll	nautilus/printk.c	/^long long simple_strtoll(const char *cp, char **endp, unsigned int base)$/;"	f
simple_strtoul	nautilus/printk.c	/^unsigned long simple_strtoul(const char *cp, char **endp, unsigned int base)$/;"	f
simple_strtoull	nautilus/printk.c	/^unsigned long long simple_strtoull(const char *cp, char **endp, unsigned int base)$/;"	f
simpleexp	lua_src/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
simultaneous_checked	legion_runtime/legion_tasks.h	/^      bool simultaneous_checked, has_simultaneous;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
sin	nautilus/libccompat.c	/^double sin(double x)$/;"	f
single_children	legion_runtime/field_tree.h	/^      std::set<FieldTree<UT>*> single_children;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
single_index	legion_runtime/field_tree.h	/^      const unsigned single_index;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
single_node	legion_runtime/field_tree.h	/^      const bool single_node;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
single_task	legion_runtime/legion.h	/^        bool single_task; \/**< supports single tasks*\/$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
single_task	legion_runtime/legion_logging.h	/^        bool single_task;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
single_tasks	legion_runtime/legion.h	/^      std::vector<TaskLauncher> single_tasks;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochLauncher
single_tasks	legion_runtime/legion_ops.h	/^      std::set<SingleTask*>        single_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
single_users	legion_runtime/field_tree.h	/^      std::list<std::pair<UT,unsigned> > single_users;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
singlematch	lua_src/lstrlib.c	/^static int singlematch (MatchState *ms, const char *s, const char *p,$/;"	f	file:
singlestep	lua_src/lgc.c	/^static lu_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	lua_src/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	lua_src/lparser.c	/^static int singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
sinh	nautilus/libccompat.c	/^double sinh(double x)$/;"	f
siphon_logical_children	legion_runtime/region_tree.cc	/^    bool RegionTreeNode::siphon_logical_children(LogicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
siphon_physical_children	legion_runtime/region_tree.cc	/^    bool RegionTreeNode::siphon_physical_children(PhysicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
siphon_physical_children	legion_runtime/region_tree.cc	/^    void RegionTreeNode::siphon_physical_children(CompositeCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
size	acpi/acpica/aclocal.h	/^	u32 size;		\/* bytelist or field size *\/$/;"	m	union:acpi_parse_value
size	legion_runtime/activemsg.cc	/^  size_t size;$/;"	m	class:ContiguousPayload	file:
size	legion_runtime/activemsg.cc	/^  size_t size;$/;"	m	class:SpanPayload	file:
size	legion_runtime/lowlevel.cc	/^      size_t size;$/;"	m	struct:LegionRuntime::LowLevel::RemoteMemAllocArgs	file:
size	legion_runtime/lowlevel.cc	/^      unsigned wptr, rptr, size;$/;"	m	class:LegionRuntime::LowLevel::AMQueue	file:
size	legion_runtime/lowlevel.h	/^	unsigned offset, size;$/;"	m	struct:LegionRuntime::LowLevel::Domain::CopySrcDstField
size	legion_runtime/lowlevel_dma.cc	/^      unsigned src_offset, dst_offset, size;$/;"	m	struct:LegionRuntime::LowLevel::OffsetsAndSize	file:
size	legion_runtime/lowlevel_impl.h	/^	size_t size;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
size	legion_runtime/lowlevel_impl.h	/^      size_t size;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
size	legion_runtime/region_tree.cc	/^    size_t LegionStack<T,MAX_SIZE,INC_SIZE>::size(void) const$/;"	f	class:LegionRuntime::HighLevel::LegionStack
size	lua_src/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
size	test/hpcg/geometry.h	/^    int64_t size;$/;"	m	struct:lgncg::Geometry
size_type	legion_runtime/legion_allocation.h	/^      typedef size_t          size_type;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
sizeof_lhs	legion_runtime/lowlevel.h	/^      size_t sizeof_lhs;$/;"	m	class:LegionRuntime::LowLevel::ReductionOpUntyped
sizeof_list_entry	legion_runtime/lowlevel.h	/^      size_t sizeof_list_entry;$/;"	m	class:LegionRuntime::LowLevel::ReductionOpUntyped
sizeof_rhs	legion_runtime/lowlevel.h	/^      size_t sizeof_rhs;$/;"	m	class:LegionRuntime::LowLevel::ReductionOpUntyped
sizes	legion_runtime/lowlevel_dma.cc	/^	std::vector<size_t> sizes;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
sizes	legion_runtime/lowlevel_dma.cc	/^	std::vector<size_t> sizes;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
skipBOM	lua_src/lauxlib.c	/^static int skipBOM (LoadF *lf) {$/;"	f	file:
skip_atoi	nautilus/printk.c	/^static int skip_atoi(const char **s)$/;"	f	file:
skip_field	acpi/acpica/aclocal.h	/^	u8 skip_field;$/;"	m	struct:acpi_field_info
skip_sep	lua_src/llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	file:
skipcomment	lua_src/lauxlib.c	/^static int skipcomment (LoadF *lf, int *cp) {$/;"	f	file:
skipnoopstat	lua_src/lparser.c	/^static void skipnoopstat (LexState *ls) {$/;"	f	file:
sleep_on_event	legion_runtime/lowlevel.cc	/^	virtual void sleep_on_event(Event wait_for, bool block = false)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
sleep_on_event	legion_runtime/lowlevel.cc	/^      void sleep_on_event(Event wait_for, bool block = false)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
sleep_on_event	legion_runtime/lowlevel_dma.cc	/^    void DmaRequest::Waiter::sleep_on_event(Event e, $/;"	f	class:LegionRuntime::LowLevel::DmaRequest::Waiter
slice	legion_runtime/legion_tasks.h	/^        SliceTask *slice;$/;"	m	struct:LegionRuntime::HighLevel::DeferredSlicer::DeferredSliceArgs
slice_domain	legion_runtime/default_mapper.cc	/^    void DefaultMapper::slice_domain(const Task *task, const Domain &domain,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
slice_domain	test/circuit_mapper.cc	/^void CircuitMapper::slice_domain(const Task *task, const Domain &domain,$/;"	f	class:CircuitMapper
slice_domain	test/custom_mapper.cc	/^void AdversarialMapper::slice_domain(const Task *task, const Domain &domain,$/;"	f	class:AdversarialMapper
slice_fraction	legion_runtime/legion_tasks.h	/^      Fraction<long long> slice_fraction;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
slice_id	legion_runtime/legion_logging.h	/^        UniqueID slice_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSlice
slice_id	legion_runtime/legion_logging.h	/^        UniqueID slice_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSlicePoint
slice_index_space	legion_runtime/legion_tasks.cc	/^    bool MultiTask::slice_index_space(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
slice_lock	legion_runtime/legion_tasks.h	/^      Reservation slice_lock;$/;"	m	class:LegionRuntime::HighLevel::DeferredSlicer
slice_owner	legion_runtime/legion_tasks.h	/^      SliceTask *slice_owner;$/;"	m	class:LegionRuntime::HighLevel::PointTask
slice_parent	legion_runtime/legion_logging.h	/^        UniqueID slice_parent;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSliceSlice
slice_subslice	legion_runtime/legion_logging.h	/^        UniqueID slice_subslice;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSliceSlice
slice_task_lock	legion_runtime/runtime.h	/^      Reservation slice_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
slice_tasks	legion_runtime/legion_ops.h	/^      std::set<SliceTask*>         slice_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
sliced	legion_runtime/legion_tasks.h	/^      bool sliced;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
slicer	legion_runtime/legion_tasks.h	/^        DeferredSlicer *slicer;$/;"	m	struct:LegionRuntime::HighLevel::DeferredSlicer::DeferredSliceArgs
slices	legion_runtime/legion_tasks.h	/^      std::list<SliceTask*> slices;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
slp_en	arch/hrt/shutdown.c	/^    uint16_t  slp_en;$/;"	m	struct:shutdown_info	file:
slp_en	arch/x64/shutdown.c	/^    uint16_t  slp_en;$/;"	m	struct:shutdown_info	file:
slp_typa	arch/hrt/shutdown.c	/^    uint16_t  slp_typa;$/;"	m	struct:shutdown_info	file:
slp_typa	arch/x64/shutdown.c	/^    uint16_t  slp_typa;$/;"	m	struct:shutdown_info	file:
slp_typb	arch/hrt/shutdown.c	/^    uint16_t  slp_typb;$/;"	m	struct:shutdown_info	file:
slp_typb	arch/x64/shutdown.c	/^    uint16_t  slp_typb;$/;"	m	struct:shutdown_info	file:
smi_cmd	arch/hrt/shutdown.c	/^    uint32_t  smi_cmd;$/;"	m	struct:shutdown_info	file:
smi_cmd	arch/x64/shutdown.c	/^    uint32_t  smi_cmd;$/;"	m	struct:shutdown_info	file:
smp_ap_entry	nautilus/smp.c	/^smp_ap_entry (struct cpu * core) $/;"	f
smp_ap_finish	nautilus/smp.c	/^smp_ap_finish (struct cpu * core)$/;"	f	file:
smp_ap_setup	nautilus/smp.c	/^smp_ap_setup (struct cpu * core)$/;"	f	file:
smp_bringup_aps	nautilus/smp.c	/^smp_bringup_aps (struct naut_info * naut)$/;"	f
smp_core_count	nautilus/smp.c	/^static volatile unsigned smp_core_count = 1; \/\/ assume BSP is booted$/;"	v	file:
smp_early_init	nautilus/smp.c	/^smp_early_init (struct naut_info * naut)$/;"	f
smp_setup_xcall_bsp	nautilus/smp.c	/^smp_setup_xcall_bsp (struct cpu * core)$/;"	f
smp_wait_for_ap	nautilus/smp.c	/^smp_wait_for_ap (struct naut_info * naut, unsigned int core_num)$/;"	f	file:
smp_xcall	nautilus/smp.c	/^smp_xcall (cpu_id_t cpu_id, $/;"	f
smp_xcall_init_queue	nautilus/smp.c	/^smp_xcall_init_queue (struct cpu * core)$/;"	f	file:
snprintf	nautilus/printk.c	/^int snprintf(char * buf, size_t size, const char *fmt, ...)$/;"	f
solv	test/hpcg/cg.h	/^solv(SparseMatrix &A,$/;"	f	namespace:lgncg::cg
sort	lua_src/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sort_comp	lua_src/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
sort_copy_instances	legion_runtime/region_tree.cc	/^    void RegionTreeNode::sort_copy_instances(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
sort_memories	legion_runtime/mapping_utilities.cc	/^      \/*static*\/ void MachineQueryInterface::sort_memories(Machine *machine, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
source	legion_runtime/region_tree.h	/^      const AddressSpaceID source;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
source_object	acpi/acpica/aclocal.h	/^	union acpi_operand_object *source_object;$/;"	m	struct:acpi_pkg_state	typeref:union:acpi_pkg_state::acpi_operand_object
source_space	legion_runtime/runtime.h	/^        AddressSpace source_space;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::MPIRankArgs
sources	legion_runtime/shared_lowlevel.cc	/^	unsigned sources;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
space	legion_runtime/legion_logging.h	/^        IndexSpace space;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopIndexSpace
span_copier	legion_runtime/lowlevel_dma.cc	/^      T *span_copier;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
span_count	legion_runtime/lowlevel.cc	/^	int span_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
span_count	legion_runtime/lowlevel_dma.cc	/^	int span_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
span_time	legion_runtime/lowlevel_dma.cc	/^      unsigned long long span_time;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
spans	legion_runtime/activemsg.cc	/^  SpanList spans;$/;"	m	class:SpanPayload	file:
spawn	legion_runtime/lowlevel.cc	/^    Event Processor::spawn(TaskFuncID func_id, const void *args, size_t arglen,$/;"	f	class:LegionRuntime::LowLevel::Processor
spawn	legion_runtime/shared_lowlevel.cc	/^    Event Processor::spawn(Processor::TaskFuncID func_id, const void * args,$/;"	f	class:LegionRuntime::LowLevel::Processor
spawn	legion_runtime/shared_lowlevel.cc	/^    Event ProcessorGroup::spawn(Processor::TaskFuncID func_id, const void * args,$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
spawn	legion_runtime/shared_lowlevel.cc	/^    Event ProcessorImpl::spawn(Processor::TaskFuncID func_id, const void * args,$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
spawn_child_task	legion_runtime/alt_mappers.cc	/^    bool DebugMapper::spawn_child_task(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::DebugMapper
spawn_child_task	legion_runtime/alt_mappers.cc	/^    bool SequoiaMapper::spawn_child_task(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::SequoiaMapper
spawn_task	legion_runtime/legion.h	/^      bool                                spawn_task;$/;"	m	class:LegionRuntime::HighLevel::Task
spawn_task	legion_runtime/lowlevel.cc	/^      virtual void spawn_task(Processor::TaskFuncID func_id,$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
spawn_task	legion_runtime/lowlevel.cc	/^      virtual void spawn_task(Processor::TaskFuncID func_id,$/;"	f	class:LegionRuntime::LowLevel::RemoteProcessor
spawn_task	legion_runtime/lowlevel.cc	/^    \/*virtual*\/ void ProcessorGroup::spawn_task(Processor::TaskFuncID func_id,$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
spawn_task	legion_runtime/lowlevel.cc	/^    \/*virtual*\/ void UtilityProcessor::spawn_task(Processor::TaskFuncID func_id,$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
spawn_task	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::spawn_task(Processor::TaskFuncID func_id,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
spawn_task	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::spawn_task(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
spec	legion_runtime/utilities.h	/^    mach_timespec_t spec;$/;"	m	class:LegionRuntime::TimeStamp
spec	legion_runtime/utilities.h	/^    struct timespec spec;$/;"	m	class:LegionRuntime::TimeStamp	typeref:struct:LegionRuntime::TimeStamp::timespec
speculate	legion_runtime/legion_ops.cc	/^    bool AcquireOp::speculate(bool &value)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
speculate	legion_runtime/legion_ops.cc	/^    bool CopyOp::speculate(bool &value)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
speculate	legion_runtime/legion_ops.cc	/^    bool ReleaseOp::speculate(bool &value)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
speculate	legion_runtime/legion_tasks.cc	/^    bool TaskOp::speculate(bool &value)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
speculate_on_predicate	legion_runtime/default_mapper.cc	/^    bool DefaultMapper::speculate_on_predicate(const Mappable *mappable, $/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
speculate_on_predicate	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::speculate_on_predicate(MappingTagID tag, $/;"	f	class:LegionRuntime::HighLevel::ShimMapper
speculate_on_predicate	legion_runtime/shim_mapper.cc	/^    bool ShimMapper::speculate_on_predicate(const Mappable *m, bool &spec_value)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
speculated	legion_runtime/legion.h	/^      bool                                speculated;$/;"	m	class:LegionRuntime::HighLevel::Task
speculation_state	legion_runtime/legion_ops.h	/^      SpecState    speculation_state;$/;"	m	class:LegionRuntime::HighLevel::SpeculativeOp
spew	legion_runtime/utilities.h	/^      inline void spew(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
spin_lock_irq_save_nopause	nautilus/spinlock.c	/^spin_lock_irq_save_nopause (volatile spinlock_t * lock)$/;"	f
spin_lock_nopause	nautilus/spinlock.c	/^spin_lock_nopause (volatile spinlock_t * lock)$/;"	f
spinlock_deinit	nautilus/spinlock.c	/^spinlock_deinit (volatile spinlock_t * lock) $/;"	f
spinlock_init	nautilus/spinlock.c	/^spinlock_init (volatile spinlock_t * lock) $/;"	f
split_segment	legion_runtime/rectangle_set.h	/^    \/*static*\/ void RectangleSet<T,DISCRETE>::split_segment(Segment<T> *segment,$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
splitting_factor	legion_runtime/default_mapper.h	/^      unsigned splitting_factor;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
spmv	test/hpcg/comp-spmv.h	/^spmv(const SparseMatrix &A,$/;"	f	namespace:lgncg
spmvTask	test/hpcg/comp-spmv.h	/^spmvTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
spmvTaskArgs	test/hpcg/comp-spmv.h	/^    spmvTaskArgs(int64_t nCols) : nCols(nCols) { ; }$/;"	f	struct:__anon31::spmvTaskArgs
spmvTaskArgs	test/hpcg/comp-spmv.h	/^struct spmvTaskArgs {$/;"	s	namespace:__anon31
sprintf	nautilus/printk.c	/^int sprintf(char * buf, const char *fmt, ...)$/;"	f
spur_int_handler	dev/apic.c	/^spur_int_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
sqrt	nautilus/libccompat.c	/^double sqrt(double x)$/;"	f
srand	nautilus/libccompat.c	/^srand (unsigned int seed)$/;"	f
srand48	nautilus/libccompat.c	/^srand48 (long int seedval)$/;"	f
srat_rev	arch/x64/numa.c	/^static int srat_rev;$/;"	v	file:
src	legion_runtime/lowlevel_dma.cc	/^      GPUProcessor *src, *dst;$/;"	m	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier	file:
src	legion_runtime/lowlevel_gpu.cc	/^      const void *src;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy1D	file:
src	legion_runtime/lowlevel_gpu.cc	/^      const void *src;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
src_acc	legion_runtime/lowlevel_dma.cc	/^      RegionAccessor<AccessorType::Generic> src_acc;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier	file:
src_base	legion_runtime/lowlevel.cc	/^	const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
src_base	legion_runtime/lowlevel_dma.cc	/^	const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
src_base	legion_runtime/lowlevel_dma.cc	/^      const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier	file:
src_base	legion_runtime/lowlevel_dma.cc	/^      const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier	file:
src_base	legion_runtime/lowlevel_dma.cc	/^      const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::MemcpyMemPairCopier	file:
src_base	legion_runtime/lowlevel_dma.cc	/^      const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
src_base	legion_runtime/shared_lowlevel.cc	/^        const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
src_base	legion_runtime/shared_lowlevel.cc	/^        const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply	file:
src_base	legion_runtime/shared_lowlevel.cc	/^        const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopFold	file:
src_buffer	legion_runtime/lowlevel_dma.cc	/^      char *src_buffer;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
src_end	lua_src/lstrlib.c	/^  const char *src_end;  \/* end ('\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	lua_src/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
src_inst	legion_runtime/lowlevel_dma.cc	/^      RegionInstance::Impl *src_inst;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
src_instance	legion_runtime/legion_logging.h	/^        PhysicalInstance src_instance;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
src_mapping_paths	legion_runtime/legion_ops.h	/^      std::vector<RegionTreePath> src_mapping_paths; $/;"	m	class:LegionRuntime::HighLevel::CopyOp
src_mask	legion_runtime/shared_lowlevel.cc	/^          const ElementMask &src_mask;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2	file:
src_mem	legion_runtime/lowlevel.cc	/^	Memory::Impl *src_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
src_mem	legion_runtime/lowlevel.cc	/^	Memory::Impl *src_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
src_mem	legion_runtime/lowlevel_dma.cc	/^	GASNetMemory *src_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
src_mem	legion_runtime/lowlevel_dma.cc	/^	Memory::Impl *src_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
src_mem	legion_runtime/lowlevel_dma.cc	/^	Memory::Impl *src_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
src_mem	legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::BufferedMemPairCopier	file:
src_mem	legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
src_mem	legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
src_offset	legion_runtime/lowlevel.cc	/^	off_t src_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
src_offset	legion_runtime/lowlevel.cc	/^	off_t src_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
src_offset	legion_runtime/lowlevel_dma.cc	/^	off_t src_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
src_offset	legion_runtime/lowlevel_dma.cc	/^	off_t src_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
src_offset	legion_runtime/lowlevel_dma.cc	/^	off_t src_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
src_offset	legion_runtime/lowlevel_dma.cc	/^      unsigned src_offset, dst_offset, size;$/;"	m	struct:LegionRuntime::LowLevel::OffsetsAndSize	file:
src_privilege_paths	legion_runtime/legion_ops.h	/^      std::vector<RegionTreePath> src_privilege_paths;$/;"	m	class:LegionRuntime::HighLevel::CopyOp
src_ptr	legion_runtime/lowlevel.cc	/^	const char *src_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
src_ptr	legion_runtime/lowlevel.cc	/^	const char *src_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
src_ptr	legion_runtime/lowlevel_dma.cc	/^	const char *src_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
src_ptr	legion_runtime/lowlevel_dma.cc	/^	const char *src_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
src_ptr	legion_runtime/lowlevel_dma.cc	/^	const char *src_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
src_requirements	legion_runtime/legion.h	/^      std::vector<RegionRequirement>    src_requirements;$/;"	m	class:LegionRuntime::HighLevel::Copy
src_requirements	legion_runtime/legion.h	/^      std::vector<RegionRequirement>  src_requirements;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
src_size	legion_runtime/lowlevel_dma.cc	/^      std::vector<int> src_size;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
src_spans	legion_runtime/lowlevel_dma.cc	/^	SpanList src_spans;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteMemPairCopier::PendingGather	file:
src_start	legion_runtime/lowlevel_dma.cc	/^      std::vector<off_t> src_start;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
src_stride	legion_runtime/lowlevel_gpu.cc	/^      off_t dst_stride, src_stride;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
srcdatapool	legion_runtime/activemsg.cc	/^static SrcDataPool *srcdatapool = 0;$/;"	v	file:
srcptr	legion_runtime/activemsg.cc	/^  const void *srcptr;$/;"	m	class:TwoDPayload	file:
srcptr	legion_runtime/activemsg.cc	/^  void *srcptr;$/;"	m	class:ContiguousPayload	file:
srcptr	legion_runtime/activemsg.h	/^  void *srcptr;$/;"	m	struct:BaseMedium
srcptr	legion_runtime/activemsg.h	/^  void *srcptr;$/;"	m	struct:BaseReply
srcs	legion_runtime/lowlevel_dma.cc	/^	std::vector<const void *> srcs;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
srcs	legion_runtime/lowlevel_dma.cc	/^      std::vector<Domain::CopySrcDstField> srcs;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
srcs	legion_runtime/shared_lowlevel.cc	/^	std::vector<Domain::CopySrcDstField> srcs;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter	file:
srcs	legion_runtime/shared_lowlevel.cc	/^        std::vector<Domain::CopySrcDstField> srcs;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply	file:
srcs	legion_runtime/shared_lowlevel.cc	/^        std::vector<Domain::CopySrcDstField> srcs;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold	file:
srcs	legion_runtime/shared_lowlevel.cc	/^      std::vector<Domain::CopySrcDstField> srcs;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
sscanf	nautilus/printk.c	/^int sscanf(const char * buf, const char * fmt, ...)$/;"	f
sse_vector	legion_runtime/legion_utilities.h	/^        __m128i sse_vector[MAX\/128];$/;"	m	union:LegionRuntime::HighLevel::SSEBitMask::__anon14
sse_vector	legion_runtime/legion_utilities.h	/^        __m128i sse_vector[MAX\/128];$/;"	m	union:LegionRuntime::HighLevel::SSETLBitMask::__anon15
stack_init	lua_src/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
stack_size_in_mb	legion_runtime/lowlevel.cc	/^    static size_t stack_size_in_mb;$/;"	m	namespace:LegionRuntime::LowLevel	file:
stackinuse	lua_src/ldo.c	/^static int stackinuse (lua_State *L) {$/;"	f	file:
start	acpi/acpica/aclocal.h	/^	u16 start;$/;"	m	struct:acpi_port_info
start	legion_runtime/legion.cc	/^    \/*static*\/ int HighLevelRuntime::start(int argc, char **argv, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
start	legion_runtime/lowlevel.cc	/^      void start(int core_id, const char *debug_name) {$/;"	f	class:LegionRuntime::LowLevel::ThreadImpl
start	legion_runtime/region_tree.h	/^        unsigned long long start;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
start	legion_runtime/region_tree.h	/^      unsigned long long start;$/;"	m	class:LegionRuntime::HighLevel::PerfTracer
start	legion_runtime/runtime.cc	/^    \/*static*\/ int Runtime::start(int argc, char **argv, bool background)$/;"	f	class:LegionRuntime::HighLevel::Runtime
start	legion_runtime/shared_lowlevel.cc	/^    void DMAQueue::start(void)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
start	legion_runtime/shared_lowlevel.cc	/^    void* ProcessorImpl::start(void *p)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
start	test/benchmark.c	/^    uint64_t start;$/;"	m	struct:cv	file:
start_arrivals	legion_runtime/shared_lowlevel.cc	/^                int start_arrivals;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
start_block	legion_runtime/legion_logging.cc	/^    void TreeStateLogger::start_block(const char *fmt, ...)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
start_block	legion_runtime/legion_spy.cc	/^    void TreeStateLogger::start_block(const char *fmt, ...)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
start_capture	lua_src/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
start_count	nautilus/instrument.c	/^    uint64_t start_count;$/;"	m	struct:func_data	file:
start_cycle	test/ipi.c	/^    uint64_t start_cycle;$/;"	m	struct:time_struct	file:
start_dma_thread	legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void* DMAQueue::start_dma_thread(void *args)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
start_dma_worker_threads	legion_runtime/lowlevel_dma.cc	/^    void start_dma_worker_threads(int count)$/;"	f	namespace:LegionRuntime::LowLevel
start_event	legion_runtime/legion_logging.h	/^        Event start_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
start_event	legion_runtime/legion_logging.h	/^        Event start_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationEvents
start_event	legion_runtime/lowlevel.cc	/^      Event start_event;$/;"	m	struct:LegionRuntime::LowLevel::SpawnTaskArgs	file:
start_gpu_dma_thread	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::start_gpu_dma_thread(const std::vector<GPUProcessor*> &local)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
start_list	nautilus/vc.c	/^static int start_list()$/;"	f	file:
start_node	acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *start_node;$/;"	m	struct:acpi_parse_state	typeref:struct:acpi_parse_state::acpi_namespace_node
start_op	acpi/acpica/aclocal.h	/^	union acpi_parse_object *start_op;	\/* Root of parse tree *\/$/;"	m	struct:acpi_parse_state	typeref:union:acpi_parse_state::acpi_parse_object
start_polling_threads	legion_runtime/activemsg.cc	/^void start_polling_threads(int count)$/;"	f
start_scope	acpi/acpica/aclocal.h	/^	union acpi_parse_object *start_scope;$/;"	m	struct:acpi_parse_state	typeref:union:acpi_parse_state::acpi_parse_object
start_sending_threads	legion_runtime/activemsg.cc	/^void start_sending_threads(void)$/;"	f
start_some_threads	legion_runtime/lowlevel.cc	/^      void start_some_threads(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
start_thread	legion_runtime/lowlevel.cc	/^    void PreemptableThread::start_thread(size_t stack_size, int core_id, const char *debug_name)$/;"	f	class:LegionRuntime::LowLevel::PreemptableThread
start_time	legion_runtime/legion.h	/^	unsigned long long start_time; \/\/ microseconds since program start$/;"	m	struct:LegionRuntime::HighLevel::Mapper::ExecutionProfile
start_time	legion_runtime/legion.h	/^      unsigned long long                  start_time;$/;"	m	class:LegionRuntime::HighLevel::Task
start_time	legion_runtime/lowlevel.cc	/^      double start_time;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
start_time	legion_runtime/shared_lowlevel.cc	/^      double start_time;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
start_time	legion_runtime/utilities.h	/^	double start_time, time_mult;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
start_worker_thread	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::start_worker_thread(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
start_worker_threads	legion_runtime/lowlevel.cc	/^      void start_worker_threads(size_t stack_size)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
start_worker_threads	legion_runtime/lowlevel.cc	/^    void UtilityProcessor::start_worker_threads(size_t stack_size)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
startup_arrivals	legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::startup_arrivals = 0;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
startup_arrivals	legion_runtime/runtime.h	/^      static unsigned startup_arrivals;$/;"	m	class:LegionRuntime::HighLevel::Runtime
state	legion_runtime/lowlevel.cc	/^	State state;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
state	legion_runtime/lowlevel_dma.cc	/^      State state;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest	file:
state	legion_runtime/runtime.h	/^      ControlState state;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
state_lock	nautilus/vc.c	/^static spinlock_t state_lock;$/;"	v	file:
statement	lua_src/lparser.c	/^static void statement (LexState *ls) {$/;"	f	file:
statlist	lua_src/lparser.c	/^static void statlist (LexState *ls) {$/;"	f	file:
status	acpi/acpica/aclocal.h	/^	acpi_status status;$/;"	m	struct:acpi_gpe_device_info
status	lua_src/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	lua_src/ldump.c	/^ int status;$/;"	m	struct:__anon47	file:
status_address	acpi/acpica/aclocal.h	/^	struct acpi_generic_address status_address;	\/* Address of status reg *\/$/;"	m	struct:acpi_gpe_register_info	typeref:struct:acpi_gpe_register_info::acpi_generic_address
status_bit_mask	acpi/acpica/aclocal.h	/^	u16 status_bit_mask;$/;"	m	struct:acpi_fixed_event_info
status_register_id	acpi/acpica/aclocal.h	/^	u8 status_register_id;$/;"	m	struct:acpi_fixed_event_info
steal_count	legion_runtime/legion.h	/^      unsigned                            steal_count;$/;"	m	class:LegionRuntime::HighLevel::Task
stealable	legion_runtime/legion.h	/^        bool stealable;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::DomainSplit
stealing_disabled	legion_runtime/runtime.cc	/^    \/*sattic*\/ bool Runtime::stealing_disabled = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
stealing_disabled	legion_runtime/runtime.h	/^      const bool stealing_disabled;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
stealing_disabled	legion_runtime/runtime.h	/^      static bool stealing_disabled;$/;"	m	class:LegionRuntime::HighLevel::Runtime
stealing_enabled	legion_runtime/default_mapper.h	/^      bool stealing_enabled;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
stealing_lock	legion_runtime/runtime.h	/^      Reservation stealing_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
stencilSize	test/hpcg/hpcg-main.cc	/^    static const int64_t stencilSize = 27;$/;"	m	struct:__anon37::DriverParams	file:
stencil_task	test/multiple_partitions.cc	/^void stencil_task(const Task *task,$/;"	f
step	legion_runtime/arrays.h	/^      bool step(void)$/;"	f	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
step	legion_runtime/arrays.h	/^      bool step(void)$/;"	f	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
step	legion_runtime/arrays.h	/^      bool step(void)$/;"	f	class:LegionRuntime::Arrays::GenericPointInRectIterator
step	legion_runtime/lowlevel.h	/^	bool step(void)$/;"	f	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
steps	test/circuit.h	/^  int           steps;$/;"	m	struct:CircuitPiece
stop_activemsg_threads	legion_runtime/activemsg.cc	/^void stop_activemsg_threads(void)$/;"	f
stop_dma_worker_threads	legion_runtime/lowlevel_dma.cc	/^    void stop_dma_worker_threads(void)$/;"	f	namespace:LegionRuntime::LowLevel
stop_gpu_dma_threads	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::stop_gpu_dma_threads(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
stop_time	legion_runtime/legion.h	/^	unsigned long long stop_time; \/\/ microseconds since program start$/;"	m	struct:LegionRuntime::HighLevel::Mapper::ExecutionProfile
stop_time	legion_runtime/legion.h	/^      unsigned long long                  stop_time;$/;"	m	class:LegionRuntime::HighLevel::Task
store	legion_runtime/runtime.h	/^      ArgumentMapStore *const store;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap::Impl
str_byte	lua_src/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	lua_src/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_checkname	lua_src/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_dump	lua_src/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_find	lua_src/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	lua_src/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	lua_src/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_gsub	lua_src/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_len	lua_src/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	lua_src/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	lua_src/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_rep	lua_src/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_reverse	lua_src/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_sub	lua_src/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_tolower	nautilus/naut_string.c	/^str_tolower (char * s) $/;"	f
str_toupper	nautilus/naut_string.c	/^str_toupper (char * s) $/;"	f
str_upper	lua_src/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
strcasecmp	nautilus/naut_string.c	/^strcasecmp (const char * s1, const char * s2) $/;"	f
strcat	nautilus/naut_string.c	/^strcat (char * s1, const char * s2) $/;"	f
strchr	nautilus/naut_string.c	/^strchr (const char * s, int c) $/;"	f
strcmp	nautilus/naut_string.c	/^strcmp (const char * s1, const char * s2) $/;"	f
strcoll	nautilus/libccompat.c	/^int strcoll(const char *str1, const char *str2)$/;"	f
strcpy	nautilus/naut_string.c	/^strcpy (char * dest, const char * src)$/;"	f
strcspn	nautilus/naut_string.c	/^strcspn (const char * s, const char * reject) $/;"	f
strdup	nautilus/naut_string.c	/^strdup (const char * s)$/;"	f
strerror	nautilus/libccompat.c	/^strerror (int errnum)$/;"	f
strftime	nautilus/libccompat.c	/^size_t strftime(char *str, size_t maxsize, const char *format, const struct tm *timeptr)$/;"	f
strict_strtol	nautilus/printk.c	/^int strict_strtol(const char *cp, unsigned int base, long *res)$/;"	f
strict_strtoll	nautilus/printk.c	/^int strict_strtoll(const char *cp, unsigned int base, long long *res)$/;"	f
strict_strtoul	nautilus/printk.c	/^int strict_strtoul(const char *cp, unsigned int base, unsigned long *res)$/;"	f
strict_strtoull	nautilus/printk.c	/^int strict_strtoull(const char *cp, unsigned int base, unsigned long long *res)$/;"	f
stride	legion_runtime/lowlevel.cc	/^      int stride;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
strides	legion_runtime/arrays.h	/^      Point<DIM> strides;$/;"	m	class:LegionRuntime::Arrays::Linearization
strides	legion_runtime/arrays.h	/^      Point<T::ODIM> strides[T::IDIM];$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
string	acpi/acpica/aclocal.h	/^	char *string;		\/* NULL terminated string *\/$/;"	m	union:acpi_parse_value
string	nautilus/printk.c	/^static char *string(char *buf, char *end, char *s, struct printf_spec spec)$/;"	f	file:
stringify	legion_runtime/utilities.h	/^      static const char* stringify(int level)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
stringify	legion_runtime/utilities.h	/^    static const char* stringify(LogLevel level)$/;"	f	class:LegionRuntime::Logger
strip	lua_src/ldump.c	/^ int strip;$/;"	m	struct:__anon47	file:
strlen	nautilus/naut_string.c	/^strlen (const char * str)$/;"	f
strlib	lua_src/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
strncasecmp	nautilus/naut_string.c	/^strncasecmp (const char * s1, const char * s2, size_t limit) $/;"	f
strncat	nautilus/naut_string.c	/^strncat (char * s1, const char * s2, size_t limit) $/;"	f
strncmp	nautilus/naut_string.c	/^strncmp (const char * s1, const char * s2, size_t limit) $/;"	f
strncpy	nautilus/naut_string.c	/^strncpy (char * dest, const char * src, size_t limit) $/;"	f
strnlen	nautilus/naut_string.c	/^strnlen (const char * str, size_t max)$/;"	f
strpbrk	nautilus/naut_string.c	/^strpbrk (const char * cs, const char * ct)$/;"	f
strrchr	nautilus/naut_string.c	/^strrchr (const char * s, int c) $/;"	f
strsep	nautilus/naut_string.c	/^strsep (char ** s, const char * ct)$/;"	f
strspn	nautilus/naut_string.c	/^strspn (const char * s, const char * accept) $/;"	f
strstr	nautilus/naut_string.c	/^strstr (const char * s1, const char * s2)$/;"	f
strtod	nautilus/libccompat.c	/^double strtod(const char *string, char **endPtr)$/;"	f
strtoi	nautilus/naut_string.c	/^strtoi (const char * nptr, char ** endptr) $/;"	f
strtol	nautilus/naut_string.c	/^strtol (const char * str, char ** endptr, int base)$/;"	f
strtox	nautilus/naut_string.c	/^strtox (const char * nptr, char ** endptr) $/;"	f
style	legion_runtime/lowlevel.cc	/^      Machine::RunStyle style;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
style	legion_runtime/shared_lowlevel.cc	/^      Machine::RunStyle style;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
subexpr	lua_src/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, int limit) {$/;"	f	file:
subgridBnds	test/hpcg/vector.h	/^    std::vector< Rect<1> > subgridBnds;$/;"	m	struct:lgncg::PVecItem
subrect	legion_runtime/arrays.h	/^      Rect<T::IDIM> subrect;$/;"	m	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
subrect	legion_runtime/arrays.h	/^      Rect<T::IDIM> subrect;$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
subscribers	legion_runtime/garbage_collection.h	/^      std::map<AddressSpaceID,DistributedID> subscribers;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
subsume_node	legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::subsume_node(FieldTree<UT> *dominator_node)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
subtract	legion_runtime/legion_utilities.h	/^    void Fraction<T>::subtract(const Fraction<T> &rhs)$/;"	f	class:LegionRuntime::HighLevel::Fraction
success	legion_runtime/legion_ops.h	/^      bool success;$/;"	m	class:LegionRuntime::HighLevel::MustEpochMapper
suffixedexp	lua_src/lparser.c	/^static void suffixedexp (LexState *ls, expdesc *v) {$/;"	f	file:
sum	legion_runtime/arrays.h	/^      static Point<DIM> sum(const Point<DIM> a, const Point<DIM> b)$/;"	f	class:LegionRuntime::Arrays::Point
sum	test/benchmark.c	/^    uint64_t sum;$/;"	m	struct:cv	file:
sum	test/ipi.c	/^    uint64_t sum;$/;"	m	struct:time_struct	file:
sum_mask	legion_runtime/legion_utilities.h	/^      T sum_mask;$/;"	m	class:LegionRuntime::HighLevel::TLBitMask
sum_mask	legion_runtime/legion_utilities.h	/^      uint64_t sum_mask;$/;"	m	class:LegionRuntime::HighLevel::AVXTLBitMask
sum_mask	legion_runtime/legion_utilities.h	/^      uint64_t sum_mask;$/;"	m	class:LegionRuntime::HighLevel::SSETLBitMask
sum_task	test/tasks_and_futures.cc	/^int sum_task(const Task *task,$/;"	f
superscalar_width	legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::superscalar_width = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
superscalar_width	legion_runtime/runtime.h	/^      const unsigned superscalar_width;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
superscalar_width	legion_runtime/runtime.h	/^      static unsigned superscalar_width;$/;"	m	class:LegionRuntime::HighLevel::Runtime
swapextra	lua_src/ldebug.c	/^static void swapextra (lua_State *L) {$/;"	f	file:
sweepi	test/hpcg/comp-symgs.h	/^    uint8_t sweepi;$/;"	m	struct:__anon34::symgsTaskArgs
sweeplist	lua_src/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	file:
sweepphases	lua_src/lgc.c	924;"	d	file:
sweepthread	lua_src/lgc.c	/^static void sweepthread (lua_State *L, lua_State *L1) {$/;"	f	file:
sweeptolive	lua_src/lgc.c	/^static GCObject **sweeptolive (lua_State *L, GCObject **p, int *n) {$/;"	f	file:
sweepwholelist	lua_src/lgc.c	690;"	d	file:
switch_cont	test/benchmark.c	/^typedef struct switch_cont {$/;"	s	file:
switch_cont_t	test/benchmark.c	/^} switch_cont_t;$/;"	t	typeref:struct:switch_cont	file:
switch_state	dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	v	typeref:enum:__anon46	file:
switcher	dev/kbd.c	/^static int switcher(nk_scancode_t scan) $/;"	f	file:
switcher_num_queued	dev/kbd.c	/^static uint8_t switcher_num_queued=0;$/;"	v	file:
switcher_scancode_queue	dev/kbd.c	/^static nk_scancode_t switcher_scancode_queue[SCAN_MAX_QUEUE];$/;"	v	file:
symbol_string	nautilus/printk.c	/^static char *symbol_string(char *buf, char *end, void *ptr,$/;"	f	file:
symgs	test/hpcg/comp-symgs.h	/^symgs(const SparseMatrix &A,$/;"	f	namespace:lgncg
symgsTask	test/hpcg/comp-symgs.h	/^symgsTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
symgsTaskArgs	test/hpcg/comp-symgs.h	/^    symgsTaskArgs(uint8_t s, uint64_t n) : sweepi(s), nMatCols(n) { ; }$/;"	f	struct:__anon34::symgsTaskArgs
symgsTaskArgs	test/hpcg/comp-symgs.h	/^struct symgsTaskArgs {$/;"	s	namespace:__anon34
sync_done	test/benchmark.c	/^static volatile int sync_done = 0;$/;"	v	file:
sync_end	test/benchmark.c	/^static uint64_t sync_end = 0;$/;"	v	file:
sync_go	test/benchmark.c	/^static volatile int sync_go = 0;$/;"	v	file:
sync_proto	arch/hrt/hrt.c	/^static volatile unsigned long long *sync_proto = 0;$/;"	v	file:
synchronize	legion_runtime/lowlevel.cc	/^    \/*static*\/ void Clock::synchronize(void)$/;"	f	class:LegionRuntime::LowLevel::Clock
syscall	nautilus/libccompat.c	/^int syscall (int number, ...)$/;"	f
syscall_end	test/benchmark.c	/^uint64_t syscall_end = 0;$/;"	v
syscall_setup	test/benchmark.c	/^syscall_setup (void)$/;"	f	file:
syscall_start	test/benchmark.c	/^static uint64_t syscall_start = 0;$/;"	v	file:
sysinfo_init	arch/hrt/init.c	/^sysinfo_init (struct sys_info * sys)$/;"	f	file:
sysinfo_init	arch/k1om/init.c	/^sysinfo_init (struct sys_info * sys)$/;"	f	file:
sysinfo_init	arch/x64/init.c	/^sysinfo_init (struct sys_info * sys)$/;"	f	file:
syslib	lua_src/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
system	nautilus/libccompat.c	/^int system(const char *command)$/;"	f
t	legion_runtime/arrays.h	/^      T t;$/;"	m	class:LegionRuntime::Arrays::DynamicMapping
t	lua_src/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
t1	legion_runtime/legion.h	/^        Task *t1;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
t2	legion_runtime/legion.h	/^        Task *t2;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
tNon0	test/hpcg/sparsemat.h	/^    int64_t tNon0;$/;"	m	struct:lgncg::SparseMatrix
tNon0s	test/hpcg/hpcg-problem-generator.h	/^    int64_t tNon0s;$/;"	m	struct:ProblemGenerator
tab_funcs	lua_src/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
table	legion_runtime/lowlevel_impl.h	/^      DynamicTable<ALLOCATOR>& table;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableFreeList
table	nautilus/hashtable.c	/^    struct nk_hash_entry ** table;$/;"	m	struct:nk_hashtable	typeref:struct:nk_hashtable::nk_hash_entry	file:
table_length	nautilus/hashtable.c	/^    uint_t table_length;$/;"	m	struct:nk_hashtable	file:
tables	acpi/acpica/aclocal.h	/^	struct acpi_table_desc *tables;	\/* Table descriptor array *\/$/;"	m	struct:acpi_table_list	typeref:struct:acpi_table_list::acpi_table_desc
tag	legion_runtime/legion.h	/^      MappingTagID                        tag;$/;"	m	class:LegionRuntime::HighLevel::Mappable
tag	legion_runtime/legion.h	/^      MappingTagID                       tag;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
tag	legion_runtime/legion.h	/^      MappingTagID                       tag;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
tag	legion_runtime/legion.h	/^      MappingTagID                    tag;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
tag	legion_runtime/legion.h	/^      MappingTagID                    tag;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
tag	legion_runtime/legion.h	/^      MappingTagID                    tag;$/;"	m	struct:LegionRuntime::HighLevel::InlineLauncher
tag	legion_runtime/legion.h	/^      MappingTagID                    tag;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
tag	legion_runtime/legion.h	/^      MappingTagID tag; \/**< mapping tag for this region requirement*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
tag	legion_runtime/legion_logging.h	/^        MappingTagID tag;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
tag	legion_runtime/runtime.h	/^      const MappingTagID tag;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
tag_error	lua_src/lauxlib.c	/^static void tag_error (lua_State *L, int narg, int tag) {$/;"	f	file:
tail	nautilus/vc.c	/^  uint16_t head, tail;$/;"	m	struct:nk_virtual_console	file:
tail_object_type	acpi/acpica/aclocal.h	/^	u8 tail_object_type;$/;"	m	struct:acpi_package_info3
taken	legion_runtime/shared_lowlevel.cc	/^	bool taken;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
tan	nautilus/libccompat.c	/^double tan(double x)$/;"	f
tanh	nautilus/libccompat.c	/^double tanh(double x)$/;"	f
target	legion_runtime/region_tree.h	/^      FieldTree<LogicalUser> *const target;$/;"	m	class:LegionRuntime::HighLevel::LogicalFilter
target	legion_runtime/region_tree.h	/^      ReductionView *const target;$/;"	m	class:LegionRuntime::HighLevel::ReductionCloser
target	legion_runtime/region_tree.h	/^      const AddressSpaceID target;$/;"	m	class:LegionRuntime::HighLevel::PathReturner
target	legion_runtime/region_tree.h	/^      const AddressSpaceID target;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
target	legion_runtime/region_tree.h	/^      const AddressSpaceID target;$/;"	m	class:LegionRuntime::HighLevel::StateSender
target	legion_runtime/runtime.h	/^        Future::Impl *target;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureSetArgs
target	legion_runtime/runtime.h	/^        Processor target;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::MapperMessage
target	legion_runtime/runtime.h	/^      Processor target;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
target	legion_runtime/shared_lowlevel.cc	/^            Triggerable *target;$/;"	m	struct:LegionRuntime::LowLevel::EventImpl::TriggerableInfo	file:
target	legion_runtime/shared_lowlevel.cc	/^          RegionInstance::Impl *target;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2	file:
target_child	legion_runtime/region_tree.h	/^      const int target_child;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
target_proc	legion_runtime/legion.h	/^      Processor                           target_proc;$/;"	m	class:LegionRuntime::HighLevel::Task
target_proc	legion_runtime/region_tree.h	/^      const Processor target_proc;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
target_ranking	legion_runtime/legion.h	/^      std::vector<Memory> target_ranking;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
target_task_steal	legion_runtime/alt_mappers.cc	/^    Processor DebugMapper::target_task_steal(const std::set<Processor> &blacklist)$/;"	f	class:LegionRuntime::HighLevel::DebugMapper
target_task_steal	legion_runtime/default_mapper.cc	/^    void DefaultMapper::target_task_steal(const std::set<Processor> &blacklist,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
target_task_steal	legion_runtime/shim_mapper.cc	/^    Processor ShimMapper::target_task_steal($/;"	f	class:LegionRuntime::HighLevel::ShimMapper
target_task_steal	legion_runtime/shim_mapper.cc	/^    void ShimMapper::target_task_steal(const std::set<Processor> &blacklist,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
targets_selected	legion_runtime/region_tree.h	/^      bool targets_selected;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
task	legion_runtime/legion_ops.h	/^        IndexTask *task;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndexArgs
task	legion_runtime/legion_ops.h	/^        IndividualTask *task;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndivArgs
task	legion_runtime/legion_ops.h	/^        SingleTask *task;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochMapper::MustEpochMapArgs
task	legion_runtime/legion_ops.h	/^        TaskOp *task;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochDistributor::MustEpochDistributorArgs
task	legion_runtime/legion_ops.h	/^        TaskOp *task;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochDistributor::MustEpochLauncherArgs
task	legion_runtime/lowlevel.cc	/^      Task *task;$/;"	m	class:LegionRuntime::LowLevel::DeferredTaskSpawn	file:
task	legion_runtime/runtime.h	/^      TaskOp *const task;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
task	legion_runtime/runtime.h	/^      TaskOp *const task;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
task_gen	legion_runtime/runtime.h	/^      const GenerationID task_gen;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
task_gen	legion_runtime/runtime.h	/^      const GenerationID task_gen;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
task_id	legion_runtime/legion.h	/^      Processor::TaskFuncID              task_id;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
task_id	legion_runtime/legion.h	/^      Processor::TaskFuncID              task_id;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
task_id	legion_runtime/legion.h	/^      Processor::TaskFuncID task_id; $/;"	m	class:LegionRuntime::HighLevel::Task
task_id	legion_runtime/legion_logging.h	/^        Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskCollection
task_id	legion_runtime/legion_logging.h	/^        Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
task_id	legion_runtime/legion_logging.h	/^        Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
task_id	legion_runtime/legion_logging.h	/^        Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopLevelTask
task_id	legion_runtime/legion_profiling.h	/^        unsigned task_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::TaskInstance
task_id	legion_runtime/lowlevel.cc	/^      Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
task_id	legion_runtime/shared_lowlevel.cc	/^      Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
task_id_table	legion_runtime/lowlevel.cc	/^    Processor::TaskIDTable task_id_table;$/;"	m	namespace:LegionRuntime::LowLevel	file:
task_op	legion_runtime/runtime.h	/^        TaskOp *task_op;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureMapSetArgs
task_op	legion_runtime/runtime.h	/^        TaskOp *task_op;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureSetArgs
task_priority	legion_runtime/legion.h	/^      TaskPriority                        task_priority;$/;"	m	class:LegionRuntime::HighLevel::Task
task_profiles	legion_runtime/mapping_utilities.h	/^        TaskMap task_profiles;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
task_queue	legion_runtime/lowlevel.cc	/^      JobQueue<Task> task_queue;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
task_queue	legion_runtime/lowlevel_impl.h	/^      JobQueue<Task> task_queue;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
task_scheduler_enabled	legion_runtime/runtime.h	/^      bool task_scheduler_enabled;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
task_sets	legion_runtime/legion_ops.h	/^      std::vector<std::set<SingleTask*> > task_sets;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
task_table	legion_runtime/shared_lowlevel.cc	/^	Processor::TaskIDTable task_table;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
tasks	legion_runtime/legion_profiling.h	/^        std::deque<TaskInstance> tasks;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
tasks	legion_runtime/lowlevel_gpu.cc	/^      std::list<GPUTask*> tasks;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
tasks_available	legion_runtime/lowlevel.cc	/^      virtual void tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
tasks_available	legion_runtime/lowlevel.cc	/^      virtual void tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::RemoteProcessor
tasks_available	legion_runtime/lowlevel.cc	/^    void ProcessorGroup::tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
tasks_available	legion_runtime/lowlevel.cc	/^    void UtilityProcessor::tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
tasks_available	legion_runtime/lowlevel_gpu.cc	/^      void tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
tasks_available	legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
tconcat	lua_src/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
temporary_futures	legion_runtime/legion_tasks.h	/^                DomainPoint::STLComparator> temporary_futures;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
temporary_mappings	legion_runtime/mapping_utilities.h	/^        std::map<MappingKey,MemoizedMapping> temporary_mappings;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
term_event	legion_runtime/region_tree.h	/^      Event term_event;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalUser
term_event	legion_runtime/region_tree.h	/^      const Event term_event;$/;"	m	class:LegionRuntime::HighLevel::PhysicalEventFilter
terminate_flag	legion_runtime/lowlevel_dma.cc	/^    static volatile bool terminate_flag = false;$/;"	m	namespace:LegionRuntime::LowLevel	file:
termination_event	legion_runtime/legion_logging.h	/^        Event termination_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
termination_event	legion_runtime/legion_ops.h	/^      UserEvent termination_event;$/;"	m	class:LegionRuntime::HighLevel::MapOp
termination_event	legion_runtime/runtime.h	/^      UserEvent termination_event;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
test1	nautilus/condvar.c	/^test1 (void * in, void ** out) $/;"	f	file:
test2	nautilus/condvar.c	/^test2 (void * in, void ** out) $/;"	f	file:
test3	nautilus/condvar.c	/^test3 (void * in, void ** out)$/;"	f	file:
test_dbl	test/circuit.cc	/^union test_dbl { double dval; unsigned long long uval; };$/;"	u	file:
test_eof	lua_src/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_identity	legion_runtime/legion_utilities.h	/^    void BitPermutation<BITMASK,LOG2MAX>::test_identity(void)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
test_nemo	nautilus/nemo.c	/^test_nemo (void)$/;"	f
test_setlong	nautilus/setjmp.c	/^test_setlong (void)$/;"	f
test_then_block	lua_src/lparser.c	/^static void test_then_block (LexState *ls, int *escapelist) {$/;"	f	file:
testit	nautilus/setjmp.c	/^testit (jmp_buf  env,$/;"	f	file:
testnext	lua_src/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
tests	test/test_legion.c	/^tfun_t tests[NUM_TESTS] = {$/;"	v
textdomain	nautilus/libccompat.c	/^char *textdomain (const char * domainname)$/;"	f
tfun_t	test/test_legion.c	/^typedef void (*tfun_t)(int, char**);$/;"	t	file:
tgt_mem	legion_runtime/lowlevel.cc	/^	Memory tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
tgt_mem	legion_runtime/lowlevel.cc	/^	Memory::Impl *tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
tgt_mem	legion_runtime/lowlevel.cc	/^	Memory::Impl *tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
tgt_mem	legion_runtime/lowlevel_dma.cc	/^	GASNetMemory *tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
tgt_mem	legion_runtime/lowlevel_dma.cc	/^	Memory tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
tgt_mem	legion_runtime/lowlevel_dma.cc	/^	Memory::Impl *tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
tgt_mem	legion_runtime/lowlevel_dma.cc	/^	Memory::Impl *tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
tgt_offset	legion_runtime/lowlevel.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
tgt_offset	legion_runtime/lowlevel.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
tgt_offset	legion_runtime/lowlevel.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
tgt_offset	legion_runtime/lowlevel_dma.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
tgt_offset	legion_runtime/lowlevel_dma.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
tgt_offset	legion_runtime/lowlevel_dma.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
tgt_offset	legion_runtime/lowlevel_dma.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
tgt_ptr	legion_runtime/lowlevel.cc	/^	char *tgt_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
tgt_ptr	legion_runtime/lowlevel_dma.cc	/^	char *tgt_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
tgt_ptr	legion_runtime/lowlevel_dma.cc	/^	char *tgt_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
the_machine	legion_runtime/lowlevel.cc	/^    static Machine *the_machine = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
thermal_int_handler	dev/apic.c	/^thermal_int_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
thieving_lock	legion_runtime/runtime.h	/^      Reservation thieving_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
this_target_obj	acpi/acpica/aclocal.h	/^	void *this_target_obj;$/;"	m	struct:acpi_pkg_state
thousands_sep	nautilus/libccompat.c	/^    char *thousands_sep;      \/\/""           LC_NUMERIC$/;"	m	struct:lconv	file:
thr_return	asm/excp_early.S	/^thr_return:$/;"	l
thread	acpi/acpica/aclocal.h	/^	struct acpi_thread_state thread;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_thread_state
thread	legion_runtime/lowlevel.cc	/^	  Thread *thread;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry	file:
thread	legion_runtime/lowlevel.cc	/^      ProcessorThread *thread;$/;"	m	class:LegionRuntime::LowLevel::Task	file:
thread	legion_runtime/lowlevel.cc	/^      pthread_t thread;$/;"	m	class:LegionRuntime::LowLevel::ThreadImpl	file:
thread	legion_runtime/lowlevel.cc	/^      pthread_t thread;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread	file:
thread	legion_runtime/lowlevel.cc	/^      pthread_t thread;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
thread	legion_runtime/lowlevel_impl.h	/^      pthread_t thread;$/;"	m	class:LegionRuntime::LowLevel::PreemptableThread
thread	legion_runtime/shared_lowlevel.cc	/^      unsigned thread;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
thread_cleanup	nautilus/thread.c	/^thread_cleanup (void)$/;"	f	file:
thread_complete_gate	acpi/acpica/aclocal.h	/^	acpi_handle thread_complete_gate;$/;"	m	struct:acpi_db_method_info
thread_counts	legion_runtime/lowlevel_impl.h	/^      unsigned thread_counts[MAX_NUM_THREADS];$/;"	m	class:Runtime
thread_detach	nautilus/thread.c	/^thread_detach (nk_thread_t * t)$/;"	f	file:
thread_entry	legion_runtime/lowlevel.cc	/^    \/*static*\/ void *PreemptableThread::thread_entry(void *data)$/;"	f	class:LegionRuntime::LowLevel::PreemptableThread
thread_id	acpi/acpica/aclocal.h	/^	acpi_thread_id thread_id;	\/* Running thread ID *\/$/;"	m	struct:acpi_thread_state
thread_id	acpi/acpica/aclocal.h	/^	acpi_thread_id thread_id;$/;"	m	struct:acpi_mutex_info
thread_init	nautilus/thread.c	/^thread_init (nk_thread_t * t, $/;"	f	file:
thread_main	legion_runtime/lowlevel.cc	/^	virtual void thread_main(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
thread_main	legion_runtime/lowlevel.cc	/^      static void *thread_main(void *data)$/;"	f	class:LegionRuntime::LowLevel::ThreadImpl
thread_main	legion_runtime/lowlevel.cc	/^      void thread_main(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
thread_main	legion_runtime/lowlevel_gpu.cc	/^      void thread_main(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
thread_main_wrapper	legion_runtime/lowlevel_gpu.cc	/^      static void *thread_main_wrapper(void *data)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
thread_proc_free	legion_runtime/shared_lowlevel.cc	/^static void thread_proc_free(void *arg)$/;"	f	file:
thread_push	nautilus/thread.c	/^thread_push (nk_thread_t * t, uint64_t x)$/;"	f	file:
thread_run_done	test/benchmark.c	/^static volatile int thread_run_done = 0;$/;"	v	file:
thread_setup_init_stack	nautilus/thread.c	/^thread_setup_init_stack (nk_thread_t * t, nk_thread_fun_t fun, void * arg)$/;"	f	file:
thread_shutdown_flag	legion_runtime/activemsg.cc	/^static volatile bool thread_shutdown_flag = false;$/;"	v	file:
thread_timer_free	legion_runtime/lowlevel.cc	/^    static void thread_timer_free(void *arg)$/;"	f	namespace:LegionRuntime::LowLevel
thread_timer_free	legion_runtime/shared_lowlevel.cc	/^    static void thread_timer_free(void *arg)$/;"	f	namespace:LegionRuntime::LowLevel
thread_timer_key	legion_runtime/lowlevel.cc	/^    pthread_key_t thread_timer_key;$/;"	m	namespace:LegionRuntime::LowLevel	file:
thread_timer_key	legion_runtime/shared_lowlevel.cc	/^    nk_tls_key_t thread_timer_key;$/;"	m	namespace:LegionRuntime::LowLevel	file:
threads	acpi/acpica/aclocal.h	/^	acpi_thread_id *threads;$/;"	m	struct:acpi_db_method_info
threads	legion_runtime/lowlevel_impl.h	/^      std::set<UtilityThread *> threads;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
tid	legion_runtime/legion_logging.h	/^        RegionTreeID tid;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
tid	legion_runtime/legion_logging.h	/^        RegionTreeID tid;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopRegion
tid	legion_runtime/legion_trace.h	/^      const TraceID tid;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
time	legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventTiming
time	legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
time	legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
time	legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
time	legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationTiming
time	legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
time	legion_runtime/legion_profiling.h	/^        unsigned long long time; \/\/ absolute time in micro-seconds $/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProfilingEvent
time	legion_runtime/legion_profiling.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
time	nautilus/libccompat.c	/^time_t time (time_t * timer)$/;"	f
time	test/ipi.c	/^} time;$/;"	v	typeref:struct:time_struct	file:
time_condvar	test/benchmark.c	/^void time_condvar (void) {$/;"	f
time_ctx_switch	test/benchmark.c	/^time_ctx_switch (void)$/;"	f
time_cvar_bcast	test/benchmark.c	/^void time_cvar_bcast (void)$/;"	f
time_end	test/ipi.c	/^time_end (void)$/;"	f	file:
time_int80	test/benchmark.c	/^time_int80 (void)$/;"	f
time_ipi_send	test/benchmark.c	/^time_ipi_send(void)$/;"	f
time_mult	legion_runtime/utilities.h	/^	double start_time, time_mult;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
time_nemo_bcast	test/benchmark.c	/^time_nemo_bcast (void)$/;"	f
time_nemo_event	test/benchmark.c	/^time_nemo_event (void)$/;"	f
time_spinlock	test/benchmark.c	/^void time_spinlock (void)$/;"	f
time_start	test/ipi.c	/^time_start (void)$/;"	f	file:
time_struct	test/ipi.c	/^static struct time_struct {$/;"	s	file:
time_sync_event	test/benchmark.c	/^time_sync_event (void)$/;"	f
time_syscall	test/benchmark.c	/^time_syscall (void)$/;"	f
time_thread_both	test/benchmark.c	/^time_thread_both (void)$/;"	f
time_thread_create	test/benchmark.c	/^time_thread_create (void)$/;"	f
time_thread_run	test/benchmark.c	/^time_thread_run (void)$/;"	f
time_threads_long	test/benchmark.c	/^void time_threads_long(void)$/;"	f
time_units	legion_runtime/lowlevel_impl.h	/^      unsigned time_units, event_id, event_gen, action;$/;"	m	struct:LegionRuntime::LowLevel::EventTraceItem
time_units	legion_runtime/lowlevel_impl.h	/^      unsigned time_units, lock_id, owner, action;$/;"	m	struct:LegionRuntime::LowLevel::LockTraceItem
timeout	legion_runtime/region_tree.h	/^      int timeout;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
timer_accum	legion_runtime/lowlevel.cc	/^      std::map<int, double> timer_accum;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
timer_accum	legion_runtime/shared_lowlevel.cc	/^      std::map<int, double> timer_accum;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
timer_clear_event	dev/timer.c	/^timer_clear_event (struct nk_timer_event * t)$/;"	f	file:
timer_data	legion_runtime/lowlevel.cc	/^    std::vector<PerThreadTimerData *> timer_data;$/;"	m	namespace:LegionRuntime::LowLevel	file:
timer_data	legion_runtime/shared_lowlevel.cc	/^    std::vector<PerThreadTimerData*> timer_data;$/;"	m	namespace:LegionRuntime::LowLevel	file:
timer_data_mutex	legion_runtime/lowlevel.cc	/^    gasnet_hsl_t timer_data_mutex = GASNET_HSL_INITIALIZER;$/;"	m	namespace:LegionRuntime::LowLevel	file:
timer_init_event	dev/timer.c	/^timer_init_event (struct nk_timer_event * t, uint_t delay)$/;"	f	file:
timer_kind	legion_runtime/lowlevel.cc	/^      int timer_kind;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
timer_kind	legion_runtime/shared_lowlevel.cc	/^      int timer_kind;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
timer_notify_event	dev/timer.c	/^timer_notify_event (struct nk_timer_event * te) $/;"	f	file:
timer_stack	legion_runtime/lowlevel.cc	/^      std::list<TimerStackEntry> timer_stack;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
timer_stack	legion_runtime/shared_lowlevel.cc	/^      std::list<TimerStackEntry> timer_stack;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
timer_wait_event	dev/timer.c	/^timer_wait_event (struct nk_timer_event * te)$/;"	f	file:
timerp	legion_runtime/lowlevel.cc	/^      std::map<int,double> *timerp;$/;"	m	class:LegionRuntime::LowLevel::MultiNodeRollUp	file:
timestamp	legion_runtime/lowlevel.cc	/^	Barrier::timestamp_t timestamp;$/;"	m	struct:LegionRuntime::LowLevel::BarrierAdjustMessage::RequestArgs	file:
timestamp	legion_runtime/lowlevel.h	/^      timestamp_t timestamp;$/;"	m	class:LegionRuntime::LowLevel::Barrier
timestamp_t	legion_runtime/lowlevel.h	/^      typedef unsigned long long timestamp_t; \/\/ used to avoid race conditions with arrival adjustments$/;"	t	class:LegionRuntime::LowLevel::Barrier
tinsert	lua_src/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
tls_dummy	nautilus/thread.c	/^tls_dummy (void * in, void ** out)$/;"	f	file:
tls_exit	nautilus/thread.c	/^tls_exit (void) $/;"	f	file:
tls_keys	nautilus/thread.c	/^static struct nk_tls tls_keys[TLS_MAX_KEYS];$/;"	v	typeref:struct:nk_tls	file:
tmp_realloc	nautilus/hashtable.c	/^tmp_realloc (void * old_ptr, uint_t old_size, uint_t new_size) $/;"	f	file:
tmpfile	nautilus/libccompat.c	/^FILE *tmpfile(void)$/;"	f
tmpnam	nautilus/libccompat.c	/^char *tmpnam(char *s)$/;"	f
to_array	legion_runtime/arrays.h	/^      void to_array(int *vals) const { for(unsigned i = 0; i < DIM; i++) vals[i] = x[i]; }$/;"	f	class:LegionRuntime::Arrays::Point
to_array	legion_runtime/arrays.h	/^      void to_array(int *vals) const { lo.to_array(vals); hi.to_array(vals + DIM); }$/;"	f	class:LegionRuntime::Arrays::Rect
to_field_set	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::to_field_set(const FieldMask &mask,$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
to_string	legion_runtime/legion_utilities.h	/^    inline char* AVXBitMask<MAX>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
to_string	legion_runtime/legion_utilities.h	/^    inline char* AVXTLBitMask<MAX>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
to_string	legion_runtime/legion_utilities.h	/^    inline char* BitMask<T,MAX,SHIFT,MASK>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
to_string	legion_runtime/legion_utilities.h	/^    inline char* SSEBitMask<MAX>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
to_string	legion_runtime/legion_utilities.h	/^    inline char* SSETLBitMask<MAX>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
to_string	legion_runtime/legion_utilities.h	/^    inline char* TLBitMask<T,MAX,SHIFT,MASK>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
to_string	legion_runtime/region_tree.cc	/^    char* FieldSpaceNode::to_string(const FieldMask &mask) const$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
tofile	lua_src/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
tolerance	test/hpcg/hpcg-main.cc	/^    double tolerance;$/;"	m	struct:__anon37::DriverParams	file:
tolstream	lua_src/liolib.c	128;"	d	file:
top_level_regions	legion_runtime/legion_tasks.h	/^      std::set<LogicalRegion> top_level_regions;$/;"	m	class:LegionRuntime::HighLevel::RemoteTask
top_level_task	legion_runtime/legion_tasks.h	/^      bool top_level_task;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
top_level_task	test/circuit.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	test/custom_mapper.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	test/global_vars.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	test/index_tasks.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	test/logical_regions.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	test/multiple_partitions.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	test/partitioning.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	test/physical_regions.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	test/privileges.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	test/saxpy_array.cc	/^void top_level_task(const void *args, size_t arglen,$/;"	f
top_level_task	test/tasks_and_futures.cc	/^void top_level_task(const Task *task,$/;"	f
tostore	lua_src/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
total	legion_runtime/region_tree.h	/^      const bool total;$/;"	m	class:LegionRuntime::HighLevel::PhysicalInvalidator
total_active_contexts	legion_runtime/runtime.h	/^      unsigned total_active_contexts;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
total_allocations	legion_runtime/runtime.h	/^        unsigned total_allocations;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::AllocationTracker
total_bytes	legion_runtime/legion_utilities.h	/^      const size_t total_bytes;$/;"	m	class:LegionRuntime::HighLevel::Deserializer
total_bytes	legion_runtime/legion_utilities.h	/^      size_t total_bytes;$/;"	m	class:LegionRuntime::HighLevel::Serializer
total_bytes	legion_runtime/runtime.h	/^        size_t         total_bytes;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::AllocationTracker
total_contexts	legion_runtime/runtime.h	/^      unsigned total_contexts;$/;"	m	class:LegionRuntime::HighLevel::Runtime
total_count	nautilus/instrument.c	/^    uint64_t total_count;$/;"	m	struct:func_data	file:
total_endpoints	legion_runtime/activemsg.cc	/^  const int total_endpoints;$/;"	m	class:EndpointManager	file:
total_points	legion_runtime/legion_tasks.h	/^      unsigned total_points;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
total_size	legion_runtime/activemsg.cc	/^    size_t total_size;$/;"	m	struct:ActiveMessageEndpoint::ChunkInfo	file:
total_size	legion_runtime/activemsg.cc	/^  size_t total_size;$/;"	m	class:SrcDataPool	file:
total_space	legion_runtime/shared_lowlevel.cc	/^    size_t MemoryImpl::total_space(void) const$/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
total_threads	legion_runtime/lowlevel.cc	/^      int total_threads, active_thread_count, max_active_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
total_time	legion_runtime/mapping_utilities.h	/^          long long total_time;$/;"	m	struct:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler::VariantProfile
total_time	legion_runtime/region_tree.h	/^        unsigned long long total_time;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
touches	legion_runtime/rectangle_set.h	/^    inline bool Segment<T>::touches(const Segment<T> &other) const$/;"	f	class:LegionRuntime::HighLevel::Segment
trace	legion_runtime/legion_ops.h	/^      LegionTrace *trace;$/;"	m	class:LegionRuntime::HighLevel::Operation
trace_allocation	legion_runtime/runtime.cc	/^    \/*static*\/ void LegionAllocation::trace_allocation($/;"	f	class:LegionRuntime::HighLevel::LegionAllocation
trace_allocation	legion_runtime/runtime.cc	/^    \/*static*\/ void LegionAllocation::trace_allocation(Runtime *&runtime,$/;"	f	class:LegionRuntime::HighLevel::LegionAllocation
trace_allocation	legion_runtime/runtime.cc	/^    void Runtime::trace_allocation(AllocationType type, size_t size, int elems)$/;"	f	class:LegionRuntime::HighLevel::Runtime
trace_free	legion_runtime/runtime.cc	/^    \/*static*\/ void LegionAllocation::trace_free(AllocationType a, $/;"	f	class:LegionRuntime::HighLevel::LegionAllocation
trace_free	legion_runtime/runtime.cc	/^    \/*static*\/ void LegionAllocation::trace_free(Runtime *&runtime,$/;"	f	class:LegionRuntime::HighLevel::LegionAllocation
trace_free	legion_runtime/runtime.cc	/^    void Runtime::trace_free(AllocationType type, size_t size, int elems)$/;"	f	class:LegionRuntime::HighLevel::Runtime
trace_item	legion_runtime/utilities.h	/^      static inline ITEM& trace_item(void)$/;"	f	class:LegionRuntime::LowLevel::Tracer
trace_op_lock	legion_runtime/runtime.h	/^      Reservation trace_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
traceback	lua_src/lua.c	/^static int traceback (lua_State *L) {$/;"	f	file:
traceexec	lua_src/lvm.c	/^static void traceexec (lua_State *L) {$/;"	f	file:
traces	legion_runtime/legion_tasks.h	/^      LegionKeyValue<TraceID,LegionTrace*,TASK_TRACES_ALLOC>::map traces;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
traces	legion_runtime/region_tree.h	/^      std::vector<PerfTrace> traces;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
tracing	legion_runtime/legion_ops.h	/^      bool tracing;$/;"	m	class:LegionRuntime::HighLevel::Operation
tracing	legion_runtime/legion_trace.h	/^      bool tracing;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
tracing	legion_runtime/region_tree.h	/^        bool tracing;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
tracing	legion_runtime/region_tree.h	/^      const bool tracing;$/;"	m	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
track_parent	legion_runtime/legion_ops.h	/^      bool track_parent;$/;"	m	class:LegionRuntime::HighLevel::Operation
transform_field_mask	legion_runtime/region_tree.cc	/^    void FieldSpaceNode::transform_field_mask(FieldMask &mask, $/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
transformers	legion_runtime/region_tree.h	/^      std::map<AddressSpaceID,FieldPermutation> transformers;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
traversal_mask	legion_runtime/region_tree.h	/^      const FieldMask traversal_mask;$/;"	m	struct:LegionRuntime::HighLevel::MappableInfo
traverse	legion_runtime/region_tree.cc	/^    bool PathTraverser::traverse(RegionTreeNode *node)$/;"	f	class:LegionRuntime::HighLevel::PathTraverser
traverseCclosure	lua_src/lgc.c	/^static lu_mem traverseCclosure (global_State *g, CClosure *cl) {$/;"	f	file:
traverseLclosure	lua_src/lgc.c	/^static lu_mem traverseLclosure (global_State *g, LClosure *cl) {$/;"	f	file:
traverse_node	legion_runtime/region_tree.cc	/^    void MappingTraverser::traverse_node(RegionTreeNode *node)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
traverseephemeron	lua_src/lgc.c	/^static int traverseephemeron (global_State *g, Table *h) {$/;"	f	file:
traverseproto	lua_src/lgc.c	/^static int traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestack	lua_src/lgc.c	/^static lu_mem traversestack (global_State *g, lua_State *th) {$/;"	f	file:
traversestrongtable	lua_src/lgc.c	/^static void traversestrongtable (global_State *g, Table *h) {$/;"	f	file:
traversetable	lua_src/lgc.c	/^static lu_mem traversetable (global_State *g, Table *h) {$/;"	f	file:
traverseweakvalue	lua_src/lgc.c	/^static void traverseweakvalue (global_State *g, Table *h) {$/;"	f	file:
treatstackoption	lua_src/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tree_id	legion_runtime/legion.h	/^      RegionTreeID tree_id;$/;"	m	class:LegionRuntime::HighLevel::LogicalPartition
tree_id	legion_runtime/legion.h	/^      RegionTreeID tree_id;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegion
tree_id	legion_runtime/legion_logging.h	/^        RegionTreeID tree_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
tree_id	legion_runtime/legion_logging.h	/^        RegionTreeID tree_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
tree_nodes	legion_runtime/region_tree.h	/^      std::map<RegionTreeID,RegionNode*>        tree_nodes;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
tree_reservation	legion_runtime/region_tree.h	/^      Reservation tree_reservation;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
tree_state_log	legion_runtime/legion_spy.h	/^      FILE *tree_state_log;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
tree_state_logger	legion_runtime/runtime.h	/^      TreeStateLogger *tree_state_logger;$/;"	m	class:LegionRuntime::HighLevel::Runtime
tremove	lua_src/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
trigger	legion_runtime/lowlevel.cc	/^    void Event::Impl::trigger(Event::gen_t gen_triggered, int trigger_node, Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
trigger	legion_runtime/lowlevel.cc	/^    void UserEvent::trigger(Event wait_on) const$/;"	f	class:LegionRuntime::LowLevel::UserEvent
trigger	legion_runtime/shared_lowlevel.cc	/^      virtual bool trigger(unsigned count = 1, TriggerHandle = 0)$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
trigger	legion_runtime/shared_lowlevel.cc	/^    bool CopyOperation::trigger(unsigned count, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::CopyOperation
trigger	legion_runtime/shared_lowlevel.cc	/^    bool EventImpl::trigger(unsigned count, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
trigger	legion_runtime/shared_lowlevel.cc	/^    bool ProcessorImpl::trigger(unsigned count, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
trigger	legion_runtime/shared_lowlevel.cc	/^    bool RegionInstance::Impl::trigger(unsigned count, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
trigger	legion_runtime/shared_lowlevel.cc	/^    bool ReservationImpl::trigger(unsigned count, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
trigger	legion_runtime/shared_lowlevel.cc	/^    void UserEvent::trigger(Event wait_on \/*= NO_EVENT*\/) const$/;"	f	class:LegionRuntime::LowLevel::UserEvent
trigger_children_committed	legion_runtime/legion_tasks.cc	/^    void TaskOp::trigger_children_committed(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
trigger_children_complete	legion_runtime/legion_tasks.cc	/^    void TaskOp::trigger_children_complete(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
trigger_commit	legion_runtime/legion_ops.cc	/^    void DeletionOp::trigger_commit(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
trigger_commit	legion_runtime/legion_ops.cc	/^    void MustEpochOp::trigger_commit(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
trigger_commit	legion_runtime/legion_ops.cc	/^    void Operation::trigger_commit(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_commit	legion_runtime/legion_tasks.cc	/^    void TaskOp::trigger_commit(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
trigger_commit_invoked	legion_runtime/legion_ops.h	/^      bool trigger_commit_invoked;$/;"	m	class:LegionRuntime::HighLevel::Operation
trigger_complete	legion_runtime/legion_ops.cc	/^    void MustEpochOp::trigger_complete(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
trigger_complete	legion_runtime/legion_ops.cc	/^    void Operation::trigger_complete(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_complete	legion_runtime/legion_tasks.cc	/^    void TaskOp::trigger_complete(void) $/;"	f	class:LegionRuntime::HighLevel::TaskOp
trigger_complete_invoked	legion_runtime/legion_ops.h	/^      bool trigger_complete_invoked;$/;"	m	class:LegionRuntime::HighLevel::Operation
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void AcquireOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void AndPredOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void CloseOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void CopyOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void DeletionOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void FenceOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void FuturePredOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void MapOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void MustEpochOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void NotPredOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void Operation::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void OrPredOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
trigger_dependence_analysis	legion_runtime/legion_ops.cc	/^    void ReleaseOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
trigger_dependence_analysis	legion_runtime/legion_tasks.cc	/^    void IndexTask::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
trigger_dependence_analysis	legion_runtime/legion_tasks.cc	/^    void IndividualTask::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
trigger_dependence_analysis	legion_runtime/legion_tasks.cc	/^    void PointTask::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
trigger_dependence_analysis	legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_dependence_analysis	legion_runtime/legion_tasks.cc	/^    void WrapperTask::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
trigger_dependence_analysis	legion_runtime/legion_trace.cc	/^    void TraceCaptureOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
trigger_dependence_analysis	legion_runtime/legion_trace.cc	/^    void TraceCompleteOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
trigger_execution	legion_runtime/legion_ops.cc	/^    bool AcquireOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
trigger_execution	legion_runtime/legion_ops.cc	/^    bool CloseOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
trigger_execution	legion_runtime/legion_ops.cc	/^    bool CopyOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
trigger_execution	legion_runtime/legion_ops.cc	/^    bool FenceOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
trigger_execution	legion_runtime/legion_ops.cc	/^    bool MapOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
trigger_execution	legion_runtime/legion_ops.cc	/^    bool MustEpochOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
trigger_execution	legion_runtime/legion_ops.cc	/^    bool Operation::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_execution	legion_runtime/legion_ops.cc	/^    bool ReleaseOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
trigger_execution	legion_runtime/legion_tasks.cc	/^    bool MultiTask::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
trigger_execution	legion_runtime/legion_tasks.cc	/^    bool SingleTask::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
trigger_index	legion_runtime/legion_ops.cc	/^    void MustEpochTriggerer::trigger_index(IndexTask *task)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
trigger_individual	legion_runtime/legion_ops.cc	/^    void MustEpochTriggerer::trigger_individual(IndividualTask *task)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
trigger_lock	legion_runtime/legion_ops.h	/^      Reservation trigger_lock;$/;"	m	class:LegionRuntime::HighLevel::MustEpochTriggerer
trigger_mapping	legion_runtime/legion_ops.cc	/^    void AndPredOp::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
trigger_mapping	legion_runtime/legion_ops.cc	/^    void FuturePredOp::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
trigger_mapping	legion_runtime/legion_ops.cc	/^    void NotPredOp::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
trigger_mapping	legion_runtime/legion_ops.cc	/^    void Operation::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_mapping	legion_runtime/legion_ops.cc	/^    void OrPredOp::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
trigger_mapping	legion_runtime/legion_ops.cc	/^    void SpeculativeOp::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
trigger_mapping_invoked	legion_runtime/legion_ops.h	/^      bool trigger_mapping_invoked;$/;"	m	class:LegionRuntime::HighLevel::Operation
trigger_on_unmap	legion_runtime/runtime.h	/^      bool trigger_on_unmap;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
trigger_resolution	legion_runtime/legion_ops.cc	/^    void Operation::trigger_resolution(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_resolution	legion_runtime/legion_ops.cc	/^    void SpeculativeOp::trigger_resolution(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
trigger_resolution_invoked	legion_runtime/legion_ops.h	/^      bool trigger_resolution_invoked;$/;"	m	class:LegionRuntime::HighLevel::Operation
trigger_slice_commit	legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_slice_commit(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_slice_complete	legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_slice_complete(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_slice_mapped	legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_slice_mapped(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_slices	legion_runtime/legion_tasks.cc	/^    bool DeferredSlicer::trigger_slices(std::list<SliceTask*> &slices)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
trigger_slices	legion_runtime/legion_tasks.cc	/^    bool MultiTask::trigger_slices(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
trigger_task_commit	legion_runtime/legion_tasks.cc	/^    void IndexTask::trigger_task_commit(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
trigger_task_commit	legion_runtime/legion_tasks.cc	/^    void IndividualTask::trigger_task_commit(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
trigger_task_commit	legion_runtime/legion_tasks.cc	/^    void PointTask::trigger_task_commit(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
trigger_task_commit	legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_task_commit(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_task_commit	legion_runtime/legion_tasks.cc	/^    void WrapperTask::trigger_task_commit(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
trigger_task_complete	legion_runtime/legion_tasks.cc	/^    void IndexTask::trigger_task_complete(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
trigger_task_complete	legion_runtime/legion_tasks.cc	/^    void IndividualTask::trigger_task_complete(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
trigger_task_complete	legion_runtime/legion_tasks.cc	/^    void PointTask::trigger_task_complete(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
trigger_task_complete	legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_task_complete(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_task_complete	legion_runtime/legion_tasks.cc	/^    void WrapperTask::trigger_task_complete(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
trigger_tasks	legion_runtime/legion_ops.cc	/^    bool MustEpochTriggerer::trigger_tasks($/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
triggerables	legion_runtime/shared_lowlevel.cc	/^        std::list<TriggerableInfo> triggerables;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
triggered	legion_runtime/lowlevel.cc	/^	  bool triggered;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry	file:
triggerer	legion_runtime/legion_ops.h	/^        MustEpochTriggerer *triggerer;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndexArgs
triggerer	legion_runtime/legion_ops.h	/^        MustEpochTriggerer *triggerer;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndivArgs
triggering_complete	legion_runtime/legion_ops.h	/^      bool triggering_complete;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
trim	lua_src/lbitlib.c	25;"	d	file:
try_acpi_shutdown	arch/hrt/shutdown.c	/^try_acpi_shutdown (struct acpi_table_header * hdr, void * arg)$/;"	f	file:
try_acpi_shutdown	arch/x64/shutdown.c	/^try_acpi_shutdown (struct acpi_table_header * hdr, void * arg)$/;"	f	file:
trydecpoint	lua_src/llex.c	/^static void trydecpoint (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
tryfuncTM	lua_src/ldo.c	/^static StkId tryfuncTM (lua_State *L, StkId func) {$/;"	f	file:
two	legion_runtime/legion_logging.h	/^        Event two;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventDependency
txtToken	lua_src/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
type	acpi/acpica/aclocal.h	/^	u8 type;		\/* ACPI Type associated with this name *\/$/;"	m	struct:acpi_namespace_node
type	acpi/acpica/aclocal.h	/^	u8 type;		\/* Opcode type *\/$/;"	m	struct:acpi_opcode_info
type	acpi/acpica/aclocal.h	/^	u8 type;$/;"	m	struct:acpi_package_info
type	acpi/acpica/aclocal.h	/^	u8 type;$/;"	m	struct:acpi_package_info2
type	acpi/acpica/aclocal.h	/^	u8 type;$/;"	m	struct:acpi_package_info3
type	legion_runtime/lowlevel_impl.h	/^      ID_Types type(void) const { return (ID_Types)(value >> (NODE_BITS + INDEX_BITS)); }$/;"	f	class:LegionRuntime::LowLevel::ID
type	nautilus/printk.c	/^	enum format_type	type;$/;"	m	struct:printf_spec	typeref:enum:printf_spec::format_type	file:
type	nautilus/vc.c	/^  enum nk_vc_type type;$/;"	m	struct:nk_virtual_console	typeref:enum:nk_virtual_console::nk_vc_type	file:
typeerror	lua_src/lauxlib.c	/^static int typeerror (lua_State *L, int narg, const char *tname) {$/;"	f	file:
typeify	legion_runtime/accessor.h	/^	  RegionAccessor<Generic, ET, ET> typeify(void) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
u16	acpi/acpica/accommon.h	56;"	d
u16	acpi/acpica/actables.h	48;"	d
u16	arch/x64/numa.c	31;"	d	file:
u32	acpi/acpica/accommon.h	57;"	d
u32	acpi/acpica/actables.h	49;"	d
u32	arch/x64/numa.c	32;"	d	file:
u64	acpi/acpica/accommon.h	58;"	d
u64	acpi/acpica/actables.h	50;"	d
u64	arch/x64/numa.c	33;"	d	file:
u8	acpi/acpica/accommon.h	55;"	d
u8	acpi/acpica/actables.h	47;"	d
u8	arch/x64/numa.c	30;"	d	file:
uchar	lua_src/lstrlib.c	33;"	d	file:
uchar_t	test/hpcg/cg.h	/^typedef unsigned char uchar_t;$/;"	t	namespace:lgncg::cg
uchar_t	test/hpcg/hpcg-main.cc	/^typedef unsigned char uchar_t;$/;"	t	namespace:__anon37	file:
udata2finalize	lua_src/lgc.c	/^static GCObject *udata2finalize (global_State *g) {$/;"	f	file:
udatatypename	lua_src/ltm.c	/^static const char udatatypename[] = "userdata";$/;"	v	file:
ui	nautilus/libccompat.c	/^    uint64_t ui;$/;"	m	union:ieee754dbl	file:
uid	legion_runtime/region_tree.h	/^      UniqueID uid;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
uid	legion_runtime/region_tree.h	/^      const UniqueID uid;$/;"	m	class:LegionRuntime::HighLevel::StateSender
uint64	legion_runtime/lowlevel_impl.h	/^      typedef unsigned long long uint64;$/;"	t	struct:LegionRuntime::LowLevel::ElementMaskImpl
uintmax_t	nautilus/fmtout.c	/^typedef unsigned long uintmax_t;$/;"	t	file:
uintptr_t	nautilus/fmtout.c	/^typedef unsigned long uintptr_t;$/;"	t	file:
ulong_t	test/benchmark.h	/^typedef unsigned long ulong_t;$/;"	t
unbound_search	lua_src/ltable.c	/^static int unbound_search (Table *t, unsigned int j) {$/;"	f	file:
undefgoto	lua_src/lparser.c	/^static l_noret undefgoto (LexState *ls, Labeldesc *gt) {$/;"	f	file:
ungetc	nautilus/libccompat.c	/^int ungetc (int character, FILE * stream)$/;"	f
unguarded_delta	legion_runtime/lowlevel.cc	/^      int unguarded_delta;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates	file:
unique_distributed_id	legion_runtime/runtime.h	/^      DistributedID unique_distributed_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unique_field_id	legion_runtime/runtime.h	/^      unsigned unique_field_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unique_field_space_id	legion_runtime/runtime.h	/^      unsigned unique_field_space_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unique_id	legion_runtime/legion_logging.h	/^        UniqueID unique_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceRequirement
unique_id	legion_runtime/legion_profiling.h	/^        UniqueID unique_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::OpInstance
unique_id	legion_runtime/legion_profiling.h	/^        UniqueID unique_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProfilingEvent
unique_id	legion_runtime/legion_profiling.h	/^        UniqueID unique_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::TaskInstance
unique_op_id	legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
unique_op_id	legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
unique_op_id	legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationEvents
unique_op_id	legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationTiming
unique_op_id	legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalUser
unique_op_id	legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgRequirementFields
unique_op_id	legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceVariant
unique_op_id	legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
unique_op_id	legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopLevelTask
unique_op_id	legion_runtime/legion_ops.h	/^      UniqueID unique_op_id;$/;"	m	class:LegionRuntime::HighLevel::Operation
unique_operation_id	legion_runtime/runtime.h	/^      unsigned unique_operation_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unique_partition_id	legion_runtime/runtime.h	/^      unsigned unique_partition_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unique_tree_id	legion_runtime/runtime.h	/^      unsigned unique_tree_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unlinkupval	lua_src/lfunc.c	/^static void unlinkupval (UpVal *uv) {$/;"	f	file:
unlock	legion_runtime/lowlevel_impl.h	/^	  free_list->lock.unlock();$/;"	t	class:LegionRuntime::LowLevel::DynamicTableAllocator
unlock	legion_runtime/lowlevel_impl.h	/^      void unlock(void) { gasnet_hsl_unlock(&mutex); }$/;"	f	class:LegionRuntime::LowLevel::GASNetHSL
unlock	legion_runtime/utilities.h	/^    void unlock(void) {$/;"	f	class:LegionRuntime::ImmovableLock
unmakemask	lua_src/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
unmap_all_regions	legion_runtime/legion.cc	/^    void HighLevelRuntime::unmap_all_regions(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
unmap_all_regions	legion_runtime/legion_tasks.cc	/^    void SingleTask::unmap_all_regions(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
unmap_all_regions	legion_runtime/runtime.cc	/^    void Runtime::unmap_all_regions(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
unmap_region	legion_runtime/legion.cc	/^    void HighLevelRuntime::unmap_region(Context ctx, PhysicalRegion region)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
unmap_region	legion_runtime/runtime.cc	/^    void PhysicalRegion::Impl::unmap_region(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
unmap_region	legion_runtime/runtime.cc	/^    void Runtime::unmap_region(Context ctx, PhysicalRegion region)$/;"	f	class:LegionRuntime::HighLevel::Runtime
unmerge_from_ros	arch/hrt/hrt.c	/^unmerge_from_ros (void)$/;"	f	file:
unpack	legion_runtime/legion.h	/^        static inline T unpack(const void *result)$/;"	f	struct:LegionRuntime::HighLevel::LegionSerialization::NonPODSerializer
unpack	legion_runtime/legion.h	/^        static inline T unpack(const void *result)$/;"	f	struct:LegionRuntime::HighLevel::LegionSerialization::StructHandler
unpack	legion_runtime/legion.h	/^      static inline T unpack(const void *result)$/;"	f	class:LegionRuntime::HighLevel::LegionSerialization
unpack	lua_src/ltablib.c	/^static int unpack (lua_State *L) {$/;"	f	file:
unpack_arguments	legion_runtime/runtime.cc	/^    void ArgumentMap::Impl::unpack_arguments(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
unpack_base_task	legion_runtime/legion_tasks.cc	/^    void TaskOp::unpack_base_task(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_composite_node	legion_runtime/region_tree.cc	/^    void CompositeNode::unpack_composite_node(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
unpack_composite_view	legion_runtime/region_tree.cc	/^    void CompositeView::unpack_composite_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
unpack_field_tree	legion_runtime/field_tree.h	/^    void FieldTree<UT>::unpack_field_tree(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
unpack_future	legion_runtime/legion_ops.cc	/^    void MustEpochOp::unpack_future(const DomainPoint &point, $/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
unpack_future	legion_runtime/runtime.cc	/^    void Future::Impl::unpack_future(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
unpack_grant	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::unpack_grant(Grant &grant, Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_grant	legion_runtime/runtime.cc	/^    void Grant::Impl::unpack_grant(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
unpack_index_space_requirement	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::unpack_index_space_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_layout_description	legion_runtime/region_tree.cc	/^    void LayoutDescription::unpack_layout_description(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
unpack_manager	legion_runtime/region_tree.cc	/^    \/*static*\/ InstanceManager* InstanceManager::unpack_manager($/;"	f	class:LegionRuntime::HighLevel::InstanceManager
unpack_manager	legion_runtime/region_tree.cc	/^    \/*static*\/ ReductionManager* ReductionManager::unpack_manager($/;"	f	class:LegionRuntime::HighLevel::ReductionManager
unpack_materialized_view	legion_runtime/region_tree.cc	/^    void MaterializedView::unpack_materialized_view(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
unpack_multi_task	legion_runtime/legion_tasks.cc	/^    void MultiTask::unpack_multi_task(Deserializer &derez, bool unpack_args)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
unpack_parent_task	legion_runtime/legion_tasks.cc	/^    void RemoteTask::unpack_parent_task(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
unpack_phase_barrier	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::unpack_phase_barrier($/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_point	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::unpack_point(Deserializer &derez, DomainPoint &p)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_privilege_state	legion_runtime/legion_tasks.cc	/^    void TaskOp::unpack_privilege_state(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_reduction_view	legion_runtime/region_tree.cc	/^    void ReductionView::unpack_reduction_view(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::ReductionView
unpack_reference	legion_runtime/region_tree.cc	/^    \/*static*\/ InstanceRef InstanceRef::unpack_reference(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
unpack_region_requirement	legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::unpack_region_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_remote_commit	legion_runtime/legion_tasks.cc	/^    void IndividualTask::unpack_remote_commit(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
unpack_remote_complete	legion_runtime/legion_tasks.cc	/^    void IndividualTask::unpack_remote_complete(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
unpack_remote_mapped	legion_runtime/legion_tasks.cc	/^    void IndividualTask::unpack_remote_mapped(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
unpack_send_state	legion_runtime/region_tree.cc	/^    void RegionTreeNode::unpack_send_state(ContextID ctx, Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
unpack_single_task	legion_runtime/legion_tasks.cc	/^    void SingleTask::unpack_single_task(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
unpack_slice_commit	legion_runtime/legion_tasks.cc	/^    void IndexTask::unpack_slice_commit(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
unpack_slice_complete	legion_runtime/legion_tasks.cc	/^    void IndexTask::unpack_slice_complete(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
unpack_slice_mapped	legion_runtime/legion_tasks.cc	/^    void IndexTask::unpack_slice_mapped(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
unpack_task	legion_runtime/legion_tasks.cc	/^    bool IndexTask::unpack_task(Deserializer &derez, Processor current)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
unpack_task	legion_runtime/legion_tasks.cc	/^    bool IndividualTask::unpack_task(Deserializer &derez, Processor current)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
unpack_task	legion_runtime/legion_tasks.cc	/^    bool PointTask::unpack_task(Deserializer &derez, Processor current)$/;"	f	class:LegionRuntime::HighLevel::PointTask
unpack_task	legion_runtime/legion_tasks.cc	/^    bool SliceTask::unpack_task(Deserializer &derez, Processor current)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
unpack_task	legion_runtime/legion_tasks.cc	/^    bool WrapperTask::unpack_task(Deserializer &derez, Processor current)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
unregister_child_operation	legion_runtime/legion_tasks.cc	/^    void InlineTask::unregister_child_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
unregister_child_operation	legion_runtime/legion_tasks.cc	/^    void SingleTask::unregister_child_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
unregister_distributed_collectable	legion_runtime/runtime.cc	/^    void Runtime::unregister_distributed_collectable(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
unregister_future	legion_runtime/runtime.cc	/^    void Runtime::unregister_future(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
unregister_hierarchical_collectable	legion_runtime/runtime.cc	/^    void Runtime::unregister_hierarchical_collectable(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
unregister_inline_mapped_region	legion_runtime/legion_tasks.cc	/^    void SingleTask::unregister_inline_mapped_region(PhysicalRegion &region)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
unregister_logical_view	legion_runtime/region_tree.cc	/^    void RegionTreeForest::unregister_logical_view(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
unregister_physical_manager	legion_runtime/region_tree.cc	/^    void RegionTreeForest::unregister_physical_manager(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
unroll	lua_src/ldo.c	/^static void unroll (lua_State *L, void *ud) {$/;"	f	file:
unset_bit	legion_runtime/legion_utilities.h	/^    inline void AVXBitMask<MAX>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
unset_bit	legion_runtime/legion_utilities.h	/^    inline void AVXTLBitMask<MAX>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
unset_bit	legion_runtime/legion_utilities.h	/^    inline void BitMask<T,MAX,SHIFT,MASK>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::BitMask
unset_bit	legion_runtime/legion_utilities.h	/^    inline void SSEBitMask<MAX>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
unset_bit	legion_runtime/legion_utilities.h	/^    inline void SSETLBitMask<MAX>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
unset_bit	legion_runtime/legion_utilities.h	/^    inline void TLBitMask<T,MAX,SHIFT,MASK>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
unverified_regions	legion_runtime/legion_ops.h	/^      std::set<unsigned> unverified_regions;$/;"	m	class:LegionRuntime::HighLevel::Operation
up	legion_runtime/legion_logging.cc	/^    void TreeStateLogger::up(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
up	legion_runtime/legion_spy.cc	/^    void TreeStateLogger::up(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
update	acpi/acpica/aclocal.h	/^	struct acpi_update_state update;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_update_state
update_arrival_barriers	legion_runtime/legion_tasks.cc	/^    void TaskOp::update_arrival_barriers($/;"	f	class:LegionRuntime::HighLevel::TaskOp
update_child_info	legion_runtime/region_tree.cc	/^    void CompositeNode::update_child_info(CompositeNode *child, $/;"	f	class:LegionRuntime::HighLevel::CompositeNode
update_close_operations	legion_runtime/region_tree.cc	/^    void RegionTreeNode::update_close_operations(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
update_collection_table	legion_runtime/legion.cc	/^    \/*static*\/ TaskID HighLevelRuntime::update_collection_table($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
update_collection_table	legion_runtime/runtime.cc	/^    \/*static*\/ TaskID Runtime::update_collection_table($/;"	f	class:LegionRuntime::HighLevel::Runtime
update_component_domains	legion_runtime/region_tree.cc	/^    void IndexSpaceNode::update_component_domains(const std::set<Domain> &doms)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
update_current_fence	legion_runtime/legion_tasks.cc	/^    void InlineTask::update_current_fence(FenceOp *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
update_current_fence	legion_runtime/legion_tasks.cc	/^    void SingleTask::update_current_fence(FenceOp *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
update_dirty_mask	legion_runtime/region_tree.cc	/^    void PhysicalCloser::update_dirty_mask(const FieldMask &mask)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
update_grants	legion_runtime/legion_tasks.cc	/^    void TaskOp::update_grants(const std::vector<Grant> &requested_grants)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
update_instance_views	legion_runtime/region_tree.cc	/^    void CompositeNode::update_instance_views(InstanceView *view,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
update_known_nodes	legion_runtime/region_tree.cc	/^    void LayoutDescription::update_known_nodes(AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
update_mappers	test/circuit.cc	/^static void update_mappers(Machine *machine, HighLevelRuntime *rt,$/;"	f	file:
update_node_views	legion_runtime/region_tree.cc	/^    void PhysicalCloser::update_node_views(RegionTreeNode *node,$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
update_parent_info	legion_runtime/region_tree.cc	/^    void CompositeNode::update_parent_info(const FieldMask &capture_mask)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
update_profiling_info	legion_runtime/mapping_utilities.cc	/^      void MappingProfiler::update_profiling_info(const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
update_reduction_views	legion_runtime/region_tree.cc	/^    void CompositeCloser::update_reduction_views(ReductionView *view,$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
update_reduction_views	legion_runtime/region_tree.cc	/^    void CompositeView::update_reduction_views(ReductionView *view,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
update_reduction_views	legion_runtime/region_tree.cc	/^    void RegionTreeNode::update_reduction_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
update_remote_spaces	legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::update_remote_spaces(AddressSpaceID sid)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
update_state	legion_runtime/garbage_collection.cc	/^    bool CollectableState::update_state(bool has_gc_refs,$/;"	f	class:LegionRuntime::HighLevel::CollectableState
update_type_t	arch/k1om/xeon_phi.c	/^} update_type_t;$/;"	t	typeref:enum:__anon43	file:
update_valid_mask	legion_runtime/region_tree.cc	/^    void CompositeView::update_valid_mask(const FieldMask &mask)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
update_valid_views	legion_runtime/region_tree.cc	/^    void CompositeCloser::update_valid_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
update_valid_views	legion_runtime/region_tree.cc	/^    void RegionTreeNode::update_valid_views(PhysicalState &state, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
update_valid_views	legion_runtime/region_tree.cc	/^    void RegionTreeNode::update_valid_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
update_versions	legion_runtime/region_tree.cc	/^    void MaterializedView::update_versions(const FieldMask &update_mask)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
update_voltages	test/circuit_cpu.cc	/^static inline void update_voltages(LogicalRegion lr,$/;"	f	file:
upper_targets	legion_runtime/region_tree.h	/^      std::vector<MaterializedView*> upper_targets;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
upval	lua_src/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
upvalname	lua_src/ldebug.c	/^static const char *upvalname (Proto *p, int uv) {$/;"	f	file:
usage	legion_runtime/region_tree.h	/^      RegionUsage usage;$/;"	m	struct:LegionRuntime::HighLevel::GenericUser
usage	legion_runtime/region_tree.h	/^      const RegionUsage usage;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
use_count	acpi/acpica/aclocal.h	/^	u32 use_count;$/;"	m	struct:acpi_mutex_info
use_event	legion_runtime/region_tree.h	/^      const Event use_event;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
user	legion_runtime/region_tree.h	/^      const LogicalUser &user;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
user	legion_runtime/region_tree.h	/^      const LogicalUser user;$/;"	m	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
user	legion_runtime/region_tree.h	/^      const PhysicalUser user;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
user_id	legion_runtime/legion.h	/^      const Processor::TaskFuncID user_id;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection
user_level_coherence	legion_runtime/region_tree.h	/^      FieldMask user_level_coherence;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
user_mask	legion_runtime/region_tree.h	/^      const FieldMask user_mask;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
user_space	acpi/acpica/aclocal.h	/^	ACPI_COMMON_DEBUG_MEM_HEADER u64 user_space;$/;"	m	struct:acpi_debug_mem_block
util	legion_runtime/lowlevel_impl.h	/^      Processor util;$/;"	m	class:LegionRuntime::LowLevel::Processor::Impl
util_proc	legion_runtime/lowlevel_impl.h	/^      UtilityProcessor *util_proc;$/;"	m	class:LegionRuntime::LowLevel::Processor::Impl
util_shutdown	legion_runtime/shared_lowlevel.cc	/^        bool util_shutdown;       \/\/ for knowing when our utility processor is done$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
util_users	legion_runtime/shared_lowlevel.cc	/^        std::set<Processor> util_users;\/\/ Users of the utility processor to know when it's safe to finish$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
utility	legion_runtime/legion_profiling.h	/^        bool utility;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
utility	legion_runtime/shared_lowlevel.cc	/^        Processor utility;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
utility_finish	legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::utility_finish(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
utility_group	legion_runtime/runtime.h	/^      Processor utility_group;$/;"	m	class:LegionRuntime::HighLevel::Runtime
utility_proc	legion_runtime/runtime.h	/^      const Processor utility_proc;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
utility_proc	legion_runtime/shared_lowlevel.cc	/^        ProcessorImpl *utility_proc;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
utptr_t	legion_runtime/common.h	/^  utptr_t(const utptr_t &p) : value(p.value) { }$/;"	f	struct:utptr_t
utptr_t	legion_runtime/common.h	/^  utptr_t(unsigned v) : value(v) { }$/;"	f	struct:utptr_t
utptr_t	legion_runtime/common.h	/^  utptr_t(void) : value(0) { }$/;"	f	struct:utptr_t
utptr_t	legion_runtime/common.h	/^struct utptr_t$/;"	s
uval	test/circuit.cc	/^union test_dbl { double dval; unsigned long long uval; };$/;"	m	union:test_dbl	file:
v	lua_src/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	lua_src/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
v	test/saxpy_array.cc	/^  float v;$/;"	m	struct:Entry	file:
v3_vm_reset_type	nautilus/vmm.c	/^typedef enum {V3_VM_RESET_ALL,V3_VM_RESET_HRT,V3_VM_RESET_ROS,V3_VM_RESET_CORE_RANGE} v3_vm_reset_type;$/;"	t	typeref:enum:__anon45	file:
valid	legion_runtime/activemsg.h	/^  bool valid;$/;"	m	struct:HandlerReplyFuture
valid	legion_runtime/lowlevel.h	/^      bool valid(void) const { return(dim >= 0); }$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
valid	legion_runtime/lowlevel_impl.h	/^	bool valid;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
valid	legion_runtime/lowlevel_impl.h	/^	bool valid;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
valid	legion_runtime/lowlevel_impl.h	/^      bool valid;$/;"	m	class:LegionRuntime::LowLevel::ProcessorAssignment
valid	legion_runtime/runtime.h	/^      bool valid; \/\/ whether it is currently valid$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
valid	legion_runtime/runtime.h	/^      const bool valid;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
valid_domains	legion_runtime/runtime.h	/^      std::vector<Domain> valid_domains;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
valid_fields	legion_runtime/region_tree.h	/^        FieldMask valid_fields;$/;"	m	struct:LegionRuntime::HighLevel::CompositeView::ReduceInfo
valid_fields	legion_runtime/region_tree.h	/^      FieldMask valid_fields;$/;"	m	struct:LegionRuntime::HighLevel::ChildState
valid_map	legion_runtime/region_tree.h	/^      std::map<Color,IndexPartNode*> valid_map;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
valid_map	legion_runtime/region_tree.h	/^      std::map<Color,IndexSpaceNode*> valid_map;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
valid_map	legion_runtime/region_tree.h	/^      std::map<Color,PartitionNode*> valid_map;$/;"	m	class:LegionRuntime::HighLevel::RegionNode
valid_map	legion_runtime/region_tree.h	/^      std::map<Color,RegionNode*> valid_map;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
valid_mask	legion_runtime/lowlevel_impl.h	/^      ElementMask *valid_mask;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask	legion_runtime/region_tree.h	/^      FieldMask valid_mask;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
valid_mask_base	legion_runtime/lowlevel.h	/^      unsigned *valid_mask_base;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
valid_mask_complete	legion_runtime/lowlevel_impl.h	/^      bool valid_mask_complete;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_contig	legion_runtime/lowlevel_impl.h	/^      bool valid_mask_contig;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_count	legion_runtime/lowlevel_impl.h	/^      int valid_mask_count;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_event	legion_runtime/lowlevel_impl.h	/^      Event valid_mask_event;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_first	legion_runtime/lowlevel_impl.h	/^      int valid_mask_first, valid_mask_last;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_last	legion_runtime/lowlevel_impl.h	/^      int valid_mask_first, valid_mask_last;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_mutex	legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t valid_mask_mutex;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_owners	legion_runtime/lowlevel_impl.h	/^	unsigned valid_mask_owners;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::CoherentData
valid_points	legion_runtime/runtime.h	/^      std::set<DomainPoint,DomainPoint::STLComparator> valid_points;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
valid_reductions	legion_runtime/region_tree.h	/^      std::map<ReductionView*,ReduceInfo> valid_reductions;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
valid_references	legion_runtime/garbage_collection.h	/^      unsigned valid_references;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
valid_references	legion_runtime/garbage_collection.h	/^      unsigned valid_references;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
valid_views	legion_runtime/region_tree.h	/^                     VALID_VIEW_ALLOC>::map valid_views;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
valid_views	legion_runtime/region_tree.h	/^      std::map<InstanceView*,FieldMask> valid_views;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
valid_views	legion_runtime/region_tree.h	/^      std::set<MaterializedView*> valid_views;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
valid_wait_event	legion_runtime/legion_tasks.h	/^      bool valid_wait_event;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
validates	legion_runtime/legion_trace.h	/^        bool validates;$/;"	m	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
validates	legion_runtime/region_tree.h	/^      bool validates;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
validates_regions	legion_runtime/region_tree.h	/^      const bool validates_regions;$/;"	m	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
vals	test/hpcg/sparsemat.h	/^    Vector vals;$/;"	m	struct:lgncg::SparseMatrix
value	acpi/acpica/aclocal.h	/^	u32 value;$/;"	m	struct:acpi_namespace_node
value	acpi/acpica/aclocal.h	/^	u8 value;$/;"	m	struct:acpi_interface_info
value	legion_runtime/accessor.h	/^	\/*const*\/ T value;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Const
value	legion_runtime/accessor.h	/^	static const T value = val;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Const
value	legion_runtime/accessor.h	/^	static const bool value = sizeof(test_for_struct<T>(0)) == sizeof(yes);$/;"	m	struct:LegionRuntime::Accessor::TemplateFu::IsAStruct
value	legion_runtime/activemsg.h	/^  T value;$/;"	m	struct:HandlerReplyFuture
value	legion_runtime/common.h	/^  unsigned value; $/;"	m	struct:ptr_t
value	legion_runtime/common.h	/^  unsigned value; $/;"	m	struct:utptr_t
value	legion_runtime/legion.h	/^        static const bool value = $/;"	m	struct:LegionRuntime::HighLevel::LegionSerialization::HasSerialize
value	legion_runtime/legion.h	/^        static const bool value = $/;"	m	struct:LegionRuntime::HighLevel::LegionSerialization::IsAStruct
value	legion_runtime/legion_types.h	/^    static const bool value = false;$/;"	m	struct:LegionRuntime::LegionTypeInequality
value	legion_runtime/legion_types.h	/^    static const bool value = true;$/;"	m	struct:LegionRuntime::LegionTypeInequality
value	legion_runtime/lowlevel_impl.h	/^      IDType value;$/;"	m	class:LegionRuntime::LowLevel::ID
value	legion_runtime/lowlevel_impl.h	/^      T value;$/;"	m	class:LegionRuntime::LowLevel::Atomic
value	nautilus/hashtable.c	/^    addr_t value;$/;"	m	struct:nk_hash_entry	file:
value_type	legion_runtime/legion_allocation.h	/^      typedef T              value_type;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
values	legion_runtime/runtime.h	/^      std::set<TaskArgument> values;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMapStore
variants	legion_runtime/legion.h	/^      TaskVariantCollection              *variants;$/;"	m	class:LegionRuntime::HighLevel::Task
variants	legion_runtime/legion.h	/^      std::map<VariantID,Variant> variants;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection
vc_list	nautilus/vc.c	/^static struct list_head vc_list;$/;"	v	typeref:struct:list_head	file:
vc_node	nautilus/vc.c	/^  struct list_head vc_node;$/;"	m	struct:nk_virtual_console	typeref:struct:nk_virtual_console::list_head	file:
veccp	test/hpcg/veccp.h	/^veccp(const Vector &from,$/;"	f	namespace:lgncg
vector	asm/excp_early.S	/^    vector = 0$/;"	d
vector	asm/excp_early.S	/^    vector = 32$/;"	d
vector	asm/excp_early.S	/^    vector = vector + 1$/;"	d
vector	legion_runtime/legion_allocation.h	/^      typedef std::vector<T, LegionAllocator<T, A> > vector;$/;"	t	struct:LegionRuntime::HighLevel::LegionContainer
veczero	test/hpcg/vec-zero.h	/^veczero(Vector &v,$/;"	f	namespace:lgncg
veczeroTask	test/hpcg/vec-zero.h	/^veczeroTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
verbose	legion_runtime/legion_spy.h	/^      const bool verbose;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
verbose_logging	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::verbose_logging = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
verbose_logging	legion_runtime/runtime.h	/^      static bool verbose_logging;$/;"	m	class:LegionRuntime::HighLevel::Runtime
verified	legion_runtime/legion.h	/^      bool          verified;$/;"	m	struct:LegionRuntime::HighLevel::IndexSpaceRequirement
verified	legion_runtime/legion.h	/^      bool         verified;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceRequirement
verify_access	legion_runtime/lowlevel.cc	/^    void AccessorType::verify_access(void *impl_ptr, unsigned ptr)$/;"	f	class:LegionRuntime::Accessor::AccessorType
verify_access	legion_runtime/lowlevel.cc	/^    void RegionInstance::Impl::verify_access(unsigned ptr)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
verify_access	legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::verify_access(unsigned ptr)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
verify_dependence	legion_runtime/legion_ops.cc	/^    void MustEpochOp::verify_dependence(Operation *src_op, GenerationID src_gen,$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
verify_disjointness	legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::verify_disjointness = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
verify_disjointness	legion_runtime/runtime.h	/^      static bool verify_disjointness;$/;"	m	class:LegionRuntime::HighLevel::Runtime
verify_regions	legion_runtime/legion_ops.h	/^      std::map<Operation*,std::set<unsigned> > verify_regions;$/;"	m	class:LegionRuntime::HighLevel::Operation
verify_requirement	legion_runtime/runtime.cc	/^    LegionErrorType Runtime::verify_requirement($/;"	f	class:LegionRuntime::HighLevel::Runtime
vfprintf	nautilus/libccompat.c	/^vfprintf (FILE * stream, const char * format, va_list arg)$/;"	f
vga_attr	dev/vga.c	/^static uint8_t vga_attr;$/;"	v	file:
vga_get_cursor	dev/vga.c	/^inline void vga_get_cursor(uint8_t *x, uint8_t *y)$/;"	f
vga_init	dev/vga.c	/^void vga_init()$/;"	f
vga_init_screen	dev/vga.c	/^void vga_init_screen()$/;"	f
vga_make_color	dev/vga.c	/^vga_make_color (enum vga_color fg, enum vga_color bg) $/;"	f
vga_make_entry	dev/vga.c	/^vga_make_entry (char c, uint8_t color)$/;"	f
vga_print	dev/vga.c	/^void vga_print(char *buf)$/;"	f
vga_putchar	dev/vga.c	/^void vga_putchar(char c)$/;"	f
vga_puts	dev/vga.c	/^void vga_puts(char *buf)$/;"	f
vga_scrollup	dev/vga.c	/^void vga_scrollup (void) $/;"	f
vga_set_cursor	dev/vga.c	/^inline void vga_set_cursor(uint8_t x, uint8_t y)$/;"	f
vga_x	dev/vga.c	/^static uint8_t vga_x, vga_y;$/;"	v	file:
vga_y	dev/vga.c	/^static uint8_t vga_x, vga_y;$/;"	v	file:
vid	legion_runtime/legion.h	/^        VariantID vid;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
vid	legion_runtime/legion_logging.h	/^        VariantID vid;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceVariant
vid	legion_runtime/legion_logging.h	/^        VariantID vid;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
view	legion_runtime/region_tree.h	/^      LogicalView *view;$/;"	m	class:LegionRuntime::HighLevel::MappingRef
view	legion_runtime/region_tree.h	/^      LogicalView *view;$/;"	m	class:LegionRuntime::HighLevel::ViewHandle
view	legion_runtime/runtime.h	/^        LogicalView *view;$/;"	m	struct:LegionRuntime::HighLevel::GarbageCollectionEpoch::GarbageCollectionArgs
view_lock	legion_runtime/region_tree.h	/^      Reservation view_lock;$/;"	m	class:LegionRuntime::HighLevel::LogicalView
views	legion_runtime/region_tree.h	/^                     LOGICAL_VIEW_ALLOC>::map views;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
virtio_pci_deinit	dev/virtio_pci.c	/^int virtio_pci_deinit()$/;"	f
virtio_pci_init	dev/virtio_pci.c	/^int virtio_pci_init(struct naut_info * naut)$/;"	f
virtual_map	legion_runtime/legion.h	/^      bool virtual_map;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
virtual_mapped	legion_runtime/legion_tasks.h	/^      std::vector<bool> virtual_mapped;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
visible_memories_from_memory	legion_runtime/lowlevel.h	/^      std::map<Memory,std::set<Memory> > visible_memories_from_memory;$/;"	m	class:LegionRuntime::LowLevel::Machine
visible_memories_from_procs	legion_runtime/lowlevel.h	/^      std::map<Processor,std::set<Memory> > visible_memories_from_procs;$/;"	m	class:LegionRuntime::LowLevel::Machine
visible_procs_from_memory	legion_runtime/lowlevel.h	/^      std::map<Memory,std::set<Processor> > visible_procs_from_memory;$/;"	m	class:LegionRuntime::LowLevel::Machine
visit_node	legion_runtime/region_tree.cc	/^    bool PartitionNode::visit_node(NodeTraverser *traverser)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
visit_node	legion_runtime/region_tree.cc	/^    bool PartitionNode::visit_node(PathTraverser *traverser)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
visit_node	legion_runtime/region_tree.cc	/^    bool RegionNode::visit_node(NodeTraverser *traverser)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
visit_node	legion_runtime/region_tree.cc	/^    bool RegionNode::visit_node(PathTraverser *traverser)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
visit_only_valid	legion_runtime/region_tree.cc	/^    bool LogicalInitializer::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
visit_only_valid	legion_runtime/region_tree.cc	/^    bool LogicalInvalidator::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
visit_only_valid	legion_runtime/region_tree.cc	/^    bool LogicalRegistrar<DOMINATE>::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
visit_only_valid	legion_runtime/region_tree.cc	/^    bool PhysicalInitializer::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
visit_only_valid	legion_runtime/region_tree.cc	/^    bool PhysicalInvalidator::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
visit_only_valid	legion_runtime/region_tree.cc	/^    bool ReductionCloser::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
visit_only_valid	legion_runtime/region_tree.cc	/^    bool StateReturner::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::StateReturner
visit_only_valid	legion_runtime/region_tree.cc	/^    bool StateSender::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::StateSender
visit_partition	legion_runtime/region_tree.cc	/^    bool LogicalInitializer::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
visit_partition	legion_runtime/region_tree.cc	/^    bool LogicalInvalidator::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
visit_partition	legion_runtime/region_tree.cc	/^    bool LogicalPathRegistrar::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
visit_partition	legion_runtime/region_tree.cc	/^    bool LogicalRegistrar<DOMINATE>::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
visit_partition	legion_runtime/region_tree.cc	/^    bool MappingTraverser::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
visit_partition	legion_runtime/region_tree.cc	/^    bool PathReturner::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PathReturner
visit_partition	legion_runtime/region_tree.cc	/^    bool PhysicalInitializer::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
visit_partition	legion_runtime/region_tree.cc	/^    bool PhysicalInvalidator::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
visit_partition	legion_runtime/region_tree.cc	/^    bool PremapTraverser::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
visit_partition	legion_runtime/region_tree.cc	/^    bool ReductionCloser::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
visit_partition	legion_runtime/region_tree.cc	/^    bool RestrictedTraverser::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
visit_partition	legion_runtime/region_tree.cc	/^    bool StateReturner::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::StateReturner
visit_partition	legion_runtime/region_tree.cc	/^    bool StateSender::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::StateSender
visit_region	legion_runtime/region_tree.cc	/^    bool LogicalInitializer::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
visit_region	legion_runtime/region_tree.cc	/^    bool LogicalInvalidator::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
visit_region	legion_runtime/region_tree.cc	/^    bool LogicalPathRegistrar::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
visit_region	legion_runtime/region_tree.cc	/^    bool LogicalRegistrar<DOMINATE>::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
visit_region	legion_runtime/region_tree.cc	/^    bool MappingTraverser::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
visit_region	legion_runtime/region_tree.cc	/^    bool PathReturner::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PathReturner
visit_region	legion_runtime/region_tree.cc	/^    bool PhysicalInitializer::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
visit_region	legion_runtime/region_tree.cc	/^    bool PhysicalInvalidator::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
visit_region	legion_runtime/region_tree.cc	/^    bool PremapTraverser::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
visit_region	legion_runtime/region_tree.cc	/^    bool ReductionCloser::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
visit_region	legion_runtime/region_tree.cc	/^    bool RestrictedTraverser::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
visit_region	legion_runtime/region_tree.cc	/^    bool StateReturner::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::StateReturner
visit_region	legion_runtime/region_tree.cc	/^    bool StateSender::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::StateSender
vmcase	lua_src/lvm.c	531;"	d	file:
vmcasenb	lua_src/lvm.c	532;"	d	file:
vmdispatch	lua_src/lvm.c	530;"	d	file:
volume	legion_runtime/arrays.h	/^      int volume(void) const$/;"	f	class:LegionRuntime::Arrays::Rect
volume	legion_runtime/region_tree.h	/^      const size_t volume;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
vprintk	nautilus/printk.c	/^vprintk (const char * fmt, va_list args)$/;"	f
vscnprintf	nautilus/printk.c	/^int vscnprintf(char *buf, size_t size, const char *fmt, va_list args)$/;"	f
vsnprintf	nautilus/printk.c	/^int vsnprintf(char *buf, size_t size, const char *fmt, va_list args)$/;"	f
vsprintf	nautilus/printk.c	/^int vsprintf(char *buf, const char *fmt, va_list args)$/;"	f
vsscanf	nautilus/printk.c	/^int vsscanf(const char * buf, const char * fmt, va_list args)$/;"	f
wait	acpi/osl.c	/^	int wait;$/;"	m	struct:acpi_os_dpc	file:
wait	legion_runtime/activemsg.h	/^  void wait(void)$/;"	f	struct:HandlerReplyFuture
wait	legion_runtime/legion.cc	/^    void PhaseBarrier::wait(void)$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
wait	legion_runtime/lowlevel.cc	/^    void Event::wait(bool block) const$/;"	f	class:LegionRuntime::LowLevel::Event
wait	legion_runtime/shared_lowlevel.cc	/^		Event wait;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
wait	legion_runtime/shared_lowlevel.cc	/^    void Event::wait(bool block) const$/;"	f	class:LegionRuntime::LowLevel::Event
wait	legion_runtime/shared_lowlevel.cc	/^    void EventImpl::wait(EventGeneration needed_gen, bool block)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
wait_all_results	legion_runtime/legion.cc	/^    void FutureMap::wait_all_results(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
wait_all_results	legion_runtime/runtime.cc	/^    void FutureMap::Impl::wait_all_results(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
wait_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>           wait_barriers;$/;"	m	class:LegionRuntime::HighLevel::Task
wait_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>          wait_barriers;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
wait_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>          wait_barriers;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
wait_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         wait_barriers;$/;"	m	class:LegionRuntime::HighLevel::Acquire
wait_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         wait_barriers;$/;"	m	class:LegionRuntime::HighLevel::Copy
wait_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         wait_barriers;$/;"	m	class:LegionRuntime::HighLevel::Release
wait_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       wait_barriers;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
wait_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       wait_barriers;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
wait_barriers	legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       wait_barriers;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
wait_cond	legion_runtime/shared_lowlevel.cc	/^    nk_condvar_t *wait_cond;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
wait_cond	legion_runtime/shared_lowlevel.cc	/^    nk_condvar_t *wait_cond;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
wait_for_shutdown	legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::wait_for_shutdown(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
wait_for_shutdown	legion_runtime/lowlevel.cc	/^    void Machine::wait_for_shutdown(void)$/;"	f	class:LegionRuntime::LowLevel::Machine
wait_for_shutdown	legion_runtime/lowlevel.cc	/^    void UtilityProcessor::wait_for_shutdown(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
wait_for_shutdown	legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::wait_for_shutdown(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
wait_for_shutdown	legion_runtime/shared_lowlevel.cc	/^    void Machine::wait_for_shutdown(void)$/;"	f	class:LegionRuntime::LowLevel::Machine
wait_on	legion_runtime/legion_logging.h	/^        Event wait_on;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
wait_on	legion_runtime/legion_logging.h	/^        UniqueID wait_on;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
wait_on	legion_runtime/lowlevel.cc	/^        Event wait_on;$/;"	m	struct:LegionRuntime::LowLevel::BarrierAdjustMessage::RequestArgs	file:
wait_on	legion_runtime/region_tree.h	/^      std::set<Event> &wait_on;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
wait_on	legion_runtime/region_tree.h	/^      std::set<Event> &wait_on;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
wait_until_valid	legion_runtime/legion.cc	/^    void PhysicalRegion::wait_until_valid(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
wait_until_valid	legion_runtime/runtime.cc	/^    void PhysicalRegion::Impl::wait_until_valid(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
wait_xcall	nautilus/smp.c	/^wait_xcall (struct nk_xcall * x)$/;"	f	file:
waiter	legion_runtime/lowlevel_dma.cc	/^      Waiter waiter; \/\/ if we need to wait on events$/;"	m	class:LegionRuntime::LowLevel::CopyRequest	file:
waiter	legion_runtime/lowlevel_dma.cc	/^      Waiter waiter; \/\/ if we need to wait on events$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
waiters	legion_runtime/legion_ops.h	/^      std::map<PredicateWaiter*,GenerationID> waiters;$/;"	m	class:LegionRuntime::HighLevel::Predicate::Impl
waiters	legion_runtime/shared_lowlevel.cc	/^	bool waiters;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
waiting_queue	legion_runtime/shared_lowlevel.cc	/^	std::list<TaskDesc*> waiting_queue;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
waiting_threads	nautilus/vc.c	/^  nk_thread_queue_t *waiting_threads;$/;"	m	struct:nk_virtual_console	file:
walk_state	acpi/acpica/aclocal.h	/^	struct acpi_walk_state *walk_state;$/;"	m	struct:acpi_pkg_state	typeref:struct:acpi_pkg_state::acpi_walk_state
walk_state_list	acpi/acpica/aclocal.h	/^	struct acpi_walk_state *walk_state_list;	\/* Head of list of walk_states for this thread *\/$/;"	m	struct:acpi_thread_state	typeref:struct:acpi_thread_state::acpi_walk_state
war_enabled	legion_runtime/default_mapper.h	/^      bool war_enabled;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
warn_slowpath	nautilus/printk.c	/^warn_slowpath (const char * file, int line, const char * fmt, ...)$/;"	f
warning	legion_runtime/utilities.h	/^      inline void warning(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
waxpby	test/hpcg/comp-waxpby.h	/^waxpby(double alpha,$/;"	f	namespace:lgncg
waxpbyTask	test/hpcg/comp-waxpby.h	/^waxpbyTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
waxpbyTaskArgs	test/hpcg/comp-waxpby.h	/^    waxpbyTaskArgs(double alpha,$/;"	f	struct:__anon36::waxpbyTaskArgs
waxpbyTaskArgs	test/hpcg/comp-waxpby.h	/^struct waxpbyTaskArgs {$/;"	s	namespace:__anon36
whilestat	lua_src/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
white2gray	lua_src/lgc.c	62;"	d	file:
window_wait	legion_runtime/legion_tasks.h	/^      UserEvent window_wait;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
worker_condvar	legion_runtime/lowlevel_gpu.cc	/^      gasnett_cond_t parent_condvar, worker_condvar;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
worker_enabled	legion_runtime/lowlevel_gpu.cc	/^      bool worker_enabled;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
worker_threads	legion_runtime/lowlevel_dma.cc	/^    static pthread_t *worker_threads = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
wptr	legion_runtime/lowlevel.cc	/^      unsigned wptr, rptr, size;$/;"	m	class:LegionRuntime::LowLevel::AMQueue	file:
write	legion_runtime/accessor.h	/^	  inline void write(PTRTYPE ptr, const T& newval) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
write	legion_runtime/accessor.h	/^	  inline void write(ptr_t ptr, const T& newval) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
write	legion_runtime/accessor.h	/^	  inline void write(ptr_t ptr, const T& newval) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
write	legion_runtime/accessor.h	/^	  inline void write(ptr_t ptr, const T& newval) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
write	legion_runtime/lowlevel.h	/^      __device__ void write(ptr_t ptr, const ET& newval) const { ria.write(ptr, newval); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
write	legion_runtime/lowlevel.h	/^      void write(ptr_t ptr, const ET& newval) const { ria.write(ptr, newval); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
write	legion_runtime/lowlevel.h	/^      void write(ptr_t ptr, const T& newval) const $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
write	legion_runtime/lowlevel.h	/^      void write(ptr_t ptr, const T& newval) const { $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
write	legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::write(unsigned ptr, const void* newval)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
write_partial	legion_runtime/lowlevel.h	/^      void write_partial(ptr_t ptr, off_t offset, const void *src, size_t size) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
write_pmc_ctl	nautilus/pmc.c	/^write_pmc_ctl (uint8_t idx, uint64_t val)$/;"	f	file:
write_pmc_ctr	nautilus/pmc.c	/^write_pmc_ctr (uint8_t idx, uint64_t val)$/;"	f	file:
write_untyped	legion_runtime/lowlevel.cc	/^    void AccessorType::Generic::Untyped::write_untyped(const DomainPoint& dp, const void *src, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
write_untyped	legion_runtime/lowlevel.cc	/^    void AccessorType::Generic::Untyped::write_untyped(ptr_t ptr, const void *src, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
write_untyped	legion_runtime/shared_lowlevel.cc	/^    void AccessorType::Generic::Untyped::write_untyped(const DomainPoint& dp, const void *src, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
write_untyped	legion_runtime/shared_lowlevel.cc	/^    void AccessorType::Generic::Untyped::write_untyped(ptr_t ptr, const void *src, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
writer	lua_src/ldump.c	/^ lua_Writer writer;$/;"	m	struct:__anon47	file:
writer	lua_src/lstrlib.c	/^static int writer (lua_State *L, const void* b, size_t size, void* B) {$/;"	f	file:
writer	nautilus/rwlock.c	/^writer (void * in, void ** out)$/;"	f	file:
writer_mutex	acpi/acpica/aclocal.h	/^	acpi_mutex writer_mutex;$/;"	m	struct:acpi_rw_lock
x	legion_runtime/arrays.h	/^      int x[1];$/;"	m	class:LegionRuntime::Arrays::Point
x	legion_runtime/arrays.h	/^      int x[DIM];$/;"	m	class:LegionRuntime::Arrays::Point
x	test/hpcg/hpcg-problem.h	/^    lgncg::Vector x;$/;"	m	struct:Problem
x_segments	legion_runtime/rectangle_set.h	/^      typename std::set<Segment<T>*> x_segments, y_segments;$/;"	m	class:LegionRuntime::HighLevel::RectangleSet
xc	test/hpcg/mg-data.h	/^    Vector xc;$/;"	m	struct:lgncg::MGData
xcall_handler	nautilus/smp.c	/^xcall_handler (excp_entry_t * e, excp_vec_t v) $/;"	f	file:
xdsdt	arch/hrt/shutdown.c	/^    uint64_t  xdsdt;$/;"	m	struct:shutdown_info	file:
xdsdt	arch/x64/shutdown.c	/^    uint64_t  xdsdt;$/;"	m	struct:shutdown_info	file:
xm_handler	nautilus/fpu.c	/^xm_handler (excp_entry_t * excp, excp_vec_t vec)$/;"	f
xrupt_block	acpi/acpica/aclocal.h	/^	struct acpi_gpe_xrupt_info *xrupt_block;	\/* Backpointer to interrupt block *\/$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_gpe_xrupt_info
xwSame	test/hpcg/comp-waxpby.h	/^    bool xwSame;$/;"	m	struct:__anon36::waxpbyTaskArgs
xySame	test/hpcg/comp-waxpby.h	/^    bool xySame;$/;"	m	struct:__anon36::waxpbyTaskArgs
y_segments	legion_runtime/rectangle_set.h	/^      typename std::set<Segment<T>*> x_segments, y_segments;$/;"	m	class:LegionRuntime::HighLevel::RectangleSet
yes	legion_runtime/accessor.h	/^	typedef char yes[2];$/;"	t	struct:LegionRuntime::Accessor::TemplateFu::IsAStruct
yes	legion_runtime/legion.h	/^        typedef char yes[2];$/;"	t	struct:LegionRuntime::HighLevel::LegionSerialization::HasSerialize
yes	legion_runtime/legion.h	/^        typedef char yes[2];$/;"	t	struct:LegionRuntime::HighLevel::LegionSerialization::IsAStruct
yindex	lua_src/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
z	lua_src/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
z	test/hpcg/cg-data.h	/^    Vector z;$/;"	m	struct:lgncg::CGData
zcmem_cpu_base	legion_runtime/lowlevel_gpu.cc	/^      void *zcmem_cpu_base;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
zcmem_gpu_base	legion_runtime/lowlevel_gpu.cc	/^      void *zcmem_gpu_base;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
zcmem_reserve	legion_runtime/lowlevel_gpu.cc	/^      const size_t zcmem_reserve, fbmem_reserve;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
zcmem_size	legion_runtime/lowlevel_gpu.cc	/^      const size_t zcmem_size, fbmem_size;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
zero_time	legion_runtime/lowlevel.cc	/^    \/*static*\/ double Clock::zero_time = 0;$/;"	m	class:LegionRuntime::LowLevel::Clock	file:
zero_time	legion_runtime/utilities.h	/^      static double zero_time;$/;"	m	class:LegionRuntime::LowLevel::Clock
zone	nautilus/mm/kmem.c	/^    struct buddy_mempool * zone; \/* zone to which this block belongs *\/$/;"	m	struct:kmem_block_hdr	typeref:struct:kmem_block_hdr::buddy_mempool	file:
~AMQueue	legion_runtime/lowlevel.cc	/^      ~AMQueue(void)$/;"	f	class:LegionRuntime::LowLevel::AMQueue
~AVXBitMask	legion_runtime/legion_utilities.h	/^    AVXBitMask<MAX>::~AVXBitMask(void)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
~AVXTLBitMask	legion_runtime/legion_utilities.h	/^    AVXTLBitMask<MAX>::~AVXTLBitMask(void)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
~AcquireOp	legion_runtime/legion_ops.cc	/^    AcquireOp::~AcquireOp(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
~ActiveMessageEndpoint	legion_runtime/activemsg.cc	/^  ~ActiveMessageEndpoint(void)$/;"	f	class:ActiveMessageEndpoint
~AllocManager	legion_runtime/runtime.h	/^      ~AllocManager(void)$/;"	f	class:LegionRuntime::HighLevel::AllocManager
~AndPredOp	legion_runtime/legion_ops.cc	/^    AndPredOp::~AndPredOp(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
~ArgumentMap	legion_runtime/legion.cc	/^    ArgumentMap::~ArgumentMap(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
~ArgumentMapStore	legion_runtime/runtime.cc	/^    ArgumentMapStore::~ArgumentMapStore(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMapStore
~AutoHSLLock	legion_runtime/lowlevel_impl.h	/^      ~AutoHSLLock(void) $/;"	f	class:LegionRuntime::LowLevel::AutoHSLLock
~AutoLock	legion_runtime/legion_utilities.h	/^      ~AutoLock(void)$/;"	f	class:LegionRuntime::HighLevel::AutoLock
~BitMask	legion_runtime/legion_utilities.h	/^    BitMask<T,MAX,SHIFT,MASK>::~BitMask(void)$/;"	f	class:LegionRuntime::HighLevel::BitMask
~BufferedMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~BufferedMemPairCopier(void)$/;"	f	class:LegionRuntime::LowLevel::BufferedMemPairCopier
~BufferedReductionMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~BufferedReductionMemPairCopier(void)$/;"	f	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier
~CloseOp	legion_runtime/legion_ops.cc	/^    CloseOp::~CloseOp(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
~CollectableState	legion_runtime/garbage_collection.cc	/^    CollectableState::~CollectableState(void)$/;"	f	class:LegionRuntime::HighLevel::CollectableState
~CompositeCloser	legion_runtime/region_tree.cc	/^    CompositeCloser::~CompositeCloser(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
~CompositeNode	legion_runtime/region_tree.cc	/^    CompositeNode::~CompositeNode(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
~CompositeView	legion_runtime/region_tree.cc	/^    CompositeView::~CompositeView(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
~ContiguousPayload	legion_runtime/activemsg.cc	/^  virtual ~ContiguousPayload(void) { }$/;"	f	class:ContiguousPayload
~CopyCompletionLogger	legion_runtime/lowlevel_dma.cc	/^      virtual ~CopyCompletionLogger(void) { }$/;"	f	class:LegionRuntime::LowLevel::CopyCompletionLogger
~CopyOp	legion_runtime/legion_ops.cc	/^    CopyOp::~CopyOp(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
~CopyOperation	legion_runtime/shared_lowlevel.cc	/^      ~CopyOperation(void)$/;"	f	class:LegionRuntime::LowLevel::CopyOperation
~CopyRequest	legion_runtime/lowlevel_dma.cc	/^    CopyRequest::~CopyRequest(void)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
~DefaultMapper	legion_runtime/default_mapper.cc	/^    DefaultMapper::~DefaultMapper(void)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
~DeferredBarrierArrival	legion_runtime/lowlevel.cc	/^      virtual ~DeferredBarrierArrival(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredBarrierArrival
~DeferredEventTrigger	legion_runtime/lowlevel.cc	/^      virtual ~DeferredEventTrigger(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredEventTrigger
~DeferredInstDestroy	legion_runtime/lowlevel.cc	/^      virtual ~DeferredInstDestroy(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
~DeferredLockDestruction	legion_runtime/lowlevel.cc	/^      virtual ~DeferredLockDestruction(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredLockDestruction
~DeferredLockRequest	legion_runtime/lowlevel.cc	/^      virtual ~DeferredLockRequest(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredLockRequest
~DeferredSlicer	legion_runtime/legion_tasks.cc	/^    DeferredSlicer::~DeferredSlicer(void)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
~DeferredTaskSpawn	legion_runtime/lowlevel.cc	/^      virtual ~DeferredTaskSpawn(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredTaskSpawn
~DeferredUnlockRequest	legion_runtime/lowlevel.cc	/^      virtual ~DeferredUnlockRequest(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredUnlockRequest
~DelayedMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~DelayedMemPairCopier(void) {}$/;"	f	class:LegionRuntime::LowLevel::DelayedMemPairCopier
~DeletionOp	legion_runtime/legion_ops.cc	/^    DeletionOp::~DeletionOp(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
~DerezCheck	legion_runtime/legion_utilities.h	/^      ~DerezCheck(void) { derez.end_context(); }$/;"	f	class:LegionRuntime::HighLevel::DerezCheck
~Deserializer	legion_runtime/legion_utilities.h	/^      ~Deserializer(void)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
~DistributedCollectable	legion_runtime/garbage_collection.cc	/^    DistributedCollectable::~DistributedCollectable(void)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
~DmaRequest	legion_runtime/lowlevel_dma.cc	/^      virtual ~DmaRequest(void) {}$/;"	f	class:LegionRuntime::LowLevel::DmaRequest
~DomainLinearization	legion_runtime/lowlevel.h	/^      ~DomainLinearization(void)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
~DomainPointIterator	legion_runtime/lowlevel.h	/^	~DomainPointIterator(void)$/;"	f	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
~DynamicTable	legion_runtime/lowlevel_impl.h	/^    DynamicTable<ALLOCATOR>::~DynamicTable(void)$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
~ElementMask	legion_runtime/lowlevel.cc	/^    ElementMask::~ElementMask(void)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
~ElementMask	legion_runtime/shared_lowlevel.cc	/^    ElementMask::~ElementMask(void)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
~Enumerator	legion_runtime/lowlevel.cc	/^    ElementMask::Enumerator::~Enumerator(void) {}$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
~Enumerator	legion_runtime/shared_lowlevel.cc	/^    ElementMask::Enumerator::~Enumerator(void) {}$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
~EventImpl	legion_runtime/shared_lowlevel.cc	/^        ~EventImpl(void)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
~EventMerger	legion_runtime/lowlevel.cc	/^      virtual ~EventMerger(void)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
~EventStackEntry	legion_runtime/lowlevel.cc	/^          virtual ~EventStackEntry(void) { }$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry
~EventWaiter	legion_runtime/lowlevel_impl.h	/^        virtual ~EventWaiter(void) { }$/;"	f	class:LegionRuntime::LowLevel::Event::Impl::EventWaiter
~ExclusiveAccess	legion_runtime/lowlevel_impl.h	/^      ~ExclusiveAccess(void)$/;"	f	class:LegionRuntime::LowLevel::ExclusiveAccess
~FenceOp	legion_runtime/legion_ops.cc	/^    FenceOp::~FenceOp(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
~FieldAllocator	legion_runtime/legion.cc	/^    FieldAllocator::~FieldAllocator(void)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
~FieldSpaceNode	legion_runtime/region_tree.cc	/^    FieldSpaceNode::~FieldSpaceNode(void)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
~FieldTree	legion_runtime/field_tree.h	/^    FieldTree<UT>::~FieldTree(void)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
~FoldReductionManager	legion_runtime/region_tree.cc	/^    FoldReductionManager::~FoldReductionManager(void)$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
~Future	legion_runtime/legion.cc	/^    Future::~Future(void)$/;"	f	class:LegionRuntime::HighLevel::Future
~FutureMap	legion_runtime/legion.cc	/^    FutureMap::~FutureMap(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
~FuturePredOp	legion_runtime/legion_ops.cc	/^    FuturePredOp::~FuturePredOp(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
~GASNetHSL	legion_runtime/lowlevel_impl.h	/^      ~GASNetHSL(void) { gasnet_hsl_destroy(&mutex); }$/;"	f	class:LegionRuntime::LowLevel::GASNetHSL
~GASNetMemory	legion_runtime/lowlevel.cc	/^    GASNetMemory::~GASNetMemory(void)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
~GPUFBMemory	legion_runtime/lowlevel_gpu.cc	/^    GPUFBMemory::~GPUFBMemory(void) {}$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
~GPUJob	legion_runtime/lowlevel_gpu.cc	/^      virtual ~GPUJob(void) {}$/;"	f	class:LegionRuntime::LowLevel::GPUJob
~GPUMemcpy	legion_runtime/lowlevel_gpu.cc	/^      virtual ~GPUMemcpy(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
~GPUMemcpy1D	legion_runtime/lowlevel_gpu.cc	/^      virtual ~GPUMemcpy1D(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy1D
~GPUMemcpy2D	legion_runtime/lowlevel_gpu.cc	/^      virtual ~GPUMemcpy2D(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy2D
~GPUPeerMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~GPUPeerMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier
~GPUProcessor	legion_runtime/lowlevel_gpu.cc	/^    GPUProcessor::~GPUProcessor(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
~GPUTask	legion_runtime/lowlevel_gpu.cc	/^    GPUTask::~GPUTask(void)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
~GPUZCMemory	legion_runtime/lowlevel_gpu.cc	/^    GPUZCMemory::~GPUZCMemory(void) {}$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
~GPUfromFBMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~GPUfromFBMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier
~GPUinFBMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~GPUinFBMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier
~GPUtoFBMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~GPUtoFBMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier
~GarbageCollectionEpoch	legion_runtime/runtime.cc	/^    GarbageCollectionEpoch::~GarbageCollectionEpoch(void)$/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
~GasnetPut	legion_runtime/lowlevel_dma.cc	/^        virtual ~GasnetPut(void) { }$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut
~GasnetPutRedList	legion_runtime/lowlevel_dma.cc	/^        virtual ~GasnetPutRedList(void) { }$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutRedList
~GasnetPutReduce	legion_runtime/lowlevel_dma.cc	/^        virtual ~GasnetPutReduce(void) { }$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce
~GatherScatter	legion_runtime/shared_lowlevel.cc	/^	~GatherScatter(void)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter
~Grant	legion_runtime/legion.cc	/^    Grant::~Grant(void)$/;"	f	class:LegionRuntime::HighLevel::Grant
~HierarchicalCollectable	legion_runtime/garbage_collection.cc	/^    HierarchicalCollectable::~HierarchicalCollectable(void)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
~Impl	legion_runtime/lowlevel.cc	/^    IndexSpace::Impl::~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
~Impl	legion_runtime/lowlevel.cc	/^    IndexSpaceAllocator::Impl::~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
~Impl	legion_runtime/lowlevel.cc	/^    Processor::Impl::~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
~Impl	legion_runtime/lowlevel.cc	/^    RegionInstance::Impl::~Impl(void) {}$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
~Impl	legion_runtime/runtime.cc	/^    ArgumentMap::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
~Impl	legion_runtime/runtime.cc	/^    Future::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
~Impl	legion_runtime/runtime.cc	/^    FutureMap::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
~Impl	legion_runtime/runtime.cc	/^    Grant::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
~Impl	legion_runtime/runtime.cc	/^    MPILegionHandshake::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
~Impl	legion_runtime/runtime.cc	/^    PhysicalRegion::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
~Impl	legion_runtime/shared_lowlevel.cc	/^        ~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
~Impl	legion_runtime/shared_lowlevel.cc	/^        ~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
~Impl	legion_runtime/shared_lowlevel.cc	/^      ~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
~IndexAllocator	legion_runtime/legion.cc	/^    IndexAllocator::~IndexAllocator(void)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
~IndexIterator	legion_runtime/legion.cc	/^    IndexIterator::~IndexIterator(void)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
~IndexPartNode	legion_runtime/region_tree.cc	/^    IndexPartNode::~IndexPartNode(void)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
~IndexSpaceNode	legion_runtime/region_tree.cc	/^    IndexSpaceNode::~IndexSpaceNode(void)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
~IndexTask	legion_runtime/legion_tasks.cc	/^    IndexTask::~IndexTask(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
~IndexTreeNode	legion_runtime/region_tree.cc	/^    IndexTreeNode::~IndexTreeNode(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
~IndividualTask	legion_runtime/legion_tasks.cc	/^    IndividualTask::~IndividualTask(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
~InlineTask	legion_runtime/legion_tasks.cc	/^    InlineTask::~InlineTask(void)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
~InstPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~InstPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::InstPairCopier
~InstanceManager	legion_runtime/region_tree.cc	/^    InstanceManager::~InstanceManager(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
~InstanceView	legion_runtime/region_tree.cc	/^    InstanceView::~InstanceView(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceView
~IntervalTree	legion_runtime/interval_tree.h	/^    IntervalTree<T,DISCRETE>::~IntervalTree(void)$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
~IntervalTreeNode	legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>::~IntervalTreeNode(void)$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
~LayoutDescription	legion_runtime/region_tree.cc	/^    LayoutDescription::~LayoutDescription(void)$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
~LegionAllocator	legion_runtime/legion_allocation.h	/^      inline ~LegionAllocator(void) { }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
~LegionStack	legion_runtime/region_tree.cc	/^    LegionStack<T,MAX_SIZE,INC_SIZE>::~LegionStack(void)$/;"	f	class:LegionRuntime::HighLevel::LegionStack
~LegionTrace	legion_runtime/legion_trace.cc	/^    LegionTrace::~LegionTrace(void)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
~ListReductionManager	legion_runtime/region_tree.cc	/^    ListReductionManager::~ListReductionManager(void)$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
~LocalCPUMemory	legion_runtime/lowlevel.cc	/^      virtual ~LocalCPUMemory(void)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
~LocalProcessor	legion_runtime/lowlevel.cc	/^      ~LocalProcessor(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
~LocalReductionMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~LocalReductionMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier
~Lock	legion_runtime/activemsg.cc	/^    ~Lock(void) { gasnet_hsl_unlock(&sdp.mutex); }$/;"	f	class:SrcDataPool::Lock
~LogicalInitializer	legion_runtime/region_tree.cc	/^    LogicalInitializer::~LogicalInitializer(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
~LogicalInvalidator	legion_runtime/region_tree.cc	/^    LogicalInvalidator::~LogicalInvalidator(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
~LogicalPathRegistrar	legion_runtime/region_tree.cc	/^    LogicalPathRegistrar::~LogicalPathRegistrar(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
~LogicalRegistrar	legion_runtime/region_tree.cc	/^    LogicalRegistrar<DOMINATE>::~LogicalRegistrar(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
~LogicalState	legion_runtime/region_tree.cc	/^    LogicalState::~LogicalState(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalState
~LogicalView	legion_runtime/region_tree.cc	/^    LogicalView::~LogicalView(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalView
~MPILegionHandshake	legion_runtime/legion.cc	/^    MPILegionHandshake::~MPILegionHandshake(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
~Machine	legion_runtime/lowlevel.cc	/^    Machine::~Machine(void)$/;"	f	class:LegionRuntime::LowLevel::Machine
~Machine	legion_runtime/shared_lowlevel.cc	/^    Machine::~Machine()$/;"	f	class:LegionRuntime::LowLevel::Machine
~MapOp	legion_runtime/legion_ops.cc	/^    MapOp::~MapOp(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
~Mapper	legion_runtime/legion.h	/^      virtual ~Mapper(void) { }$/;"	f	class:LegionRuntime::HighLevel::Mapper
~MappingRef	legion_runtime/region_tree.cc	/^    MappingRef::~MappingRef(void)$/;"	f	class:LegionRuntime::HighLevel::MappingRef
~MappingTraverser	legion_runtime/region_tree.cc	/^    MappingTraverser::~MappingTraverser(void)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
~MaterializedView	legion_runtime/region_tree.cc	/^    MaterializedView::~MaterializedView(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
~MemPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~MemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::MemPairCopier
~MemcpyMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~MemcpyMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::MemcpyMemPairCopier
~MemoryImpl	legion_runtime/shared_lowlevel.cc	/^        ~MemoryImpl(void)$/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
~MemoryManager	legion_runtime/runtime.cc	/^    MemoryManager::~MemoryManager(void)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
~MessageManager	legion_runtime/runtime.cc	/^    MessageManager::~MessageManager(void)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
~MultiTask	legion_runtime/legion_tasks.cc	/^    MultiTask::~MultiTask(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
~MustEpochDistributor	legion_runtime/legion_ops.cc	/^    MustEpochDistributor::~MustEpochDistributor(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
~MustEpochMapper	legion_runtime/legion_ops.cc	/^    MustEpochMapper::~MustEpochMapper(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
~MustEpochOp	legion_runtime/legion_ops.cc	/^    MustEpochOp::~MustEpochOp(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
~MustEpochTriggerer	legion_runtime/legion_ops.cc	/^    MustEpochTriggerer::~MustEpochTriggerer(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
~NotPredOp	legion_runtime/legion_ops.cc	/^    NotPredOp::~NotPredOp(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
~Operation	legion_runtime/legion_ops.cc	/^    Operation::~Operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
~OrPredOp	legion_runtime/legion_ops.cc	/^    OrPredOp::~OrPredOp(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
~OutgoingMessage	legion_runtime/activemsg.cc	/^OutgoingMessage::~OutgoingMessage(void)$/;"	f	class:OutgoingMessage
~PartitionNode	legion_runtime/region_tree.cc	/^    PartitionNode::~PartitionNode(void)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
~PathReturner	legion_runtime/region_tree.cc	/^    PathReturner::~PathReturner(void)$/;"	f	class:LegionRuntime::HighLevel::PathReturner
~PathTraverser	legion_runtime/region_tree.cc	/^    PathTraverser::~PathTraverser(void)$/;"	f	class:LegionRuntime::HighLevel::PathTraverser
~PayloadSource	legion_runtime/activemsg.cc	/^  virtual ~PayloadSource(void) { }$/;"	f	class:PayloadSource
~PendingUpdates	legion_runtime/lowlevel.cc	/^      ~PendingUpdates(void)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates
~PerThreadTimerData	legion_runtime/shared_lowlevel.cc	/^      ~PerThreadTimerData(void)$/;"	f	struct:LegionRuntime::LowLevel::PerThreadTimerData
~PerfTracer	legion_runtime/region_tree.h	/^      ~PerfTracer(void)$/;"	f	class:LegionRuntime::HighLevel::PerfTracer
~PhysicalCloser	legion_runtime/region_tree.cc	/^    PhysicalCloser::~PhysicalCloser(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
~PhysicalInitializer	legion_runtime/region_tree.cc	/^    PhysicalInitializer::~PhysicalInitializer(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
~PhysicalInvalidator	legion_runtime/region_tree.cc	/^    PhysicalInvalidator::~PhysicalInvalidator(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
~PhysicalManager	legion_runtime/region_tree.cc	/^    PhysicalManager::~PhysicalManager(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
~PhysicalRegion	legion_runtime/legion.cc	/^    PhysicalRegion::~PhysicalRegion(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
~PointTask	legion_runtime/legion_tasks.cc	/^    PointTask::~PointTask(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
~Predicate	legion_runtime/legion.cc	/^    Predicate::~Predicate(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate
~PreemptableThread	legion_runtime/lowlevel_impl.h	/^      virtual ~PreemptableThread(void) {}$/;"	f	class:LegionRuntime::LowLevel::PreemptableThread
~PremapTraverser	legion_runtime/region_tree.cc	/^    PremapTraverser::~PremapTraverser(void)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
~ProblemGenerator	test/hpcg/hpcg-problem-generator.h	/^    ~ProblemGenerator(void) {$/;"	f	struct:ProblemGenerator
~ProcessorGroup	legion_runtime/lowlevel.cc	/^    ProcessorGroup::~ProcessorGroup(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
~ProcessorImpl	legion_runtime/shared_lowlevel.cc	/^        virtual ~ProcessorImpl(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
~ProcessorManager	legion_runtime/runtime.cc	/^    ProcessorManager::~ProcessorManager(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
~PthreadCondWaiter	legion_runtime/lowlevel.cc	/^      virtual ~PthreadCondWaiter(void) $/;"	f	class:LegionRuntime::LowLevel::PthreadCondWaiter
~RectangleSet	legion_runtime/rectangle_set.h	/^    RectangleSet<T,DISCRETE>::~RectangleSet(void)$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
~ReduceRequest	legion_runtime/lowlevel_dma.cc	/^    ReduceRequest::~ReduceRequest(void)$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
~ReductionCloser	legion_runtime/region_tree.cc	/^    ReductionCloser::~ReductionCloser(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
~ReductionManager	legion_runtime/region_tree.cc	/^    ReductionManager::~ReductionManager(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
~ReductionView	legion_runtime/region_tree.cc	/^    ReductionView::~ReductionView(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
~RegionNode	legion_runtime/region_tree.cc	/^    RegionNode::~RegionNode(void)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
~RegionTreeForest	legion_runtime/region_tree.cc	/^    RegionTreeForest::~RegionTreeForest(void)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
~RegionTreeNode	legion_runtime/region_tree.cc	/^    RegionTreeNode::~RegionTreeNode(void)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
~ReleaseOp	legion_runtime/legion_ops.cc	/^    ReleaseOp::~ReleaseOp(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
~RemoteProcessor	legion_runtime/lowlevel.cc	/^      ~RemoteProcessor(void)$/;"	f	class:LegionRuntime::LowLevel::RemoteProcessor
~RemoteTask	legion_runtime/legion_tasks.cc	/^    RemoteTask::~RemoteTask(void)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
~RemoteWriteInstPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~RemoteWriteInstPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier
~RemoteWriteMemPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~RemoteWriteMemPairCopier(void)$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
~ReservationImpl	legion_runtime/shared_lowlevel.cc	/^        ~ReservationImpl(void)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
~RestrictedTraverser	legion_runtime/region_tree.cc	/^    RestrictedTraverser::~RestrictedTraverser(void)$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
~RezCheck	legion_runtime/legion_utilities.h	/^      ~RezCheck(void) { rez.end_context(); }$/;"	f	class:LegionRuntime::HighLevel::RezCheck
~Runtime	legion_runtime/runtime.cc	/^    Runtime::~Runtime(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
~SSEBitMask	legion_runtime/legion_utilities.h	/^    SSEBitMask<MAX>::~SSEBitMask(void)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
~SSETLBitMask	legion_runtime/legion_utilities.h	/^    SSETLBitMask<MAX>::~SSETLBitMask(void)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
~ScopedPush	legion_runtime/utilities.h	/^        ~ScopedPush(void) { pop_timer(); }$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer::ScopedPush
~Segment	legion_runtime/rectangle_set.h	/^    Segment<T>::~Segment(void)$/;"	f	class:LegionRuntime::HighLevel::Segment
~Serializer	legion_runtime/legion_utilities.h	/^      ~Serializer(void)$/;"	f	class:LegionRuntime::HighLevel::Serializer
~SharedAccess	legion_runtime/lowlevel_impl.h	/^      ~SharedAccess(void)$/;"	f	class:LegionRuntime::LowLevel::SharedAccess
~ShimMapper	legion_runtime/shim_mapper.cc	/^    ShimMapper::~ShimMapper(void)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
~SingleTask	legion_runtime/legion_tasks.cc	/^    SingleTask::~SingleTask(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
~SliceTask	legion_runtime/legion_tasks.cc	/^    SliceTask::~SliceTask(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
~SpanBasedInstPairCopier	legion_runtime/lowlevel_dma.cc	/^      virtual ~SpanBasedInstPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
~SpanPayload	legion_runtime/activemsg.cc	/^  virtual ~SpanPayload(void) { }$/;"	f	class:SpanPayload
~SrcDataPool	legion_runtime/activemsg.cc	/^SrcDataPool::~SrcDataPool(void)$/;"	f	class:SrcDataPool
~StateReturner	legion_runtime/region_tree.cc	/^    StateReturner::~StateReturner(void)$/;"	f	class:LegionRuntime::HighLevel::StateReturner
~StateSender	legion_runtime/region_tree.cc	/^    StateSender::~StateSender(void)$/;"	f	class:LegionRuntime::HighLevel::StateSender
~StaticAccess	legion_runtime/lowlevel_impl.h	/^      ~StaticAccess(void) {}$/;"	f	class:LegionRuntime::LowLevel::StaticAccess
~TLBitMask	legion_runtime/legion_utilities.h	/^    TLBitMask<T,MAX,SHIFT,MASK>::~TLBitMask(void)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
~Task	legion_runtime/lowlevel.cc	/^      ~Task(void)$/;"	f	class:LegionRuntime::LowLevel::Task
~Task	legion_runtime/lowlevel.cc	/^    Task::~Task(void)$/;"	f	class:LegionRuntime::LowLevel::Task
~TaskDesc	legion_runtime/shared_lowlevel.cc	/^          ~TaskDesc(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc
~TaskOp	legion_runtime/legion_tasks.cc	/^    TaskOp::~TaskOp(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
~Thread	legion_runtime/lowlevel.cc	/^	~Thread(void) {}$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
~TimeStamp	legion_runtime/utilities.h	/^    ~TimeStamp(void)$/;"	f	class:LegionRuntime::TimeStamp
~TraceCaptureOp	legion_runtime/legion_trace.cc	/^    TraceCaptureOp::~TraceCaptureOp(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
~TraceCompleteOp	legion_runtime/legion_trace.cc	/^    TraceCompleteOp::~TraceCompleteOp(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
~TreeClose	legion_runtime/region_tree.cc	/^    TreeClose::~TreeClose(void)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
~TreeCloseImpl	legion_runtime/region_tree.cc	/^    TreeCloseImpl::~TreeCloseImpl(void)$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
~TreeStateLogger	legion_runtime/legion_logging.cc	/^    TreeStateLogger::~TreeStateLogger(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
~TreeStateLogger	legion_runtime/legion_spy.cc	/^    TreeStateLogger::~TreeStateLogger(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
~Triggerable	legion_runtime/shared_lowlevel.cc	/^	virtual ~Triggerable() { }$/;"	f	class:LegionRuntime::LowLevel::Triggerable
~TwoDPayload	legion_runtime/activemsg.cc	/^  virtual ~TwoDPayload(void) { }$/;"	f	class:TwoDPayload
~UtilityBarrier	legion_runtime/utilities.h	/^      ~UtilityBarrier(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityBarrier
~UtilityProcessor	legion_runtime/lowlevel.cc	/^    UtilityProcessor::~UtilityProcessor(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
~UtilityThread	legion_runtime/lowlevel.cc	/^      virtual ~UtilityThread(void) {}$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
~ViewHandle	legion_runtime/region_tree.cc	/^    ViewHandle::~ViewHandle(void)$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
~Waiter	legion_runtime/lowlevel_dma.cc	/^        virtual ~Waiter(void) { }$/;"	f	class:LegionRuntime::LowLevel::DmaRequest::Waiter
~WrapperTask	legion_runtime/legion_tasks.cc	/^    WrapperTask::~WrapperTask(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
